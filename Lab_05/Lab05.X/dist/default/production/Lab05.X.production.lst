

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 24 23:34:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297                           
   298 ;; Function _putch is unused but had its address taken
   299  0000                     
   300                           	psect	strings
   301  030D                     __pstrings:
   302  030D                     stringtab:
   303  030D                     __stringtab:
   304  030D                     stringcode:	
   305                           ;	String table - string pointers are 1 byte each
   306                           
   307  030D                     stringdir:
   308  030D  3003               	movlw	high stringdir
   309  030E  008A               	movwf	10
   310  030F  0804               	movf	4,w
   311  0310  0A84               	incf	4,f
   312  0311  0782               	addwf	2,f
   313  0312                     __stringbase:
   314  0312  3400               	retlw	0
   315  0313                     __end_of__stringtab:
   316  0313                     _dpowers:
   317  0313  3401               	retlw	1
   318  0314  3400               	retlw	0
   319  0315  340A               	retlw	10
   320  0316  3400               	retlw	0
   321  0317  3464               	retlw	100
   322  0318  3400               	retlw	0
   323  0319  34E8               	retlw	232
   324  031A  3403               	retlw	3
   325  031B  3410               	retlw	16
   326  031C  3427               	retlw	39
   327  031D                     __end_of_dpowers:
   328  000C                     _PIR1bits	set	12
   329  0018                     _RCSTAbits	set	24
   330  000B                     _INTCONbits	set	11
   331  0007                     _PORTC	set	7
   332  0006                     _PORTB	set	6
   333  0005                     _PORTA	set	5
   334  0008                     _PORTD	set	8
   335  0019                     _TXREG	set	25
   336  001A                     _RCREG	set	26
   337  0064                     _TXIF	set	100
   338  0065                     _RCIF	set	101
   339  0031                     _RB1	set	49
   340  0030                     _RB0	set	48
   341  0058                     _RBIF	set	88
   342  0098                     _TXSTAbits	set	152
   343  009A                     _SPBRGH	set	154
   344  0099                     _SPBRG	set	153
   345  0096                     _IOCBbits	set	150
   346  0095                     _WPUB	set	149
   347  0081                     _OPTION_REGbits	set	129
   348  008F                     _OSCCONbits	set	143
   349  0088                     _TRISD	set	136
   350  0086                     _TRISB	set	134
   351  0085                     _TRISA	set	133
   352  0187                     _BAUDCTLbits	set	391
   353  0189                     _ANSELH	set	393
   354  0188                     _ANSEL	set	392
   355  031D                     STR_5:
   356  031D  3449               	retlw	73	;'I'
   357  031E  346E               	retlw	110	;'n'
   358  031F  3474               	retlw	116	;'t'
   359  0320  3472               	retlw	114	;'r'
   360  0321  346F               	retlw	111	;'o'
   361  0322  3464               	retlw	100	;'d'
   362  0323  3475               	retlw	117	;'u'
   363  0324  347A               	retlw	122	;'z'
   364  0325  3463               	retlw	99	;'c'
   365  0326  3461               	retlw	97	;'a'
   366  0327  3420               	retlw	32	;' '
   367  0328  3475               	retlw	117	;'u'
   368  0329  346E               	retlw	110	;'n'
   369  032A  3420               	retlw	32	;' '
   370  032B  3476               	retlw	118	;'v'
   371  032C  3461               	retlw	97	;'a'
   372  032D  346C               	retlw	108	;'l'
   373  032E  346F               	retlw	111	;'o'
   374  032F  3472               	retlw	114	;'r'
   375  0330  3420               	retlw	32	;' '
   376  0331  346D               	retlw	109	;'m'
   377  0332  3465               	retlw	101	;'e'
   378  0333  346E               	retlw	110	;'n'
   379  0334  346F               	retlw	111	;'o'
   380  0335  3472               	retlw	114	;'r'
   381  0336  3420               	retlw	32	;' '
   382  0337  346F               	retlw	111	;'o'
   383  0338  3420               	retlw	32	;' '
   384  0339  3469               	retlw	105	;'i'
   385  033A  3467               	retlw	103	;'g'
   386  033B  3475               	retlw	117	;'u'
   387  033C  3461               	retlw	97	;'a'
   388  033D  346C               	retlw	108	;'l'
   389  033E  3420               	retlw	32	;' '
   390  033F  3461               	retlw	97	;'a'
   391  0340  3420               	retlw	32	;' '
   392  0341  3435               	retlw	53	;'5'
   393  0342  340D               	retlw	13
   394  0343  3400               	retlw	0
   395  0344                     STR_4:
   396  0344  3449               	retlw	73	;'I'
   397  0345  346E               	retlw	110	;'n'
   398  0346  3474               	retlw	116	;'t'
   399  0347  3472               	retlw	114	;'r'
   400  0348  346F               	retlw	111	;'o'
   401  0349  3464               	retlw	100	;'d'
   402  034A  3475               	retlw	117	;'u'
   403  034B  347A               	retlw	122	;'z'
   404  034C  3463               	retlw	99	;'c'
   405  034D  3461               	retlw	97	;'a'
   406  034E  3420               	retlw	32	;' '
   407  034F  3475               	retlw	117	;'u'
   408  0350  346E               	retlw	110	;'n'
   409  0351  3420               	retlw	32	;' '
   410  0352  3476               	retlw	118	;'v'
   411  0353  3461               	retlw	97	;'a'
   412  0354  346C               	retlw	108	;'l'
   413  0355  346F               	retlw	111	;'o'
   414  0356  3472               	retlw	114	;'r'
   415  0357  3420               	retlw	32	;' '
   416  0358  3476               	retlw	118	;'v'
   417  0359  3461               	retlw	97	;'a'
   418  035A  346C               	retlw	108	;'l'
   419  035B  3469               	retlw	105	;'i'
   420  035C  3464               	retlw	100	;'d'
   421  035D  346F               	retlw	111	;'o'
   422  035E  3420               	retlw	32	;' '
   423  035F  3464               	retlw	100	;'d'
   424  0360  3465               	retlw	101	;'e'
   425  0361  3420               	retlw	32	;' '
   426  0362  3430               	retlw	48	;'0'
   427  0363  3420               	retlw	32	;' '
   428  0364  3461               	retlw	97	;'a'
   429  0365  3420               	retlw	32	;' '
   430  0366  3432               	retlw	50	;'2'
   431  0367  340D               	retlw	13
   432  0368  3400               	retlw	0
   433  0369                     STR_1:
   434  0369  3425               	retlw	37	;'%'
   435  036A  3464               	retlw	100	;'d'
   436  036B  3400               	retlw	0
   437  031D                     
   438                           	psect	cinit
   439  000F                     start_initialization:	
   440                           ; #config settings
   441                           
   442  000F                     __initialization:
   443                           
   444                           ; Clear objects allocated to COMMON
   445  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   446  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   447                           
   448                           ; Clear objects allocated to BANK0
   449  0011  1383               	bcf	3,7	;select IRP bank0
   450  0012  3020               	movlw	low __pbssBANK0
   451  0013  0084               	movwf	4
   452  0014  3045               	movlw	low (__pbssBANK0+37)
   453  0015  120A  118A  2508  120A  118A  	fcall	clear_ram0
   454  001A                     end_of_initialization:	
   455                           ;End of C runtime variable initialization code
   456                           
   457  001A                     __end_of__initialization:
   458  001A  0183               	clrf	3
   459  001B  120A  118A  2908   	ljmp	_main	;jump to C main() function
   460                           
   461                           	psect	bssCOMMON
   462  0079                     __pbssCOMMON:
   463  0079                     _dividendo:
   464  0079                     	ds	1
   465  007A                     _residuo:
   466  007A                     	ds	1
   467                           
   468                           	psect	bssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _u1:
   471  0020                     	ds	1
   472  0021                     _d1:
   473  0021                     	ds	1
   474  0022                     _c1:
   475  0022                     	ds	1
   476  0023                     _unidades:
   477  0023                     	ds	1
   478  0024                     _decenas:
   479  0024                     	ds	1
   480  0025                     _centenas:
   481  0025                     	ds	1
   482  0026                     _contador:
   483  0026                     	ds	1
   484  0027                     _s3:
   485  0027                     	ds	10
   486  0031                     _s2:
   487  0031                     	ds	10
   488  003B                     _s1:
   489  003B                     	ds	10
   490                           
   491                           	psect	clrtext
   492  0508                     clear_ram0:	
   493                           ;	Called with FSR containing the base address, and
   494                           ;	W with the last address+1
   495                           
   496  0508  0064               	clrwdt	;clear the watchdog before getting into this loop
   497  0509                     clrloop0:
   498  0509  0180               	clrf	0	;clear RAM location pointed to by FSR
   499  050A  0A84               	incf	4,f	;increment pointer
   500  050B  0604               	xorwf	4,w	;XOR with final address
   501  050C  1903               	btfsc	3,2	;have we reached the end yet?
   502  050D  3400               	retlw	0	;all done for this memory range, return
   503  050E  0604               	xorwf	4,w	;XOR again to restore value
   504  050F  2D09               	goto	clrloop0	;do the next byte
   505                           
   506                           	psect	cstackCOMMON
   507  0070                     __pcstackCOMMON:
   508  0070                     ?_isdigit:
   509  0070                     ?_setup:	
   510                           ; 1 bit 
   511                           
   512  0070                     ?_division:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_config_USART:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_isr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0070                     	ds	3
   530  0073                     ??_setup:
   531  0073                     ?_strcat:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ??_config_USART:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     ??_isdigit:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0073                     ?___wmul:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  0073                     ?___awdiv:	
   544                           ; 2 bytes @ 0x3
   545                           
   546  0073                     ?___awmod:	
   547                           ; 2 bytes @ 0x3
   548                           
   549  0073                     ?___lwdiv:	
   550                           ; 2 bytes @ 0x3
   551                           
   552  0073                     _isdigit$887:	
   553                           ; 2 bytes @ 0x3
   554                           
   555  0073                     strcat@from:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0073                     ___wmul@multiplier:	
   559                           ; 1 bytes @ 0x3
   560                           
   561  0073                     ___awdiv@divisor:	
   562                           ; 2 bytes @ 0x3
   563                           
   564  0073                     ___awmod@divisor:	
   565                           ; 2 bytes @ 0x3
   566                           
   567  0073                     ___lwdiv@divisor:	
   568                           ; 2 bytes @ 0x3
   569                           
   570                           
   571                           ; 2 bytes @ 0x3
   572  0073                     	ds	1
   573  0074                     ??_strcat:
   574  0074                     isdigit@c:	
   575                           ; 1 bytes @ 0x4
   576                           
   577                           
   578                           ; 1 bytes @ 0x4
   579  0074                     	ds	1
   580  0075                     strcat@to:
   581  0075                     ___wmul@multiplicand:	
   582                           ; 1 bytes @ 0x5
   583                           
   584  0075                     ___awdiv@dividend:	
   585                           ; 2 bytes @ 0x5
   586                           
   587  0075                     ___awmod@dividend:	
   588                           ; 2 bytes @ 0x5
   589                           
   590  0075                     ___lwdiv@dividend:	
   591                           ; 2 bytes @ 0x5
   592                           
   593                           
   594                           ; 2 bytes @ 0x5
   595  0075                     	ds	1
   596  0076                     strcat@cp:
   597                           
   598                           ; 1 bytes @ 0x6
   599  0076                     	ds	1
   600  0077                     ??___wmul:
   601  0077                     ??___awdiv:	
   602                           ; 1 bytes @ 0x7
   603                           
   604  0077                     ??___awmod:	
   605                           ; 1 bytes @ 0x7
   606                           
   607  0077                     ??___lwdiv:	
   608                           ; 1 bytes @ 0x7
   609                           
   610  0077                     ___wmul@product:	
   611                           ; 1 bytes @ 0x7
   612                           
   613                           
   614                           ; 2 bytes @ 0x7
   615  0077                     	ds	1
   616  0078                     ??___lwmod:
   617  0078                     division@dividendo:	
   618                           ; 1 bytes @ 0x8
   619                           
   620                           
   621                           ; 1 bytes @ 0x8
   622  0078                     	ds	1
   623                           
   624                           	psect	cstackBANK0
   625  0045                     __pcstackBANK0:
   626  0045                     ?_atoi:
   627  0045                     ___awdiv@counter:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0045                     ___awmod@counter:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0045                     ___lwdiv@counter:	
   634                           ; 1 bytes @ 0x0
   635                           
   636                           
   637                           ; 1 bytes @ 0x0
   638  0045                     	ds	1
   639  0046                     ___awdiv@sign:
   640  0046                     ___awmod@sign:	
   641                           ; 1 bytes @ 0x1
   642                           
   643  0046                     ___lwdiv@quotient:	
   644                           ; 1 bytes @ 0x1
   645                           
   646                           
   647                           ; 2 bytes @ 0x1
   648  0046                     	ds	1
   649  0047                     ??_atoi:
   650  0047                     ___awdiv@quotient:	
   651                           ; 1 bytes @ 0x2
   652                           
   653                           
   654                           ; 2 bytes @ 0x2
   655  0047                     	ds	1
   656  0048                     ?___lwmod:
   657  0048                     ___lwmod@divisor:	
   658                           ; 2 bytes @ 0x3
   659                           
   660                           
   661                           ; 2 bytes @ 0x3
   662  0048                     	ds	1
   663  0049                     ??_division:
   664  0049                     atoi@sign:	
   665                           ; 1 bytes @ 0x4
   666                           
   667                           
   668                           ; 1 bytes @ 0x4
   669  0049                     	ds	1
   670  004A                     ___lwmod@dividend:
   671  004A                     atoi@a:	
   672                           ; 2 bytes @ 0x5
   673                           
   674                           
   675                           ; 2 bytes @ 0x5
   676  004A                     	ds	2
   677  004C                     ___lwmod@counter:
   678  004C                     atoi@s:	
   679                           ; 1 bytes @ 0x7
   680                           
   681                           
   682                           ; 1 bytes @ 0x7
   683  004C                     	ds	1
   684  004D                     ?_sprintf:
   685  004D                     sprintf@f:	
   686                           ; 2 bytes @ 0x8
   687                           
   688                           
   689                           ; 1 bytes @ 0x8
   690  004D                     	ds	3
   691  0050                     ??_sprintf:
   692                           
   693                           ; 1 bytes @ 0xB
   694  0050                     	ds	3
   695  0053                     sprintf@ap:
   696                           
   697                           ; 1 bytes @ 0xE
   698  0053                     	ds	1
   699  0054                     sprintf@flag:
   700                           
   701                           ; 1 bytes @ 0xF
   702  0054                     	ds	1
   703  0055                     sprintf@prec:
   704                           
   705                           ; 1 bytes @ 0x10
   706  0055                     	ds	1
   707  0056                     sprintf@val:
   708                           
   709                           ; 2 bytes @ 0x11
   710  0056                     	ds	2
   711  0058                     sprintf@sp:
   712                           
   713                           ; 1 bytes @ 0x13
   714  0058                     	ds	1
   715  0059                     sprintf@c:
   716                           
   717                           ; 1 bytes @ 0x14
   718  0059                     	ds	1
   719  005A                     ??_main:
   720                           
   721                           ; 1 bytes @ 0x15
   722  005A                     	ds	3
   723  005D                     main@completo:
   724                           
   725                           ; 2 bytes @ 0x18
   726  005D                     	ds	2
   727                           
   728                           	psect	maintext
   729  0108                     __pmaintext:	
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 94 in file "main_05.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  completo        2   24[BANK0 ] int 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : B00/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       2       0       0       0
   751 ;;      Temps:          0       3       0       0       0
   752 ;;      Totals:         0       5       0       0       0
   753 ;;Total ram usage:        5 bytes
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		_atoi
   757 ;;		_division
   758 ;;		_setup
   759 ;;		_sprintf
   760 ;;		_strcat
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _main
   768  0108                     _main:
   769  0108                     l1880:	
   770                           ;incstack = 0
   771                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   772                           
   773                           
   774                           ;main_05.c: 95: 
   775  0108  120A  118A  2472  120A  118A  	fcall	_setup
   776  010D                     l1882:
   777                           
   778                           ;main_05.c: 99:     return;
   779  010D  3062               	movlw	98
   780  010E  1283               	bcf	3,5	;RP0=0, select bank0
   781  010F  1303               	bcf	3,6	;RP1=0, select bank0
   782  0110  061A               	xorwf	26,w	;volatile
   783  0111  1D03               	btfss	3,2
   784  0112  2914               	goto	u1691
   785  0113  2915               	goto	u1690
   786  0114                     u1691:
   787  0114  293D               	goto	l97
   788  0115                     u1690:
   789  0115                     l1884:
   790                           
   791                           ;main_05.c: 100: }
   792  0115  0826               	movf	_contador,w
   793  0116  120A  118A  22A5  120A  118A  	fcall	_division
   794  011B                     l1886:
   795                           
   796                           ;main_05.c: 102: void defensa(void){
   797  011B  1283               	bcf	3,5	;RP0=0, select bank0
   798  011C  1303               	bcf	3,6	;RP1=0, select bank0
   799  011D  0825               	movf	_centenas,w
   800  011E  0099               	movwf	25	;volatile
   801  011F                     l1888:
   802                           
   803                           ;main_05.c: 103:     if(RCREG > 2){
   804  011F  3041               	movlw	65
   805  0120  1283               	bcf	3,5	;RP0=0, select bank0
   806  0121  1303               	bcf	3,6	;RP1=0, select bank0
   807  0122  00DB               	movwf	??_main+1
   808  0123  30ED               	movlw	237
   809  0124  00DA               	movwf	??_main
   810  0125                     u1737:
   811  0125  0BDA               	decfsz	??_main,f
   812  0126  2925               	goto	u1737
   813  0127  0BDB               	decfsz	??_main+1,f
   814  0128  2925               	goto	u1737
   815  0129  292A               	nop2
   816  012A                     l1890:
   817                           
   818                           ;main_05.c: 104:            printf("Introduzca un valor valido de 0 a 2\r");
   819  012A  1283               	bcf	3,5	;RP0=0, select bank0
   820  012B  1303               	bcf	3,6	;RP1=0, select bank0
   821  012C  0824               	movf	_decenas,w
   822  012D  0099               	movwf	25	;volatile
   823  012E                     l1892:
   824                           
   825                           ;main_05.c: 105:        }
   826  012E  3041               	movlw	65
   827  012F  1283               	bcf	3,5	;RP0=0, select bank0
   828  0130  1303               	bcf	3,6	;RP1=0, select bank0
   829  0131  00DB               	movwf	??_main+1
   830  0132  30ED               	movlw	237
   831  0133  00DA               	movwf	??_main
   832  0134                     u1747:
   833  0134  0BDA               	decfsz	??_main,f
   834  0135  2934               	goto	u1747
   835  0136  0BDB               	decfsz	??_main+1,f
   836  0137  2934               	goto	u1747
   837  0138  2939               	nop2
   838  0139                     l1894:
   839                           
   840                           ;main_05.c: 106:        while(RCIF == 0);
   841  0139  1283               	bcf	3,5	;RP0=0, select bank0
   842  013A  1303               	bcf	3,6	;RP1=0, select bank0
   843  013B  0823               	movf	_unidades,w
   844  013C  0099               	movwf	25	;volatile
   845  013D                     l97:
   846  013D  1E8C               	btfss	12,5	;volatile
   847  013E  2940               	goto	u1701
   848  013F  2941               	goto	u1700
   849  0140                     u1701:
   850  0140  293D               	goto	l97
   851  0141                     u1700:
   852  0141                     l1896:
   853                           
   854                           ;main_05.c: 110: void defensa1(void){
   855  0141  081A               	movf	26,w	;volatile
   856  0142  3ED0               	addlw	208
   857  0143  00DA               	movwf	??_main
   858  0144  085A               	movf	??_main,w
   859  0145  00A2               	movwf	_c1
   860  0146                     l100:	
   861                           ;main_05.c: 111:     if(RCREG > 5){
   862                           
   863  0146  1E8C               	btfss	12,5	;volatile
   864  0147  2949               	goto	u1711
   865  0148  294A               	goto	u1710
   866  0149                     u1711:
   867  0149  2946               	goto	l100
   868  014A                     u1710:
   869  014A                     l1898:
   870                           
   871                           ;main_05.c: 112:            printf("Introduzca un valor menor o igual a 5\r");
   872  014A  081A               	movf	26,w	;volatile
   873  014B  3ED0               	addlw	208
   874  014C  00DA               	movwf	??_main
   875  014D  085A               	movf	??_main,w
   876  014E  00A1               	movwf	_d1
   877  014F                     l103:	
   878                           ;main_05.c: 113:        }
   879                           
   880  014F  1E8C               	btfss	12,5	;volatile
   881  0150  2952               	goto	u1721
   882  0151  2953               	goto	u1720
   883  0152                     u1721:
   884  0152  294F               	goto	l103
   885  0153                     u1720:
   886  0153                     l1900:
   887                           
   888                           ;main_05.c: 114:        while(RCIF == 0);
   889  0153  081A               	movf	26,w	;volatile
   890  0154  3ED0               	addlw	208
   891  0155  00DA               	movwf	??_main
   892  0156  085A               	movf	??_main,w
   893  0157  00A0               	movwf	_u1
   894  0158                     l1902:
   895                           
   896                           ;main_05.c: 117: 
   897  0158  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   898  0159  00DA               	movwf	??_main
   899  015A  085A               	movf	??_main,w
   900  015B  00CD               	movwf	sprintf@f
   901  015C  0822               	movf	_c1,w
   902  015D  00DB               	movwf	??_main+1
   903  015E  01DC               	clrf	??_main+2
   904  015F  085B               	movf	??_main+1,w
   905  0160  00CE               	movwf	?_sprintf+1
   906  0161  085C               	movf	??_main+2,w
   907  0162  00CF               	movwf	?_sprintf+2
   908  0163  303B               	movlw	(low (_s1| 0))& (0+255)
   909  0164  120A  118A  201E  120A  118A  	fcall	_sprintf
   910  0169                     l1904:
   911                           
   912                           ;main_05.c: 118: void defensa2(void){
   913  0169  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   914  016A  1283               	bcf	3,5	;RP0=0, select bank0
   915  016B  1303               	bcf	3,6	;RP1=0, select bank0
   916  016C  00DA               	movwf	??_main
   917  016D  085A               	movf	??_main,w
   918  016E  00CD               	movwf	sprintf@f
   919  016F  0821               	movf	_d1,w
   920  0170  00DB               	movwf	??_main+1
   921  0171  01DC               	clrf	??_main+2
   922  0172  085B               	movf	??_main+1,w
   923  0173  00CE               	movwf	?_sprintf+1
   924  0174  085C               	movf	??_main+2,w
   925  0175  00CF               	movwf	?_sprintf+2
   926  0176  3031               	movlw	(low (_s2| 0))& (0+255)
   927  0177  120A  118A  201E  120A  118A  	fcall	_sprintf
   928  017C                     l1906:
   929                           
   930                           ;main_05.c: 119:     if(RCREG > 5){
   931  017C  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   932  017D  1283               	bcf	3,5	;RP0=0, select bank0
   933  017E  1303               	bcf	3,6	;RP1=0, select bank0
   934  017F  00DA               	movwf	??_main
   935  0180  085A               	movf	??_main,w
   936  0181  00CD               	movwf	sprintf@f
   937  0182  0820               	movf	_u1,w
   938  0183  00DB               	movwf	??_main+1
   939  0184  01DC               	clrf	??_main+2
   940  0185  085B               	movf	??_main+1,w
   941  0186  00CE               	movwf	?_sprintf+1
   942  0187  085C               	movf	??_main+2,w
   943  0188  00CF               	movwf	?_sprintf+2
   944  0189  3027               	movlw	(low (_s3| 0))& (0+255)
   945  018A  120A  118A  201E  120A  118A  	fcall	_sprintf
   946  018F                     l1908:
   947                           
   948                           ;main_05.c: 120:            printf("Introduzca un valor menor o igual a 5\r");
   949  018F  3031               	movlw	(low (_s2| 0))& (0+255)
   950  0190  1283               	bcf	3,5	;RP0=0, select bank0
   951  0191  1303               	bcf	3,6	;RP1=0, select bank0
   952  0192  00DA               	movwf	??_main
   953  0193  085A               	movf	??_main,w
   954  0194  00F3               	movwf	strcat@from
   955  0195  303B               	movlw	(low (_s1| 0))& (0+255)
   956  0196  120A  118A  2449  120A  118A  	fcall	_strcat
   957  019B                     l1910:
   958                           
   959                           ;main_05.c: 121:        }
   960  019B  3027               	movlw	(low (_s3| 0))& (0+255)
   961  019C  1283               	bcf	3,5	;RP0=0, select bank0
   962  019D  1303               	bcf	3,6	;RP1=0, select bank0
   963  019E  00DA               	movwf	??_main
   964  019F  085A               	movf	??_main,w
   965  01A0  00F3               	movwf	strcat@from
   966  01A1  303B               	movlw	(low (_s1| 0))& (0+255)
   967  01A2  120A  118A  2449  120A  118A  	fcall	_strcat
   968  01A7                     l1912:
   969                           
   970                           ;main_05.c: 122:        while(RCIF == 0);
   971  01A7  303B               	movlw	(low (_s1| 0))& (0+255)
   972  01A8  120A  118A  21B9  120A  118A  	fcall	_atoi
   973  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   974  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   975  01AF  0846               	movf	?_atoi+1,w
   976  01B0  00DE               	movwf	main@completo+1
   977  01B1  0845               	movf	?_atoi,w
   978  01B2  00DD               	movwf	main@completo
   979  01B3                     l1914:
   980                           
   981                           ;main_05.c: 123:        u1 = RCREG -48;
   982  01B3  085D               	movf	main@completo,w
   983  01B4  0088               	movwf	8	;volatile
   984  01B5  290D               	goto	l1882
   985  01B6  120A  118A  280C   	ljmp	start
   986  01B9                     __end_of_main:
   987                           
   988                           	psect	text1
   989  0449                     __ptext1:	
   990 ;; *************** function _strcat *****************
   991 ;; Defined at:
   992 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  to              1    wreg     PTR unsigned char 
   995 ;;		 -> s1(10), 
   996 ;;  from            1    3[COMMON] PTR const unsigned char 
   997 ;;		 -> s3(10), s2(10), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  to              1    5[COMMON] PTR unsigned char 
  1000 ;;		 -> s1(10), 
  1001 ;;  cp              1    6[COMMON] PTR unsigned char 
  1002 ;;		 -> s1(10), 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      PTR unsigned char 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         1       0       0       0       0
  1013 ;;      Locals:         2       0       0       0       0
  1014 ;;      Temps:          1       0       0       0       0
  1015 ;;      Totals:         4       0       0       0       0
  1016 ;;Total ram usage:        4 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _strcat
  1028  0449                     _strcat:
  1029                           
  1030                           ;incstack = 0
  1031                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1032                           ;strcat@to stored from wreg
  1033  0449  00F5               	movwf	strcat@to
  1034  044A                     l1548:
  1035  044A  0875               	movf	strcat@to,w
  1036  044B  00F4               	movwf	??_strcat
  1037  044C  0874               	movf	??_strcat,w
  1038  044D  00F6               	movwf	strcat@cp
  1039  044E  2C53               	goto	l1552
  1040  044F                     l1550:
  1041  044F  3001               	movlw	1
  1042  0450  00F4               	movwf	??_strcat
  1043  0451  0874               	movf	??_strcat,w
  1044  0452  07F6               	addwf	strcat@cp,f
  1045  0453                     l1552:
  1046  0453  0876               	movf	strcat@cp,w
  1047  0454  0084               	movwf	4
  1048  0455  1383               	bcf	3,7	;select IRP bank0
  1049  0456  0800               	movf	0,w
  1050  0457  1D03               	btfss	3,2
  1051  0458  2C5A               	goto	u1131
  1052  0459  2C5B               	goto	u1130
  1053  045A                     u1131:
  1054  045A  2C4F               	goto	l1550
  1055  045B                     u1130:
  1056  045B  2C64               	goto	l1556
  1057  045C                     l1554:
  1058  045C  3001               	movlw	1
  1059  045D  00F4               	movwf	??_strcat
  1060  045E  0874               	movf	??_strcat,w
  1061  045F  07F6               	addwf	strcat@cp,f
  1062  0460  3001               	movlw	1
  1063  0461  00F4               	movwf	??_strcat
  1064  0462  0874               	movf	??_strcat,w
  1065  0463  07F3               	addwf	strcat@from,f
  1066  0464                     l1556:
  1067  0464  0873               	movf	strcat@from,w
  1068  0465  0084               	movwf	4
  1069  0466  0800               	movf	0,w
  1070  0467  00F4               	movwf	??_strcat
  1071  0468  0876               	movf	strcat@cp,w
  1072  0469  0084               	movwf	4
  1073  046A  0874               	movf	??_strcat,w
  1074  046B  0080               	movwf	0
  1075  046C  0800               	movf	0,w
  1076  046D  1D03               	btfss	3,2
  1077  046E  2C70               	goto	u1141
  1078  046F  2C71               	goto	u1140
  1079  0470                     u1141:
  1080  0470  2C5C               	goto	l1554
  1081  0471                     u1140:
  1082  0471                     l758:
  1083  0471  0008               	return
  1084  0472                     __end_of_strcat:
  1085                           
  1086                           	psect	text2
  1087  001E                     __ptext2:	
  1088 ;; *************** function _sprintf *****************
  1089 ;; Defined at:
  1090 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  sp              1    wreg     PTR unsigned char 
  1093 ;;		 -> s3(10), s2(10), s1(10), 
  1094 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1095 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1098 ;;		 -> s3(10), s2(10), s1(10), 
  1099 ;;  tmpval          4    0        struct .
  1100 ;;  val             2   17[BANK0 ] unsigned int 
  1101 ;;  cp              2    0        PTR const unsigned char 
  1102 ;;  len             2    0        unsigned int 
  1103 ;;  c               1   20[BANK0 ] unsigned char 
  1104 ;;  prec            1   16[BANK0 ] char 
  1105 ;;  flag            1   15[BANK0 ] unsigned char 
  1106 ;;  ap              1   14[BANK0 ] PTR void [1]
  1107 ;;		 -> ?_sprintf(2), 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2    8[BANK0 ] int 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       3       0       0       0
  1118 ;;      Locals:         0       7       0       0       0
  1119 ;;      Temps:          0       3       0       0       0
  1120 ;;      Totals:         0      13       0       0       0
  1121 ;;Total ram usage:       13 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		___lwdiv
  1126 ;;		___lwmod
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _sprintf
  1134  001E                     _sprintf:
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1138                           ;sprintf@sp stored from wreg
  1139  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1140  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0020  00D8               	movwf	sprintf@sp
  1142  0021                     l1784:
  1143                           
  1144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1145  0021  304E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1146  0022  00D0               	movwf	??_sprintf
  1147  0023  0850               	movf	??_sprintf,w
  1148  0024  00D3               	movwf	sprintf@ap
  1149                           
  1150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1151  0025  28F1               	goto	l1836
  1152  0026                     l1786:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1155  0026  3025               	movlw	37
  1156  0027  0659               	xorwf	sprintf@c,w
  1157  0028  1903               	btfsc	3,2
  1158  0029  282B               	goto	u1561
  1159  002A  282C               	goto	u1560
  1160  002B                     u1561:
  1161  002B  2838               	goto	l1792
  1162  002C                     u1560:
  1163  002C                     l1788:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1166  002C  0859               	movf	sprintf@c,w
  1167  002D  00D0               	movwf	??_sprintf
  1168  002E  0858               	movf	sprintf@sp,w
  1169  002F  0084               	movwf	4
  1170  0030  0850               	movf	??_sprintf,w
  1171  0031  1383               	bcf	3,7	;select IRP bank0
  1172  0032  0080               	movwf	0
  1173  0033                     l1790:
  1174  0033  3001               	movlw	1
  1175  0034  00D0               	movwf	??_sprintf
  1176  0035  0850               	movf	??_sprintf,w
  1177  0036  07D8               	addwf	sprintf@sp,f
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1180  0037  28F1               	goto	l1836
  1181  0038                     l1792:
  1182                           
  1183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1184  0038  01D4               	clrf	sprintf@flag
  1185  0039                     l1796:	
  1186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1187                           
  1188  0039  3001               	movlw	1
  1189  003A  07CD               	addwf	sprintf@f,f
  1190  003B  30FF               	movlw	-1
  1191  003C  074D               	addwf	sprintf@f,w
  1192  003D  0084               	movwf	4
  1193  003E  120A  118A  230D  120A  118A  	fcall	stringdir
  1194  0043  00D9               	movwf	sprintf@c
  1195  0044  00D0               	movwf	??_sprintf
  1196  0045  01D1               	clrf	??_sprintf+1
  1197                           
  1198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1199                           ; Switch size 1, requested type "simple"
  1200                           ; Number of cases is 1, Range of values is 0 to 0
  1201                           ; switch strategies available:
  1202                           ; Name         Instructions Cycles
  1203                           ; simple_byte            4     3 (average)
  1204                           ; direct_byte           11     8 (fixed)
  1205                           ; jumptable            260     6 (fixed)
  1206                           ;	Chosen strategy is simple_byte
  1207  0046  0851               	movf	??_sprintf+1,w
  1208  0047  3A00               	xorlw	0	; case 0
  1209  0048  1903               	skipnz
  1210  0049  284B               	goto	l1936
  1211  004A  28F1               	goto	l1836
  1212  004B                     l1936:
  1213                           
  1214                           ; Switch size 1, requested type "simple"
  1215                           ; Number of cases is 3, Range of values is 0 to 105
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte           10     6 (average)
  1219                           ; jumptable            260     6 (fixed)
  1220                           ;	Chosen strategy is simple_byte
  1221  004B  0850               	movf	??_sprintf,w
  1222  004C  3A00               	xorlw	0	; case 0
  1223  004D  1903               	skipnz
  1224  004E  2903               	goto	l1838
  1225  004F  3A64               	xorlw	100	; case 100
  1226  0050  1903               	skipnz
  1227  0051  2856               	goto	l1798
  1228  0052  3A0D               	xorlw	13	; case 105
  1229  0053  1903               	skipnz
  1230  0054  2856               	goto	l1798
  1231  0055  28F1               	goto	l1836
  1232  0056                     l1798:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1235  0056  0853               	movf	sprintf@ap,w
  1236  0057  0084               	movwf	4
  1237  0058  1383               	bcf	3,7	;select IRP bank0
  1238  0059  0800               	movf	0,w
  1239  005A  00D6               	movwf	sprintf@val
  1240  005B  0A84               	incf	4,f
  1241  005C  0800               	movf	0,w
  1242  005D  00D7               	movwf	sprintf@val+1
  1243  005E                     l1800:
  1244  005E  3002               	movlw	2
  1245  005F  00D0               	movwf	??_sprintf
  1246  0060  0850               	movf	??_sprintf,w
  1247  0061  07D3               	addwf	sprintf@ap,f
  1248  0062                     l1802:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1251  0062  1FD7               	btfss	sprintf@val+1,7
  1252  0063  2865               	goto	u1571
  1253  0064  2866               	goto	u1570
  1254  0065                     u1571:
  1255  0065  286F               	goto	l1808
  1256  0066                     u1570:
  1257  0066                     l1804:
  1258                           
  1259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1260  0066  3003               	movlw	3
  1261  0067  00D0               	movwf	??_sprintf
  1262  0068  0850               	movf	??_sprintf,w
  1263  0069  04D4               	iorwf	sprintf@flag,f
  1264  006A                     l1806:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1267  006A  09D6               	comf	sprintf@val,f
  1268  006B  09D7               	comf	sprintf@val+1,f
  1269  006C  0AD6               	incf	sprintf@val,f
  1270  006D  1903               	skipnz
  1271  006E  0AD7               	incf	sprintf@val+1,f
  1272  006F                     l1808:
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1275  006F  01D9               	clrf	sprintf@c
  1276  0070  0AD9               	incf	sprintf@c,f
  1277  0071                     l1814:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1280  0071  0859               	movf	sprintf@c,w
  1281  0072  00D0               	movwf	??_sprintf
  1282  0073  0750               	addwf	??_sprintf,w
  1283  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1284  0075  0084               	movwf	4
  1285  0076  120A  118A  230D  120A  118A  	fcall	stringdir
  1286  007B  00D1               	movwf	??_sprintf+1
  1287  007C  120A  118A  230D  120A  118A  	fcall	stringdir
  1288  0081  00D2               	movwf	??_sprintf+2
  1289  0082  0852               	movf	??_sprintf+2,w
  1290  0083  0257               	subwf	sprintf@val+1,w
  1291  0084  1D03               	skipz
  1292  0085  2888               	goto	u1585
  1293  0086  0851               	movf	??_sprintf+1,w
  1294  0087  0256               	subwf	sprintf@val,w
  1295  0088                     u1585:
  1296  0088  1803               	skipnc
  1297  0089  288B               	goto	u1581
  1298  008A  288C               	goto	u1580
  1299  008B                     u1581:
  1300  008B  288D               	goto	l1818
  1301  008C                     u1580:
  1302  008C  2897               	goto	l1820
  1303  008D                     l1818:
  1304  008D  3001               	movlw	1
  1305  008E  00D0               	movwf	??_sprintf
  1306  008F  0850               	movf	??_sprintf,w
  1307  0090  07D9               	addwf	sprintf@c,f
  1308  0091  3005               	movlw	5
  1309  0092  0659               	xorwf	sprintf@c,w
  1310  0093  1D03               	btfss	3,2
  1311  0094  2896               	goto	u1591
  1312  0095  2897               	goto	u1590
  1313  0096                     u1591:
  1314  0096  2871               	goto	l1814
  1315  0097                     u1590:
  1316  0097                     l1820:
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1319  0097  0854               	movf	sprintf@flag,w
  1320  0098  3903               	andlw	3
  1321  0099  1903               	btfsc	3,2
  1322  009A  289C               	goto	u1601
  1323  009B  289D               	goto	u1600
  1324  009C                     u1601:
  1325  009C  28A8               	goto	l1826
  1326  009D                     u1600:
  1327  009D                     l1822:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1330  009D  302D               	movlw	45
  1331  009E  00D0               	movwf	??_sprintf
  1332  009F  0858               	movf	sprintf@sp,w
  1333  00A0  0084               	movwf	4
  1334  00A1  0850               	movf	??_sprintf,w
  1335  00A2  1383               	bcf	3,7	;select IRP bank0
  1336  00A3  0080               	movwf	0
  1337  00A4                     l1824:
  1338  00A4  3001               	movlw	1
  1339  00A5  00D0               	movwf	??_sprintf
  1340  00A6  0850               	movf	??_sprintf,w
  1341  00A7  07D8               	addwf	sprintf@sp,f
  1342  00A8                     l1826:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1345  00A8  0859               	movf	sprintf@c,w
  1346  00A9  00D0               	movwf	??_sprintf
  1347  00AA  0850               	movf	??_sprintf,w
  1348  00AB  00D5               	movwf	sprintf@prec
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1351  00AC  28E8               	goto	l1834
  1352  00AD                     l1828:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1355  00AD  300A               	movlw	10
  1356  00AE  00C8               	movwf	___lwmod@divisor
  1357  00AF  3000               	movlw	0
  1358  00B0  00C9               	movwf	___lwmod@divisor+1
  1359  00B1  0855               	movf	sprintf@prec,w
  1360  00B2  00D0               	movwf	??_sprintf
  1361  00B3  0750               	addwf	??_sprintf,w
  1362  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1363  00B5  0084               	movwf	4
  1364  00B6  120A  118A  230D  120A  118A  	fcall	stringdir
  1365  00BB  00F3               	movwf	___lwdiv@divisor
  1366  00BC  120A  118A  230D  120A  118A  	fcall	stringdir
  1367  00C1  00F4               	movwf	___lwdiv@divisor+1
  1368  00C2  0857               	movf	sprintf@val+1,w
  1369  00C3  00F6               	movwf	___lwdiv@dividend+1
  1370  00C4  0856               	movf	sprintf@val,w
  1371  00C5  00F5               	movwf	___lwdiv@dividend
  1372  00C6  120A  118A  23C7  120A  118A  	fcall	___lwdiv
  1373  00CB  0874               	movf	?___lwdiv+1,w
  1374  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1376  00CE  00CB               	movwf	___lwmod@dividend+1
  1377  00CF  0873               	movf	?___lwdiv,w
  1378  00D0  00CA               	movwf	___lwmod@dividend
  1379  00D1  120A  118A  240D  120A  118A  	fcall	___lwmod
  1380  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1381  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1382  00D8  0848               	movf	?___lwmod,w
  1383  00D9  3E30               	addlw	48
  1384  00DA  00D1               	movwf	??_sprintf+1
  1385  00DB  0851               	movf	??_sprintf+1,w
  1386  00DC  00D9               	movwf	sprintf@c
  1387  00DD                     l1830:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1390  00DD  0859               	movf	sprintf@c,w
  1391  00DE  00D0               	movwf	??_sprintf
  1392  00DF  0858               	movf	sprintf@sp,w
  1393  00E0  0084               	movwf	4
  1394  00E1  0850               	movf	??_sprintf,w
  1395  00E2  1383               	bcf	3,7	;select IRP bank0
  1396  00E3  0080               	movwf	0
  1397  00E4                     l1832:
  1398  00E4  3001               	movlw	1
  1399  00E5  00D0               	movwf	??_sprintf
  1400  00E6  0850               	movf	??_sprintf,w
  1401  00E7  07D8               	addwf	sprintf@sp,f
  1402  00E8                     l1834:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1405  00E8  30FF               	movlw	255
  1406  00E9  00D0               	movwf	??_sprintf
  1407  00EA  0850               	movf	??_sprintf,w
  1408  00EB  07D5               	addwf	sprintf@prec,f
  1409  00EC  0A55               	incf	sprintf@prec,w
  1410  00ED  1D03               	btfss	3,2
  1411  00EE  28F0               	goto	u1611
  1412  00EF  28F1               	goto	u1610
  1413  00F0                     u1611:
  1414  00F0  28AD               	goto	l1828
  1415  00F1                     u1610:
  1416  00F1                     l1836:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1419  00F1  3001               	movlw	1
  1420  00F2  07CD               	addwf	sprintf@f,f
  1421  00F3  30FF               	movlw	-1
  1422  00F4  074D               	addwf	sprintf@f,w
  1423  00F5  0084               	movwf	4
  1424  00F6  120A  118A  230D  120A  118A  	fcall	stringdir
  1425  00FB  00D0               	movwf	??_sprintf
  1426  00FC  0850               	movf	??_sprintf,w
  1427  00FD  00D9               	movwf	sprintf@c
  1428  00FE  0859               	movf	sprintf@c,w
  1429  00FF  1D03               	btfss	3,2
  1430  0100  2902               	goto	u1621
  1431  0101  2903               	goto	u1620
  1432  0102                     u1621:
  1433  0102  2826               	goto	l1786
  1434  0103                     u1620:
  1435  0103                     l1838:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1438  0103  0858               	movf	sprintf@sp,w
  1439  0104  0084               	movwf	4
  1440  0105  1383               	bcf	3,7	;select IRP bank0
  1441  0106  0180               	clrf	0
  1442  0107                     l268:
  1443  0107  0008               	return
  1444  0108                     __end_of_sprintf:
  1445                           
  1446                           	psect	text3
  1447  040D                     __ptext3:	
  1448 ;; *************** function ___lwmod *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  divisor         2    3[BANK0 ] unsigned int 
  1453 ;;  dividend        2    5[BANK0 ] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  counter         1    7[BANK0 ] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    3[BANK0 ] unsigned int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       4       0       0       0
  1466 ;;      Locals:         0       1       0       0       0
  1467 ;;      Temps:          1       0       0       0       0
  1468 ;;      Totals:         1       5       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_sprintf
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           
  1480                           ;psect for function ___lwmod
  1481  040D                     ___lwmod:
  1482  040D                     l1752:	
  1483                           ;incstack = 0
  1484                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1485                           
  1486  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1487  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1488  040F  0848               	movf	___lwmod@divisor,w
  1489  0410  0449               	iorwf	___lwmod@divisor+1,w
  1490  0411  1903               	btfsc	3,2
  1491  0412  2C14               	goto	u1501
  1492  0413  2C15               	goto	u1500
  1493  0414                     u1501:
  1494  0414  2C44               	goto	l1770
  1495  0415                     u1500:
  1496  0415                     l1754:
  1497  0415  01CC               	clrf	___lwmod@counter
  1498  0416  0ACC               	incf	___lwmod@counter,f
  1499  0417  2C23               	goto	l1760
  1500  0418                     l1756:
  1501  0418  3001               	movlw	1
  1502  0419                     u1515:
  1503  0419  1003               	clrc
  1504  041A  0DC8               	rlf	___lwmod@divisor,f
  1505  041B  0DC9               	rlf	___lwmod@divisor+1,f
  1506  041C  3EFF               	addlw	-1
  1507  041D  1D03               	skipz
  1508  041E  2C19               	goto	u1515
  1509  041F                     l1758:
  1510  041F  3001               	movlw	1
  1511  0420  00F8               	movwf	??___lwmod
  1512  0421  0878               	movf	??___lwmod,w
  1513  0422  07CC               	addwf	___lwmod@counter,f
  1514  0423                     l1760:
  1515  0423  1FC9               	btfss	___lwmod@divisor+1,7
  1516  0424  2C26               	goto	u1521
  1517  0425  2C27               	goto	u1520
  1518  0426                     u1521:
  1519  0426  2C18               	goto	l1756
  1520  0427                     u1520:
  1521  0427                     l1762:
  1522  0427  0849               	movf	___lwmod@divisor+1,w
  1523  0428  024B               	subwf	___lwmod@dividend+1,w
  1524  0429  1D03               	skipz
  1525  042A  2C2D               	goto	u1535
  1526  042B  0848               	movf	___lwmod@divisor,w
  1527  042C  024A               	subwf	___lwmod@dividend,w
  1528  042D                     u1535:
  1529  042D  1C03               	skipc
  1530  042E  2C30               	goto	u1531
  1531  042F  2C31               	goto	u1530
  1532  0430                     u1531:
  1533  0430  2C37               	goto	l1766
  1534  0431                     u1530:
  1535  0431                     l1764:
  1536  0431  0848               	movf	___lwmod@divisor,w
  1537  0432  02CA               	subwf	___lwmod@dividend,f
  1538  0433  0849               	movf	___lwmod@divisor+1,w
  1539  0434  1C03               	skipc
  1540  0435  03CB               	decf	___lwmod@dividend+1,f
  1541  0436  02CB               	subwf	___lwmod@dividend+1,f
  1542  0437                     l1766:
  1543  0437  3001               	movlw	1
  1544  0438                     u1545:
  1545  0438  1003               	clrc
  1546  0439  0CC9               	rrf	___lwmod@divisor+1,f
  1547  043A  0CC8               	rrf	___lwmod@divisor,f
  1548  043B  3EFF               	addlw	-1
  1549  043C  1D03               	skipz
  1550  043D  2C38               	goto	u1545
  1551  043E                     l1768:
  1552  043E  3001               	movlw	1
  1553  043F  02CC               	subwf	___lwmod@counter,f
  1554  0440  1D03               	btfss	3,2
  1555  0441  2C43               	goto	u1551
  1556  0442  2C44               	goto	u1550
  1557  0443                     u1551:
  1558  0443  2C27               	goto	l1762
  1559  0444                     u1550:
  1560  0444                     l1770:
  1561  0444  084B               	movf	___lwmod@dividend+1,w
  1562  0445  00C9               	movwf	?___lwmod+1
  1563  0446  084A               	movf	___lwmod@dividend,w
  1564  0447  00C8               	movwf	?___lwmod
  1565  0448                     l554:
  1566  0448  0008               	return
  1567  0449                     __end_of___lwmod:
  1568                           
  1569                           	psect	text4
  1570  03C7                     __ptext4:	
  1571 ;; *************** function ___lwdiv *****************
  1572 ;; Defined at:
  1573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  divisor         2    3[COMMON] unsigned int 
  1576 ;;  dividend        2    5[COMMON] unsigned int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  quotient        2    1[BANK0 ] unsigned int 
  1579 ;;  counter         1    0[BANK0 ] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  2    3[COMMON] unsigned int 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         4       0       0       0       0
  1590 ;;      Locals:         0       3       0       0       0
  1591 ;;      Temps:          1       0       0       0       0
  1592 ;;      Totals:         5       3       0       0       0
  1593 ;;Total ram usage:        8 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_sprintf
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function ___lwdiv
  1605  03C7                     ___lwdiv:
  1606  03C7                     l1726:	
  1607                           ;incstack = 0
  1608                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1609                           
  1610  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1611  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1612  03C9  01C6               	clrf	___lwdiv@quotient
  1613  03CA  01C7               	clrf	___lwdiv@quotient+1
  1614  03CB                     l1728:
  1615  03CB  0873               	movf	___lwdiv@divisor,w
  1616  03CC  0474               	iorwf	___lwdiv@divisor+1,w
  1617  03CD  1903               	btfsc	3,2
  1618  03CE  2BD0               	goto	u1431
  1619  03CF  2BD1               	goto	u1430
  1620  03D0                     u1431:
  1621  03D0  2C08               	goto	l1748
  1622  03D1                     u1430:
  1623  03D1                     l1730:
  1624  03D1  01C5               	clrf	___lwdiv@counter
  1625  03D2  0AC5               	incf	___lwdiv@counter,f
  1626  03D3  2BDF               	goto	l1736
  1627  03D4                     l1732:
  1628  03D4  3001               	movlw	1
  1629  03D5                     u1445:
  1630  03D5  1003               	clrc
  1631  03D6  0DF3               	rlf	___lwdiv@divisor,f
  1632  03D7  0DF4               	rlf	___lwdiv@divisor+1,f
  1633  03D8  3EFF               	addlw	-1
  1634  03D9  1D03               	skipz
  1635  03DA  2BD5               	goto	u1445
  1636  03DB                     l1734:
  1637  03DB  3001               	movlw	1
  1638  03DC  00F7               	movwf	??___lwdiv
  1639  03DD  0877               	movf	??___lwdiv,w
  1640  03DE  07C5               	addwf	___lwdiv@counter,f
  1641  03DF                     l1736:
  1642  03DF  1FF4               	btfss	___lwdiv@divisor+1,7
  1643  03E0  2BE2               	goto	u1451
  1644  03E1  2BE3               	goto	u1450
  1645  03E2                     u1451:
  1646  03E2  2BD4               	goto	l1732
  1647  03E3                     u1450:
  1648  03E3                     l1738:
  1649  03E3  3001               	movlw	1
  1650  03E4                     u1465:
  1651  03E4  1003               	clrc
  1652  03E5  0DC6               	rlf	___lwdiv@quotient,f
  1653  03E6  0DC7               	rlf	___lwdiv@quotient+1,f
  1654  03E7  3EFF               	addlw	-1
  1655  03E8  1D03               	skipz
  1656  03E9  2BE4               	goto	u1465
  1657  03EA  0874               	movf	___lwdiv@divisor+1,w
  1658  03EB  0276               	subwf	___lwdiv@dividend+1,w
  1659  03EC  1D03               	skipz
  1660  03ED  2BF0               	goto	u1475
  1661  03EE  0873               	movf	___lwdiv@divisor,w
  1662  03EF  0275               	subwf	___lwdiv@dividend,w
  1663  03F0                     u1475:
  1664  03F0  1C03               	skipc
  1665  03F1  2BF3               	goto	u1471
  1666  03F2  2BF4               	goto	u1470
  1667  03F3                     u1471:
  1668  03F3  2BFB               	goto	l1744
  1669  03F4                     u1470:
  1670  03F4                     l1740:
  1671  03F4  0873               	movf	___lwdiv@divisor,w
  1672  03F5  02F5               	subwf	___lwdiv@dividend,f
  1673  03F6  0874               	movf	___lwdiv@divisor+1,w
  1674  03F7  1C03               	skipc
  1675  03F8  03F6               	decf	___lwdiv@dividend+1,f
  1676  03F9  02F6               	subwf	___lwdiv@dividend+1,f
  1677  03FA                     l1742:
  1678  03FA  1446               	bsf	___lwdiv@quotient,0
  1679  03FB                     l1744:
  1680  03FB  3001               	movlw	1
  1681  03FC                     u1485:
  1682  03FC  1003               	clrc
  1683  03FD  0CF4               	rrf	___lwdiv@divisor+1,f
  1684  03FE  0CF3               	rrf	___lwdiv@divisor,f
  1685  03FF  3EFF               	addlw	-1
  1686  0400  1D03               	skipz
  1687  0401  2BFC               	goto	u1485
  1688  0402                     l1746:
  1689  0402  3001               	movlw	1
  1690  0403  02C5               	subwf	___lwdiv@counter,f
  1691  0404  1D03               	btfss	3,2
  1692  0405  2C07               	goto	u1491
  1693  0406  2C08               	goto	u1490
  1694  0407                     u1491:
  1695  0407  2BE3               	goto	l1738
  1696  0408                     u1490:
  1697  0408                     l1748:
  1698  0408  0847               	movf	___lwdiv@quotient+1,w
  1699  0409  00F4               	movwf	?___lwdiv+1
  1700  040A  0846               	movf	___lwdiv@quotient,w
  1701  040B  00F3               	movwf	?___lwdiv
  1702  040C                     l544:
  1703  040C  0008               	return
  1704  040D                     __end_of___lwdiv:
  1705                           
  1706                           	psect	text5
  1707  0472                     __ptext5:	
  1708 ;; *************** function _setup *****************
  1709 ;; Defined at:
  1710 ;;		line 180 in file "main_05.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, pclath, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1724 ;;      Params:         0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    2
  1731 ;; This function calls:
  1732 ;;		_config_USART
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _setup
  1740  0472                     _setup:
  1741  0472                     l1436:	
  1742                           ;incstack = 0
  1743                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1744                           
  1745  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0474  0185               	clrf	5	;volatile
  1748  0475  1683               	bsf	3,5	;RP0=1, select bank3
  1749  0476  1703               	bsf	3,6	;RP1=1, select bank3
  1750  0477  0188               	clrf	8	;volatile
  1751  0478  0189               	clrf	9	;volatile
  1752  0479                     l1438:
  1753  0479  3003               	movlw	3
  1754  047A  1683               	bsf	3,5	;RP0=1, select bank1
  1755  047B  1303               	bcf	3,6	;RP1=0, select bank1
  1756  047C  0086               	movwf	6	;volatile
  1757  047D                     l1440:
  1758  047D  0188               	clrf	8	;volatile
  1759  047E                     l1442:
  1760  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1761  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0480  0185               	clrf	5	;volatile
  1763  0481                     l1444:
  1764  0481  0186               	clrf	6	;volatile
  1765  0482                     l1446:
  1766  0482  0187               	clrf	7	;volatile
  1767  0483                     l1448:
  1768  0483  0188               	clrf	8	;volatile
  1769  0484                     l1450:
  1770  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1771  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1772  0486  120F               	bcf	15,4	;volatile
  1773  0487                     l1452:
  1774  0487  168F               	bsf	15,5	;volatile
  1775  0488                     l1454:
  1776  0488  170F               	bsf	15,6	;volatile
  1777  0489                     l1456:
  1778  0489  140F               	bsf	15,0	;volatile
  1779  048A                     l1458:
  1780  048A  1381               	bcf	1,7	;volatile
  1781  048B  3003               	movlw	3
  1782  048C  0095               	movwf	21	;volatile
  1783  048D                     l1460:
  1784  048D  1416               	bsf	22,0	;volatile
  1785  048E                     l1462:
  1786  048E  1496               	bsf	22,1	;volatile
  1787  048F                     l1464:
  1788  048F  158B               	bsf	11,3	;volatile
  1789  0490                     l1466:
  1790  0490  100B               	bcf	11,0	;volatile
  1791  0491                     l1468:
  1792  0491  178B               	bsf	11,7	;volatile
  1793  0492                     l1470:
  1794  0492  170B               	bsf	11,6	;volatile
  1795  0493                     l1472:
  1796  0493  120A  118A  24BE  120A  118A  	fcall	_config_USART
  1797  0498                     l141:
  1798  0498  0008               	return
  1799  0499                     __end_of_setup:
  1800                           
  1801                           	psect	text6
  1802  04BE                     __ptext6:	
  1803 ;; *************** function _config_USART *****************
  1804 ;; Defined at:
  1805 ;;		line 11 in file "config_USART_1.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1819 ;;      Params:         0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    1
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_setup
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _config_USART
  1835  04BE                     _config_USART:
  1836  04BE                     l1250:	
  1837                           ;incstack = 0
  1838                           ; Regs used in _config_USART: [wreg+status,2]
  1839                           
  1840                           
  1841                           ;config_USART_1.c: 13:     SPBRG = 103;
  1842  04BE  3067               	movlw	103
  1843  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  1844  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  1845  04C1  0099               	movwf	25	;volatile
  1846  04C2                     l1252:
  1847                           
  1848                           ;config_USART_1.c: 14:     SPBRGH = 0;
  1849  04C2  019A               	clrf	26	;volatile
  1850  04C3                     l1254:
  1851                           
  1852                           ;config_USART_1.c: 15:     BAUDCTLbits.BRG16 = 1;
  1853  04C3  1683               	bsf	3,5	;RP0=1, select bank3
  1854  04C4  1703               	bsf	3,6	;RP1=1, select bank3
  1855  04C5  1587               	bsf	7,3	;volatile
  1856  04C6                     l1256:
  1857                           
  1858                           ;config_USART_1.c: 16:     TXSTAbits.BRGH = 1;
  1859  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1860  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1861  04C8  1518               	bsf	24,2	;volatile
  1862  04C9                     l1258:
  1863                           
  1864                           ;config_USART_1.c: 18:     TXSTAbits.SYNC = 0;
  1865  04C9  1218               	bcf	24,4	;volatile
  1866  04CA                     l1260:
  1867                           
  1868                           ;config_USART_1.c: 20:     RCSTAbits.SPEN = 1;
  1869  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1870  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1871  04CC  1798               	bsf	24,7	;volatile
  1872  04CD                     l1262:
  1873                           
  1874                           ;config_USART_1.c: 21:     RCSTAbits.CREN = 1;
  1875  04CD  1618               	bsf	24,4	;volatile
  1876  04CE                     l1264:
  1877                           
  1878                           ;config_USART_1.c: 23:     TXSTAbits.TX9 = 0;
  1879  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  1880  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  1881  04D0  1318               	bcf	24,6	;volatile
  1882  04D1                     l1266:
  1883                           
  1884                           ;config_USART_1.c: 24:     TXSTAbits.TXEN = 1;
  1885  04D1  1698               	bsf	24,5	;volatile
  1886  04D2                     l1268:
  1887                           
  1888                           ;config_USART_1.c: 25:     RCSTAbits.RX9 = 0;
  1889  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1890  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1891  04D4  1318               	bcf	24,6	;volatile
  1892  04D5                     l1270:
  1893                           
  1894                           ;config_USART_1.c: 28:     INTCONbits.GIE = 1;
  1895  04D5  178B               	bsf	11,7	;volatile
  1896  04D6                     l1272:
  1897                           
  1898                           ;config_USART_1.c: 29:     INTCONbits.PEIE = 1;
  1899  04D6  170B               	bsf	11,6	;volatile
  1900  04D7                     l1274:
  1901                           
  1902                           ;config_USART_1.c: 31:     PIR1bits.TXIF = 0;
  1903  04D7  120C               	bcf	12,4	;volatile
  1904  04D8                     l1276:
  1905                           
  1906                           ;config_USART_1.c: 32:     PIR1bits.RCIF = 0;
  1907  04D8  128C               	bcf	12,5	;volatile
  1908  04D9                     l158:
  1909  04D9  0008               	return
  1910  04DA                     __end_of_config_USART:
  1911                           
  1912                           	psect	text7
  1913  02A5                     __ptext7:	
  1914 ;; *************** function _division *****************
  1915 ;; Defined at:
  1916 ;;		line 139 in file "main_05.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  dividendo       1    wreg     unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  dividendo       1    8[COMMON] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         1       0       0       0       0
  1932 ;;      Temps:          0       3       0       0       0
  1933 ;;      Totals:         1       3       0       0       0
  1934 ;;Total ram usage:        4 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    2
  1937 ;; This function calls:
  1938 ;;		___awdiv
  1939 ;;		___awmod
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _division
  1947  02A5                     _division:
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1951                           ;division@dividendo stored from wreg
  1952  02A5  00F8               	movwf	division@dividendo
  1953  02A6                     l1774:
  1954                           
  1955                           ;main_05.c: 141:     PORTD = 0x00;
  1956  02A6  3064               	movlw	100
  1957  02A7  00F3               	movwf	___awdiv@divisor
  1958  02A8  3000               	movlw	0
  1959  02A9  00F4               	movwf	___awdiv@divisor+1
  1960  02AA  0878               	movf	division@dividendo,w
  1961  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1962  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1963  02AD  00C9               	movwf	??_division
  1964  02AE  01CA               	clrf	??_division+1
  1965  02AF  0849               	movf	??_division,w
  1966  02B0  00F5               	movwf	___awdiv@dividend
  1967  02B1  084A               	movf	??_division+1,w
  1968  02B2  00F6               	movwf	___awdiv@dividend+1
  1969  02B3  120A  118A  223C  120A  118A  	fcall	___awdiv
  1970  02B8  0873               	movf	?___awdiv,w
  1971  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1972  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1973  02BB  00CB               	movwf	??_division+2
  1974  02BC  084B               	movf	??_division+2,w
  1975  02BD  00A5               	movwf	_centenas
  1976                           
  1977                           ;main_05.c: 142: 
  1978  02BE  3064               	movlw	100
  1979  02BF  00F3               	movwf	___awmod@divisor
  1980  02C0  3000               	movlw	0
  1981  02C1  00F4               	movwf	___awmod@divisor+1
  1982  02C2  0878               	movf	division@dividendo,w
  1983  02C3  00C9               	movwf	??_division
  1984  02C4  01CA               	clrf	??_division+1
  1985  02C5  0849               	movf	??_division,w
  1986  02C6  00F5               	movwf	___awmod@dividend
  1987  02C7  084A               	movf	??_division+1,w
  1988  02C8  00F6               	movwf	___awmod@dividend+1
  1989  02C9  120A  118A  236C  120A  118A  	fcall	___awmod
  1990  02CE  0873               	movf	?___awmod,w
  1991  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1992  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1993  02D1  00CB               	movwf	??_division+2
  1994  02D2  084B               	movf	??_division+2,w
  1995  02D3  00FA               	movwf	_residuo
  1996                           
  1997                           ;main_05.c: 143: 
  1998  02D4  300A               	movlw	10
  1999  02D5  00F3               	movwf	___awdiv@divisor
  2000  02D6  3000               	movlw	0
  2001  02D7  00F4               	movwf	___awdiv@divisor+1
  2002  02D8  087A               	movf	_residuo,w
  2003  02D9  00C9               	movwf	??_division
  2004  02DA  01CA               	clrf	??_division+1
  2005  02DB  0849               	movf	??_division,w
  2006  02DC  00F5               	movwf	___awdiv@dividend
  2007  02DD  084A               	movf	??_division+1,w
  2008  02DE  00F6               	movwf	___awdiv@dividend+1
  2009  02DF  120A  118A  223C  120A  118A  	fcall	___awdiv
  2010  02E4  0873               	movf	?___awdiv,w
  2011  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2012  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2013  02E7  00CB               	movwf	??_division+2
  2014  02E8  084B               	movf	??_division+2,w
  2015  02E9  00A4               	movwf	_decenas
  2016                           
  2017                           ;main_05.c: 144:     OSCCONbits.IRCF0 = 0;
  2018  02EA  300A               	movlw	10
  2019  02EB  00F3               	movwf	___awmod@divisor
  2020  02EC  3000               	movlw	0
  2021  02ED  00F4               	movwf	___awmod@divisor+1
  2022  02EE  087A               	movf	_residuo,w
  2023  02EF  00C9               	movwf	??_division
  2024  02F0  01CA               	clrf	??_division+1
  2025  02F1  0849               	movf	??_division,w
  2026  02F2  00F5               	movwf	___awmod@dividend
  2027  02F3  084A               	movf	??_division+1,w
  2028  02F4  00F6               	movwf	___awmod@dividend+1
  2029  02F5  120A  118A  236C  120A  118A  	fcall	___awmod
  2030  02FA  0873               	movf	?___awmod,w
  2031  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2032  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2033  02FD  00CB               	movwf	??_division+2
  2034  02FE  084B               	movf	??_division+2,w
  2035  02FF  00A3               	movwf	_unidades
  2036  0300                     l1776:
  2037                           
  2038                           ;main_05.c: 146:     OSCCONbits.IRCF2 = 1;
  2039  0300  3030               	movlw	48
  2040  0301  00C9               	movwf	??_division
  2041  0302  0849               	movf	??_division,w
  2042  0303  07A5               	addwf	_centenas,f
  2043  0304                     l1778:
  2044                           
  2045                           ;main_05.c: 147:     OSCCONbits.SCS = 1;
  2046  0304  3030               	movlw	48
  2047  0305  00C9               	movwf	??_division
  2048  0306  0849               	movf	??_division,w
  2049  0307  07A4               	addwf	_decenas,f
  2050  0308                     l1780:
  2051                           
  2052                           ;main_05.c: 148: 
  2053  0308  3030               	movlw	48
  2054  0309  00C9               	movwf	??_division
  2055  030A  0849               	movf	??_division,w
  2056  030B  07A3               	addwf	_unidades,f
  2057  030C                     l117:
  2058  030C  0008               	return
  2059  030D                     __end_of_division:
  2060                           
  2061                           	psect	text8
  2062  036C                     __ptext8:	
  2063 ;; *************** function ___awmod *****************
  2064 ;; Defined at:
  2065 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  divisor         2    3[COMMON] int 
  2068 ;;  dividend        2    5[COMMON] int 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  sign            1    1[BANK0 ] unsigned char 
  2071 ;;  counter         1    0[BANK0 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2    3[COMMON] int 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         4       0       0       0       0
  2082 ;;      Locals:         0       2       0       0       0
  2083 ;;      Temps:          1       0       0       0       0
  2084 ;;      Totals:         5       2       0       0       0
  2085 ;;Total ram usage:        7 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    1
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_division
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           
  2096                           ;psect for function ___awmod
  2097  036C                     ___awmod:
  2098  036C                     l1688:	
  2099                           ;incstack = 0
  2100                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2101                           
  2102  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2103  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2104  036E  01C6               	clrf	___awmod@sign
  2105  036F                     l1690:
  2106  036F  1FF6               	btfss	___awmod@dividend+1,7
  2107  0370  2B72               	goto	u1341
  2108  0371  2B73               	goto	u1340
  2109  0372                     u1341:
  2110  0372  2B7A               	goto	l1696
  2111  0373                     u1340:
  2112  0373                     l1692:
  2113  0373  09F5               	comf	___awmod@dividend,f
  2114  0374  09F6               	comf	___awmod@dividend+1,f
  2115  0375  0AF5               	incf	___awmod@dividend,f
  2116  0376  1903               	skipnz
  2117  0377  0AF6               	incf	___awmod@dividend+1,f
  2118  0378                     l1694:
  2119  0378  01C6               	clrf	___awmod@sign
  2120  0379  0AC6               	incf	___awmod@sign,f
  2121  037A                     l1696:
  2122  037A  1FF4               	btfss	___awmod@divisor+1,7
  2123  037B  2B7D               	goto	u1351
  2124  037C  2B7E               	goto	u1350
  2125  037D                     u1351:
  2126  037D  2B83               	goto	l1700
  2127  037E                     u1350:
  2128  037E                     l1698:
  2129  037E  09F3               	comf	___awmod@divisor,f
  2130  037F  09F4               	comf	___awmod@divisor+1,f
  2131  0380  0AF3               	incf	___awmod@divisor,f
  2132  0381  1903               	skipnz
  2133  0382  0AF4               	incf	___awmod@divisor+1,f
  2134  0383                     l1700:
  2135  0383  0873               	movf	___awmod@divisor,w
  2136  0384  0474               	iorwf	___awmod@divisor+1,w
  2137  0385  1903               	btfsc	3,2
  2138  0386  2B88               	goto	u1361
  2139  0387  2B89               	goto	u1360
  2140  0388                     u1361:
  2141  0388  2BB8               	goto	l1718
  2142  0389                     u1360:
  2143  0389                     l1702:
  2144  0389  01C5               	clrf	___awmod@counter
  2145  038A  0AC5               	incf	___awmod@counter,f
  2146  038B  2B97               	goto	l1708
  2147  038C                     l1704:
  2148  038C  3001               	movlw	1
  2149  038D                     u1375:
  2150  038D  1003               	clrc
  2151  038E  0DF3               	rlf	___awmod@divisor,f
  2152  038F  0DF4               	rlf	___awmod@divisor+1,f
  2153  0390  3EFF               	addlw	-1
  2154  0391  1D03               	skipz
  2155  0392  2B8D               	goto	u1375
  2156  0393                     l1706:
  2157  0393  3001               	movlw	1
  2158  0394  00F7               	movwf	??___awmod
  2159  0395  0877               	movf	??___awmod,w
  2160  0396  07C5               	addwf	___awmod@counter,f
  2161  0397                     l1708:
  2162  0397  1FF4               	btfss	___awmod@divisor+1,7
  2163  0398  2B9A               	goto	u1381
  2164  0399  2B9B               	goto	u1380
  2165  039A                     u1381:
  2166  039A  2B8C               	goto	l1704
  2167  039B                     u1380:
  2168  039B                     l1710:
  2169  039B  0874               	movf	___awmod@divisor+1,w
  2170  039C  0276               	subwf	___awmod@dividend+1,w
  2171  039D  1D03               	skipz
  2172  039E  2BA1               	goto	u1395
  2173  039F  0873               	movf	___awmod@divisor,w
  2174  03A0  0275               	subwf	___awmod@dividend,w
  2175  03A1                     u1395:
  2176  03A1  1C03               	skipc
  2177  03A2  2BA4               	goto	u1391
  2178  03A3  2BA5               	goto	u1390
  2179  03A4                     u1391:
  2180  03A4  2BAB               	goto	l1714
  2181  03A5                     u1390:
  2182  03A5                     l1712:
  2183  03A5  0873               	movf	___awmod@divisor,w
  2184  03A6  02F5               	subwf	___awmod@dividend,f
  2185  03A7  0874               	movf	___awmod@divisor+1,w
  2186  03A8  1C03               	skipc
  2187  03A9  03F6               	decf	___awmod@dividend+1,f
  2188  03AA  02F6               	subwf	___awmod@dividend+1,f
  2189  03AB                     l1714:
  2190  03AB  3001               	movlw	1
  2191  03AC                     u1405:
  2192  03AC  1003               	clrc
  2193  03AD  0CF4               	rrf	___awmod@divisor+1,f
  2194  03AE  0CF3               	rrf	___awmod@divisor,f
  2195  03AF  3EFF               	addlw	-1
  2196  03B0  1D03               	skipz
  2197  03B1  2BAC               	goto	u1405
  2198  03B2                     l1716:
  2199  03B2  3001               	movlw	1
  2200  03B3  02C5               	subwf	___awmod@counter,f
  2201  03B4  1D03               	btfss	3,2
  2202  03B5  2BB7               	goto	u1411
  2203  03B6  2BB8               	goto	u1410
  2204  03B7                     u1411:
  2205  03B7  2B9B               	goto	l1710
  2206  03B8                     u1410:
  2207  03B8                     l1718:
  2208  03B8  0846               	movf	___awmod@sign,w
  2209  03B9  1903               	btfsc	3,2
  2210  03BA  2BBC               	goto	u1421
  2211  03BB  2BBD               	goto	u1420
  2212  03BC                     u1421:
  2213  03BC  2BC2               	goto	l1722
  2214  03BD                     u1420:
  2215  03BD                     l1720:
  2216  03BD  09F5               	comf	___awmod@dividend,f
  2217  03BE  09F6               	comf	___awmod@dividend+1,f
  2218  03BF  0AF5               	incf	___awmod@dividend,f
  2219  03C0  1903               	skipnz
  2220  03C1  0AF6               	incf	___awmod@dividend+1,f
  2221  03C2                     l1722:
  2222  03C2  0876               	movf	___awmod@dividend+1,w
  2223  03C3  00F4               	movwf	?___awmod+1
  2224  03C4  0875               	movf	___awmod@dividend,w
  2225  03C5  00F3               	movwf	?___awmod
  2226  03C6                     l438:
  2227  03C6  0008               	return
  2228  03C7                     __end_of___awmod:
  2229                           
  2230                           	psect	text9
  2231  023C                     __ptext9:	
  2232 ;; *************** function ___awdiv *****************
  2233 ;; Defined at:
  2234 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  divisor         2    3[COMMON] int 
  2237 ;;  dividend        2    5[COMMON] int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  quotient        2    2[BANK0 ] int 
  2240 ;;  sign            1    1[BANK0 ] unsigned char 
  2241 ;;  counter         1    0[BANK0 ] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    3[COMMON] int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         4       0       0       0       0
  2252 ;;      Locals:         0       4       0       0       0
  2253 ;;      Temps:          1       0       0       0       0
  2254 ;;      Totals:         5       4       0       0       0
  2255 ;;Total ram usage:        9 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_division
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function ___awdiv
  2267  023C                     ___awdiv:
  2268  023C                     l1294:	
  2269                           ;incstack = 0
  2270                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2271                           
  2272  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2273  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2274  023E  01C6               	clrf	___awdiv@sign
  2275  023F                     l1296:
  2276  023F  1FF4               	btfss	___awdiv@divisor+1,7
  2277  0240  2A42               	goto	u721
  2278  0241  2A43               	goto	u720
  2279  0242                     u721:
  2280  0242  2A4A               	goto	l1302
  2281  0243                     u720:
  2282  0243                     l1298:
  2283  0243  09F3               	comf	___awdiv@divisor,f
  2284  0244  09F4               	comf	___awdiv@divisor+1,f
  2285  0245  0AF3               	incf	___awdiv@divisor,f
  2286  0246  1903               	skipnz
  2287  0247  0AF4               	incf	___awdiv@divisor+1,f
  2288  0248                     l1300:
  2289  0248  01C6               	clrf	___awdiv@sign
  2290  0249  0AC6               	incf	___awdiv@sign,f
  2291  024A                     l1302:
  2292  024A  1FF6               	btfss	___awdiv@dividend+1,7
  2293  024B  2A4D               	goto	u731
  2294  024C  2A4E               	goto	u730
  2295  024D                     u731:
  2296  024D  2A57               	goto	l1308
  2297  024E                     u730:
  2298  024E                     l1304:
  2299  024E  09F5               	comf	___awdiv@dividend,f
  2300  024F  09F6               	comf	___awdiv@dividend+1,f
  2301  0250  0AF5               	incf	___awdiv@dividend,f
  2302  0251  1903               	skipnz
  2303  0252  0AF6               	incf	___awdiv@dividend+1,f
  2304  0253                     l1306:
  2305  0253  3001               	movlw	1
  2306  0254  00F7               	movwf	??___awdiv
  2307  0255  0877               	movf	??___awdiv,w
  2308  0256  06C6               	xorwf	___awdiv@sign,f
  2309  0257                     l1308:
  2310  0257  01C7               	clrf	___awdiv@quotient
  2311  0258  01C8               	clrf	___awdiv@quotient+1
  2312  0259                     l1310:
  2313  0259  0873               	movf	___awdiv@divisor,w
  2314  025A  0474               	iorwf	___awdiv@divisor+1,w
  2315  025B  1903               	btfsc	3,2
  2316  025C  2A5E               	goto	u741
  2317  025D  2A5F               	goto	u740
  2318  025E                     u741:
  2319  025E  2A96               	goto	l1330
  2320  025F                     u740:
  2321  025F                     l1312:
  2322  025F  01C5               	clrf	___awdiv@counter
  2323  0260  0AC5               	incf	___awdiv@counter,f
  2324  0261  2A6D               	goto	l1318
  2325  0262                     l1314:
  2326  0262  3001               	movlw	1
  2327  0263                     u755:
  2328  0263  1003               	clrc
  2329  0264  0DF3               	rlf	___awdiv@divisor,f
  2330  0265  0DF4               	rlf	___awdiv@divisor+1,f
  2331  0266  3EFF               	addlw	-1
  2332  0267  1D03               	skipz
  2333  0268  2A63               	goto	u755
  2334  0269                     l1316:
  2335  0269  3001               	movlw	1
  2336  026A  00F7               	movwf	??___awdiv
  2337  026B  0877               	movf	??___awdiv,w
  2338  026C  07C5               	addwf	___awdiv@counter,f
  2339  026D                     l1318:
  2340  026D  1FF4               	btfss	___awdiv@divisor+1,7
  2341  026E  2A70               	goto	u761
  2342  026F  2A71               	goto	u760
  2343  0270                     u761:
  2344  0270  2A62               	goto	l1314
  2345  0271                     u760:
  2346  0271                     l1320:
  2347  0271  3001               	movlw	1
  2348  0272                     u775:
  2349  0272  1003               	clrc
  2350  0273  0DC7               	rlf	___awdiv@quotient,f
  2351  0274  0DC8               	rlf	___awdiv@quotient+1,f
  2352  0275  3EFF               	addlw	-1
  2353  0276  1D03               	skipz
  2354  0277  2A72               	goto	u775
  2355  0278  0874               	movf	___awdiv@divisor+1,w
  2356  0279  0276               	subwf	___awdiv@dividend+1,w
  2357  027A  1D03               	skipz
  2358  027B  2A7E               	goto	u785
  2359  027C  0873               	movf	___awdiv@divisor,w
  2360  027D  0275               	subwf	___awdiv@dividend,w
  2361  027E                     u785:
  2362  027E  1C03               	skipc
  2363  027F  2A81               	goto	u781
  2364  0280  2A82               	goto	u780
  2365  0281                     u781:
  2366  0281  2A89               	goto	l1326
  2367  0282                     u780:
  2368  0282                     l1322:
  2369  0282  0873               	movf	___awdiv@divisor,w
  2370  0283  02F5               	subwf	___awdiv@dividend,f
  2371  0284  0874               	movf	___awdiv@divisor+1,w
  2372  0285  1C03               	skipc
  2373  0286  03F6               	decf	___awdiv@dividend+1,f
  2374  0287  02F6               	subwf	___awdiv@dividend+1,f
  2375  0288                     l1324:
  2376  0288  1447               	bsf	___awdiv@quotient,0
  2377  0289                     l1326:
  2378  0289  3001               	movlw	1
  2379  028A                     u795:
  2380  028A  1003               	clrc
  2381  028B  0CF4               	rrf	___awdiv@divisor+1,f
  2382  028C  0CF3               	rrf	___awdiv@divisor,f
  2383  028D  3EFF               	addlw	-1
  2384  028E  1D03               	skipz
  2385  028F  2A8A               	goto	u795
  2386  0290                     l1328:
  2387  0290  3001               	movlw	1
  2388  0291  02C5               	subwf	___awdiv@counter,f
  2389  0292  1D03               	btfss	3,2
  2390  0293  2A95               	goto	u801
  2391  0294  2A96               	goto	u800
  2392  0295                     u801:
  2393  0295  2A71               	goto	l1320
  2394  0296                     u800:
  2395  0296                     l1330:
  2396  0296  0846               	movf	___awdiv@sign,w
  2397  0297  1903               	btfsc	3,2
  2398  0298  2A9A               	goto	u811
  2399  0299  2A9B               	goto	u810
  2400  029A                     u811:
  2401  029A  2AA0               	goto	l1334
  2402  029B                     u810:
  2403  029B                     l1332:
  2404  029B  09C7               	comf	___awdiv@quotient,f
  2405  029C  09C8               	comf	___awdiv@quotient+1,f
  2406  029D  0AC7               	incf	___awdiv@quotient,f
  2407  029E  1903               	skipnz
  2408  029F  0AC8               	incf	___awdiv@quotient+1,f
  2409  02A0                     l1334:
  2410  02A0  0848               	movf	___awdiv@quotient+1,w
  2411  02A1  00F4               	movwf	?___awdiv+1
  2412  02A2  0847               	movf	___awdiv@quotient,w
  2413  02A3  00F3               	movwf	?___awdiv
  2414  02A4                     l425:
  2415  02A4  0008               	return
  2416  02A5                     __end_of___awdiv:
  2417                           
  2418                           	psect	text10
  2419  01B9                     __ptext10:	
  2420 ;; *************** function _atoi *****************
  2421 ;; Defined at:
  2422 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  s               1    wreg     PTR const unsigned char 
  2425 ;;		 -> s1(10), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  2428 ;;		 -> s1(10), 
  2429 ;;  a               2    5[BANK0 ] int 
  2430 ;;  sign            1    4[BANK0 ] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    0[BANK0 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2440 ;;      Params:         0       2       0       0       0
  2441 ;;      Locals:         0       4       0       0       0
  2442 ;;      Temps:          0       2       0       0       0
  2443 ;;      Totals:         0       8       0       0       0
  2444 ;;Total ram usage:        8 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		___wmul
  2449 ;;		_isdigit
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _atoi
  2457  01B9                     _atoi:
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2461                           ;atoi@s stored from wreg
  2462  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2463  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2464  01BB  00CC               	movwf	atoi@s
  2465  01BC                     l1846:
  2466  01BC  29C1               	goto	l1850
  2467  01BD                     l1848:
  2468  01BD  3001               	movlw	1
  2469  01BE  00C7               	movwf	??_atoi
  2470  01BF  0847               	movf	??_atoi,w
  2471  01C0  07CC               	addwf	atoi@s,f
  2472  01C1                     l1850:
  2473  01C1  084C               	movf	atoi@s,w
  2474  01C2  0084               	movwf	4
  2475  01C3  3020               	movlw	32
  2476  01C4  1383               	bcf	3,7	;select IRP bank0
  2477  01C5  0600               	xorwf	0,w
  2478  01C6  1903               	btfsc	3,2
  2479  01C7  29C9               	goto	u1631
  2480  01C8  29CA               	goto	u1630
  2481  01C9                     u1631:
  2482  01C9  29BD               	goto	l1848
  2483  01CA                     u1630:
  2484  01CA                     l1852:
  2485  01CA  084C               	movf	atoi@s,w
  2486  01CB  0084               	movwf	4
  2487  01CC  3009               	movlw	9
  2488  01CD  0600               	xorwf	0,w
  2489  01CE  1903               	btfsc	3,2
  2490  01CF  29D1               	goto	u1641
  2491  01D0  29D2               	goto	u1640
  2492  01D1                     u1641:
  2493  01D1  29BD               	goto	l1848
  2494  01D2                     u1640:
  2495  01D2                     l1854:
  2496  01D2  01CA               	clrf	atoi@a
  2497  01D3  01CB               	clrf	atoi@a+1
  2498  01D4  01C9               	clrf	atoi@sign
  2499  01D5                     l1856:
  2500  01D5  084C               	movf	atoi@s,w
  2501  01D6  0084               	movwf	4
  2502  01D7  302D               	movlw	45
  2503  01D8  0600               	xorwf	0,w
  2504  01D9  1D03               	btfss	3,2
  2505  01DA  29DC               	goto	u1651
  2506  01DB  29DD               	goto	u1650
  2507  01DC                     u1651:
  2508  01DC  29E6               	goto	l1860
  2509  01DD                     u1650:
  2510  01DD                     l1858:
  2511  01DD  3001               	movlw	1
  2512  01DE  00C7               	movwf	??_atoi
  2513  01DF  0847               	movf	??_atoi,w
  2514  01E0  07C9               	addwf	atoi@sign,f
  2515  01E1  3001               	movlw	1
  2516  01E2  00C7               	movwf	??_atoi
  2517  01E3  0847               	movf	??_atoi,w
  2518  01E4  07CC               	addwf	atoi@s,f
  2519  01E5  2A18               	goto	l1868
  2520  01E6                     l1860:
  2521  01E6  084C               	movf	atoi@s,w
  2522  01E7  0084               	movwf	4
  2523  01E8  302B               	movlw	43
  2524  01E9  0600               	xorwf	0,w
  2525  01EA  1D03               	btfss	3,2
  2526  01EB  29ED               	goto	u1661
  2527  01EC  29EE               	goto	u1660
  2528  01ED                     u1661:
  2529  01ED  2A18               	goto	l1868
  2530  01EE                     u1660:
  2531  01EE                     l1862:
  2532  01EE  3001               	movlw	1
  2533  01EF  00C7               	movwf	??_atoi
  2534  01F0  0847               	movf	??_atoi,w
  2535  01F1  07CC               	addwf	atoi@s,f
  2536  01F2  2A18               	goto	l1868
  2537  01F3                     l1864:
  2538  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2539  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2540  01F5  084C               	movf	atoi@s,w
  2541  01F6  0084               	movwf	4
  2542  01F7  084B               	movf	atoi@a+1,w
  2543  01F8  00F4               	movwf	___wmul@multiplier+1
  2544  01F9  084A               	movf	atoi@a,w
  2545  01FA  00F3               	movwf	___wmul@multiplier
  2546  01FB  300A               	movlw	10
  2547  01FC  00F5               	movwf	___wmul@multiplicand
  2548  01FD  3000               	movlw	0
  2549  01FE  00F6               	movwf	___wmul@multiplicand+1
  2550  01FF  120A  118A  2499  120A  118A  	fcall	___wmul
  2551  0204  1383               	bcf	3,7	;select IRP bank0
  2552  0205  0800               	movf	0,w
  2553  0206  0773               	addwf	?___wmul,w
  2554  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0209  00C7               	movwf	??_atoi
  2557  020A  3000               	movlw	0
  2558  020B  1803               	skipnc
  2559  020C  3001               	movlw	1
  2560  020D  0774               	addwf	?___wmul+1,w
  2561  020E  00C8               	movwf	??_atoi+1
  2562  020F  0847               	movf	??_atoi,w
  2563  0210  3ED0               	addlw	208
  2564  0211  00CA               	movwf	atoi@a
  2565  0212  0848               	movf	??_atoi+1,w
  2566  0213  1803               	skipnc
  2567  0214  3E01               	addlw	1
  2568  0215  3EFF               	addlw	255
  2569  0216  00CB               	movwf	atoi@a+1
  2570  0217  29EE               	goto	l1862
  2571  0218                     l1868:
  2572  0218  084C               	movf	atoi@s,w
  2573  0219  0084               	movwf	4
  2574  021A  0800               	movf	0,w
  2575  021B  120A  118A  24F6  120A  118A  	fcall	_isdigit
  2576  0220  1803               	btfsc	3,0
  2577  0221  2A23               	goto	u1671
  2578  0222  2A24               	goto	u1670
  2579  0223                     u1671:
  2580  0223  29F3               	goto	l1864
  2581  0224                     u1670:
  2582  0224                     l1870:
  2583  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2584  0225  1303               	bcf	3,6	;RP1=0, select bank0
  2585  0226  0849               	movf	atoi@sign,w
  2586  0227  1903               	btfsc	3,2
  2587  0228  2A2A               	goto	u1681
  2588  0229  2A2B               	goto	u1680
  2589  022A                     u1681:
  2590  022A  2A37               	goto	l1876
  2591  022B                     u1680:
  2592  022B                     l1872:
  2593  022B  094A               	comf	atoi@a,w
  2594  022C  00C7               	movwf	??_atoi
  2595  022D  094B               	comf	atoi@a+1,w
  2596  022E  00C8               	movwf	??_atoi+1
  2597  022F  0AC7               	incf	??_atoi,f
  2598  0230  1903               	skipnz
  2599  0231  0AC8               	incf	??_atoi+1,f
  2600  0232  0847               	movf	??_atoi,w
  2601  0233  00C5               	movwf	?_atoi
  2602  0234  0848               	movf	??_atoi+1,w
  2603  0235  00C6               	movwf	?_atoi+1
  2604  0236  2A3B               	goto	l735
  2605  0237                     l1876:
  2606  0237  084B               	movf	atoi@a+1,w
  2607  0238  00C6               	movwf	?_atoi+1
  2608  0239  084A               	movf	atoi@a,w
  2609  023A  00C5               	movwf	?_atoi
  2610  023B                     l735:
  2611  023B  0008               	return
  2612  023C                     __end_of_atoi:
  2613                           
  2614                           	psect	text11
  2615  04F6                     __ptext11:	
  2616 ;; *************** function _isdigit *****************
  2617 ;; Defined at:
  2618 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  c               1    wreg     unsigned char 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  c               1    4[COMMON] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         2       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0
  2635 ;;      Totals:         2       0       0       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_atoi
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _isdigit
  2648  04F6                     _isdigit:
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2652                           ;isdigit@c stored from wreg
  2653  04F6  00F4               	movwf	isdigit@c
  2654  04F7                     l1424:
  2655  04F7  01F3               	clrf	_isdigit$887
  2656  04F8                     l1426:
  2657  04F8  303A               	movlw	58
  2658  04F9  0274               	subwf	isdigit@c,w
  2659  04FA  1803               	skipnc
  2660  04FB  2CFD               	goto	u1041
  2661  04FC  2CFE               	goto	u1040
  2662  04FD                     u1041:
  2663  04FD  2D06               	goto	l1432
  2664  04FE                     u1040:
  2665  04FE                     l1428:
  2666  04FE  3030               	movlw	48
  2667  04FF  0274               	subwf	isdigit@c,w
  2668  0500  1C03               	skipc
  2669  0501  2D03               	goto	u1051
  2670  0502  2D04               	goto	u1050
  2671  0503                     u1051:
  2672  0503  2D06               	goto	l1432
  2673  0504                     u1050:
  2674  0504                     l1430:
  2675  0504  01F3               	clrf	_isdigit$887
  2676  0505  0AF3               	incf	_isdigit$887,f
  2677  0506                     l1432:
  2678  0506  0C73               	rrf	_isdigit$887,w
  2679  0507                     l740:
  2680  0507  0008               	return
  2681  0508                     __end_of_isdigit:
  2682                           
  2683                           	psect	text12
  2684  0499                     __ptext12:	
  2685 ;; *************** function ___wmul *****************
  2686 ;; Defined at:
  2687 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  multiplier      2    3[COMMON] unsigned int 
  2690 ;;  multiplicand    2    5[COMMON] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  product         2    7[COMMON] unsigned int 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    3[COMMON] unsigned int 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         4       0       0       0       0
  2703 ;;      Locals:         2       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0
  2705 ;;      Totals:         6       0       0       0       0
  2706 ;;Total ram usage:        6 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_atoi
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function ___wmul
  2718  0499                     ___wmul:
  2719  0499                     l1280:	
  2720                           ;incstack = 0
  2721                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2722                           
  2723  0499  01F7               	clrf	___wmul@product
  2724  049A  01F8               	clrf	___wmul@product+1
  2725  049B                     l1282:
  2726  049B  1C73               	btfss	___wmul@multiplier,0
  2727  049C  2C9E               	goto	u681
  2728  049D  2C9F               	goto	u680
  2729  049E                     u681:
  2730  049E  2CA5               	goto	l272
  2731  049F                     u680:
  2732  049F                     l1284:
  2733  049F  0875               	movf	___wmul@multiplicand,w
  2734  04A0  07F7               	addwf	___wmul@product,f
  2735  04A1  1803               	skipnc
  2736  04A2  0AF8               	incf	___wmul@product+1,f
  2737  04A3  0876               	movf	___wmul@multiplicand+1,w
  2738  04A4  07F8               	addwf	___wmul@product+1,f
  2739  04A5                     l272:
  2740  04A5  3001               	movlw	1
  2741  04A6                     u695:
  2742  04A6  1003               	clrc
  2743  04A7  0DF5               	rlf	___wmul@multiplicand,f
  2744  04A8  0DF6               	rlf	___wmul@multiplicand+1,f
  2745  04A9  3EFF               	addlw	-1
  2746  04AA  1D03               	skipz
  2747  04AB  2CA6               	goto	u695
  2748  04AC                     l1286:
  2749  04AC  3001               	movlw	1
  2750  04AD                     u705:
  2751  04AD  1003               	clrc
  2752  04AE  0CF4               	rrf	___wmul@multiplier+1,f
  2753  04AF  0CF3               	rrf	___wmul@multiplier,f
  2754  04B0  3EFF               	addlw	-1
  2755  04B1  1D03               	skipz
  2756  04B2  2CAD               	goto	u705
  2757  04B3                     l1288:
  2758  04B3  0873               	movf	___wmul@multiplier,w
  2759  04B4  0474               	iorwf	___wmul@multiplier+1,w
  2760  04B5  1D03               	btfss	3,2
  2761  04B6  2CB8               	goto	u711
  2762  04B7  2CB9               	goto	u710
  2763  04B8                     u711:
  2764  04B8  2C9B               	goto	l1282
  2765  04B9                     u710:
  2766  04B9                     l1290:
  2767  04B9  0878               	movf	___wmul@product+1,w
  2768  04BA  00F4               	movwf	?___wmul+1
  2769  04BB  0877               	movf	___wmul@product,w
  2770  04BC  00F3               	movwf	?___wmul
  2771  04BD                     l274:
  2772  04BD  0008               	return
  2773  04BE                     __end_of___wmul:
  2774                           
  2775                           	psect	text13
  2776  04DA                     __ptext13:	
  2777 ;; *************** function _isr *****************
  2778 ;; Defined at:
  2779 ;;		line 74 in file "main_05.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0
  2795 ;;      Temps:          3       0       0       0       0
  2796 ;;      Totals:         3       0       0       0       0
  2797 ;;Total ram usage:        3 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		Interrupt level 1
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _isr
  2808  04DA                     _isr:
  2809  04DA                     i1l1592:
  2810                           
  2811                           ;main_05.c: 75: 
  2812  04DA  1C0B               	btfss	11,0	;volatile
  2813  04DB  2CDD               	goto	u121_21
  2814  04DC  2CDE               	goto	u121_20
  2815  04DD                     u121_21:
  2816  04DD  2CEF               	goto	i1l90
  2817  04DE                     u121_20:
  2818  04DE                     i1l1594:
  2819                           
  2820                           ;main_05.c: 76:     }
  2821  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2822  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2823  04E0  1806               	btfsc	6,0	;volatile
  2824  04E1  2CE3               	goto	u122_21
  2825  04E2  2CE4               	goto	u122_20
  2826  04E3                     u122_21:
  2827  04E3  2CE8               	goto	i1l1598
  2828  04E4                     u122_20:
  2829  04E4                     i1l1596:
  2830                           
  2831                           ;main_05.c: 77: }
  2832  04E4  3001               	movlw	1
  2833  04E5  00F0               	movwf	??_isr
  2834  04E6  0870               	movf	??_isr,w
  2835  04E7  07A6               	addwf	_contador,f
  2836  04E8                     i1l1598:
  2837                           
  2838                           ;main_05.c: 81: 
  2839  04E8  1886               	btfsc	6,1	;volatile
  2840  04E9  2CEB               	goto	u123_21
  2841  04EA  2CEC               	goto	u123_20
  2842  04EB                     u123_21:
  2843  04EB  2CEE               	goto	i1l1602
  2844  04EC                     u123_20:
  2845  04EC                     i1l1600:
  2846                           
  2847                           ;main_05.c: 82: 
  2848  04EC  3001               	movlw	1
  2849  04ED  02A6               	subwf	_contador,f
  2850  04EE                     i1l1602:
  2851                           
  2852                           ;main_05.c: 85:     TXREG = data;
  2853  04EE  100B               	bcf	11,0	;volatile
  2854  04EF                     i1l90:
  2855  04EF  0872               	movf	??_isr+2,w
  2856  04F0  008A               	movwf	10
  2857  04F1  0E71               	swapf	??_isr+1,w
  2858  04F2  0083               	movwf	3
  2859  04F3  0EFE               	swapf	btemp,f
  2860  04F4  0E7E               	swapf	btemp,w
  2861  04F5  0009               	retfie
  2862  04F6                     __end_of_isr:
  2863  007E                     btemp	set	126	;btemp
  2864  007E                     wtemp0	set	126
  2865                           
  2866                           	psect	intentry
  2867  0004                     __pintentry:	
  2868                           ;incstack = 0
  2869                           ; Regs used in _isr: [wreg+status,2+status,0]
  2870                           
  2871  0004                     interrupt_function:
  2872  007E                     saved_w	set	btemp
  2873  0004  00FE               	movwf	btemp
  2874  0005  0E03               	swapf	3,w
  2875  0006  00F1               	movwf	??_isr+1
  2876  0007  080A               	movf	10,w
  2877  0008  00F2               	movwf	??_isr+2
  2878  0009  120A  118A  2CDA   	ljmp	_isr
  2879                           
  2880                           	psect	config
  2881                           
  2882                           ;Config register CONFIG1 @ 0x2007
  2883                           ;	Oscillator Selection bits
  2884                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2885                           ;	Watchdog Timer Enable bit
  2886                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2887                           ;	Power-up Timer Enable bit
  2888                           ;	PWRTE = OFF, PWRT disabled
  2889                           ;	RE3/MCLR pin function select bit
  2890                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2891                           ;	Code Protection bit
  2892                           ;	CP = OFF, Program memory code protection is disabled
  2893                           ;	Data Code Protection bit
  2894                           ;	CPD = OFF, Data memory code protection is disabled
  2895                           ;	Brown Out Reset Selection bits
  2896                           ;	BOREN = OFF, BOR disabled
  2897                           ;	Internal External Switchover bit
  2898                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2899                           ;	Fail-Safe Clock Monitor Enabled bit
  2900                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2901                           ;	Low Voltage Programming Enable bit
  2902                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2903                           ;	In-Circuit Debugger Mode bit
  2904                           ;	DEBUG = 0x1, unprogrammed default
  2905  2007                     	org	8199
  2906  2007  20D4               	dw	8404
  2907                           
  2908                           ;Config register CONFIG2 @ 0x2008
  2909                           ;	Brown-out Reset Selection bit
  2910                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2911                           ;	Flash Program Memory Self Write Enable bits
  2912                           ;	WRT = OFF, Write protection off
  2913  2008                     	org	8200
  2914  2008  3FFF               	dw	16383

Data Sizes:
    Strings     79
    Constant    10
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     26      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 39
		 -> STR_6(CODE[39]), STR_5(CODE[39]), STR_4(CODE[37]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> printf@pb(COMMON[2]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    S889__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    S889__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_division
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv
    _division->___awmod
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4398
                                             21 BANK0      5     5      0
                               _atoi
                           _division
                              _setup
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1907
                                              8 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1459
                                              8 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     682
                                              0 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _division
     ___awdiv
     ___awmod
   _setup
     _config_USART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcat

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 24 23:34:03 2021

                      pc 0002                       l97 013D                       _c1 0022  
                     _d1 0021             ___awdiv@sign 0046                       _s1 003B  
                     _s2 0031                       _s3 0027                       _u1 0020  
                     fsr 0004      ___wmul@multiplicand 0075                      l100 0146  
                    l103 014F                      l117 030C                      l141 0498  
                    l158 04D9                      l272 04A5                      l425 02A4  
                    l274 04BD                      l268 0107                      l438 03C6  
                    l544 040C                      l554 0448                      l740 0507  
                    l735 023B                      l758 0471                      _RB0 0030  
                    _RB1 0031                      u710 04B9                      u711 04B8  
                    u800 0296                      u720 0243                      u705 04AD  
                    u801 0295                      u721 0242                      u810 029B  
                    u730 024E                      u811 029A                      u731 024D  
                    u740 025F                      u741 025E                      u680 049F  
                    u760 0271                      u681 049E                      u761 0270  
                    u755 0263                      u780 0282                      u781 0281  
                    u695 04A6                      u775 0272                      u785 027E  
                    u795 028A                      _isr 04DA                      fsr0 0004  
                    indf 0000             ___awmod@sign 0046                     l1300 0248  
                   l1310 0259                     l1302 024A                     l1320 0271  
                   l1312 025F                     l1304 024E                     l1322 0282  
                   l1314 0262                     l1330 0296                     l1306 0253  
                   l1250 04BE                     l1332 029B                     l1324 0288  
                   l1316 0269                     l1308 0257                     l1260 04CA  
                   l1252 04C2                     l1430 0504                     l1334 02A0  
                   l1326 0289                     l1318 026D                     l1270 04D5  
                   l1262 04CD                     l1254 04C3                     l1280 0499  
                   l1432 0506                     l1424 04F7                     l1328 0290  
                   l1272 04D6                     l1264 04CE                     l1256 04C6  
                   l1440 047D                     l1290 04B9                     l1282 049B  
                   l1426 04F8                     l1274 04D7                     l1266 04D1  
                   l1258 04C9                     l1450 0484                     l1442 047E  
                   l1284 049F                     l1428 04FE                     l1700 0383  
                   l1276 04D8                     l1268 04D2                     l1460 048D  
                   l1452 0487                     l1444 0481                     l1436 0472  
                   l1286 04AC                     l1294 023C                     l1710 039B  
                   l1702 0389                     l1470 0492                     l1462 048E  
                   l1454 0488                     l1446 0482                     l1438 0479  
                   l1550 044F                     l1288 04B3                     l1296 023F  
                   l1720 03BD                     l1712 03A5                     l1704 038C  
                   l1472 0493                     l1464 048F                     l1456 0489  
                   l1448 0483                     l1800 005E                     l1552 0453  
                   l1298 0243                     l1722 03C2                     l1714 03AB  
                   l1706 0393                     l1466 0490                     l1458 048A  
                   l1730 03D1                     l1802 0062                     l1554 045C  
                   l1716 03B2                     l1708 0397                     l1468 0491  
                   l1740 03F4                     l1732 03D4                     l1820 0097  
                   l1804 0066                     l1556 0464                     l1548 044A  
                   l1900 0153                     l1718 03B8                     l1742 03FA  
                   l1734 03DB                     l1726 03C7                     l1830 00DD  
                   l1822 009D                     l1814 0071                     l1806 006A  
                   l1910 019B                     l1902 0158                     l1744 03FB  
                   l1736 03DF                     l1728 03CB                     l1760 0423  
                   l1752 040D                     l1832 00E4                     l1824 00A4  
                   l1808 006F                     l1912 01A7                     l1904 0169  
                   l1850 01C1                     l1690 036F                     l1746 0402  
                   l1738 03E3                     l1762 0427                     l1754 0415  
                   l1770 0444                     l1834 00E8                     l1826 00A8  
                   l1818 008D                     l1914 01B3                     l1906 017C  
                   l1860 01E6                     l1852 01CA                     l1692 0373  
                   l1780 0308                     l1748 0408                     l1764 0431  
                   l1756 0418                     l1828 00AD                     l1836 00F1  
                   l1908 018F                     l1870 0224                     l1862 01EE  
                   l1854 01D2                     l1846 01BC                     l1694 0378  
                   l1774 02A6                     l1766 0437                     l1758 041F  
                   l1838 0103                     l1790 0033                     l1872 022B  
                   l1864 01F3                     l1856 01D5                     l1848 01BD  
                   l1696 037A                     l1688 036C                     l1776 0300  
                   l1768 043E                     l1936 004B                     l1792 0038  
                   l1784 0021                     l1880 0108                     l1858 01DD  
                   l1698 037E                     l1778 0304                     l1786 0026  
                   l1890 012A                     l1882 010D                     l1876 0237  
                   l1868 0218                     l1796 0039                     l1788 002C  
                   l1892 012E                     l1884 0115                     l1798 0056  
                   l1894 0139                     l1886 011B                     l1896 0141  
                   l1888 011F                     l1898 014A                     ?_isr 0070  
                   STR_1 0369                     STR_2 0369                     STR_3 0369  
                   STR_4 0344                     STR_5 031D                     u1040 04FE  
                   u1041 04FD                     u1050 0504                     u1130 045B  
                   u1051 0503                     u1131 045A                     u1140 0471  
                   u1141 0470                     u1410 03B8                     u1411 03B7  
                   u1420 03BD                     u1340 0373                     u1500 0415  
                   u1421 03BC                     u1405 03AC                     u1341 0372  
                   u1501 0414                     u1350 037E                     u1430 03D1  
                   u1351 037D                     u1431 03D0                     u1360 0389  
                   u1520 0427                     u1600 009D                     u1361 0388  
                   u1521 0426                     u1601 009C                     u1450 03E3  
                   u1530 0431                     u1610 00F1                     u1451 03E2  
                   u1531 0430                     u1515 0419                     u1611 00F0  
                   u1380 039B                     u1620 0103                     u1700 0141  
                   u1381 039A                     u1445 03D5                     u1621 0102  
                   u1701 0140                     u1630 01CA                     u1390 03A5  
                   u1470 03F4                     u1550 0444                     u1710 014A  
                   u1631 01C9                     u1391 03A4                     u1375 038D  
                   u1471 03F3                     u1551 0443                     u1535 042D  
                   u1711 0149                     u1640 01D2                     u1560 002C  
                   u1720 0153                     u1641 01D1                     u1465 03E4  
                   u1545 0438                     u1561 002B                     u1721 0152  
         ??_config_USART 0073                     u1650 01DD                     u1490 0408  
                   u1570 0066                     u1651 01DC                     u1395 03A1  
                   u1491 0407                     u1475 03F0                     u1571 0065  
                   u1660 01EE                     u1580 008C                     u1661 01ED  
                   u1485 03FC                     u1581 008B                     u1670 0224  
                   u1590 0097                     u1671 0223                     u1591 0096  
                   u1680 022B                     u1681 022A                     u1585 0088  
                   u1737 0125                     u1690 0115                     u1747 0134  
                   u1691 0114                     _RBIF 0058                     _RCIF 0065  
                   i1l90 04EF                     _TXIF 0064                     _WPUB 0095  
                   _atoi 01B9                     _main 0108                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_atoi 0045  
           main@completo 005D                    ?_main 0070          __end_of___awdiv 02A5  
        __end_of___awmod 03C7                    _ANSEL 0188          ___awdiv@divisor 0073  
        __end_of___lwdiv 040D          __end_of___lwmod 0449          ___awdiv@counter 0045  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019          __end_of_dpowers 031D          __end_of_isdigit 0508  
                  atoi@a 004A                    _setup 0472                    atoi@s 004C  
                  _putch 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0108          __initialization 000F  
           __end_of_atoi 023C             __end_of_main 01B9                   ??_atoi 0047  
                 ??_main 005A         ___awdiv@dividend 0075                   ?_setup 0070  
                 _ANSELH 0189                   i1l1600 04EC                   i1l1602 04EE  
                 u121_20 04DE                   u121_21 04DD                   u122_20 04E4  
                 i1l1592 04DA                   u122_21 04E3                   i1l1594 04DE  
                 i1l1596 04E4                   i1l1598 04E8                   u123_20 04EC  
                 u123_21 04EB                   _SPBRGH 009A         __end_of_division 030D  
                 ___wmul 0499                ??___awdiv 0077                ??___awmod 0077  
              ??___lwdiv 0077                ??___lwmod 0078         ___awdiv@quotient 0047  
   __end_of_config_USART 04DA          ___awmod@divisor 0073          ___awmod@counter 0045  
                 _strcat 0449                ??_isdigit 0073                   saved_w 007E  
              ??_sprintf 0050  __end_of__initialization 001A           __pcstackCOMMON 0070  
          __end_of_setup 0499           _OPTION_REGbits 0081                  ??_setup 0073  
             __pbssBANK0 0020               __pmaintext 0108                  ?___wmul 0073  
             __pintentry 0004                  ?_strcat 0073               __stringtab 030D  
              ?_division 0070    __size_of_config_USART 001C                  ___awdiv 023C  
                ___awmod 036C          __size_of___wmul 0025                  ___lwdiv 03C7  
                ___lwmod 040D                  _decenas 0024                  __ptext1 0449  
                __ptext2 001E                  __ptext3 040D                  __ptext4 03C7  
                __ptext5 0472                  __ptext6 04BE                  __ptext7 02A5  
                __ptext8 036C                  __ptext9 023C          __size_of_strcat 0029  
                _dpowers 0313                  _isdigit 04F6             __size_of_isr 001C  
       ___awmod@dividend 0075                  _residuo 007A                  _sprintf 001E  
                clrloop0 0509     end_of_initialization 001A               ??_division 0049  
           _config_USART 04BE                _RCSTAbits 0018        division@dividendo 0078  
              _TXSTAbits 0098           __end_of___wmul 04BE              _BAUDCTLbits 0187  
         __end_of_strcat 0472      start_initialization 000F              __end_of_isr 04F6  
               ??___wmul 0077                 ??_strcat 0074              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0045              sprintf@flag 0054  
      __size_of_division 0068              sprintf@prec 0055         ___lwdiv@dividend 0075  
               ?___awdiv 0073                 ?___awmod 0073                 ?___lwdiv 0073  
               ?___lwmod 0048                _dividendo 0079                __pstrings 030D  
               ?_isdigit 0070         ___lwdiv@quotient 0046                 ?_sprintf 004D  
         __size_of_setup 0027        interrupt_function 0004           ___wmul@product 0077  
               _IOCBbits 0096                clear_ram0 0508                 _PIR1bits 000C  
            __stringbase 0312        ___wmul@multiplier 0073         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of___lwdiv 0046         __size_of___lwmod 003C  
     __end_of__stringtab 0313              _isdigit$887 0073               sprintf@val 0056  
             strcat@from 0073         __size_of_isdigit 0012          ___lwdiv@divisor 0073  
               _centenas 0025          ___lwdiv@counter 0045                 __ptext10 01B9  
               __ptext11 04F6                 __ptext12 0499                 __ptext13 04DA  
               _division 02A5                 _contador 0026         __size_of_sprintf 00EA  
          __size_of_atoi 0083            __size_of_main 00B1                 _unidades 0023  
               atoi@sign 0049               _INTCONbits 000B                 isdigit@c 0074  
               intlevel1 0000                sprintf@ap 0053                sprintf@sp 0058  
       ___lwmod@dividend 004A                stringcode 030D               _OSCCONbits 008F  
               sprintf@c 0059                 sprintf@f 004D                 strcat@cp 0076  
               strcat@to 0075          ___lwmod@divisor 0048          ___lwmod@counter 004C  
               stringdir 030D                 stringtab 030D            ?_config_USART 0070  
