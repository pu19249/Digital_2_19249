

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 23:25:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297                           
   298 ;; Function _putch is unused but had its address taken
   299  0000                     
   300                           	psect	strings
   301  030F                     __pstrings:
   302  030F                     stringtab:
   303  030F                     __stringtab:
   304  030F                     stringcode:	
   305                           ;	String table - string pointers are 1 byte each
   306                           
   307  030F                     stringdir:
   308  030F  3003               	movlw	high stringdir
   309  0310  008A               	movwf	10
   310  0311  0804               	movf	4,w
   311  0312  0A84               	incf	4,f
   312  0313  0782               	addwf	2,f
   313  0314                     __stringbase:
   314  0314  3400               	retlw	0
   315  0315                     __end_of__stringtab:
   316  0315                     _dpowers:
   317  0315  3401               	retlw	1
   318  0316  3400               	retlw	0
   319  0317  340A               	retlw	10
   320  0318  3400               	retlw	0
   321  0319  3464               	retlw	100
   322  031A  3400               	retlw	0
   323  031B  34E8               	retlw	232
   324  031C  3403               	retlw	3
   325  031D  3410               	retlw	16
   326  031E  3427               	retlw	39
   327  031F                     __end_of_dpowers:
   328  000C                     _PIR1bits	set	12
   329  0018                     _RCSTAbits	set	24
   330  000B                     _INTCONbits	set	11
   331  0007                     _PORTC	set	7
   332  0006                     _PORTB	set	6
   333  0005                     _PORTA	set	5
   334  0008                     _PORTD	set	8
   335  0019                     _TXREG	set	25
   336  001A                     _RCREG	set	26
   337  0064                     _TXIF	set	100
   338  0065                     _RCIF	set	101
   339  0031                     _RB1	set	49
   340  0030                     _RB0	set	48
   341  0058                     _RBIF	set	88
   342  0098                     _TXSTAbits	set	152
   343  009A                     _SPBRGH	set	154
   344  0099                     _SPBRG	set	153
   345  0096                     _IOCBbits	set	150
   346  0095                     _WPUB	set	149
   347  0081                     _OPTION_REGbits	set	129
   348  008F                     _OSCCONbits	set	143
   349  0088                     _TRISD	set	136
   350  0086                     _TRISB	set	134
   351  0085                     _TRISA	set	133
   352  0187                     _BAUDCTLbits	set	391
   353  0189                     _ANSELH	set	393
   354  0188                     _ANSEL	set	392
   355  031F                     STR_5:
   356  031F  3449               	retlw	73	;'I'
   357  0320  346E               	retlw	110	;'n'
   358  0321  3474               	retlw	116	;'t'
   359  0322  3472               	retlw	114	;'r'
   360  0323  346F               	retlw	111	;'o'
   361  0324  3464               	retlw	100	;'d'
   362  0325  3475               	retlw	117	;'u'
   363  0326  347A               	retlw	122	;'z'
   364  0327  3463               	retlw	99	;'c'
   365  0328  3461               	retlw	97	;'a'
   366  0329  3420               	retlw	32	;' '
   367  032A  3475               	retlw	117	;'u'
   368  032B  346E               	retlw	110	;'n'
   369  032C  3420               	retlw	32	;' '
   370  032D  3476               	retlw	118	;'v'
   371  032E  3461               	retlw	97	;'a'
   372  032F  346C               	retlw	108	;'l'
   373  0330  346F               	retlw	111	;'o'
   374  0331  3472               	retlw	114	;'r'
   375  0332  3420               	retlw	32	;' '
   376  0333  346D               	retlw	109	;'m'
   377  0334  3465               	retlw	101	;'e'
   378  0335  346E               	retlw	110	;'n'
   379  0336  346F               	retlw	111	;'o'
   380  0337  3472               	retlw	114	;'r'
   381  0338  3420               	retlw	32	;' '
   382  0339  346F               	retlw	111	;'o'
   383  033A  3420               	retlw	32	;' '
   384  033B  3469               	retlw	105	;'i'
   385  033C  3467               	retlw	103	;'g'
   386  033D  3475               	retlw	117	;'u'
   387  033E  3461               	retlw	97	;'a'
   388  033F  346C               	retlw	108	;'l'
   389  0340  3420               	retlw	32	;' '
   390  0341  3461               	retlw	97	;'a'
   391  0342  3420               	retlw	32	;' '
   392  0343  3435               	retlw	53	;'5'
   393  0344  340D               	retlw	13
   394  0345  3400               	retlw	0
   395  0346                     STR_4:
   396  0346  3449               	retlw	73	;'I'
   397  0347  346E               	retlw	110	;'n'
   398  0348  3474               	retlw	116	;'t'
   399  0349  3472               	retlw	114	;'r'
   400  034A  346F               	retlw	111	;'o'
   401  034B  3464               	retlw	100	;'d'
   402  034C  3475               	retlw	117	;'u'
   403  034D  347A               	retlw	122	;'z'
   404  034E  3463               	retlw	99	;'c'
   405  034F  3461               	retlw	97	;'a'
   406  0350  3420               	retlw	32	;' '
   407  0351  3475               	retlw	117	;'u'
   408  0352  346E               	retlw	110	;'n'
   409  0353  3420               	retlw	32	;' '
   410  0354  3476               	retlw	118	;'v'
   411  0355  3461               	retlw	97	;'a'
   412  0356  346C               	retlw	108	;'l'
   413  0357  346F               	retlw	111	;'o'
   414  0358  3472               	retlw	114	;'r'
   415  0359  3420               	retlw	32	;' '
   416  035A  3476               	retlw	118	;'v'
   417  035B  3461               	retlw	97	;'a'
   418  035C  346C               	retlw	108	;'l'
   419  035D  3469               	retlw	105	;'i'
   420  035E  3464               	retlw	100	;'d'
   421  035F  346F               	retlw	111	;'o'
   422  0360  3420               	retlw	32	;' '
   423  0361  3464               	retlw	100	;'d'
   424  0362  3465               	retlw	101	;'e'
   425  0363  3420               	retlw	32	;' '
   426  0364  3430               	retlw	48	;'0'
   427  0365  3420               	retlw	32	;' '
   428  0366  3461               	retlw	97	;'a'
   429  0367  3420               	retlw	32	;' '
   430  0368  3432               	retlw	50	;'2'
   431  0369  340D               	retlw	13
   432  036A  3400               	retlw	0
   433  036B                     STR_1:
   434  036B  3425               	retlw	37	;'%'
   435  036C  3464               	retlw	100	;'d'
   436  036D  3400               	retlw	0
   437  031F                     
   438                           	psect	cinit
   439  000F                     start_initialization:	
   440                           ; #config settings
   441                           
   442  000F                     __initialization:
   443                           
   444                           ; Clear objects allocated to COMMON
   445  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   446  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   447                           
   448                           ; Clear objects allocated to BANK0
   449  0011  1383               	bcf	3,7	;select IRP bank0
   450  0012  3020               	movlw	low __pbssBANK0
   451  0013  0084               	movwf	4
   452  0014  3045               	movlw	low (__pbssBANK0+37)
   453  0015  120A  118A  250A  120A  118A  	fcall	clear_ram0
   454  001A                     end_of_initialization:	
   455                           ;End of C runtime variable initialization code
   456                           
   457  001A                     __end_of__initialization:
   458  001A  0183               	clrf	3
   459  001B  120A  118A  2908   	ljmp	_main	;jump to C main() function
   460                           
   461                           	psect	bssCOMMON
   462  0079                     __pbssCOMMON:
   463  0079                     _dividendo:
   464  0079                     	ds	1
   465  007A                     _residuo:
   466  007A                     	ds	1
   467                           
   468                           	psect	bssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _u1:
   471  0020                     	ds	1
   472  0021                     _d1:
   473  0021                     	ds	1
   474  0022                     _c1:
   475  0022                     	ds	1
   476  0023                     _unidades:
   477  0023                     	ds	1
   478  0024                     _decenas:
   479  0024                     	ds	1
   480  0025                     _centenas:
   481  0025                     	ds	1
   482  0026                     _contador:
   483  0026                     	ds	1
   484  0027                     _s3:
   485  0027                     	ds	10
   486  0031                     _s2:
   487  0031                     	ds	10
   488  003B                     _s1:
   489  003B                     	ds	10
   490                           
   491                           	psect	clrtext
   492  050A                     clear_ram0:	
   493                           ;	Called with FSR containing the base address, and
   494                           ;	W with the last address+1
   495                           
   496  050A  0064               	clrwdt	;clear the watchdog before getting into this loop
   497  050B                     clrloop0:
   498  050B  0180               	clrf	0	;clear RAM location pointed to by FSR
   499  050C  0A84               	incf	4,f	;increment pointer
   500  050D  0604               	xorwf	4,w	;XOR with final address
   501  050E  1903               	btfsc	3,2	;have we reached the end yet?
   502  050F  3400               	retlw	0	;all done for this memory range, return
   503  0510  0604               	xorwf	4,w	;XOR again to restore value
   504  0511  2D0B               	goto	clrloop0	;do the next byte
   505                           
   506                           	psect	cstackCOMMON
   507  0070                     __pcstackCOMMON:
   508  0070                     ?_isdigit:
   509  0070                     ?_setup:	
   510                           ; 1 bit 
   511                           
   512  0070                     ?_division:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_config_USART:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_isr:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527                           
   528                           ; 1 bytes @ 0x0
   529  0070                     	ds	3
   530  0073                     ??_setup:
   531  0073                     ?_strcat:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     ??_config_USART:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     ??_isdigit:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0073                     ?___wmul:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  0073                     ?___awdiv:	
   544                           ; 2 bytes @ 0x3
   545                           
   546  0073                     ?___awmod:	
   547                           ; 2 bytes @ 0x3
   548                           
   549  0073                     ?___lwdiv:	
   550                           ; 2 bytes @ 0x3
   551                           
   552  0073                     _isdigit$887:	
   553                           ; 2 bytes @ 0x3
   554                           
   555  0073                     strcat@from:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0073                     ___wmul@multiplier:	
   559                           ; 1 bytes @ 0x3
   560                           
   561  0073                     ___awdiv@divisor:	
   562                           ; 2 bytes @ 0x3
   563                           
   564  0073                     ___awmod@divisor:	
   565                           ; 2 bytes @ 0x3
   566                           
   567  0073                     ___lwdiv@divisor:	
   568                           ; 2 bytes @ 0x3
   569                           
   570                           
   571                           ; 2 bytes @ 0x3
   572  0073                     	ds	1
   573  0074                     ??_strcat:
   574  0074                     isdigit@c:	
   575                           ; 1 bytes @ 0x4
   576                           
   577                           
   578                           ; 1 bytes @ 0x4
   579  0074                     	ds	1
   580  0075                     strcat@to:
   581  0075                     ___wmul@multiplicand:	
   582                           ; 1 bytes @ 0x5
   583                           
   584  0075                     ___awdiv@dividend:	
   585                           ; 2 bytes @ 0x5
   586                           
   587  0075                     ___awmod@dividend:	
   588                           ; 2 bytes @ 0x5
   589                           
   590  0075                     ___lwdiv@dividend:	
   591                           ; 2 bytes @ 0x5
   592                           
   593                           
   594                           ; 2 bytes @ 0x5
   595  0075                     	ds	1
   596  0076                     strcat@cp:
   597                           
   598                           ; 1 bytes @ 0x6
   599  0076                     	ds	1
   600  0077                     ??___wmul:
   601  0077                     ??___awdiv:	
   602                           ; 1 bytes @ 0x7
   603                           
   604  0077                     ??___awmod:	
   605                           ; 1 bytes @ 0x7
   606                           
   607  0077                     ??___lwdiv:	
   608                           ; 1 bytes @ 0x7
   609                           
   610  0077                     ___wmul@product:	
   611                           ; 1 bytes @ 0x7
   612                           
   613                           
   614                           ; 2 bytes @ 0x7
   615  0077                     	ds	1
   616  0078                     ??___lwmod:
   617  0078                     division@dividendo:	
   618                           ; 1 bytes @ 0x8
   619                           
   620                           
   621                           ; 1 bytes @ 0x8
   622  0078                     	ds	1
   623                           
   624                           	psect	cstackBANK0
   625  0045                     __pcstackBANK0:
   626  0045                     ?_atoi:
   627  0045                     ___awdiv@counter:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0045                     ___awmod@counter:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0045                     ___lwdiv@counter:	
   634                           ; 1 bytes @ 0x0
   635                           
   636                           
   637                           ; 1 bytes @ 0x0
   638  0045                     	ds	1
   639  0046                     ___awdiv@sign:
   640  0046                     ___awmod@sign:	
   641                           ; 1 bytes @ 0x1
   642                           
   643  0046                     ___lwdiv@quotient:	
   644                           ; 1 bytes @ 0x1
   645                           
   646                           
   647                           ; 2 bytes @ 0x1
   648  0046                     	ds	1
   649  0047                     ??_atoi:
   650  0047                     ___awdiv@quotient:	
   651                           ; 1 bytes @ 0x2
   652                           
   653                           
   654                           ; 2 bytes @ 0x2
   655  0047                     	ds	1
   656  0048                     ?___lwmod:
   657  0048                     ___lwmod@divisor:	
   658                           ; 2 bytes @ 0x3
   659                           
   660                           
   661                           ; 2 bytes @ 0x3
   662  0048                     	ds	1
   663  0049                     ??_division:
   664  0049                     atoi@sign:	
   665                           ; 1 bytes @ 0x4
   666                           
   667                           
   668                           ; 1 bytes @ 0x4
   669  0049                     	ds	1
   670  004A                     ___lwmod@dividend:
   671  004A                     atoi@a:	
   672                           ; 2 bytes @ 0x5
   673                           
   674                           
   675                           ; 2 bytes @ 0x5
   676  004A                     	ds	2
   677  004C                     ___lwmod@counter:
   678  004C                     atoi@s:	
   679                           ; 1 bytes @ 0x7
   680                           
   681                           
   682                           ; 1 bytes @ 0x7
   683  004C                     	ds	1
   684  004D                     ?_sprintf:
   685  004D                     sprintf@f:	
   686                           ; 2 bytes @ 0x8
   687                           
   688                           
   689                           ; 1 bytes @ 0x8
   690  004D                     	ds	3
   691  0050                     ??_sprintf:
   692                           
   693                           ; 1 bytes @ 0xB
   694  0050                     	ds	3
   695  0053                     sprintf@ap:
   696                           
   697                           ; 1 bytes @ 0xE
   698  0053                     	ds	1
   699  0054                     sprintf@flag:
   700                           
   701                           ; 1 bytes @ 0xF
   702  0054                     	ds	1
   703  0055                     sprintf@prec:
   704                           
   705                           ; 1 bytes @ 0x10
   706  0055                     	ds	1
   707  0056                     sprintf@val:
   708                           
   709                           ; 2 bytes @ 0x11
   710  0056                     	ds	2
   711  0058                     sprintf@sp:
   712                           
   713                           ; 1 bytes @ 0x13
   714  0058                     	ds	1
   715  0059                     sprintf@c:
   716                           
   717                           ; 1 bytes @ 0x14
   718  0059                     	ds	1
   719  005A                     ??_main:
   720                           
   721                           ; 1 bytes @ 0x15
   722  005A                     	ds	3
   723  005D                     main@completo:
   724                           
   725                           ; 2 bytes @ 0x18
   726  005D                     	ds	2
   727                           
   728                           	psect	maintext
   729  0108                     __pmaintext:	
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 94 in file "main_05.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  completo        2   24[BANK0 ] int 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : B00/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         0       0       0       0       0
   750 ;;      Locals:         0       2       0       0       0
   751 ;;      Temps:          0       3       0       0       0
   752 ;;      Totals:         0       5       0       0       0
   753 ;;Total ram usage:        5 bytes
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		_atoi
   757 ;;		_division
   758 ;;		_setup
   759 ;;		_sprintf
   760 ;;		_strcat
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _main
   768  0108                     _main:
   769  0108                     l1884:	
   770                           ;incstack = 0
   771                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   772                           
   773                           
   774                           ;main_05.c: 95: 
   775  0108  120A  118A  2474  120A  118A  	fcall	_setup
   776  010D                     l1886:
   777                           
   778                           ;main_05.c: 99:     return;
   779  010D  3062               	movlw	98
   780  010E  1283               	bcf	3,5	;RP0=0, select bank0
   781  010F  1303               	bcf	3,6	;RP1=0, select bank0
   782  0110  061A               	xorwf	26,w	;volatile
   783  0111  1D03               	btfss	3,2
   784  0112  2914               	goto	u1691
   785  0113  2915               	goto	u1690
   786  0114                     u1691:
   787  0114  293D               	goto	l97
   788  0115                     u1690:
   789  0115                     l1888:
   790                           
   791                           ;main_05.c: 100: }
   792  0115  0826               	movf	_contador,w
   793  0116  120A  118A  22A7  120A  118A  	fcall	_division
   794  011B                     l1890:
   795                           
   796                           ;main_05.c: 102: void defensa(void){
   797  011B  1283               	bcf	3,5	;RP0=0, select bank0
   798  011C  1303               	bcf	3,6	;RP1=0, select bank0
   799  011D  0825               	movf	_centenas,w
   800  011E  0099               	movwf	25	;volatile
   801  011F                     l1892:
   802                           
   803                           ;main_05.c: 103:     if(RCREG > 2){
   804  011F  3041               	movlw	65
   805  0120  1283               	bcf	3,5	;RP0=0, select bank0
   806  0121  1303               	bcf	3,6	;RP1=0, select bank0
   807  0122  00DB               	movwf	??_main+1
   808  0123  30ED               	movlw	237
   809  0124  00DA               	movwf	??_main
   810  0125                     u1737:
   811  0125  0BDA               	decfsz	??_main,f
   812  0126  2925               	goto	u1737
   813  0127  0BDB               	decfsz	??_main+1,f
   814  0128  2925               	goto	u1737
   815  0129  292A               	nop2
   816  012A                     l1894:
   817                           
   818                           ;main_05.c: 104:            printf("Introduzca un valor valido de 0 a 2\r");
   819  012A  1283               	bcf	3,5	;RP0=0, select bank0
   820  012B  1303               	bcf	3,6	;RP1=0, select bank0
   821  012C  0824               	movf	_decenas,w
   822  012D  0099               	movwf	25	;volatile
   823  012E                     l1896:
   824                           
   825                           ;main_05.c: 105:        }
   826  012E  3041               	movlw	65
   827  012F  1283               	bcf	3,5	;RP0=0, select bank0
   828  0130  1303               	bcf	3,6	;RP1=0, select bank0
   829  0131  00DB               	movwf	??_main+1
   830  0132  30ED               	movlw	237
   831  0133  00DA               	movwf	??_main
   832  0134                     u1747:
   833  0134  0BDA               	decfsz	??_main,f
   834  0135  2934               	goto	u1747
   835  0136  0BDB               	decfsz	??_main+1,f
   836  0137  2934               	goto	u1747
   837  0138  2939               	nop2
   838  0139                     l1898:
   839                           
   840                           ;main_05.c: 106:        while(RCIF == 0);
   841  0139  1283               	bcf	3,5	;RP0=0, select bank0
   842  013A  1303               	bcf	3,6	;RP1=0, select bank0
   843  013B  0823               	movf	_unidades,w
   844  013C  0099               	movwf	25	;volatile
   845  013D                     l97:
   846  013D  1E8C               	btfss	12,5	;volatile
   847  013E  2940               	goto	u1701
   848  013F  2941               	goto	u1700
   849  0140                     u1701:
   850  0140  293D               	goto	l97
   851  0141                     u1700:
   852  0141                     l1900:
   853                           
   854                           ;main_05.c: 110: void defensa1(void){
   855  0141  081A               	movf	26,w	;volatile
   856  0142  3ED0               	addlw	208
   857  0143  00DA               	movwf	??_main
   858  0144  085A               	movf	??_main,w
   859  0145  00A2               	movwf	_c1
   860  0146                     l100:	
   861                           ;main_05.c: 111:     if(RCREG > 5){
   862                           
   863  0146  1E8C               	btfss	12,5	;volatile
   864  0147  2949               	goto	u1711
   865  0148  294A               	goto	u1710
   866  0149                     u1711:
   867  0149  2946               	goto	l100
   868  014A                     u1710:
   869  014A                     l1902:
   870                           
   871                           ;main_05.c: 112:            printf("Introduzca un valor menor o igual a 5\r");
   872  014A  081A               	movf	26,w	;volatile
   873  014B  3ED0               	addlw	208
   874  014C  00DA               	movwf	??_main
   875  014D  085A               	movf	??_main,w
   876  014E  00A1               	movwf	_d1
   877  014F                     l103:	
   878                           ;main_05.c: 113:        }
   879                           
   880  014F  1E8C               	btfss	12,5	;volatile
   881  0150  2952               	goto	u1721
   882  0151  2953               	goto	u1720
   883  0152                     u1721:
   884  0152  294F               	goto	l103
   885  0153                     u1720:
   886  0153                     l1904:
   887                           
   888                           ;main_05.c: 114:        while(RCIF == 0);
   889  0153  081A               	movf	26,w	;volatile
   890  0154  3ED0               	addlw	208
   891  0155  00DA               	movwf	??_main
   892  0156  085A               	movf	??_main,w
   893  0157  00A0               	movwf	_u1
   894  0158                     l1906:
   895                           
   896                           ;main_05.c: 117: 
   897  0158  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   898  0159  00DA               	movwf	??_main
   899  015A  085A               	movf	??_main,w
   900  015B  00CD               	movwf	sprintf@f
   901  015C  0822               	movf	_c1,w
   902  015D  00DB               	movwf	??_main+1
   903  015E  01DC               	clrf	??_main+2
   904  015F  085B               	movf	??_main+1,w
   905  0160  00CE               	movwf	?_sprintf+1
   906  0161  085C               	movf	??_main+2,w
   907  0162  00CF               	movwf	?_sprintf+2
   908  0163  303B               	movlw	(low (_s1| 0))& (0+255)
   909  0164  120A  118A  201E  120A  118A  	fcall	_sprintf
   910  0169                     l1908:
   911                           
   912                           ;main_05.c: 118: void defensa2(void){
   913  0169  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   914  016A  1283               	bcf	3,5	;RP0=0, select bank0
   915  016B  1303               	bcf	3,6	;RP1=0, select bank0
   916  016C  00DA               	movwf	??_main
   917  016D  085A               	movf	??_main,w
   918  016E  00CD               	movwf	sprintf@f
   919  016F  0821               	movf	_d1,w
   920  0170  00DB               	movwf	??_main+1
   921  0171  01DC               	clrf	??_main+2
   922  0172  085B               	movf	??_main+1,w
   923  0173  00CE               	movwf	?_sprintf+1
   924  0174  085C               	movf	??_main+2,w
   925  0175  00CF               	movwf	?_sprintf+2
   926  0176  3031               	movlw	(low (_s2| 0))& (0+255)
   927  0177  120A  118A  201E  120A  118A  	fcall	_sprintf
   928  017C                     l1910:
   929                           
   930                           ;main_05.c: 119:     if(RCREG > 5){
   931  017C  3057               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   932  017D  1283               	bcf	3,5	;RP0=0, select bank0
   933  017E  1303               	bcf	3,6	;RP1=0, select bank0
   934  017F  00DA               	movwf	??_main
   935  0180  085A               	movf	??_main,w
   936  0181  00CD               	movwf	sprintf@f
   937  0182  0820               	movf	_u1,w
   938  0183  00DB               	movwf	??_main+1
   939  0184  01DC               	clrf	??_main+2
   940  0185  085B               	movf	??_main+1,w
   941  0186  00CE               	movwf	?_sprintf+1
   942  0187  085C               	movf	??_main+2,w
   943  0188  00CF               	movwf	?_sprintf+2
   944  0189  3027               	movlw	(low (_s3| 0))& (0+255)
   945  018A  120A  118A  201E  120A  118A  	fcall	_sprintf
   946  018F                     l1912:
   947                           
   948                           ;main_05.c: 120:            printf("Introduzca un valor menor o igual a 5\r");
   949  018F  3031               	movlw	(low (_s2| 0))& (0+255)
   950  0190  1283               	bcf	3,5	;RP0=0, select bank0
   951  0191  1303               	bcf	3,6	;RP1=0, select bank0
   952  0192  00DA               	movwf	??_main
   953  0193  085A               	movf	??_main,w
   954  0194  00F3               	movwf	strcat@from
   955  0195  303B               	movlw	(low (_s1| 0))& (0+255)
   956  0196  120A  118A  244B  120A  118A  	fcall	_strcat
   957  019B                     l1914:
   958                           
   959                           ;main_05.c: 121:        }
   960  019B  3027               	movlw	(low (_s3| 0))& (0+255)
   961  019C  1283               	bcf	3,5	;RP0=0, select bank0
   962  019D  1303               	bcf	3,6	;RP1=0, select bank0
   963  019E  00DA               	movwf	??_main
   964  019F  085A               	movf	??_main,w
   965  01A0  00F3               	movwf	strcat@from
   966  01A1  303B               	movlw	(low (_s1| 0))& (0+255)
   967  01A2  120A  118A  244B  120A  118A  	fcall	_strcat
   968  01A7                     l1916:
   969                           
   970                           ;main_05.c: 122:        while(RCIF == 0);
   971  01A7  303B               	movlw	(low (_s1| 0))& (0+255)
   972  01A8  120A  118A  21BB  120A  118A  	fcall	_atoi
   973  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   974  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   975  01AF  0846               	movf	?_atoi+1,w
   976  01B0  00DE               	movwf	main@completo+1
   977  01B1  0845               	movf	?_atoi,w
   978  01B2  00DD               	movwf	main@completo
   979  01B3                     l1918:
   980                           
   981                           ;main_05.c: 123:        u1 = RCREG -48;
   982  01B3  085D               	movf	main@completo,w
   983  01B4  0088               	movwf	8	;volatile
   984  01B5                     l1920:
   985                           
   986                           ;main_05.c: 124: }
   987  01B5  085D               	movf	main@completo,w
   988  01B6  0088               	movwf	8	;volatile
   989  01B7  290D               	goto	l1886
   990  01B8  120A  118A  280C   	ljmp	start
   991  01BB                     __end_of_main:
   992                           
   993                           	psect	text1
   994  044B                     __ptext1:	
   995 ;; *************** function _strcat *****************
   996 ;; Defined at:
   997 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  to              1    wreg     PTR unsigned char 
  1000 ;;		 -> s1(10), 
  1001 ;;  from            1    3[COMMON] PTR const unsigned char 
  1002 ;;		 -> s3(10), s2(10), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  to              1    5[COMMON] PTR unsigned char 
  1005 ;;		 -> s1(10), 
  1006 ;;  cp              1    6[COMMON] PTR unsigned char 
  1007 ;;		 -> s1(10), 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      PTR unsigned char 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         1       0       0       0       0
  1018 ;;      Locals:         2       0       0       0       0
  1019 ;;      Temps:          1       0       0       0       0
  1020 ;;      Totals:         4       0       0       0       0
  1021 ;;Total ram usage:        4 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		Nothing
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _strcat
  1033  044B                     _strcat:
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1037                           ;strcat@to stored from wreg
  1038  044B  00F5               	movwf	strcat@to
  1039  044C                     l1550:
  1040  044C  0875               	movf	strcat@to,w
  1041  044D  00F4               	movwf	??_strcat
  1042  044E  0874               	movf	??_strcat,w
  1043  044F  00F6               	movwf	strcat@cp
  1044  0450  2C55               	goto	l1554
  1045  0451                     l1552:
  1046  0451  3001               	movlw	1
  1047  0452  00F4               	movwf	??_strcat
  1048  0453  0874               	movf	??_strcat,w
  1049  0454  07F6               	addwf	strcat@cp,f
  1050  0455                     l1554:
  1051  0455  0876               	movf	strcat@cp,w
  1052  0456  0084               	movwf	4
  1053  0457  1383               	bcf	3,7	;select IRP bank0
  1054  0458  0800               	movf	0,w
  1055  0459  1D03               	btfss	3,2
  1056  045A  2C5C               	goto	u1131
  1057  045B  2C5D               	goto	u1130
  1058  045C                     u1131:
  1059  045C  2C51               	goto	l1552
  1060  045D                     u1130:
  1061  045D  2C66               	goto	l1558
  1062  045E                     l1556:
  1063  045E  3001               	movlw	1
  1064  045F  00F4               	movwf	??_strcat
  1065  0460  0874               	movf	??_strcat,w
  1066  0461  07F6               	addwf	strcat@cp,f
  1067  0462  3001               	movlw	1
  1068  0463  00F4               	movwf	??_strcat
  1069  0464  0874               	movf	??_strcat,w
  1070  0465  07F3               	addwf	strcat@from,f
  1071  0466                     l1558:
  1072  0466  0873               	movf	strcat@from,w
  1073  0467  0084               	movwf	4
  1074  0468  0800               	movf	0,w
  1075  0469  00F4               	movwf	??_strcat
  1076  046A  0876               	movf	strcat@cp,w
  1077  046B  0084               	movwf	4
  1078  046C  0874               	movf	??_strcat,w
  1079  046D  0080               	movwf	0
  1080  046E  0800               	movf	0,w
  1081  046F  1D03               	btfss	3,2
  1082  0470  2C72               	goto	u1141
  1083  0471  2C73               	goto	u1140
  1084  0472                     u1141:
  1085  0472  2C5E               	goto	l1556
  1086  0473                     u1140:
  1087  0473                     l758:
  1088  0473  0008               	return
  1089  0474                     __end_of_strcat:
  1090                           
  1091                           	psect	text2
  1092  001E                     __ptext2:	
  1093 ;; *************** function _sprintf *****************
  1094 ;; Defined at:
  1095 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  sp              1    wreg     PTR unsigned char 
  1098 ;;		 -> s3(10), s2(10), s1(10), 
  1099 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1100 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1103 ;;		 -> s3(10), s2(10), s1(10), 
  1104 ;;  tmpval          4    0        struct .
  1105 ;;  val             2   17[BANK0 ] unsigned int 
  1106 ;;  cp              2    0        PTR const unsigned char 
  1107 ;;  len             2    0        unsigned int 
  1108 ;;  c               1   20[BANK0 ] unsigned char 
  1109 ;;  prec            1   16[BANK0 ] char 
  1110 ;;  flag            1   15[BANK0 ] unsigned char 
  1111 ;;  ap              1   14[BANK0 ] PTR void [1]
  1112 ;;		 -> ?_sprintf(2), 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2    8[BANK0 ] int 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       3       0       0       0
  1123 ;;      Locals:         0       7       0       0       0
  1124 ;;      Temps:          0       3       0       0       0
  1125 ;;      Totals:         0      13       0       0       0
  1126 ;;Total ram usage:       13 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		___lwdiv
  1131 ;;		___lwmod
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _sprintf
  1139  001E                     _sprintf:
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           ;sprintf@sp stored from wreg
  1144  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1145  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0020  00D8               	movwf	sprintf@sp
  1147  0021                     l1788:
  1148                           
  1149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1150  0021  304E               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1151  0022  00D0               	movwf	??_sprintf
  1152  0023  0850               	movf	??_sprintf,w
  1153  0024  00D3               	movwf	sprintf@ap
  1154                           
  1155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1156  0025  28F1               	goto	l1840
  1157  0026                     l1790:
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1160  0026  3025               	movlw	37
  1161  0027  0659               	xorwf	sprintf@c,w
  1162  0028  1903               	btfsc	3,2
  1163  0029  282B               	goto	u1561
  1164  002A  282C               	goto	u1560
  1165  002B                     u1561:
  1166  002B  2838               	goto	l1796
  1167  002C                     u1560:
  1168  002C                     l1792:
  1169                           
  1170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1171  002C  0859               	movf	sprintf@c,w
  1172  002D  00D0               	movwf	??_sprintf
  1173  002E  0858               	movf	sprintf@sp,w
  1174  002F  0084               	movwf	4
  1175  0030  0850               	movf	??_sprintf,w
  1176  0031  1383               	bcf	3,7	;select IRP bank0
  1177  0032  0080               	movwf	0
  1178  0033                     l1794:
  1179  0033  3001               	movlw	1
  1180  0034  00D0               	movwf	??_sprintf
  1181  0035  0850               	movf	??_sprintf,w
  1182  0036  07D8               	addwf	sprintf@sp,f
  1183                           
  1184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1185  0037  28F1               	goto	l1840
  1186  0038                     l1796:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1189  0038  01D4               	clrf	sprintf@flag
  1190  0039                     l1800:	
  1191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1192                           
  1193  0039  3001               	movlw	1
  1194  003A  07CD               	addwf	sprintf@f,f
  1195  003B  30FF               	movlw	-1
  1196  003C  074D               	addwf	sprintf@f,w
  1197  003D  0084               	movwf	4
  1198  003E  120A  118A  230F  120A  118A  	fcall	stringdir
  1199  0043  00D9               	movwf	sprintf@c
  1200  0044  00D0               	movwf	??_sprintf
  1201  0045  01D1               	clrf	??_sprintf+1
  1202                           
  1203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 1, Range of values is 0 to 0
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte            4     3 (average)
  1209                           ; direct_byte           11     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  0046  0851               	movf	??_sprintf+1,w
  1213  0047  3A00               	xorlw	0	; case 0
  1214  0048  1903               	skipnz
  1215  0049  284B               	goto	l1942
  1216  004A  28F1               	goto	l1840
  1217  004B                     l1942:
  1218                           
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 3, Range of values is 0 to 105
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           10     6 (average)
  1224                           ; jumptable            260     6 (fixed)
  1225                           ;	Chosen strategy is simple_byte
  1226  004B  0850               	movf	??_sprintf,w
  1227  004C  3A00               	xorlw	0	; case 0
  1228  004D  1903               	skipnz
  1229  004E  2903               	goto	l1842
  1230  004F  3A64               	xorlw	100	; case 100
  1231  0050  1903               	skipnz
  1232  0051  2856               	goto	l1802
  1233  0052  3A0D               	xorlw	13	; case 105
  1234  0053  1903               	skipnz
  1235  0054  2856               	goto	l1802
  1236  0055  28F1               	goto	l1840
  1237  0056                     l1802:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1240  0056  0853               	movf	sprintf@ap,w
  1241  0057  0084               	movwf	4
  1242  0058  1383               	bcf	3,7	;select IRP bank0
  1243  0059  0800               	movf	0,w
  1244  005A  00D6               	movwf	sprintf@val
  1245  005B  0A84               	incf	4,f
  1246  005C  0800               	movf	0,w
  1247  005D  00D7               	movwf	sprintf@val+1
  1248  005E                     l1804:
  1249  005E  3002               	movlw	2
  1250  005F  00D0               	movwf	??_sprintf
  1251  0060  0850               	movf	??_sprintf,w
  1252  0061  07D3               	addwf	sprintf@ap,f
  1253  0062                     l1806:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1256  0062  1FD7               	btfss	sprintf@val+1,7
  1257  0063  2865               	goto	u1571
  1258  0064  2866               	goto	u1570
  1259  0065                     u1571:
  1260  0065  286F               	goto	l1812
  1261  0066                     u1570:
  1262  0066                     l1808:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1265  0066  3003               	movlw	3
  1266  0067  00D0               	movwf	??_sprintf
  1267  0068  0850               	movf	??_sprintf,w
  1268  0069  04D4               	iorwf	sprintf@flag,f
  1269  006A                     l1810:
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1272  006A  09D6               	comf	sprintf@val,f
  1273  006B  09D7               	comf	sprintf@val+1,f
  1274  006C  0AD6               	incf	sprintf@val,f
  1275  006D  1903               	skipnz
  1276  006E  0AD7               	incf	sprintf@val+1,f
  1277  006F                     l1812:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1280  006F  01D9               	clrf	sprintf@c
  1281  0070  0AD9               	incf	sprintf@c,f
  1282  0071                     l1818:
  1283                           
  1284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1285  0071  0859               	movf	sprintf@c,w
  1286  0072  00D0               	movwf	??_sprintf
  1287  0073  0750               	addwf	??_sprintf,w
  1288  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1289  0075  0084               	movwf	4
  1290  0076  120A  118A  230F  120A  118A  	fcall	stringdir
  1291  007B  00D1               	movwf	??_sprintf+1
  1292  007C  120A  118A  230F  120A  118A  	fcall	stringdir
  1293  0081  00D2               	movwf	??_sprintf+2
  1294  0082  0852               	movf	??_sprintf+2,w
  1295  0083  0257               	subwf	sprintf@val+1,w
  1296  0084  1D03               	skipz
  1297  0085  2888               	goto	u1585
  1298  0086  0851               	movf	??_sprintf+1,w
  1299  0087  0256               	subwf	sprintf@val,w
  1300  0088                     u1585:
  1301  0088  1803               	skipnc
  1302  0089  288B               	goto	u1581
  1303  008A  288C               	goto	u1580
  1304  008B                     u1581:
  1305  008B  288D               	goto	l1822
  1306  008C                     u1580:
  1307  008C  2897               	goto	l1824
  1308  008D                     l1822:
  1309  008D  3001               	movlw	1
  1310  008E  00D0               	movwf	??_sprintf
  1311  008F  0850               	movf	??_sprintf,w
  1312  0090  07D9               	addwf	sprintf@c,f
  1313  0091  3005               	movlw	5
  1314  0092  0659               	xorwf	sprintf@c,w
  1315  0093  1D03               	btfss	3,2
  1316  0094  2896               	goto	u1591
  1317  0095  2897               	goto	u1590
  1318  0096                     u1591:
  1319  0096  2871               	goto	l1818
  1320  0097                     u1590:
  1321  0097                     l1824:
  1322                           
  1323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1324  0097  0854               	movf	sprintf@flag,w
  1325  0098  3903               	andlw	3
  1326  0099  1903               	btfsc	3,2
  1327  009A  289C               	goto	u1601
  1328  009B  289D               	goto	u1600
  1329  009C                     u1601:
  1330  009C  28A8               	goto	l1830
  1331  009D                     u1600:
  1332  009D                     l1826:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1335  009D  302D               	movlw	45
  1336  009E  00D0               	movwf	??_sprintf
  1337  009F  0858               	movf	sprintf@sp,w
  1338  00A0  0084               	movwf	4
  1339  00A1  0850               	movf	??_sprintf,w
  1340  00A2  1383               	bcf	3,7	;select IRP bank0
  1341  00A3  0080               	movwf	0
  1342  00A4                     l1828:
  1343  00A4  3001               	movlw	1
  1344  00A5  00D0               	movwf	??_sprintf
  1345  00A6  0850               	movf	??_sprintf,w
  1346  00A7  07D8               	addwf	sprintf@sp,f
  1347  00A8                     l1830:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1350  00A8  0859               	movf	sprintf@c,w
  1351  00A9  00D0               	movwf	??_sprintf
  1352  00AA  0850               	movf	??_sprintf,w
  1353  00AB  00D5               	movwf	sprintf@prec
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1356  00AC  28E8               	goto	l1838
  1357  00AD                     l1832:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1360  00AD  300A               	movlw	10
  1361  00AE  00C8               	movwf	___lwmod@divisor
  1362  00AF  3000               	movlw	0
  1363  00B0  00C9               	movwf	___lwmod@divisor+1
  1364  00B1  0855               	movf	sprintf@prec,w
  1365  00B2  00D0               	movwf	??_sprintf
  1366  00B3  0750               	addwf	??_sprintf,w
  1367  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1368  00B5  0084               	movwf	4
  1369  00B6  120A  118A  230F  120A  118A  	fcall	stringdir
  1370  00BB  00F3               	movwf	___lwdiv@divisor
  1371  00BC  120A  118A  230F  120A  118A  	fcall	stringdir
  1372  00C1  00F4               	movwf	___lwdiv@divisor+1
  1373  00C2  0857               	movf	sprintf@val+1,w
  1374  00C3  00F6               	movwf	___lwdiv@dividend+1
  1375  00C4  0856               	movf	sprintf@val,w
  1376  00C5  00F5               	movwf	___lwdiv@dividend
  1377  00C6  120A  118A  23C9  120A  118A  	fcall	___lwdiv
  1378  00CB  0874               	movf	?___lwdiv+1,w
  1379  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1380  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1381  00CE  00CB               	movwf	___lwmod@dividend+1
  1382  00CF  0873               	movf	?___lwdiv,w
  1383  00D0  00CA               	movwf	___lwmod@dividend
  1384  00D1  120A  118A  240F  120A  118A  	fcall	___lwmod
  1385  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1386  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1387  00D8  0848               	movf	?___lwmod,w
  1388  00D9  3E30               	addlw	48
  1389  00DA  00D1               	movwf	??_sprintf+1
  1390  00DB  0851               	movf	??_sprintf+1,w
  1391  00DC  00D9               	movwf	sprintf@c
  1392  00DD                     l1834:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1395  00DD  0859               	movf	sprintf@c,w
  1396  00DE  00D0               	movwf	??_sprintf
  1397  00DF  0858               	movf	sprintf@sp,w
  1398  00E0  0084               	movwf	4
  1399  00E1  0850               	movf	??_sprintf,w
  1400  00E2  1383               	bcf	3,7	;select IRP bank0
  1401  00E3  0080               	movwf	0
  1402  00E4                     l1836:
  1403  00E4  3001               	movlw	1
  1404  00E5  00D0               	movwf	??_sprintf
  1405  00E6  0850               	movf	??_sprintf,w
  1406  00E7  07D8               	addwf	sprintf@sp,f
  1407  00E8                     l1838:
  1408                           
  1409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1410  00E8  30FF               	movlw	255
  1411  00E9  00D0               	movwf	??_sprintf
  1412  00EA  0850               	movf	??_sprintf,w
  1413  00EB  07D5               	addwf	sprintf@prec,f
  1414  00EC  0A55               	incf	sprintf@prec,w
  1415  00ED  1D03               	btfss	3,2
  1416  00EE  28F0               	goto	u1611
  1417  00EF  28F1               	goto	u1610
  1418  00F0                     u1611:
  1419  00F0  28AD               	goto	l1832
  1420  00F1                     u1610:
  1421  00F1                     l1840:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1424  00F1  3001               	movlw	1
  1425  00F2  07CD               	addwf	sprintf@f,f
  1426  00F3  30FF               	movlw	-1
  1427  00F4  074D               	addwf	sprintf@f,w
  1428  00F5  0084               	movwf	4
  1429  00F6  120A  118A  230F  120A  118A  	fcall	stringdir
  1430  00FB  00D0               	movwf	??_sprintf
  1431  00FC  0850               	movf	??_sprintf,w
  1432  00FD  00D9               	movwf	sprintf@c
  1433  00FE  0859               	movf	sprintf@c,w
  1434  00FF  1D03               	btfss	3,2
  1435  0100  2902               	goto	u1621
  1436  0101  2903               	goto	u1620
  1437  0102                     u1621:
  1438  0102  2826               	goto	l1790
  1439  0103                     u1620:
  1440  0103                     l1842:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1443  0103  0858               	movf	sprintf@sp,w
  1444  0104  0084               	movwf	4
  1445  0105  1383               	bcf	3,7	;select IRP bank0
  1446  0106  0180               	clrf	0
  1447  0107                     l268:
  1448  0107  0008               	return
  1449  0108                     __end_of_sprintf:
  1450                           
  1451                           	psect	text3
  1452  040F                     __ptext3:	
  1453 ;; *************** function ___lwmod *****************
  1454 ;; Defined at:
  1455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  divisor         2    3[BANK0 ] unsigned int 
  1458 ;;  dividend        2    5[BANK0 ] unsigned int 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  counter         1    7[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    3[BANK0 ] unsigned int 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         0       4       0       0       0
  1471 ;;      Locals:         0       1       0       0       0
  1472 ;;      Temps:          1       0       0       0       0
  1473 ;;      Totals:         1       5       0       0       0
  1474 ;;Total ram usage:        6 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_sprintf
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function ___lwmod
  1486  040F                     ___lwmod:
  1487  040F                     l1756:	
  1488                           ;incstack = 0
  1489                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1490                           
  1491  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0411  0848               	movf	___lwmod@divisor,w
  1494  0412  0449               	iorwf	___lwmod@divisor+1,w
  1495  0413  1903               	btfsc	3,2
  1496  0414  2C16               	goto	u1501
  1497  0415  2C17               	goto	u1500
  1498  0416                     u1501:
  1499  0416  2C46               	goto	l1774
  1500  0417                     u1500:
  1501  0417                     l1758:
  1502  0417  01CC               	clrf	___lwmod@counter
  1503  0418  0ACC               	incf	___lwmod@counter,f
  1504  0419  2C25               	goto	l1764
  1505  041A                     l1760:
  1506  041A  3001               	movlw	1
  1507  041B                     u1515:
  1508  041B  1003               	clrc
  1509  041C  0DC8               	rlf	___lwmod@divisor,f
  1510  041D  0DC9               	rlf	___lwmod@divisor+1,f
  1511  041E  3EFF               	addlw	-1
  1512  041F  1D03               	skipz
  1513  0420  2C1B               	goto	u1515
  1514  0421                     l1762:
  1515  0421  3001               	movlw	1
  1516  0422  00F8               	movwf	??___lwmod
  1517  0423  0878               	movf	??___lwmod,w
  1518  0424  07CC               	addwf	___lwmod@counter,f
  1519  0425                     l1764:
  1520  0425  1FC9               	btfss	___lwmod@divisor+1,7
  1521  0426  2C28               	goto	u1521
  1522  0427  2C29               	goto	u1520
  1523  0428                     u1521:
  1524  0428  2C1A               	goto	l1760
  1525  0429                     u1520:
  1526  0429                     l1766:
  1527  0429  0849               	movf	___lwmod@divisor+1,w
  1528  042A  024B               	subwf	___lwmod@dividend+1,w
  1529  042B  1D03               	skipz
  1530  042C  2C2F               	goto	u1535
  1531  042D  0848               	movf	___lwmod@divisor,w
  1532  042E  024A               	subwf	___lwmod@dividend,w
  1533  042F                     u1535:
  1534  042F  1C03               	skipc
  1535  0430  2C32               	goto	u1531
  1536  0431  2C33               	goto	u1530
  1537  0432                     u1531:
  1538  0432  2C39               	goto	l1770
  1539  0433                     u1530:
  1540  0433                     l1768:
  1541  0433  0848               	movf	___lwmod@divisor,w
  1542  0434  02CA               	subwf	___lwmod@dividend,f
  1543  0435  0849               	movf	___lwmod@divisor+1,w
  1544  0436  1C03               	skipc
  1545  0437  03CB               	decf	___lwmod@dividend+1,f
  1546  0438  02CB               	subwf	___lwmod@dividend+1,f
  1547  0439                     l1770:
  1548  0439  3001               	movlw	1
  1549  043A                     u1545:
  1550  043A  1003               	clrc
  1551  043B  0CC9               	rrf	___lwmod@divisor+1,f
  1552  043C  0CC8               	rrf	___lwmod@divisor,f
  1553  043D  3EFF               	addlw	-1
  1554  043E  1D03               	skipz
  1555  043F  2C3A               	goto	u1545
  1556  0440                     l1772:
  1557  0440  3001               	movlw	1
  1558  0441  02CC               	subwf	___lwmod@counter,f
  1559  0442  1D03               	btfss	3,2
  1560  0443  2C45               	goto	u1551
  1561  0444  2C46               	goto	u1550
  1562  0445                     u1551:
  1563  0445  2C29               	goto	l1766
  1564  0446                     u1550:
  1565  0446                     l1774:
  1566  0446  084B               	movf	___lwmod@dividend+1,w
  1567  0447  00C9               	movwf	?___lwmod+1
  1568  0448  084A               	movf	___lwmod@dividend,w
  1569  0449  00C8               	movwf	?___lwmod
  1570  044A                     l554:
  1571  044A  0008               	return
  1572  044B                     __end_of___lwmod:
  1573                           
  1574                           	psect	text4
  1575  03C9                     __ptext4:	
  1576 ;; *************** function ___lwdiv *****************
  1577 ;; Defined at:
  1578 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  divisor         2    3[COMMON] unsigned int 
  1581 ;;  dividend        2    5[COMMON] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  quotient        2    1[BANK0 ] unsigned int 
  1584 ;;  counter         1    0[BANK0 ] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    3[COMMON] unsigned int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         4       0       0       0       0
  1595 ;;      Locals:         0       3       0       0       0
  1596 ;;      Temps:          1       0       0       0       0
  1597 ;;      Totals:         5       3       0       0       0
  1598 ;;Total ram usage:        8 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_sprintf
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function ___lwdiv
  1610  03C9                     ___lwdiv:
  1611  03C9                     l1730:	
  1612                           ;incstack = 0
  1613                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1614                           
  1615  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1616  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1617  03CB  01C6               	clrf	___lwdiv@quotient
  1618  03CC  01C7               	clrf	___lwdiv@quotient+1
  1619  03CD                     l1732:
  1620  03CD  0873               	movf	___lwdiv@divisor,w
  1621  03CE  0474               	iorwf	___lwdiv@divisor+1,w
  1622  03CF  1903               	btfsc	3,2
  1623  03D0  2BD2               	goto	u1431
  1624  03D1  2BD3               	goto	u1430
  1625  03D2                     u1431:
  1626  03D2  2C0A               	goto	l1752
  1627  03D3                     u1430:
  1628  03D3                     l1734:
  1629  03D3  01C5               	clrf	___lwdiv@counter
  1630  03D4  0AC5               	incf	___lwdiv@counter,f
  1631  03D5  2BE1               	goto	l1740
  1632  03D6                     l1736:
  1633  03D6  3001               	movlw	1
  1634  03D7                     u1445:
  1635  03D7  1003               	clrc
  1636  03D8  0DF3               	rlf	___lwdiv@divisor,f
  1637  03D9  0DF4               	rlf	___lwdiv@divisor+1,f
  1638  03DA  3EFF               	addlw	-1
  1639  03DB  1D03               	skipz
  1640  03DC  2BD7               	goto	u1445
  1641  03DD                     l1738:
  1642  03DD  3001               	movlw	1
  1643  03DE  00F7               	movwf	??___lwdiv
  1644  03DF  0877               	movf	??___lwdiv,w
  1645  03E0  07C5               	addwf	___lwdiv@counter,f
  1646  03E1                     l1740:
  1647  03E1  1FF4               	btfss	___lwdiv@divisor+1,7
  1648  03E2  2BE4               	goto	u1451
  1649  03E3  2BE5               	goto	u1450
  1650  03E4                     u1451:
  1651  03E4  2BD6               	goto	l1736
  1652  03E5                     u1450:
  1653  03E5                     l1742:
  1654  03E5  3001               	movlw	1
  1655  03E6                     u1465:
  1656  03E6  1003               	clrc
  1657  03E7  0DC6               	rlf	___lwdiv@quotient,f
  1658  03E8  0DC7               	rlf	___lwdiv@quotient+1,f
  1659  03E9  3EFF               	addlw	-1
  1660  03EA  1D03               	skipz
  1661  03EB  2BE6               	goto	u1465
  1662  03EC  0874               	movf	___lwdiv@divisor+1,w
  1663  03ED  0276               	subwf	___lwdiv@dividend+1,w
  1664  03EE  1D03               	skipz
  1665  03EF  2BF2               	goto	u1475
  1666  03F0  0873               	movf	___lwdiv@divisor,w
  1667  03F1  0275               	subwf	___lwdiv@dividend,w
  1668  03F2                     u1475:
  1669  03F2  1C03               	skipc
  1670  03F3  2BF5               	goto	u1471
  1671  03F4  2BF6               	goto	u1470
  1672  03F5                     u1471:
  1673  03F5  2BFD               	goto	l1748
  1674  03F6                     u1470:
  1675  03F6                     l1744:
  1676  03F6  0873               	movf	___lwdiv@divisor,w
  1677  03F7  02F5               	subwf	___lwdiv@dividend,f
  1678  03F8  0874               	movf	___lwdiv@divisor+1,w
  1679  03F9  1C03               	skipc
  1680  03FA  03F6               	decf	___lwdiv@dividend+1,f
  1681  03FB  02F6               	subwf	___lwdiv@dividend+1,f
  1682  03FC                     l1746:
  1683  03FC  1446               	bsf	___lwdiv@quotient,0
  1684  03FD                     l1748:
  1685  03FD  3001               	movlw	1
  1686  03FE                     u1485:
  1687  03FE  1003               	clrc
  1688  03FF  0CF4               	rrf	___lwdiv@divisor+1,f
  1689  0400  0CF3               	rrf	___lwdiv@divisor,f
  1690  0401  3EFF               	addlw	-1
  1691  0402  1D03               	skipz
  1692  0403  2BFE               	goto	u1485
  1693  0404                     l1750:
  1694  0404  3001               	movlw	1
  1695  0405  02C5               	subwf	___lwdiv@counter,f
  1696  0406  1D03               	btfss	3,2
  1697  0407  2C09               	goto	u1491
  1698  0408  2C0A               	goto	u1490
  1699  0409                     u1491:
  1700  0409  2BE5               	goto	l1742
  1701  040A                     u1490:
  1702  040A                     l1752:
  1703  040A  0847               	movf	___lwdiv@quotient+1,w
  1704  040B  00F4               	movwf	?___lwdiv+1
  1705  040C  0846               	movf	___lwdiv@quotient,w
  1706  040D  00F3               	movwf	?___lwdiv
  1707  040E                     l544:
  1708  040E  0008               	return
  1709  040F                     __end_of___lwdiv:
  1710                           
  1711                           	psect	text5
  1712  0474                     __ptext5:	
  1713 ;; *************** function _setup *****************
  1714 ;; Defined at:
  1715 ;;		line 180 in file "main_05.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		_config_USART
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _setup
  1745  0474                     _setup:
  1746  0474                     l1438:	
  1747                           ;incstack = 0
  1748                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1749                           
  1750  0474  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0475  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0476  0185               	clrf	5	;volatile
  1753  0477  1683               	bsf	3,5	;RP0=1, select bank3
  1754  0478  1703               	bsf	3,6	;RP1=1, select bank3
  1755  0479  0188               	clrf	8	;volatile
  1756  047A  0189               	clrf	9	;volatile
  1757  047B                     l1440:
  1758  047B  3003               	movlw	3
  1759  047C  1683               	bsf	3,5	;RP0=1, select bank1
  1760  047D  1303               	bcf	3,6	;RP1=0, select bank1
  1761  047E  0086               	movwf	6	;volatile
  1762  047F                     l1442:
  1763  047F  0188               	clrf	8	;volatile
  1764  0480                     l1444:
  1765  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0482  0185               	clrf	5	;volatile
  1768  0483                     l1446:
  1769  0483  0186               	clrf	6	;volatile
  1770  0484                     l1448:
  1771  0484  0187               	clrf	7	;volatile
  1772  0485                     l1450:
  1773  0485  0188               	clrf	8	;volatile
  1774  0486                     l1452:
  1775  0486  1683               	bsf	3,5	;RP0=1, select bank1
  1776  0487  1303               	bcf	3,6	;RP1=0, select bank1
  1777  0488  120F               	bcf	15,4	;volatile
  1778  0489                     l1454:
  1779  0489  168F               	bsf	15,5	;volatile
  1780  048A                     l1456:
  1781  048A  170F               	bsf	15,6	;volatile
  1782  048B                     l1458:
  1783  048B  140F               	bsf	15,0	;volatile
  1784  048C                     l1460:
  1785  048C  1381               	bcf	1,7	;volatile
  1786  048D  3003               	movlw	3
  1787  048E  0095               	movwf	21	;volatile
  1788  048F                     l1462:
  1789  048F  1416               	bsf	22,0	;volatile
  1790  0490                     l1464:
  1791  0490  1496               	bsf	22,1	;volatile
  1792  0491                     l1466:
  1793  0491  158B               	bsf	11,3	;volatile
  1794  0492                     l1468:
  1795  0492  100B               	bcf	11,0	;volatile
  1796  0493                     l1470:
  1797  0493  178B               	bsf	11,7	;volatile
  1798  0494                     l1472:
  1799  0494  170B               	bsf	11,6	;volatile
  1800  0495                     l1474:
  1801  0495  120A  118A  24C0  120A  118A  	fcall	_config_USART
  1802  049A                     l141:
  1803  049A  0008               	return
  1804  049B                     __end_of_setup:
  1805                           
  1806                           	psect	text6
  1807  04C0                     __ptext6:	
  1808 ;; *************** function _config_USART *****************
  1809 ;; Defined at:
  1810 ;;		line 11 in file "config_USART_1.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_setup
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _config_USART
  1840  04C0                     _config_USART:
  1841  04C0                     l1252:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _config_USART: [wreg+status,2]
  1844                           
  1845                           
  1846                           ;config_USART_1.c: 13:     SPBRG = 103;
  1847  04C0  3067               	movlw	103
  1848  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1849  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1850  04C3  0099               	movwf	25	;volatile
  1851  04C4                     l1254:
  1852                           
  1853                           ;config_USART_1.c: 14:     SPBRGH = 0;
  1854  04C4  019A               	clrf	26	;volatile
  1855  04C5                     l1256:
  1856                           
  1857                           ;config_USART_1.c: 15:     BAUDCTLbits.BRG16 = 1;
  1858  04C5  1683               	bsf	3,5	;RP0=1, select bank3
  1859  04C6  1703               	bsf	3,6	;RP1=1, select bank3
  1860  04C7  1587               	bsf	7,3	;volatile
  1861  04C8                     l1258:
  1862                           
  1863                           ;config_USART_1.c: 16:     TXSTAbits.BRGH = 1;
  1864  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  1865  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  1866  04CA  1518               	bsf	24,2	;volatile
  1867  04CB                     l1260:
  1868                           
  1869                           ;config_USART_1.c: 18:     TXSTAbits.SYNC = 0;
  1870  04CB  1218               	bcf	24,4	;volatile
  1871  04CC                     l1262:
  1872                           
  1873                           ;config_USART_1.c: 20:     RCSTAbits.SPEN = 1;
  1874  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1875  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1876  04CE  1798               	bsf	24,7	;volatile
  1877  04CF                     l1264:
  1878                           
  1879                           ;config_USART_1.c: 21:     RCSTAbits.CREN = 1;
  1880  04CF  1618               	bsf	24,4	;volatile
  1881  04D0                     l1266:
  1882                           
  1883                           ;config_USART_1.c: 23:     TXSTAbits.TX9 = 0;
  1884  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1885  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1886  04D2  1318               	bcf	24,6	;volatile
  1887  04D3                     l1268:
  1888                           
  1889                           ;config_USART_1.c: 24:     TXSTAbits.TXEN = 1;
  1890  04D3  1698               	bsf	24,5	;volatile
  1891  04D4                     l1270:
  1892                           
  1893                           ;config_USART_1.c: 25:     RCSTAbits.RX9 = 0;
  1894  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1895  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1896  04D6  1318               	bcf	24,6	;volatile
  1897  04D7                     l1272:
  1898                           
  1899                           ;config_USART_1.c: 28:     INTCONbits.GIE = 1;
  1900  04D7  178B               	bsf	11,7	;volatile
  1901  04D8                     l1274:
  1902                           
  1903                           ;config_USART_1.c: 29:     INTCONbits.PEIE = 1;
  1904  04D8  170B               	bsf	11,6	;volatile
  1905  04D9                     l1276:
  1906                           
  1907                           ;config_USART_1.c: 31:     PIR1bits.TXIF = 0;
  1908  04D9  120C               	bcf	12,4	;volatile
  1909  04DA                     l1278:
  1910                           
  1911                           ;config_USART_1.c: 32:     PIR1bits.RCIF = 0;
  1912  04DA  128C               	bcf	12,5	;volatile
  1913  04DB                     l158:
  1914  04DB  0008               	return
  1915  04DC                     __end_of_config_USART:
  1916                           
  1917                           	psect	text7
  1918  02A7                     __ptext7:	
  1919 ;; *************** function _division *****************
  1920 ;; Defined at:
  1921 ;;		line 139 in file "main_05.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  dividendo       1    wreg     unsigned char 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  dividendo       1    8[COMMON] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0
  1937 ;;      Temps:          0       3       0       0       0
  1938 ;;      Totals:         1       3       0       0       0
  1939 ;;Total ram usage:        4 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    2
  1942 ;; This function calls:
  1943 ;;		___awdiv
  1944 ;;		___awmod
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _division
  1952  02A7                     _division:
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1956                           ;division@dividendo stored from wreg
  1957  02A7  00F8               	movwf	division@dividendo
  1958  02A8                     l1778:
  1959                           
  1960                           ;main_05.c: 141:     PORTD = 0x00;
  1961  02A8  3064               	movlw	100
  1962  02A9  00F3               	movwf	___awdiv@divisor
  1963  02AA  3000               	movlw	0
  1964  02AB  00F4               	movwf	___awdiv@divisor+1
  1965  02AC  0878               	movf	division@dividendo,w
  1966  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1967  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1968  02AF  00C9               	movwf	??_division
  1969  02B0  01CA               	clrf	??_division+1
  1970  02B1  0849               	movf	??_division,w
  1971  02B2  00F5               	movwf	___awdiv@dividend
  1972  02B3  084A               	movf	??_division+1,w
  1973  02B4  00F6               	movwf	___awdiv@dividend+1
  1974  02B5  120A  118A  223E  120A  118A  	fcall	___awdiv
  1975  02BA  0873               	movf	?___awdiv,w
  1976  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1977  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1978  02BD  00CB               	movwf	??_division+2
  1979  02BE  084B               	movf	??_division+2,w
  1980  02BF  00A5               	movwf	_centenas
  1981                           
  1982                           ;main_05.c: 142: 
  1983  02C0  3064               	movlw	100
  1984  02C1  00F3               	movwf	___awmod@divisor
  1985  02C2  3000               	movlw	0
  1986  02C3  00F4               	movwf	___awmod@divisor+1
  1987  02C4  0878               	movf	division@dividendo,w
  1988  02C5  00C9               	movwf	??_division
  1989  02C6  01CA               	clrf	??_division+1
  1990  02C7  0849               	movf	??_division,w
  1991  02C8  00F5               	movwf	___awmod@dividend
  1992  02C9  084A               	movf	??_division+1,w
  1993  02CA  00F6               	movwf	___awmod@dividend+1
  1994  02CB  120A  118A  236E  120A  118A  	fcall	___awmod
  1995  02D0  0873               	movf	?___awmod,w
  1996  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1997  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1998  02D3  00CB               	movwf	??_division+2
  1999  02D4  084B               	movf	??_division+2,w
  2000  02D5  00FA               	movwf	_residuo
  2001                           
  2002                           ;main_05.c: 143: 
  2003  02D6  300A               	movlw	10
  2004  02D7  00F3               	movwf	___awdiv@divisor
  2005  02D8  3000               	movlw	0
  2006  02D9  00F4               	movwf	___awdiv@divisor+1
  2007  02DA  087A               	movf	_residuo,w
  2008  02DB  00C9               	movwf	??_division
  2009  02DC  01CA               	clrf	??_division+1
  2010  02DD  0849               	movf	??_division,w
  2011  02DE  00F5               	movwf	___awdiv@dividend
  2012  02DF  084A               	movf	??_division+1,w
  2013  02E0  00F6               	movwf	___awdiv@dividend+1
  2014  02E1  120A  118A  223E  120A  118A  	fcall	___awdiv
  2015  02E6  0873               	movf	?___awdiv,w
  2016  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2017  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2018  02E9  00CB               	movwf	??_division+2
  2019  02EA  084B               	movf	??_division+2,w
  2020  02EB  00A4               	movwf	_decenas
  2021                           
  2022                           ;main_05.c: 144:     OSCCONbits.IRCF0 = 0;
  2023  02EC  300A               	movlw	10
  2024  02ED  00F3               	movwf	___awmod@divisor
  2025  02EE  3000               	movlw	0
  2026  02EF  00F4               	movwf	___awmod@divisor+1
  2027  02F0  087A               	movf	_residuo,w
  2028  02F1  00C9               	movwf	??_division
  2029  02F2  01CA               	clrf	??_division+1
  2030  02F3  0849               	movf	??_division,w
  2031  02F4  00F5               	movwf	___awmod@dividend
  2032  02F5  084A               	movf	??_division+1,w
  2033  02F6  00F6               	movwf	___awmod@dividend+1
  2034  02F7  120A  118A  236E  120A  118A  	fcall	___awmod
  2035  02FC  0873               	movf	?___awmod,w
  2036  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2037  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2038  02FF  00CB               	movwf	??_division+2
  2039  0300  084B               	movf	??_division+2,w
  2040  0301  00A3               	movwf	_unidades
  2041  0302                     l1780:
  2042                           
  2043                           ;main_05.c: 146:     OSCCONbits.IRCF2 = 1;
  2044  0302  3030               	movlw	48
  2045  0303  00C9               	movwf	??_division
  2046  0304  0849               	movf	??_division,w
  2047  0305  07A5               	addwf	_centenas,f
  2048  0306                     l1782:
  2049                           
  2050                           ;main_05.c: 147:     OSCCONbits.SCS = 1;
  2051  0306  3030               	movlw	48
  2052  0307  00C9               	movwf	??_division
  2053  0308  0849               	movf	??_division,w
  2054  0309  07A4               	addwf	_decenas,f
  2055  030A                     l1784:
  2056                           
  2057                           ;main_05.c: 148: 
  2058  030A  3030               	movlw	48
  2059  030B  00C9               	movwf	??_division
  2060  030C  0849               	movf	??_division,w
  2061  030D  07A3               	addwf	_unidades,f
  2062  030E                     l117:
  2063  030E  0008               	return
  2064  030F                     __end_of_division:
  2065                           
  2066                           	psect	text8
  2067  036E                     __ptext8:	
  2068 ;; *************** function ___awmod *****************
  2069 ;; Defined at:
  2070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  divisor         2    3[COMMON] int 
  2073 ;;  dividend        2    5[COMMON] int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  sign            1    1[BANK0 ] unsigned char 
  2076 ;;  counter         1    0[BANK0 ] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2    3[COMMON] int 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         4       0       0       0       0
  2087 ;;      Locals:         0       2       0       0       0
  2088 ;;      Temps:          1       0       0       0       0
  2089 ;;      Totals:         5       2       0       0       0
  2090 ;;Total ram usage:        7 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_division
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function ___awmod
  2102  036E                     ___awmod:
  2103  036E                     l1692:	
  2104                           ;incstack = 0
  2105                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2106                           
  2107  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2108  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0370  01C6               	clrf	___awmod@sign
  2110  0371                     l1694:
  2111  0371  1FF6               	btfss	___awmod@dividend+1,7
  2112  0372  2B74               	goto	u1341
  2113  0373  2B75               	goto	u1340
  2114  0374                     u1341:
  2115  0374  2B7C               	goto	l1700
  2116  0375                     u1340:
  2117  0375                     l1696:
  2118  0375  09F5               	comf	___awmod@dividend,f
  2119  0376  09F6               	comf	___awmod@dividend+1,f
  2120  0377  0AF5               	incf	___awmod@dividend,f
  2121  0378  1903               	skipnz
  2122  0379  0AF6               	incf	___awmod@dividend+1,f
  2123  037A                     l1698:
  2124  037A  01C6               	clrf	___awmod@sign
  2125  037B  0AC6               	incf	___awmod@sign,f
  2126  037C                     l1700:
  2127  037C  1FF4               	btfss	___awmod@divisor+1,7
  2128  037D  2B7F               	goto	u1351
  2129  037E  2B80               	goto	u1350
  2130  037F                     u1351:
  2131  037F  2B85               	goto	l1704
  2132  0380                     u1350:
  2133  0380                     l1702:
  2134  0380  09F3               	comf	___awmod@divisor,f
  2135  0381  09F4               	comf	___awmod@divisor+1,f
  2136  0382  0AF3               	incf	___awmod@divisor,f
  2137  0383  1903               	skipnz
  2138  0384  0AF4               	incf	___awmod@divisor+1,f
  2139  0385                     l1704:
  2140  0385  0873               	movf	___awmod@divisor,w
  2141  0386  0474               	iorwf	___awmod@divisor+1,w
  2142  0387  1903               	btfsc	3,2
  2143  0388  2B8A               	goto	u1361
  2144  0389  2B8B               	goto	u1360
  2145  038A                     u1361:
  2146  038A  2BBA               	goto	l1722
  2147  038B                     u1360:
  2148  038B                     l1706:
  2149  038B  01C5               	clrf	___awmod@counter
  2150  038C  0AC5               	incf	___awmod@counter,f
  2151  038D  2B99               	goto	l1712
  2152  038E                     l1708:
  2153  038E  3001               	movlw	1
  2154  038F                     u1375:
  2155  038F  1003               	clrc
  2156  0390  0DF3               	rlf	___awmod@divisor,f
  2157  0391  0DF4               	rlf	___awmod@divisor+1,f
  2158  0392  3EFF               	addlw	-1
  2159  0393  1D03               	skipz
  2160  0394  2B8F               	goto	u1375
  2161  0395                     l1710:
  2162  0395  3001               	movlw	1
  2163  0396  00F7               	movwf	??___awmod
  2164  0397  0877               	movf	??___awmod,w
  2165  0398  07C5               	addwf	___awmod@counter,f
  2166  0399                     l1712:
  2167  0399  1FF4               	btfss	___awmod@divisor+1,7
  2168  039A  2B9C               	goto	u1381
  2169  039B  2B9D               	goto	u1380
  2170  039C                     u1381:
  2171  039C  2B8E               	goto	l1708
  2172  039D                     u1380:
  2173  039D                     l1714:
  2174  039D  0874               	movf	___awmod@divisor+1,w
  2175  039E  0276               	subwf	___awmod@dividend+1,w
  2176  039F  1D03               	skipz
  2177  03A0  2BA3               	goto	u1395
  2178  03A1  0873               	movf	___awmod@divisor,w
  2179  03A2  0275               	subwf	___awmod@dividend,w
  2180  03A3                     u1395:
  2181  03A3  1C03               	skipc
  2182  03A4  2BA6               	goto	u1391
  2183  03A5  2BA7               	goto	u1390
  2184  03A6                     u1391:
  2185  03A6  2BAD               	goto	l1718
  2186  03A7                     u1390:
  2187  03A7                     l1716:
  2188  03A7  0873               	movf	___awmod@divisor,w
  2189  03A8  02F5               	subwf	___awmod@dividend,f
  2190  03A9  0874               	movf	___awmod@divisor+1,w
  2191  03AA  1C03               	skipc
  2192  03AB  03F6               	decf	___awmod@dividend+1,f
  2193  03AC  02F6               	subwf	___awmod@dividend+1,f
  2194  03AD                     l1718:
  2195  03AD  3001               	movlw	1
  2196  03AE                     u1405:
  2197  03AE  1003               	clrc
  2198  03AF  0CF4               	rrf	___awmod@divisor+1,f
  2199  03B0  0CF3               	rrf	___awmod@divisor,f
  2200  03B1  3EFF               	addlw	-1
  2201  03B2  1D03               	skipz
  2202  03B3  2BAE               	goto	u1405
  2203  03B4                     l1720:
  2204  03B4  3001               	movlw	1
  2205  03B5  02C5               	subwf	___awmod@counter,f
  2206  03B6  1D03               	btfss	3,2
  2207  03B7  2BB9               	goto	u1411
  2208  03B8  2BBA               	goto	u1410
  2209  03B9                     u1411:
  2210  03B9  2B9D               	goto	l1714
  2211  03BA                     u1410:
  2212  03BA                     l1722:
  2213  03BA  0846               	movf	___awmod@sign,w
  2214  03BB  1903               	btfsc	3,2
  2215  03BC  2BBE               	goto	u1421
  2216  03BD  2BBF               	goto	u1420
  2217  03BE                     u1421:
  2218  03BE  2BC4               	goto	l1726
  2219  03BF                     u1420:
  2220  03BF                     l1724:
  2221  03BF  09F5               	comf	___awmod@dividend,f
  2222  03C0  09F6               	comf	___awmod@dividend+1,f
  2223  03C1  0AF5               	incf	___awmod@dividend,f
  2224  03C2  1903               	skipnz
  2225  03C3  0AF6               	incf	___awmod@dividend+1,f
  2226  03C4                     l1726:
  2227  03C4  0876               	movf	___awmod@dividend+1,w
  2228  03C5  00F4               	movwf	?___awmod+1
  2229  03C6  0875               	movf	___awmod@dividend,w
  2230  03C7  00F3               	movwf	?___awmod
  2231  03C8                     l438:
  2232  03C8  0008               	return
  2233  03C9                     __end_of___awmod:
  2234                           
  2235                           	psect	text9
  2236  023E                     __ptext9:	
  2237 ;; *************** function ___awdiv *****************
  2238 ;; Defined at:
  2239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  divisor         2    3[COMMON] int 
  2242 ;;  dividend        2    5[COMMON] int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  quotient        2    2[BANK0 ] int 
  2245 ;;  sign            1    1[BANK0 ] unsigned char 
  2246 ;;  counter         1    0[BANK0 ] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    3[COMMON] int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         4       0       0       0       0
  2257 ;;      Locals:         0       4       0       0       0
  2258 ;;      Temps:          1       0       0       0       0
  2259 ;;      Totals:         5       4       0       0       0
  2260 ;;Total ram usage:        9 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_division
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function ___awdiv
  2272  023E                     ___awdiv:
  2273  023E                     l1296:	
  2274                           ;incstack = 0
  2275                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2276                           
  2277  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2278  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0240  01C6               	clrf	___awdiv@sign
  2280  0241                     l1298:
  2281  0241  1FF4               	btfss	___awdiv@divisor+1,7
  2282  0242  2A44               	goto	u721
  2283  0243  2A45               	goto	u720
  2284  0244                     u721:
  2285  0244  2A4C               	goto	l1304
  2286  0245                     u720:
  2287  0245                     l1300:
  2288  0245  09F3               	comf	___awdiv@divisor,f
  2289  0246  09F4               	comf	___awdiv@divisor+1,f
  2290  0247  0AF3               	incf	___awdiv@divisor,f
  2291  0248  1903               	skipnz
  2292  0249  0AF4               	incf	___awdiv@divisor+1,f
  2293  024A                     l1302:
  2294  024A  01C6               	clrf	___awdiv@sign
  2295  024B  0AC6               	incf	___awdiv@sign,f
  2296  024C                     l1304:
  2297  024C  1FF6               	btfss	___awdiv@dividend+1,7
  2298  024D  2A4F               	goto	u731
  2299  024E  2A50               	goto	u730
  2300  024F                     u731:
  2301  024F  2A59               	goto	l1310
  2302  0250                     u730:
  2303  0250                     l1306:
  2304  0250  09F5               	comf	___awdiv@dividend,f
  2305  0251  09F6               	comf	___awdiv@dividend+1,f
  2306  0252  0AF5               	incf	___awdiv@dividend,f
  2307  0253  1903               	skipnz
  2308  0254  0AF6               	incf	___awdiv@dividend+1,f
  2309  0255                     l1308:
  2310  0255  3001               	movlw	1
  2311  0256  00F7               	movwf	??___awdiv
  2312  0257  0877               	movf	??___awdiv,w
  2313  0258  06C6               	xorwf	___awdiv@sign,f
  2314  0259                     l1310:
  2315  0259  01C7               	clrf	___awdiv@quotient
  2316  025A  01C8               	clrf	___awdiv@quotient+1
  2317  025B                     l1312:
  2318  025B  0873               	movf	___awdiv@divisor,w
  2319  025C  0474               	iorwf	___awdiv@divisor+1,w
  2320  025D  1903               	btfsc	3,2
  2321  025E  2A60               	goto	u741
  2322  025F  2A61               	goto	u740
  2323  0260                     u741:
  2324  0260  2A98               	goto	l1332
  2325  0261                     u740:
  2326  0261                     l1314:
  2327  0261  01C5               	clrf	___awdiv@counter
  2328  0262  0AC5               	incf	___awdiv@counter,f
  2329  0263  2A6F               	goto	l1320
  2330  0264                     l1316:
  2331  0264  3001               	movlw	1
  2332  0265                     u755:
  2333  0265  1003               	clrc
  2334  0266  0DF3               	rlf	___awdiv@divisor,f
  2335  0267  0DF4               	rlf	___awdiv@divisor+1,f
  2336  0268  3EFF               	addlw	-1
  2337  0269  1D03               	skipz
  2338  026A  2A65               	goto	u755
  2339  026B                     l1318:
  2340  026B  3001               	movlw	1
  2341  026C  00F7               	movwf	??___awdiv
  2342  026D  0877               	movf	??___awdiv,w
  2343  026E  07C5               	addwf	___awdiv@counter,f
  2344  026F                     l1320:
  2345  026F  1FF4               	btfss	___awdiv@divisor+1,7
  2346  0270  2A72               	goto	u761
  2347  0271  2A73               	goto	u760
  2348  0272                     u761:
  2349  0272  2A64               	goto	l1316
  2350  0273                     u760:
  2351  0273                     l1322:
  2352  0273  3001               	movlw	1
  2353  0274                     u775:
  2354  0274  1003               	clrc
  2355  0275  0DC7               	rlf	___awdiv@quotient,f
  2356  0276  0DC8               	rlf	___awdiv@quotient+1,f
  2357  0277  3EFF               	addlw	-1
  2358  0278  1D03               	skipz
  2359  0279  2A74               	goto	u775
  2360  027A  0874               	movf	___awdiv@divisor+1,w
  2361  027B  0276               	subwf	___awdiv@dividend+1,w
  2362  027C  1D03               	skipz
  2363  027D  2A80               	goto	u785
  2364  027E  0873               	movf	___awdiv@divisor,w
  2365  027F  0275               	subwf	___awdiv@dividend,w
  2366  0280                     u785:
  2367  0280  1C03               	skipc
  2368  0281  2A83               	goto	u781
  2369  0282  2A84               	goto	u780
  2370  0283                     u781:
  2371  0283  2A8B               	goto	l1328
  2372  0284                     u780:
  2373  0284                     l1324:
  2374  0284  0873               	movf	___awdiv@divisor,w
  2375  0285  02F5               	subwf	___awdiv@dividend,f
  2376  0286  0874               	movf	___awdiv@divisor+1,w
  2377  0287  1C03               	skipc
  2378  0288  03F6               	decf	___awdiv@dividend+1,f
  2379  0289  02F6               	subwf	___awdiv@dividend+1,f
  2380  028A                     l1326:
  2381  028A  1447               	bsf	___awdiv@quotient,0
  2382  028B                     l1328:
  2383  028B  3001               	movlw	1
  2384  028C                     u795:
  2385  028C  1003               	clrc
  2386  028D  0CF4               	rrf	___awdiv@divisor+1,f
  2387  028E  0CF3               	rrf	___awdiv@divisor,f
  2388  028F  3EFF               	addlw	-1
  2389  0290  1D03               	skipz
  2390  0291  2A8C               	goto	u795
  2391  0292                     l1330:
  2392  0292  3001               	movlw	1
  2393  0293  02C5               	subwf	___awdiv@counter,f
  2394  0294  1D03               	btfss	3,2
  2395  0295  2A97               	goto	u801
  2396  0296  2A98               	goto	u800
  2397  0297                     u801:
  2398  0297  2A73               	goto	l1322
  2399  0298                     u800:
  2400  0298                     l1332:
  2401  0298  0846               	movf	___awdiv@sign,w
  2402  0299  1903               	btfsc	3,2
  2403  029A  2A9C               	goto	u811
  2404  029B  2A9D               	goto	u810
  2405  029C                     u811:
  2406  029C  2AA2               	goto	l1336
  2407  029D                     u810:
  2408  029D                     l1334:
  2409  029D  09C7               	comf	___awdiv@quotient,f
  2410  029E  09C8               	comf	___awdiv@quotient+1,f
  2411  029F  0AC7               	incf	___awdiv@quotient,f
  2412  02A0  1903               	skipnz
  2413  02A1  0AC8               	incf	___awdiv@quotient+1,f
  2414  02A2                     l1336:
  2415  02A2  0848               	movf	___awdiv@quotient+1,w
  2416  02A3  00F4               	movwf	?___awdiv+1
  2417  02A4  0847               	movf	___awdiv@quotient,w
  2418  02A5  00F3               	movwf	?___awdiv
  2419  02A6                     l425:
  2420  02A6  0008               	return
  2421  02A7                     __end_of___awdiv:
  2422                           
  2423                           	psect	text10
  2424  01BB                     __ptext10:	
  2425 ;; *************** function _atoi *****************
  2426 ;; Defined at:
  2427 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  s               1    wreg     PTR const unsigned char 
  2430 ;;		 -> s1(10), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  2433 ;;		 -> s1(10), 
  2434 ;;  a               2    5[BANK0 ] int 
  2435 ;;  sign            1    4[BANK0 ] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2    0[BANK0 ] int 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       2       0       0       0
  2446 ;;      Locals:         0       4       0       0       0
  2447 ;;      Temps:          0       2       0       0       0
  2448 ;;      Totals:         0       8       0       0       0
  2449 ;;Total ram usage:        8 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    2
  2452 ;; This function calls:
  2453 ;;		___wmul
  2454 ;;		_isdigit
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _atoi
  2462  01BB                     _atoi:
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2466                           ;atoi@s stored from wreg
  2467  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2468  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2469  01BD  00CC               	movwf	atoi@s
  2470  01BE                     l1850:
  2471  01BE  29C3               	goto	l1854
  2472  01BF                     l1852:
  2473  01BF  3001               	movlw	1
  2474  01C0  00C7               	movwf	??_atoi
  2475  01C1  0847               	movf	??_atoi,w
  2476  01C2  07CC               	addwf	atoi@s,f
  2477  01C3                     l1854:
  2478  01C3  084C               	movf	atoi@s,w
  2479  01C4  0084               	movwf	4
  2480  01C5  3020               	movlw	32
  2481  01C6  1383               	bcf	3,7	;select IRP bank0
  2482  01C7  0600               	xorwf	0,w
  2483  01C8  1903               	btfsc	3,2
  2484  01C9  29CB               	goto	u1631
  2485  01CA  29CC               	goto	u1630
  2486  01CB                     u1631:
  2487  01CB  29BF               	goto	l1852
  2488  01CC                     u1630:
  2489  01CC                     l1856:
  2490  01CC  084C               	movf	atoi@s,w
  2491  01CD  0084               	movwf	4
  2492  01CE  3009               	movlw	9
  2493  01CF  0600               	xorwf	0,w
  2494  01D0  1903               	btfsc	3,2
  2495  01D1  29D3               	goto	u1641
  2496  01D2  29D4               	goto	u1640
  2497  01D3                     u1641:
  2498  01D3  29BF               	goto	l1852
  2499  01D4                     u1640:
  2500  01D4                     l1858:
  2501  01D4  01CA               	clrf	atoi@a
  2502  01D5  01CB               	clrf	atoi@a+1
  2503  01D6  01C9               	clrf	atoi@sign
  2504  01D7                     l1860:
  2505  01D7  084C               	movf	atoi@s,w
  2506  01D8  0084               	movwf	4
  2507  01D9  302D               	movlw	45
  2508  01DA  0600               	xorwf	0,w
  2509  01DB  1D03               	btfss	3,2
  2510  01DC  29DE               	goto	u1651
  2511  01DD  29DF               	goto	u1650
  2512  01DE                     u1651:
  2513  01DE  29E8               	goto	l1864
  2514  01DF                     u1650:
  2515  01DF                     l1862:
  2516  01DF  3001               	movlw	1
  2517  01E0  00C7               	movwf	??_atoi
  2518  01E1  0847               	movf	??_atoi,w
  2519  01E2  07C9               	addwf	atoi@sign,f
  2520  01E3  3001               	movlw	1
  2521  01E4  00C7               	movwf	??_atoi
  2522  01E5  0847               	movf	??_atoi,w
  2523  01E6  07CC               	addwf	atoi@s,f
  2524  01E7  2A1A               	goto	l1872
  2525  01E8                     l1864:
  2526  01E8  084C               	movf	atoi@s,w
  2527  01E9  0084               	movwf	4
  2528  01EA  302B               	movlw	43
  2529  01EB  0600               	xorwf	0,w
  2530  01EC  1D03               	btfss	3,2
  2531  01ED  29EF               	goto	u1661
  2532  01EE  29F0               	goto	u1660
  2533  01EF                     u1661:
  2534  01EF  2A1A               	goto	l1872
  2535  01F0                     u1660:
  2536  01F0                     l1866:
  2537  01F0  3001               	movlw	1
  2538  01F1  00C7               	movwf	??_atoi
  2539  01F2  0847               	movf	??_atoi,w
  2540  01F3  07CC               	addwf	atoi@s,f
  2541  01F4  2A1A               	goto	l1872
  2542  01F5                     l1868:
  2543  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2544  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2545  01F7  084C               	movf	atoi@s,w
  2546  01F8  0084               	movwf	4
  2547  01F9  084B               	movf	atoi@a+1,w
  2548  01FA  00F4               	movwf	___wmul@multiplier+1
  2549  01FB  084A               	movf	atoi@a,w
  2550  01FC  00F3               	movwf	___wmul@multiplier
  2551  01FD  300A               	movlw	10
  2552  01FE  00F5               	movwf	___wmul@multiplicand
  2553  01FF  3000               	movlw	0
  2554  0200  00F6               	movwf	___wmul@multiplicand+1
  2555  0201  120A  118A  249B  120A  118A  	fcall	___wmul
  2556  0206  1383               	bcf	3,7	;select IRP bank0
  2557  0207  0800               	movf	0,w
  2558  0208  0773               	addwf	?___wmul,w
  2559  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2560  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2561  020B  00C7               	movwf	??_atoi
  2562  020C  3000               	movlw	0
  2563  020D  1803               	skipnc
  2564  020E  3001               	movlw	1
  2565  020F  0774               	addwf	?___wmul+1,w
  2566  0210  00C8               	movwf	??_atoi+1
  2567  0211  0847               	movf	??_atoi,w
  2568  0212  3ED0               	addlw	208
  2569  0213  00CA               	movwf	atoi@a
  2570  0214  0848               	movf	??_atoi+1,w
  2571  0215  1803               	skipnc
  2572  0216  3E01               	addlw	1
  2573  0217  3EFF               	addlw	255
  2574  0218  00CB               	movwf	atoi@a+1
  2575  0219  29F0               	goto	l1866
  2576  021A                     l1872:
  2577  021A  084C               	movf	atoi@s,w
  2578  021B  0084               	movwf	4
  2579  021C  0800               	movf	0,w
  2580  021D  120A  118A  24F8  120A  118A  	fcall	_isdigit
  2581  0222  1803               	btfsc	3,0
  2582  0223  2A25               	goto	u1671
  2583  0224  2A26               	goto	u1670
  2584  0225                     u1671:
  2585  0225  29F5               	goto	l1868
  2586  0226                     u1670:
  2587  0226                     l1874:
  2588  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0228  0849               	movf	atoi@sign,w
  2591  0229  1903               	btfsc	3,2
  2592  022A  2A2C               	goto	u1681
  2593  022B  2A2D               	goto	u1680
  2594  022C                     u1681:
  2595  022C  2A39               	goto	l1880
  2596  022D                     u1680:
  2597  022D                     l1876:
  2598  022D  094A               	comf	atoi@a,w
  2599  022E  00C7               	movwf	??_atoi
  2600  022F  094B               	comf	atoi@a+1,w
  2601  0230  00C8               	movwf	??_atoi+1
  2602  0231  0AC7               	incf	??_atoi,f
  2603  0232  1903               	skipnz
  2604  0233  0AC8               	incf	??_atoi+1,f
  2605  0234  0847               	movf	??_atoi,w
  2606  0235  00C5               	movwf	?_atoi
  2607  0236  0848               	movf	??_atoi+1,w
  2608  0237  00C6               	movwf	?_atoi+1
  2609  0238  2A3D               	goto	l735
  2610  0239                     l1880:
  2611  0239  084B               	movf	atoi@a+1,w
  2612  023A  00C6               	movwf	?_atoi+1
  2613  023B  084A               	movf	atoi@a,w
  2614  023C  00C5               	movwf	?_atoi
  2615  023D                     l735:
  2616  023D  0008               	return
  2617  023E                     __end_of_atoi:
  2618                           
  2619                           	psect	text11
  2620  04F8                     __ptext11:	
  2621 ;; *************** function _isdigit *****************
  2622 ;; Defined at:
  2623 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  c               1    wreg     unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  c               1    4[COMMON] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         2       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         2       0       0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_atoi
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _isdigit
  2653  04F8                     _isdigit:
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2657                           ;isdigit@c stored from wreg
  2658  04F8  00F4               	movwf	isdigit@c
  2659  04F9                     l1426:
  2660  04F9  01F3               	clrf	_isdigit$887
  2661  04FA                     l1428:
  2662  04FA  303A               	movlw	58
  2663  04FB  0274               	subwf	isdigit@c,w
  2664  04FC  1803               	skipnc
  2665  04FD  2CFF               	goto	u1041
  2666  04FE  2D00               	goto	u1040
  2667  04FF                     u1041:
  2668  04FF  2D08               	goto	l1434
  2669  0500                     u1040:
  2670  0500                     l1430:
  2671  0500  3030               	movlw	48
  2672  0501  0274               	subwf	isdigit@c,w
  2673  0502  1C03               	skipc
  2674  0503  2D05               	goto	u1051
  2675  0504  2D06               	goto	u1050
  2676  0505                     u1051:
  2677  0505  2D08               	goto	l1434
  2678  0506                     u1050:
  2679  0506                     l1432:
  2680  0506  01F3               	clrf	_isdigit$887
  2681  0507  0AF3               	incf	_isdigit$887,f
  2682  0508                     l1434:
  2683  0508  0C73               	rrf	_isdigit$887,w
  2684  0509                     l740:
  2685  0509  0008               	return
  2686  050A                     __end_of_isdigit:
  2687                           
  2688                           	psect	text12
  2689  049B                     __ptext12:	
  2690 ;; *************** function ___wmul *****************
  2691 ;; Defined at:
  2692 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  multiplier      2    3[COMMON] unsigned int 
  2695 ;;  multiplicand    2    5[COMMON] unsigned int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  product         2    7[COMMON] unsigned int 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  2    3[COMMON] unsigned int 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         4       0       0       0       0
  2708 ;;      Locals:         2       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0
  2710 ;;      Totals:         6       0       0       0       0
  2711 ;;Total ram usage:        6 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:    1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_atoi
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function ___wmul
  2723  049B                     ___wmul:
  2724  049B                     l1282:	
  2725                           ;incstack = 0
  2726                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2727                           
  2728  049B  01F7               	clrf	___wmul@product
  2729  049C  01F8               	clrf	___wmul@product+1
  2730  049D                     l1284:
  2731  049D  1C73               	btfss	___wmul@multiplier,0
  2732  049E  2CA0               	goto	u681
  2733  049F  2CA1               	goto	u680
  2734  04A0                     u681:
  2735  04A0  2CA7               	goto	l272
  2736  04A1                     u680:
  2737  04A1                     l1286:
  2738  04A1  0875               	movf	___wmul@multiplicand,w
  2739  04A2  07F7               	addwf	___wmul@product,f
  2740  04A3  1803               	skipnc
  2741  04A4  0AF8               	incf	___wmul@product+1,f
  2742  04A5  0876               	movf	___wmul@multiplicand+1,w
  2743  04A6  07F8               	addwf	___wmul@product+1,f
  2744  04A7                     l272:
  2745  04A7  3001               	movlw	1
  2746  04A8                     u695:
  2747  04A8  1003               	clrc
  2748  04A9  0DF5               	rlf	___wmul@multiplicand,f
  2749  04AA  0DF6               	rlf	___wmul@multiplicand+1,f
  2750  04AB  3EFF               	addlw	-1
  2751  04AC  1D03               	skipz
  2752  04AD  2CA8               	goto	u695
  2753  04AE                     l1288:
  2754  04AE  3001               	movlw	1
  2755  04AF                     u705:
  2756  04AF  1003               	clrc
  2757  04B0  0CF4               	rrf	___wmul@multiplier+1,f
  2758  04B1  0CF3               	rrf	___wmul@multiplier,f
  2759  04B2  3EFF               	addlw	-1
  2760  04B3  1D03               	skipz
  2761  04B4  2CAF               	goto	u705
  2762  04B5                     l1290:
  2763  04B5  0873               	movf	___wmul@multiplier,w
  2764  04B6  0474               	iorwf	___wmul@multiplier+1,w
  2765  04B7  1D03               	btfss	3,2
  2766  04B8  2CBA               	goto	u711
  2767  04B9  2CBB               	goto	u710
  2768  04BA                     u711:
  2769  04BA  2C9D               	goto	l1284
  2770  04BB                     u710:
  2771  04BB                     l1292:
  2772  04BB  0878               	movf	___wmul@product+1,w
  2773  04BC  00F4               	movwf	?___wmul+1
  2774  04BD  0877               	movf	___wmul@product,w
  2775  04BE  00F3               	movwf	?___wmul
  2776  04BF                     l274:
  2777  04BF  0008               	return
  2778  04C0                     __end_of___wmul:
  2779                           
  2780                           	psect	text13
  2781  04DC                     __ptext13:	
  2782 ;; *************** function _isr *****************
  2783 ;; Defined at:
  2784 ;;		line 74 in file "main_05.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0
  2800 ;;      Temps:          3       0       0       0       0
  2801 ;;      Totals:         3       0       0       0       0
  2802 ;;Total ram usage:        3 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		Interrupt level 1
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _isr
  2813  04DC                     _isr:
  2814  04DC                     i1l1594:
  2815                           
  2816                           ;main_05.c: 75: 
  2817  04DC  1C0B               	btfss	11,0	;volatile
  2818  04DD  2CDF               	goto	u121_21
  2819  04DE  2CE0               	goto	u121_20
  2820  04DF                     u121_21:
  2821  04DF  2CF1               	goto	i1l90
  2822  04E0                     u121_20:
  2823  04E0                     i1l1596:
  2824                           
  2825                           ;main_05.c: 76:     }
  2826  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2827  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2828  04E2  1806               	btfsc	6,0	;volatile
  2829  04E3  2CE5               	goto	u122_21
  2830  04E4  2CE6               	goto	u122_20
  2831  04E5                     u122_21:
  2832  04E5  2CEA               	goto	i1l1600
  2833  04E6                     u122_20:
  2834  04E6                     i1l1598:
  2835                           
  2836                           ;main_05.c: 77: }
  2837  04E6  3001               	movlw	1
  2838  04E7  00F0               	movwf	??_isr
  2839  04E8  0870               	movf	??_isr,w
  2840  04E9  07A6               	addwf	_contador,f
  2841  04EA                     i1l1600:
  2842                           
  2843                           ;main_05.c: 81: 
  2844  04EA  1886               	btfsc	6,1	;volatile
  2845  04EB  2CED               	goto	u123_21
  2846  04EC  2CEE               	goto	u123_20
  2847  04ED                     u123_21:
  2848  04ED  2CF0               	goto	i1l1604
  2849  04EE                     u123_20:
  2850  04EE                     i1l1602:
  2851                           
  2852                           ;main_05.c: 82: 
  2853  04EE  3001               	movlw	1
  2854  04EF  02A6               	subwf	_contador,f
  2855  04F0                     i1l1604:
  2856                           
  2857                           ;main_05.c: 85:     TXREG = data;
  2858  04F0  100B               	bcf	11,0	;volatile
  2859  04F1                     i1l90:
  2860  04F1  0872               	movf	??_isr+2,w
  2861  04F2  008A               	movwf	10
  2862  04F3  0E71               	swapf	??_isr+1,w
  2863  04F4  0083               	movwf	3
  2864  04F5  0EFE               	swapf	btemp,f
  2865  04F6  0E7E               	swapf	btemp,w
  2866  04F7  0009               	retfie
  2867  04F8                     __end_of_isr:
  2868  007E                     btemp	set	126	;btemp
  2869  007E                     wtemp0	set	126
  2870                           
  2871                           	psect	intentry
  2872  0004                     __pintentry:	
  2873                           ;incstack = 0
  2874                           ; Regs used in _isr: [wreg+status,2+status,0]
  2875                           
  2876  0004                     interrupt_function:
  2877  007E                     saved_w	set	btemp
  2878  0004  00FE               	movwf	btemp
  2879  0005  0E03               	swapf	3,w
  2880  0006  00F1               	movwf	??_isr+1
  2881  0007  080A               	movf	10,w
  2882  0008  00F2               	movwf	??_isr+2
  2883  0009  120A  118A  2CDC   	ljmp	_isr
  2884                           
  2885                           	psect	config
  2886                           
  2887                           ;Config register CONFIG1 @ 0x2007
  2888                           ;	Oscillator Selection bits
  2889                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2890                           ;	Watchdog Timer Enable bit
  2891                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2892                           ;	Power-up Timer Enable bit
  2893                           ;	PWRTE = OFF, PWRT disabled
  2894                           ;	RE3/MCLR pin function select bit
  2895                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2896                           ;	Code Protection bit
  2897                           ;	CP = OFF, Program memory code protection is disabled
  2898                           ;	Data Code Protection bit
  2899                           ;	CPD = OFF, Data memory code protection is disabled
  2900                           ;	Brown Out Reset Selection bits
  2901                           ;	BOREN = OFF, BOR disabled
  2902                           ;	Internal External Switchover bit
  2903                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2904                           ;	Fail-Safe Clock Monitor Enabled bit
  2905                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2906                           ;	Low Voltage Programming Enable bit
  2907                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2908                           ;	In-Circuit Debugger Mode bit
  2909                           ;	DEBUG = 0x1, unprogrammed default
  2910  2007                     	org	8199
  2911  2007  20D4               	dw	8404
  2912                           
  2913                           ;Config register CONFIG2 @ 0x2008
  2914                           ;	Brown-out Reset Selection bit
  2915                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2916                           ;	Flash Program Memory Self Write Enable bits
  2917                           ;	WRT = OFF, Write protection off
  2918  2008                     	org	8200
  2919  2008  3FFF               	dw	16383

Data Sizes:
    Strings     79
    Constant    10
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     26      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 39
		 -> STR_6(CODE[39]), STR_5(CODE[39]), STR_4(CODE[37]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> printf@pb(COMMON[2]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    S889__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    S889__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_division
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv
    _division->___awmod
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4429
                                             21 BANK0      5     5      0
                               _atoi
                           _division
                              _setup
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1907
                                              8 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1459
                                              8 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     682
                                              0 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _division
     ___awdiv
     ___awmod
   _setup
     _config_USART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcat

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      3F       5       78.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 23:25:22 2021

                      pc 0002                       l97 013D                       _c1 0022  
                     _d1 0021             ___awdiv@sign 0046                       _s1 003B  
                     _s2 0031                       _s3 0027                       _u1 0020  
                     fsr 0004      ___wmul@multiplicand 0075                      l100 0146  
                    l103 014F                      l117 030E                      l141 049A  
                    l158 04DB                      l272 04A7                      l425 02A6  
                    l274 04BF                      l268 0107                      l438 03C8  
                    l544 040E                      l554 044A                      l740 0509  
                    l735 023D                      l758 0473                      _RB0 0030  
                    _RB1 0031                      u710 04BB                      u711 04BA  
                    u800 0298                      u720 0245                      u705 04AF  
                    u801 0297                      u721 0244                      u810 029D  
                    u730 0250                      u811 029C                      u731 024F  
                    u740 0261                      u741 0260                      u680 04A1  
                    u760 0273                      u681 04A0                      u761 0272  
                    u755 0265                      u780 0284                      u781 0283  
                    u695 04A8                      u775 0274                      u785 0280  
                    u795 028C                      _isr 04DC                      fsr0 0004  
                    indf 0000             ___awmod@sign 0046                     l1300 0245  
                   l1310 0259                     l1302 024A                     l1320 026F  
                   l1312 025B                     l1304 024C                     l1330 0292  
                   l1322 0273                     l1314 0261                     l1306 0250  
                   l1324 0284                     l1316 0264                     l1332 0298  
                   l1308 0255                     l1260 04CB                     l1252 04C0  
                   l1430 0500                     l1334 029D                     l1326 028A  
                   l1318 026B                     l1270 04D4                     l1262 04CC  
                   l1254 04C4                     l1432 0506                     l1336 02A2  
                   l1328 028B                     l1272 04D7                     l1264 04CF  
                   l1256 04C5                     l1440 047B                     l1290 04B5  
                   l1282 049B                     l1434 0508                     l1426 04F9  
                   l1274 04D8                     l1266 04D0                     l1258 04C8  
                   l1450 0485                     l1442 047F                     l1292 04BB  
                   l1284 049D                     l1428 04FA                     l1700 037C  
                   l1276 04D9                     l1268 04D3                     l1460 048C  
                   l1452 0486                     l1444 0480                     l1286 04A1  
                   l1710 0395                     l1702 0380                     l1278 04DA  
                   l1470 0493                     l1462 048F                     l1454 0489  
                   l1446 0483                     l1438 0474                     l1550 044C  
                   l1288 04AE                     l1296 023E                     l1720 03B4  
                   l1712 0399                     l1704 0385                     l1472 0494  
                   l1464 0490                     l1456 048A                     l1448 0484  
                   l1800 0039                     l1552 0451                     l1298 0241  
                   l1714 039D                     l1706 038B                     l1722 03BA  
                   l1474 0495                     l1466 0491                     l1458 048B  
                   l1730 03C9                     l1810 006A                     l1802 0056  
                   l1554 0455                     l1724 03BF                     l1716 03A7  
                   l1708 038E                     l1468 0492                     l1740 03E1  
                   l1732 03CD                     l1812 006F                     l1804 005E  
                   l1556 045E                     l1900 0141                     l1726 03C4  
                   l1718 03AD                     l1750 0404                     l1742 03E5  
                   l1734 03D3                     l1830 00A8                     l1822 008D  
                   l1806 0062                     l1558 0466                     l1910 017C  
                   l1902 014A                     l1744 03F6                     l1736 03D6  
                   l1752 040A                     l1760 041A                     l1832 00AD  
                   l1824 0097                     l1808 0066                     l1840 00F1  
                   l1920 01B5                     l1912 018F                     l1904 0153  
                   l1850 01BE                     l1746 03FC                     l1738 03DD  
                   l1770 0439                     l1762 0421                     l1834 00DD  
                   l1826 009D                     l1818 0071                     l1842 0103  
                   l1914 019B                     l1906 0158                     l1860 01D7  
                   l1852 01BF                     l1692 036E                     l1780 0302  
                   l1748 03FD                     l1772 0440                     l1764 0425  
                   l1756 040F                     l1836 00E4                     l1828 00A4  
                   l1916 01A7                     l1908 0169                     l1862 01DF  
                   l1854 01C3                     l1694 0371                     l1782 0306  
                   l1766 0429                     l1758 0417                     l1774 0446  
                   l1838 00E8                     l1942 004B                     l1790 0026  
                   l1918 01B3                     l1880 0239                     l1872 021A  
                   l1864 01E8                     l1856 01CC                     l1696 0375  
                   l1784 030A                     l1768 0433                     l1792 002C  
                   l1874 0226                     l1866 01F0                     l1858 01D4  
                   l1698 037A                     l1778 02A8                     l1794 0033  
                   l1890 011B                     l1876 022D                     l1868 01F5  
                   l1796 0038                     l1788 0021                     l1892 011F  
                   l1884 0108                     l1894 012A                     l1886 010D  
                   l1896 012E                     l1888 0115                     l1898 0139  
                   ?_isr 0070                     STR_1 036B                     STR_2 036B  
                   STR_3 036B                     STR_4 0346                     STR_5 031F  
                   u1040 0500                     u1041 04FF                     u1050 0506  
                   u1130 045D                     u1051 0505                     u1131 045C  
                   u1140 0473                     u1141 0472                     u1410 03BA  
                   u1411 03B9                     u1420 03BF                     u1340 0375  
                   u1500 0417                     u1421 03BE                     u1405 03AE  
                   u1341 0374                     u1501 0416                     u1350 0380  
                   u1430 03D3                     u1351 037F                     u1431 03D2  
                   u1360 038B                     u1520 0429                     u1600 009D  
                   u1361 038A                     u1521 0428                     u1601 009C  
                   u1450 03E5                     u1530 0433                     u1610 00F1  
                   u1451 03E4                     u1531 0432                     u1515 041B  
                   u1611 00F0                     u1380 039D                     u1620 0103  
                   u1700 0141                     u1381 039C                     u1445 03D7  
                   u1621 0102                     u1701 0140                     u1630 01CC  
                   u1390 03A7                     u1470 03F6                     u1550 0446  
                   u1710 014A                     u1631 01CB                     u1391 03A6  
                   u1375 038F                     u1471 03F5                     u1551 0445  
                   u1535 042F                     u1711 0149                     u1640 01D4  
                   u1560 002C                     u1720 0153                     u1641 01D3  
                   u1465 03E6                     u1545 043A                     u1561 002B  
                   u1721 0152           ??_config_USART 0073                     u1650 01DF  
                   u1490 040A                     u1570 0066                     u1651 01DE  
                   u1395 03A3                     u1491 0409                     u1475 03F2  
                   u1571 0065                     u1660 01F0                     u1580 008C  
                   u1661 01EF                     u1485 03FE                     u1581 008B  
                   u1670 0226                     u1590 0097                     u1671 0225  
                   u1591 0096                     u1680 022D                     u1681 022C  
                   u1585 0088                     u1737 0125                     u1690 0115  
                   u1747 0134                     u1691 0114                     _RBIF 0058  
                   _RCIF 0065                     i1l90 04F1                     _TXIF 0064  
                   _WPUB 0095                     _atoi 01BB                     _main 0108  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0045             main@completo 005D                    ?_main 0070  
        __end_of___awdiv 02A7          __end_of___awmod 03C9                    _ANSEL 0188  
        ___awdiv@divisor 0073          __end_of___lwdiv 040F          __end_of___lwmod 044B  
        ___awdiv@counter 0045                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 031F  
        __end_of_isdigit 050A                    atoi@a 004A                    _setup 0474  
                  atoi@s 004C                    _putch 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0108  
        __initialization 000F             __end_of_atoi 023E             __end_of_main 01BB  
                 ??_atoi 0047                   ??_main 005A         ___awdiv@dividend 0075  
                 ?_setup 0070                   _ANSELH 0189                   i1l1600 04EA  
                 i1l1602 04EE                   i1l1604 04F0                   u121_20 04E0  
                 u121_21 04DF                   u122_20 04E6                   u122_21 04E5  
                 i1l1594 04DC                   i1l1596 04E0                   i1l1598 04E6  
                 u123_20 04EE                   u123_21 04ED                   _SPBRGH 009A  
       __end_of_division 030F                   ___wmul 049B                ??___awdiv 0077  
              ??___awmod 0077                ??___lwdiv 0077                ??___lwmod 0078  
       ___awdiv@quotient 0047     __end_of_config_USART 04DC          ___awmod@divisor 0073  
        ___awmod@counter 0045                   _strcat 044B                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 0050  __end_of__initialization 001A  
         __pcstackCOMMON 0070            __end_of_setup 049B           _OPTION_REGbits 0081  
                ??_setup 0073               __pbssBANK0 0020               __pmaintext 0108  
                ?___wmul 0073               __pintentry 0004                  ?_strcat 0073  
             __stringtab 030F                ?_division 0070    __size_of_config_USART 001C  
                ___awdiv 023E                  ___awmod 036E          __size_of___wmul 0025  
                ___lwdiv 03C9                  ___lwmod 040F                  _decenas 0024  
                __ptext1 044B                  __ptext2 001E                  __ptext3 040F  
                __ptext4 03C9                  __ptext5 0474                  __ptext6 04C0  
                __ptext7 02A7                  __ptext8 036E                  __ptext9 023E  
        __size_of_strcat 0029                  _dpowers 0315                  _isdigit 04F8  
           __size_of_isr 001C         ___awmod@dividend 0075                  _residuo 007A  
                _sprintf 001E                  clrloop0 050B     end_of_initialization 001A  
             ??_division 0049             _config_USART 04C0                _RCSTAbits 0018  
      division@dividendo 0078                _TXSTAbits 0098           __end_of___wmul 04C0  
            _BAUDCTLbits 0187           __end_of_strcat 0474      start_initialization 000F  
            __end_of_isr 04F8                 ??___wmul 0077                 ??_strcat 0074  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0045  
            sprintf@flag 0054        __size_of_division 0068              sprintf@prec 0055  
       ___lwdiv@dividend 0075                 ?___awdiv 0073                 ?___awmod 0073  
               ?___lwdiv 0073                 ?___lwmod 0048                _dividendo 0079  
              __pstrings 030F                 ?_isdigit 0070         ___lwdiv@quotient 0046  
               ?_sprintf 004D           __size_of_setup 0027        interrupt_function 0004  
         ___wmul@product 0077                 _IOCBbits 0096                clear_ram0 050A  
               _PIR1bits 000C              __stringbase 0314        ___wmul@multiplier 0073  
       __size_of___awdiv 0069         __size_of___awmod 005B         __size_of___lwdiv 0046  
       __size_of___lwmod 003C       __end_of__stringtab 0315              _isdigit$887 0073  
             sprintf@val 0056               strcat@from 0073         __size_of_isdigit 0012  
        ___lwdiv@divisor 0073                 _centenas 0025          ___lwdiv@counter 0045  
               __ptext10 01BB                 __ptext11 04F8                 __ptext12 049B  
               __ptext13 04DC                 _division 02A7                 _contador 0026  
       __size_of_sprintf 00EA            __size_of_atoi 0083            __size_of_main 00B3  
               _unidades 0023                 atoi@sign 0049               _INTCONbits 000B  
               isdigit@c 0074                 intlevel1 0000                sprintf@ap 0053  
              sprintf@sp 0058         ___lwmod@dividend 004A                stringcode 030F  
             _OSCCONbits 008F                 sprintf@c 0059                 sprintf@f 004D  
               strcat@cp 0076                 strcat@to 0075          ___lwmod@divisor 0048  
        ___lwmod@counter 004C                 stringdir 030F                 stringtab 030F  
          ?_config_USART 0070  
