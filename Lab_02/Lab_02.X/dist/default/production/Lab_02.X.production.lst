

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 01:20:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0009                     _PORTEbits	set	9
   458  0018                     _RCSTAbits	set	24
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  000B                     _INTCONbits	set	11
   465  000C                     _PIR1bits	set	12
   466  0019                     _TXREG	set	25
   467  001A                     _RCREG	set	26
   468  001E                     _ADRESH	set	30
   469  001F                     _ADCON0bits	set	31
   470  0064                     _TXIF	set	100
   471  0065                     _RCIF	set	101
   472  0066                     _ADIF	set	102
   473  0098                     _TXSTAbits	set	152
   474  009A                     _SPBRGH	set	154
   475  0099                     _SPBRG	set	153
   476  009F                     _ADCON1bits	set	159
   477  008C                     _PIE1bits	set	140
   478  008F                     _OSCCONbits	set	143
   479  0089                     _TRISE	set	137
   480  0088                     _TRISD	set	136
   481  0085                     _TRISAbits	set	133
   482  0187                     _BAUDCTLbits	set	391
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  0100                     __pstrings:
   487  0100                     stringtab:
   488  0100                     __stringtab:
   489  0100                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  0100                     stringdir:
   493  0100  3001               	movlw	high stringdir
   494  0101  008A               	movwf	10
   495  0102  0804               	movf	4,w
   496  0103  0A84               	incf	4,f
   497  0104  0782               	addwf	2,f
   498  0105                     __stringbase:
   499  0105  3400               	retlw	0
   500  0106                     __end_of__stringtab:
   501  0106                     STR_13:
   502  0106  340D               	retlw	13
   503  0107  3450               	retlw	80	;'P'
   504  0108  3461               	retlw	97	;'a'
   505  0109  3472               	retlw	114	;'r'
   506  010A  3461               	retlw	97	;'a'
   507  010B  3420               	retlw	32	;' '
   508  010C  3469               	retlw	105	;'i'
   509  010D  346E               	retlw	110	;'n'
   510  010E  3463               	retlw	99	;'c'
   511  010F  3472               	retlw	114	;'r'
   512  0110  3465               	retlw	101	;'e'
   513  0111  346D               	retlw	109	;'m'
   514  0112  3465               	retlw	101	;'e'
   515  0113  346E               	retlw	110	;'n'
   516  0114  3474               	retlw	116	;'t'
   517  0115  3461               	retlw	97	;'a'
   518  0116  3472               	retlw	114	;'r'
   519  0117  3420               	retlw	32	;' '
   520  0118  3465               	retlw	101	;'e'
   521  0119  346C               	retlw	108	;'l'
   522  011A  3420               	retlw	32	;' '
   523  011B  3463               	retlw	99	;'c'
   524  011C  346F               	retlw	111	;'o'
   525  011D  346E               	retlw	110	;'n'
   526  011E  3474               	retlw	116	;'t'
   527  011F  3461               	retlw	97	;'a'
   528  0120  3464               	retlw	100	;'d'
   529  0121  346F               	retlw	111	;'o'
   530  0122  3472               	retlw	114	;'r'
   531  0123  3420               	retlw	32	;' '
   532  0124  3470               	retlw	112	;'p'
   533  0125  3472               	retlw	114	;'r'
   534  0126  3465               	retlw	101	;'e'
   535  0127  3473               	retlw	115	;'s'
   536  0128  3469               	retlw	105	;'i'
   537  0129  346F               	retlw	111	;'o'
   538  012A  346E               	retlw	110	;'n'
   539  012B  3465               	retlw	101	;'e'
   540  012C  3420               	retlw	32	;' '
   541  012D  342B               	retlw	43	;'+'
   542  012E  340D               	retlw	13
   543  012F  3479               	retlw	121	;'y'
   544  0130  3420               	retlw	32	;' '
   545  0131  3470               	retlw	112	;'p'
   546  0132  3461               	retlw	97	;'a'
   547  0133  3472               	retlw	114	;'r'
   548  0134  3461               	retlw	97	;'a'
   549  0135  3420               	retlw	32	;' '
   550  0136  3464               	retlw	100	;'d'
   551  0137  3465               	retlw	101	;'e'
   552  0138  3463               	retlw	99	;'c'
   553  0139  3472               	retlw	114	;'r'
   554  013A  3465               	retlw	101	;'e'
   555  013B  346D               	retlw	109	;'m'
   556  013C  3465               	retlw	101	;'e'
   557  013D  346E               	retlw	110	;'n'
   558  013E  3474               	retlw	116	;'t'
   559  013F  3461               	retlw	97	;'a'
   560  0140  3472               	retlw	114	;'r'
   561  0141  3420               	retlw	32	;' '
   562  0142  342D               	retlw	45	;'-'
   563  0143  340D               	retlw	13
   564  0144  3400               	retlw	0
   565  0145                     STR_1:
   566  0145  3453               	retlw	83	;'S'
   567  0146  345F               	retlw	95	;'_'
   568  0147  3431               	retlw	49	;'1'
   569  0148  343A               	retlw	58	;':'
   570  0149  3420               	retlw	32	;' '
   571  014A  3420               	retlw	32	;' '
   572  014B  3453               	retlw	83	;'S'
   573  014C  345F               	retlw	95	;'_'
   574  014D  3432               	retlw	50	;'2'
   575  014E  343A               	retlw	58	;':'
   576  014F  3420               	retlw	32	;' '
   577  0150  3420               	retlw	32	;' '
   578  0151  3453               	retlw	83	;'S'
   579  0152  345F               	retlw	95	;'_'
   580  0153  3433               	retlw	51	;'3'
   581  0154  343A               	retlw	58	;':'
   582  0155  3400               	retlw	0
   583  0156                     STR_6:
   584  0156  340D               	retlw	13
   585  0157  3456               	retlw	86	;'V'
   586  0158  346F               	retlw	111	;'o'
   587  0159  346C               	retlw	108	;'l'
   588  015A  3474               	retlw	116	;'t'
   589  015B  3461               	retlw	97	;'a'
   590  015C  346A               	retlw	106	;'j'
   591  015D  3465               	retlw	101	;'e'
   592  015E  3431               	retlw	49	;'1'
   593  015F  343A               	retlw	58	;':'
   594  0160  3420               	retlw	32	;' '
   595  0161  3400               	retlw	0
   596  0162                     STR_9:
   597  0162  3456               	retlw	86	;'V'
   598  0163  346F               	retlw	111	;'o'
   599  0164  346C               	retlw	108	;'l'
   600  0165  3474               	retlw	116	;'t'
   601  0166  3461               	retlw	97	;'a'
   602  0167  346A               	retlw	106	;'j'
   603  0168  3465               	retlw	101	;'e'
   604  0169  3432               	retlw	50	;'2'
   605  016A  343A               	retlw	58	;':'
   606  016B  3420               	retlw	32	;' '
   607  016C  3400               	retlw	0
   608  016D                     STR_12:
   609  016D  342D               	retlw	45	;'-'
   610  016E  342D               	retlw	45	;'-'
   611  016F  342D               	retlw	45	;'-'
   612  0170  342D               	retlw	45	;'-'
   613  0171  342D               	retlw	45	;'-'
   614  0172  342D               	retlw	45	;'-'
   615  0173  342D               	retlw	45	;'-'
   616  0174  342D               	retlw	45	;'-'
   617  0175  342D               	retlw	45	;'-'
   618  0176  342D               	retlw	45	;'-'
   619  0177  3400               	retlw	0
   620  0178                     STR_8:
   621  0178  340D               	retlw	13
   622  0179  340D               	retlw	13
   623  017A  3400               	retlw	0
   624  017B                     STR_3:
   625  017B  3456               	retlw	86	;'V'
   626  017C  3420               	retlw	32	;' '
   627  017D  3400               	retlw	0
   628  017E                     STR_2:
   629  017E  342E               	retlw	46	;'.'
   630  017F  3400               	retlw	0
   631  0178                     
   632                           	psect	cinit
   633  000F                     start_initialization:	
   634                           ; #config settings
   635                           
   636  000F                     __initialization:
   637                           
   638                           ; Clear objects allocated to COMMON
   639  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   640  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   641  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   642                           
   643                           ; Clear objects allocated to BANK0
   644  0012  1283               	bcf	3,5	;RP0=0, select bank0
   645  0013  1303               	bcf	3,6	;RP1=0, select bank0
   646  0014  01AB               	clrf	__pbssBANK0& (0+127)
   647  0015  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   648  0016  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   649  0017  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   650  0018  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   651  0019  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   652  001A  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   653  001B  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   654  001C                     end_of_initialization:	
   655                           ;End of C runtime variable initialization code
   656                           
   657  001C                     __end_of__initialization:
   658  001C  0183               	clrf	3
   659  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   660                           
   661                           	psect	bssCOMMON
   662  0078                     __pbssCOMMON:
   663  0078                     _unidades:
   664  0078                     	ds	1
   665  0079                     _decenas:
   666  0079                     	ds	1
   667  007A                     _centenas:
   668  007A                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  002B                     __pbssBANK0:
   672  002B                     _dato:
   673  002B                     	ds	1
   674  002C                     _dato1:
   675  002C                     	ds	1
   676  002D                     _contador:
   677  002D                     	ds	1
   678  002E                     _residuo:
   679  002E                     	ds	1
   680  002F                     _voltaje_c:
   681  002F                     	ds	1
   682  0030                     _voltaje_b:
   683  0030                     	ds	1
   684  0031                     _voltaje2:
   685  0031                     	ds	1
   686  0032                     _voltaje1:
   687  0032                     	ds	1
   688                           
   689                           	psect	cstackCOMMON
   690  0070                     __pcstackCOMMON:
   691  0070                     ?_setup:
   692  0070                     ?_Lcd_Init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Clear:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Lcd_Write_String:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_division:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_Lcd_Write_Char:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_mensaje:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_mensaje1:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_config_USART:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_config_ADC:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_isr:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ??_isr:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_main:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_putch:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Port:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Cmd:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_printf:	
   738                           ; 1 bytes @ 0x0
   739                           
   740                           
   741                           ; 2 bytes @ 0x0
   742  0070                     	ds	3
   743  0073                     ??_config_USART:
   744  0073                     ??_config_ADC:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_putch:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??_Lcd_Port:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ?___awdiv:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ?___awmod:	
   757                           ; 2 bytes @ 0x3
   758                           
   759  0073                     putch@dato:	
   760                           ; 2 bytes @ 0x3
   761                           
   762  0073                     Lcd_Port@a:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     ___awmod@divisor:	
   769                           ; 2 bytes @ 0x3
   770                           
   771                           
   772                           ; 2 bytes @ 0x3
   773  0073                     	ds	1
   774  0074                     ??_Lcd_Write_Char:
   775  0074                     ??_printf:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??_Lcd_Cmd:	
   779                           ; 1 bytes @ 0x4
   780                           
   781                           
   782                           ; 1 bytes @ 0x4
   783  0074                     	ds	1
   784  0075                     config_ADC@frec:
   785  0075                     Lcd_Write_Char@a:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  0075                     printf@ap:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     ___awdiv@dividend:	
   792                           ; 1 bytes @ 0x5
   793                           
   794  0075                     ___awmod@dividend:	
   795                           ; 2 bytes @ 0x5
   796                           
   797                           
   798                           ; 2 bytes @ 0x5
   799  0075                     	ds	1
   800  0076                     ??_setup:
   801  0076                     Lcd_Cmd@a:	
   802                           ; 1 bytes @ 0x6
   803                           
   804  0076                     Lcd_Write_Char@temp:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0076                     printf@c:	
   808                           ; 1 bytes @ 0x6
   809                           
   810                           
   811                           ; 1 bytes @ 0x6
   812  0076                     	ds	1
   813  0077                     ??_Lcd_Clear:
   814  0077                     ?_Lcd_Set_Cursor:	
   815                           ; 1 bytes @ 0x7
   816                           
   817  0077                     ??___awdiv:	
   818                           ; 1 bytes @ 0x7
   819                           
   820  0077                     ??___awmod:	
   821                           ; 1 bytes @ 0x7
   822                           
   823  0077                     Lcd_Set_Cursor@b:	
   824                           ; 1 bytes @ 0x7
   825                           
   826  0077                     Lcd_Write_Char@y:	
   827                           ; 1 bytes @ 0x7
   828                           
   829  0077                     printf@f:	
   830                           ; 1 bytes @ 0x7
   831                           
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     ??_Lcd_Write_String:
   836                           
   837                           	psect	cstackBANK0
   838  0020                     __pcstackBANK0:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0020                     ??_Lcd_Init:
   842  0020                     ??_Lcd_Set_Cursor:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     ??_mensaje:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     ??_mensaje1:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     ___awdiv@counter:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     ___awmod@counter:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     Lcd_Write_String@i:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 2 bytes @ 0x0
   862  0020                     	ds	1
   863  0021                     ___awdiv@sign:
   864  0021                     ___awmod@sign:	
   865                           ; 1 bytes @ 0x1
   866                           
   867                           
   868                           ; 1 bytes @ 0x1
   869  0021                     	ds	1
   870  0022                     Lcd_Set_Cursor@a:
   871  0022                     Lcd_Write_String@a:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0022                     ___awdiv@quotient:	
   875                           ; 1 bytes @ 0x2
   876                           
   877                           
   878                           ; 2 bytes @ 0x2
   879  0022                     	ds	1
   880  0023                     Lcd_Set_Cursor@z:
   881                           
   882                           ; 1 bytes @ 0x3
   883  0023                     	ds	1
   884  0024                     ??_division:
   885  0024                     Lcd_Set_Cursor@y:	
   886                           ; 1 bytes @ 0x4
   887                           
   888                           
   889                           ; 1 bytes @ 0x4
   890  0024                     	ds	1
   891  0025                     Lcd_Set_Cursor@temp:
   892                           
   893                           ; 1 bytes @ 0x5
   894  0025                     	ds	2
   895  0027                     division@dividendo:
   896                           
   897                           ; 1 bytes @ 0x7
   898  0027                     	ds	1
   899  0028                     ??_main:
   900                           
   901                           ; 1 bytes @ 0x8
   902  0028                     	ds	3
   903                           
   904                           	psect	maintext
   905  0020                     __pmaintext:	
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 101 in file "main_02.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       3       0       0       0
   928 ;;      Totals:         0       3       0       0       0
   929 ;;Total ram usage:        3 bytes
   930 ;; Hardware stack levels required when called:    4
   931 ;; This function calls:
   932 ;;		_Lcd_Clear
   933 ;;		_Lcd_Init
   934 ;;		_Lcd_Set_Cursor
   935 ;;		_Lcd_Write_Char
   936 ;;		_Lcd_Write_String
   937 ;;		_division
   938 ;;		_mensaje
   939 ;;		_mensaje1
   940 ;;		_setup
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _main
   948  0020                     _main:
   949  0020                     l1874:	
   950                           ;incstack = 0
   951                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   952                           
   953                           
   954                           ;main_02.c: 102: 
   955  0020  120A  118A  24D1  120A  118A  	fcall	_setup
   956  0025                     l1876:
   957                           
   958                           ;main_02.c: 104: void mensaje(void){
   959  0025  120A  118A  242B  120A  118A  	fcall	_Lcd_Init
   960  002A                     l1878:
   961                           
   962                           ;main_02.c: 105:     printf("\rVoltaje1: ");
   963  002A  120A  118A  2568  120A  118A  	fcall	_Lcd_Clear
   964  002F                     l1880:
   965                           
   966                           ;main_02.c: 107:     TXREG = centenas;
   967  002F  01F7               	clrf	Lcd_Set_Cursor@b
   968  0030  0AF7               	incf	Lcd_Set_Cursor@b,f
   969  0031  3001               	movlw	1
   970  0032  120A  118A  2382  120A  118A  	fcall	_Lcd_Set_Cursor
   971  0037                     l1882:
   972                           
   973                           ;main_02.c: 108:     _delay((unsigned long)((100)*(4000000/4000.0)));
   974  0037  3040               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   975  0038  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
   976  003D                     l102:	
   977                           ;main_02.c: 110:     _delay((unsigned long)((100)*(4000000/4000.0)));
   978                           
   979                           
   980                           ;main_02.c: 112:     _delay((unsigned long)((100)*(4000000/4000.0)));
   981  003D  1283               	bcf	3,5	;RP0=0, select bank0
   982  003E  1303               	bcf	3,6	;RP1=0, select bank0
   983  003F  0832               	movf	_voltaje1,w
   984  0040  120A  118A  225A  120A  118A  	fcall	_division
   985                           
   986                           ;main_02.c: 113:     TXREG = unidades;
   987  0045  01F7               	clrf	Lcd_Set_Cursor@b
   988  0046  0AF7               	incf	Lcd_Set_Cursor@b,f
   989  0047  3002               	movlw	2
   990  0048  120A  118A  2382  120A  118A  	fcall	_Lcd_Set_Cursor
   991                           
   992                           ;main_02.c: 114:     _delay((unsigned long)((100)*(4000000/4000.0)));
   993  004D  087A               	movf	_centenas,w
   994  004E  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
   995  0053                     l1884:
   996                           
   997                           ;main_02.c: 115:     printf("\r\r");
   998  0053  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   999  0054  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1000  0059                     l1886:
  1001                           
  1002                           ;main_02.c: 116: 
  1003  0059  0879               	movf	_decenas,w
  1004  005A  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1005  005F                     l1888:
  1006                           
  1007                           ;main_02.c: 117:     return;
  1008  005F  0878               	movf	_unidades,w
  1009  0060  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1010  0065                     l1890:
  1011                           
  1012                           ;main_02.c: 118: }
  1013  0065  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1014  0066  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1015  006B                     l1892:
  1016                           
  1017                           ;main_02.c: 119: 
  1018  006B  120A  118A  23DA  120A  118A  	fcall	_mensaje
  1019  0070                     l1894:
  1020                           
  1021                           ;main_02.c: 121:     printf("Voltaje2: ");
  1022  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0072  0831               	movf	_voltaje2,w
  1025  0073  120A  118A  225A  120A  118A  	fcall	_division
  1026  0078                     l1896:
  1027                           
  1028                           ;main_02.c: 122:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1029  0078  087A               	movf	_centenas,w
  1030  0079  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1031  007E                     l1898:
  1032                           
  1033                           ;main_02.c: 123:     TXREG = centenas;
  1034  007E  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1035  007F  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1036                           
  1037                           ;main_02.c: 124:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1038  0084  0879               	movf	_decenas,w
  1039  0085  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1040                           
  1041                           ;main_02.c: 125:     printf(".");
  1042  008A  0878               	movf	_unidades,w
  1043  008B  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1044  0090                     l1900:
  1045                           
  1046                           ;main_02.c: 126:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1047  0090  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1048  0091  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1049  0096                     l1902:
  1050                           
  1051                           ;main_02.c: 127:     TXREG = decenas;
  1052  0096  120A  118A  2180  120A  118A  	fcall	_mensaje1
  1053  009B                     l103:	
  1054                           ;main_02.c: 129:     TXREG = unidades;
  1055                           
  1056  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1057  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1058  009D  1E8C               	btfss	12,5	;volatile
  1059  009E  28A0               	goto	u931
  1060  009F  28A1               	goto	u930
  1061  00A0                     u931:
  1062  00A0  289B               	goto	l103
  1063  00A1                     u930:
  1064  00A1                     l1904:
  1065                           
  1066                           ;main_02.c: 130:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1067  00A1  302B               	movlw	43
  1068  00A2  061A               	xorwf	26,w	;volatile
  1069  00A3  1D03               	btfss	3,2
  1070  00A4  28A6               	goto	u941
  1071  00A5  28A7               	goto	u940
  1072  00A6                     u941:
  1073  00A6  28AC               	goto	l1910
  1074  00A7                     u940:
  1075  00A7                     l1906:
  1076                           
  1077                           ;main_02.c: 131:     printf("\r\r");
  1078  00A7  3001               	movlw	1
  1079  00A8  00A8               	movwf	??_main
  1080  00A9  0828               	movf	??_main,w
  1081  00AA  07AD               	addwf	_contador,f
  1082  00AB                     l1908:
  1083                           
  1084                           ;main_02.c: 133:     printf("----------");
  1085  00AB  019A               	clrf	26	;volatile
  1086  00AC                     l1910:
  1087                           
  1088                           ;main_02.c: 135:     printf("\rPara incrementar el contador presione +\ry para decrement
      +                          ar -\r");
  1089  00AC  302D               	movlw	45
  1090  00AD  061A               	xorwf	26,w	;volatile
  1091  00AE  1D03               	btfss	3,2
  1092  00AF  28B1               	goto	u951
  1093  00B0  28B2               	goto	u950
  1094  00B1                     u951:
  1095  00B1  28BB               	goto	l1916
  1096  00B2                     u950:
  1097  00B2                     l1912:
  1098                           
  1099                           ;main_02.c: 136: 
  1100  00B2  3001               	movlw	1
  1101  00B3  02AD               	subwf	_contador,f
  1102                           
  1103                           ;main_02.c: 137:     return;
  1104  00B4  0A2D               	incf	_contador,w
  1105  00B5  1D03               	btfss	3,2
  1106  00B6  28B8               	goto	u961
  1107  00B7  28B9               	goto	u960
  1108  00B8                     u961:
  1109  00B8  28BA               	goto	l108
  1110  00B9                     u960:
  1111  00B9                     l1914:
  1112  00B9  01AD               	clrf	_contador
  1113  00BA                     l108:
  1114                           
  1115                           ;main_02.c: 138: }
  1116  00BA  019A               	clrf	26	;volatile
  1117  00BB                     l1916:	
  1118                           ;main_02.c: 139: 
  1119                           
  1120                           
  1121                           ;main_02.c: 143:     return;
  1122  00BB  082D               	movf	_contador,w
  1123  00BC  120A  118A  225A  120A  118A  	fcall	_division
  1124                           
  1125                           ;main_02.c: 144: }
  1126  00C1  087A               	movf	_centenas,w
  1127  00C2  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1128                           
  1129                           ;main_02.c: 145: 
  1130  00C7  0879               	movf	_decenas,w
  1131  00C8  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1132                           
  1133                           ;main_02.c: 146: void division (char dividendo){
  1134  00CD  0878               	movf	_unidades,w
  1135  00CE  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1136  00D3                     l1918:
  1137                           
  1138                           ;main_02.c: 150:     decenas = residuo/10;
  1139  00D3  3006               	movlw	6
  1140  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1141  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1142  00D6  00AA               	movwf	??_main+2
  1143  00D7  3013               	movlw	19
  1144  00D8  00A9               	movwf	??_main+1
  1145  00D9  30AD               	movlw	173
  1146  00DA  00A8               	movwf	??_main
  1147  00DB                     u987:
  1148  00DB  0BA8               	decfsz	??_main,f
  1149  00DC  28DB               	goto	u987
  1150  00DD  0BA9               	decfsz	??_main+1,f
  1151  00DE  28DB               	goto	u987
  1152  00DF  0BAA               	decfsz	??_main+2,f
  1153  00E0  28DB               	goto	u987
  1154  00E1                     l1920:
  1155                           
  1156                           ;main_02.c: 152: 
  1157  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1158  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1159  00E3  189F               	btfsc	31,1	;volatile
  1160  00E4  28E6               	goto	u971
  1161  00E5  28E7               	goto	u970
  1162  00E6                     u971:
  1163  00E6  283D               	goto	l102
  1164  00E7                     u970:
  1165  00E7                     l1922:
  1166                           
  1167                           ;main_02.c: 153:     centenas += 48;
  1168  00E7  3020               	movlw	32
  1169  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00EA  00A8               	movwf	??_main
  1172  00EB                     u997:
  1173  00EB  0BA8               	decfsz	??_main,f
  1174  00EC  28EB               	goto	u997
  1175  00ED  0000               	nop
  1176  00EE                     l1924:
  1177                           
  1178                           ;main_02.c: 154:     decenas += 48;
  1179  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1180  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1181  00F0  149F               	bsf	31,1	;volatile
  1182  00F1  283D               	goto	l102
  1183  00F2  120A  118A  280C   	ljmp	start
  1184  00F5                     __end_of_main:
  1185                           
  1186                           	psect	text1
  1187  04D1                     __ptext1:	
  1188 ;; *************** function _setup *****************
  1189 ;; Defined at:
  1190 ;;		line 222 in file "main_02.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1204 ;;      Params:         0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    2
  1211 ;; This function calls:
  1212 ;;		_config_ADC
  1213 ;;		_config_USART
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           
  1220                           ;psect for function _setup
  1221  04D1                     _setup:
  1222  04D1                     l1466:	
  1223                           ;incstack = 0
  1224                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1225                           
  1226  04D1  3003               	movlw	3
  1227  04D2  1683               	bsf	3,5	;RP0=1, select bank3
  1228  04D3  1703               	bsf	3,6	;RP1=1, select bank3
  1229  04D4  0088               	movwf	8	;volatile
  1230  04D5                     l1468:
  1231  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1232  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1233  04D7  1405               	bsf	5,0	;volatile
  1234  04D8                     l1470:
  1235  04D8  1485               	bsf	5,1	;volatile
  1236  04D9                     l1472:
  1237  04D9  0188               	clrf	8	;volatile
  1238  04DA                     l1474:
  1239  04DA  0189               	clrf	9	;volatile
  1240  04DB                     l1476:
  1241  04DB  120F               	bcf	15,4	;volatile
  1242  04DC                     l1478:
  1243  04DC  168F               	bsf	15,5	;volatile
  1244  04DD                     l1480:
  1245  04DD  170F               	bsf	15,6	;volatile
  1246  04DE                     l1482:
  1247  04DE  140F               	bsf	15,0	;volatile
  1248  04DF                     l1484:
  1249  04DF  170C               	bsf	12,6	;volatile
  1250  04E0                     l1486:
  1251  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1252  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1253  04E2  130C               	bcf	12,6	;volatile
  1254  04E3                     l1488:
  1255  04E3  178B               	bsf	11,7	;volatile
  1256  04E4                     l1490:
  1257  04E4  170B               	bsf	11,6	;volatile
  1258  04E5                     l1492:
  1259  04E5  0185               	clrf	5	;volatile
  1260  04E6                     l1494:
  1261  04E6  0186               	clrf	6	;volatile
  1262  04E7                     l1496:
  1263  04E7  0187               	clrf	7	;volatile
  1264  04E8                     l1498:
  1265  04E8  0188               	clrf	8	;volatile
  1266  04E9                     l1500:
  1267  04E9  0189               	clrf	9	;volatile
  1268  04EA                     l1502:
  1269  04EA  120A  118A  2532  120A  118A  	fcall	_config_USART
  1270  04EF                     l1504:
  1271  04EF  3001               	movlw	1
  1272  04F0  120A  118A  22C2  120A  118A  	fcall	_config_ADC
  1273  04F5                     l131:
  1274  04F5  0008               	return
  1275  04F6                     __end_of_setup:
  1276                           
  1277                           	psect	text2
  1278  0532                     __ptext2:	
  1279 ;; *************** function _config_USART *****************
  1280 ;; Defined at:
  1281 ;;		line 11 in file "config_USART.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_setup
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _config_USART
  1311  0532                     _config_USART:
  1312  0532                     l1270:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _config_USART: [wreg+status,2]
  1315                           
  1316                           
  1317                           ;config_USART.c: 13:     SPBRG = 103;
  1318  0532  3067               	movlw	103
  1319  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1320  0534  1303               	bcf	3,6	;RP1=0, select bank1
  1321  0535  0099               	movwf	25	;volatile
  1322  0536                     l1272:
  1323                           
  1324                           ;config_USART.c: 14:     SPBRGH = 0;
  1325  0536  019A               	clrf	26	;volatile
  1326  0537                     l1274:
  1327                           
  1328                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1329  0537  1683               	bsf	3,5	;RP0=1, select bank3
  1330  0538  1703               	bsf	3,6	;RP1=1, select bank3
  1331  0539  1587               	bsf	7,3	;volatile
  1332  053A                     l1276:
  1333                           
  1334                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1335  053A  1683               	bsf	3,5	;RP0=1, select bank1
  1336  053B  1303               	bcf	3,6	;RP1=0, select bank1
  1337  053C  1518               	bsf	24,2	;volatile
  1338  053D                     l1278:
  1339                           
  1340                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1341  053D  1218               	bcf	24,4	;volatile
  1342  053E                     l1280:
  1343                           
  1344                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1345  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1346  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0540  1798               	bsf	24,7	;volatile
  1348  0541                     l1282:
  1349                           
  1350                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1351  0541  1618               	bsf	24,4	;volatile
  1352  0542                     l1284:
  1353                           
  1354                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1355  0542  1683               	bsf	3,5	;RP0=1, select bank1
  1356  0543  1303               	bcf	3,6	;RP1=0, select bank1
  1357  0544  1318               	bcf	24,6	;volatile
  1358  0545                     l1286:
  1359                           
  1360                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1361  0545  1698               	bsf	24,5	;volatile
  1362  0546                     l1288:
  1363                           
  1364                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1365  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0548  1318               	bcf	24,6	;volatile
  1368  0549                     l1290:
  1369                           
  1370                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1371  0549  178B               	bsf	11,7	;volatile
  1372  054A                     l1292:
  1373                           
  1374                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1375  054A  170B               	bsf	11,6	;volatile
  1376  054B                     l1294:
  1377                           
  1378                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1379  054B  120C               	bcf	12,4	;volatile
  1380  054C                     l1296:
  1381                           
  1382                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1383  054C  128C               	bcf	12,5	;volatile
  1384  054D                     l163:
  1385  054D  0008               	return
  1386  054E                     __end_of_config_USART:
  1387                           
  1388                           	psect	text3
  1389  02C2                     __ptext3:	
  1390 ;; *************** function _config_ADC *****************
  1391 ;; Defined at:
  1392 ;;		line 15 in file "config_ADC.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  frec            1    wreg     unsigned char 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  frec            1    5[COMMON] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0
  1408 ;;      Temps:          2       0       0       0       0
  1409 ;;      Totals:         3       0       0       0       0
  1410 ;;Total ram usage:        3 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    1
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_setup
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _config_ADC
  1422  02C2                     _config_ADC:
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  1426                           ;config_ADC@frec stored from wreg
  1427  02C2  00F5               	movwf	config_ADC@frec
  1428  02C3                     l1300:
  1429                           
  1430                           ;config_ADC.c: 16:     switch(frec){
  1431  02C3  2B10               	goto	l1368
  1432  02C4                     l1302:
  1433                           
  1434                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  1435  02C4  30C3               	movlw	-61
  1436  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1437  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1438  02C7  059F               	andwf	31,f	;volatile
  1439  02C8                     l1304:
  1440                           
  1441                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1442  02C8  3021               	movlw	33
  1443  02C9  00F3               	movwf	??_config_ADC
  1444  02CA                     u1007:
  1445  02CA  0BF3               	decfsz	??_config_ADC,f
  1446  02CB  2ACA               	goto	u1007
  1447  02CC                     l1306:
  1448                           
  1449                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1450  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1451  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1452  02CE  131F               	bcf	31,6	;volatile
  1453  02CF                     l1308:
  1454                           
  1455                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1456  02CF  139F               	bcf	31,7	;volatile
  1457  02D0                     l1310:
  1458                           
  1459                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1460  02D0  141F               	bsf	31,0	;volatile
  1461  02D1                     l1312:
  1462                           
  1463                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1464  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1465  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  1466  02D3  139F               	bcf	31,7	;volatile
  1467  02D4                     l1314:
  1468                           
  1469                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1470  02D4  129F               	bcf	31,5	;volatile
  1471  02D5                     l1316:
  1472                           
  1473                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1474  02D5  121F               	bcf	31,4	;volatile
  1475                           
  1476                           ;config_ADC.c: 27:             break;
  1477  02D6  2B26               	goto	l146
  1478  02D7                     l1318:
  1479                           
  1480                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1481  02D7  30C3               	movlw	-61
  1482  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1483  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1484  02DA  059F               	andwf	31,f	;volatile
  1485  02DB                     l1320:
  1486                           
  1487                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1488  02DB  3021               	movlw	33
  1489  02DC  00F3               	movwf	??_config_ADC
  1490  02DD                     u1017:
  1491  02DD  0BF3               	decfsz	??_config_ADC,f
  1492  02DE  2ADD               	goto	u1017
  1493  02DF                     l1322:
  1494                           
  1495                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1496  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1497  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1498  02E1  171F               	bsf	31,6	;volatile
  1499  02E2                     l1324:
  1500                           
  1501                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1502  02E2  139F               	bcf	31,7	;volatile
  1503  02E3                     l1326:
  1504                           
  1505                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1506  02E3  141F               	bsf	31,0	;volatile
  1507  02E4                     l1328:
  1508                           
  1509                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1510  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  1511  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  1512  02E6  139F               	bcf	31,7	;volatile
  1513  02E7                     l1330:
  1514                           
  1515                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1516  02E7  129F               	bcf	31,5	;volatile
  1517  02E8                     l1332:
  1518                           
  1519                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1520  02E8  121F               	bcf	31,4	;volatile
  1521                           
  1522                           ;config_ADC.c: 38:             break;
  1523  02E9  2B26               	goto	l146
  1524  02EA                     l1334:
  1525                           
  1526                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  1527  02EA  30C3               	movlw	-61
  1528  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1529  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1530  02ED  059F               	andwf	31,f	;volatile
  1531  02EE                     l1336:
  1532                           
  1533                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1534  02EE  3021               	movlw	33
  1535  02EF  00F3               	movwf	??_config_ADC
  1536  02F0                     u1027:
  1537  02F0  0BF3               	decfsz	??_config_ADC,f
  1538  02F1  2AF0               	goto	u1027
  1539  02F2                     l1338:
  1540                           
  1541                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  1542  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1543  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1544  02F4  131F               	bcf	31,6	;volatile
  1545  02F5                     l1340:
  1546                           
  1547                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1548  02F5  179F               	bsf	31,7	;volatile
  1549  02F6                     l1342:
  1550                           
  1551                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1552  02F6  141F               	bsf	31,0	;volatile
  1553  02F7                     l1344:
  1554                           
  1555                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1556  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1557  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1558  02F9  139F               	bcf	31,7	;volatile
  1559  02FA                     l1346:
  1560                           
  1561                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1562  02FA  129F               	bcf	31,5	;volatile
  1563  02FB                     l1348:
  1564                           
  1565                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1566  02FB  121F               	bcf	31,4	;volatile
  1567                           
  1568                           ;config_ADC.c: 49:             break;
  1569  02FC  2B26               	goto	l146
  1570  02FD                     l1350:
  1571                           
  1572                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1573  02FD  30C3               	movlw	-61
  1574  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1575  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0300  059F               	andwf	31,f	;volatile
  1577  0301                     l1352:
  1578                           
  1579                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1580  0301  3021               	movlw	33
  1581  0302  00F3               	movwf	??_config_ADC
  1582  0303                     u1037:
  1583  0303  0BF3               	decfsz	??_config_ADC,f
  1584  0304  2B03               	goto	u1037
  1585  0305                     l1354:
  1586                           
  1587                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1588  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0307  171F               	bsf	31,6	;volatile
  1591  0308                     l1356:
  1592                           
  1593                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1594  0308  179F               	bsf	31,7	;volatile
  1595  0309                     l1358:
  1596                           
  1597                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1598  0309  141F               	bsf	31,0	;volatile
  1599  030A                     l1360:
  1600                           
  1601                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  1602  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1603  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1604  030C  139F               	bcf	31,7	;volatile
  1605  030D                     l1362:
  1606                           
  1607                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  1608  030D  129F               	bcf	31,5	;volatile
  1609  030E                     l1364:
  1610                           
  1611                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  1612  030E  121F               	bcf	31,4	;volatile
  1613                           
  1614                           ;config_ADC.c: 60:             break;
  1615  030F  2B26               	goto	l146
  1616  0310                     l1368:
  1617  0310  0875               	movf	config_ADC@frec,w
  1618  0311  00F3               	movwf	??_config_ADC
  1619  0312  01F4               	clrf	??_config_ADC+1
  1620                           
  1621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1622                           ; Switch size 1, requested type "simple"
  1623                           ; Number of cases is 1, Range of values is 0 to 0
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte            4     3 (average)
  1627                           ; direct_byte           11     8 (fixed)
  1628                           ; jumptable            260     6 (fixed)
  1629                           ;	Chosen strategy is simple_byte
  1630  0313  0874               	movf	??_config_ADC+1,w
  1631  0314  3A00               	xorlw	0	; case 0
  1632  0315  1903               	skipnz
  1633  0316  2B18               	goto	l1950
  1634  0317  2B26               	goto	l146
  1635  0318                     l1950:
  1636                           
  1637                           ; Switch size 1, requested type "simple"
  1638                           ; Number of cases is 4, Range of values is 0 to 3
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           13     7 (average)
  1642                           ; direct_byte           20     8 (fixed)
  1643                           ; jumptable            260     6 (fixed)
  1644                           ;	Chosen strategy is simple_byte
  1645  0318  0873               	movf	??_config_ADC,w
  1646  0319  3A00               	xorlw	0	; case 0
  1647  031A  1903               	skipnz
  1648  031B  2AC4               	goto	l1302
  1649  031C  3A01               	xorlw	1	; case 1
  1650  031D  1903               	skipnz
  1651  031E  2AD7               	goto	l1318
  1652  031F  3A03               	xorlw	3	; case 2
  1653  0320  1903               	skipnz
  1654  0321  2AEA               	goto	l1334
  1655  0322  3A01               	xorlw	1	; case 3
  1656  0323  1903               	skipnz
  1657  0324  2AFD               	goto	l1350
  1658  0325  2B26               	goto	l146
  1659  0326                     l146:
  1660  0326  0008               	return
  1661  0327                     __end_of_config_ADC:
  1662                           
  1663                           	psect	text4
  1664  0180                     __ptext4:	
  1665 ;; *************** function _mensaje1 *****************
  1666 ;; Defined at:
  1667 ;;		line 181 in file "main_02.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1681 ;;      Params:         0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0
  1683 ;;      Temps:          0       2       0       0       0
  1684 ;;      Totals:         0       2       0       0       0
  1685 ;;Total ram usage:        2 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		_printf
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _mensaje1
  1697  0180                     _mensaje1:
  1698  0180                     l1854:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _mensaje1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1701                           
  1702                           
  1703                           ;main_02.c: 182:     INTCONbits.PEIE = 1;
  1704  0180  305D               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1705  0181  120A  118A  24F6  120A  118A  	fcall	_printf
  1706  0186                     l1856:
  1707                           
  1708                           ;main_02.c: 183: 
  1709  0186  3082               	movlw	130
  1710  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0189  00A1               	movwf	??_mensaje1+1
  1713  018A  30DD               	movlw	221
  1714  018B  00A0               	movwf	??_mensaje1
  1715  018C                     u1047:
  1716  018C  0BA0               	decfsz	??_mensaje1,f
  1717  018D  298C               	goto	u1047
  1718  018E  0BA1               	decfsz	??_mensaje1+1,f
  1719  018F  298C               	goto	u1047
  1720  0190                     l1858:
  1721                           
  1722                           ;main_02.c: 184: 
  1723  0190  087A               	movf	_centenas,w
  1724  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0193  0099               	movwf	25	;volatile
  1727  0194                     l1860:
  1728                           
  1729                           ;main_02.c: 185:     PORTA = 0x00;
  1730  0194  3082               	movlw	130
  1731  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0197  00A1               	movwf	??_mensaje1+1
  1734  0198  30DD               	movlw	221
  1735  0199  00A0               	movwf	??_mensaje1
  1736  019A                     u1057:
  1737  019A  0BA0               	decfsz	??_mensaje1,f
  1738  019B  299A               	goto	u1057
  1739  019C  0BA1               	decfsz	??_mensaje1+1,f
  1740  019D  299A               	goto	u1057
  1741  019E                     l1862:
  1742                           
  1743                           ;main_02.c: 186:     PORTB = 0x00;
  1744  019E  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1745  019F  120A  118A  24F6  120A  118A  	fcall	_printf
  1746                           
  1747                           ;main_02.c: 187:     PORTC = 0x00;
  1748  01A4  3082               	movlw	130
  1749  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1750  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1751  01A7  00A1               	movwf	??_mensaje1+1
  1752  01A8  30DD               	movlw	221
  1753  01A9  00A0               	movwf	??_mensaje1
  1754  01AA                     u1067:
  1755  01AA  0BA0               	decfsz	??_mensaje1,f
  1756  01AB  29AA               	goto	u1067
  1757  01AC  0BA1               	decfsz	??_mensaje1+1,f
  1758  01AD  29AA               	goto	u1067
  1759                           
  1760                           ;main_02.c: 188:     PORTD = 0x00;
  1761  01AE  0879               	movf	_decenas,w
  1762  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1763  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1764  01B1  0099               	movwf	25	;volatile
  1765                           
  1766                           ;main_02.c: 189:     PORTE = 0x00;
  1767  01B2  3082               	movlw	130
  1768  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1769  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1770  01B5  00A1               	movwf	??_mensaje1+1
  1771  01B6  30DD               	movlw	221
  1772  01B7  00A0               	movwf	??_mensaje1
  1773  01B8                     u1077:
  1774  01B8  0BA0               	decfsz	??_mensaje1,f
  1775  01B9  29B8               	goto	u1077
  1776  01BA  0BA1               	decfsz	??_mensaje1+1,f
  1777  01BB  29B8               	goto	u1077
  1778                           
  1779                           ;main_02.c: 190: 
  1780  01BC  0878               	movf	_unidades,w
  1781  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1782  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1783  01BF  0099               	movwf	25	;volatile
  1784                           
  1785                           ;main_02.c: 191: 
  1786  01C0  3082               	movlw	130
  1787  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1788  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1789  01C3  00A1               	movwf	??_mensaje1+1
  1790  01C4  30DD               	movlw	221
  1791  01C5  00A0               	movwf	??_mensaje1
  1792  01C6                     u1087:
  1793  01C6  0BA0               	decfsz	??_mensaje1,f
  1794  01C7  29C6               	goto	u1087
  1795  01C8  0BA1               	decfsz	??_mensaje1+1,f
  1796  01C9  29C6               	goto	u1087
  1797  01CA                     l1864:
  1798                           
  1799                           ;main_02.c: 192:     config_USART();
  1800  01CA  3073               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1801  01CB  120A  118A  24F6  120A  118A  	fcall	_printf
  1802  01D0                     l1866:
  1803                           
  1804                           ;main_02.c: 193: 
  1805  01D0  3082               	movlw	130
  1806  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1807  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1808  01D3  00A1               	movwf	??_mensaje1+1
  1809  01D4  30DD               	movlw	221
  1810  01D5  00A0               	movwf	??_mensaje1
  1811  01D6                     u1097:
  1812  01D6  0BA0               	decfsz	??_mensaje1,f
  1813  01D7  29D6               	goto	u1097
  1814  01D8  0BA1               	decfsz	??_mensaje1+1,f
  1815  01D9  29D6               	goto	u1097
  1816                           
  1817                           ;main_02.c: 194:     config_ADC(1);
  1818  01DA  3068               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1819  01DB  120A  118A  24F6  120A  118A  	fcall	_printf
  1820  01E0                     l1868:
  1821                           
  1822                           ;main_02.c: 195:     return;
  1823  01E0  3082               	movlw	130
  1824  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1825  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1826  01E3  00A1               	movwf	??_mensaje1+1
  1827  01E4  30DD               	movlw	221
  1828  01E5  00A0               	movwf	??_mensaje1
  1829  01E6                     u1107:
  1830  01E6  0BA0               	decfsz	??_mensaje1,f
  1831  01E7  29E6               	goto	u1107
  1832  01E8  0BA1               	decfsz	??_mensaje1+1,f
  1833  01E9  29E6               	goto	u1107
  1834  01EA                     l1870:
  1835                           
  1836                           ;main_02.c: 196: }
  1837  01EA  3001               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1838  01EB  120A  118A  24F6  120A  118A  	fcall	_printf
  1839  01F0                     l119:
  1840  01F0  0008               	return
  1841  01F1                     __end_of_mensaje1:
  1842                           
  1843                           	psect	text5
  1844  03DA                     __ptext5:	
  1845 ;; *************** function _mensaje *****************
  1846 ;; Defined at:
  1847 ;;		line 165 in file "main_02.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          0       2       0       0       0
  1864 ;;      Totals:         0       2       0       0       0
  1865 ;;Total ram usage:        2 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    3
  1868 ;; This function calls:
  1869 ;;		_printf
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _mensaje
  1877  03DA                     _mensaje:
  1878  03DA                     l1840:	
  1879                           ;incstack = 0
  1880                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1881                           
  1882                           
  1883                           ;main_02.c: 166: 
  1884  03DA  3051               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1885  03DB  120A  118A  24F6  120A  118A  	fcall	_printf
  1886  03E0                     l1842:
  1887                           
  1888                           ;main_02.c: 167: 
  1889  03E0  3082               	movlw	130
  1890  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1891  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1892  03E3  00A1               	movwf	??_mensaje+1
  1893  03E4  30DD               	movlw	221
  1894  03E5  00A0               	movwf	??_mensaje
  1895  03E6                     u1117:
  1896  03E6  0BA0               	decfsz	??_mensaje,f
  1897  03E7  2BE6               	goto	u1117
  1898  03E8  0BA1               	decfsz	??_mensaje+1,f
  1899  03E9  2BE6               	goto	u1117
  1900  03EA                     l1844:
  1901                           
  1902                           ;main_02.c: 168:     TRISD = 0x00;
  1903  03EA  087A               	movf	_centenas,w
  1904  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1905  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1906  03ED  0099               	movwf	25	;volatile
  1907  03EE                     l1846:
  1908                           
  1909                           ;main_02.c: 169:     TRISE = 0x00;
  1910  03EE  3082               	movlw	130
  1911  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1912  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1913  03F1  00A1               	movwf	??_mensaje+1
  1914  03F2  30DD               	movlw	221
  1915  03F3  00A0               	movwf	??_mensaje
  1916  03F4                     u1127:
  1917  03F4  0BA0               	decfsz	??_mensaje,f
  1918  03F5  2BF4               	goto	u1127
  1919  03F6  0BA1               	decfsz	??_mensaje+1,f
  1920  03F7  2BF4               	goto	u1127
  1921  03F8                     l1848:
  1922                           
  1923                           ;main_02.c: 170: 
  1924  03F8  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1925  03F9  120A  118A  24F6  120A  118A  	fcall	_printf
  1926                           
  1927                           ;main_02.c: 171: 
  1928  03FE  3082               	movlw	130
  1929  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0401  00A1               	movwf	??_mensaje+1
  1932  0402  30DD               	movlw	221
  1933  0403  00A0               	movwf	??_mensaje
  1934  0404                     u1137:
  1935  0404  0BA0               	decfsz	??_mensaje,f
  1936  0405  2C04               	goto	u1137
  1937  0406  0BA1               	decfsz	??_mensaje+1,f
  1938  0407  2C04               	goto	u1137
  1939                           
  1940                           ;main_02.c: 172: 
  1941  0408  0879               	movf	_decenas,w
  1942  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1943  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1944  040B  0099               	movwf	25	;volatile
  1945                           
  1946                           ;main_02.c: 173:     OSCCONbits.IRCF0 = 0;
  1947  040C  3082               	movlw	130
  1948  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1949  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1950  040F  00A1               	movwf	??_mensaje+1
  1951  0410  30DD               	movlw	221
  1952  0411  00A0               	movwf	??_mensaje
  1953  0412                     u1147:
  1954  0412  0BA0               	decfsz	??_mensaje,f
  1955  0413  2C12               	goto	u1147
  1956  0414  0BA1               	decfsz	??_mensaje+1,f
  1957  0415  2C12               	goto	u1147
  1958                           
  1959                           ;main_02.c: 174:     OSCCONbits.IRCF1 = 1;
  1960  0416  0878               	movf	_unidades,w
  1961  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0419  0099               	movwf	25	;volatile
  1964                           
  1965                           ;main_02.c: 175:     OSCCONbits.IRCF2 = 1;
  1966  041A  3082               	movlw	130
  1967  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1968  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1969  041D  00A1               	movwf	??_mensaje+1
  1970  041E  30DD               	movlw	221
  1971  041F  00A0               	movwf	??_mensaje
  1972  0420                     u1157:
  1973  0420  0BA0               	decfsz	??_mensaje,f
  1974  0421  2C20               	goto	u1157
  1975  0422  0BA1               	decfsz	??_mensaje+1,f
  1976  0423  2C20               	goto	u1157
  1977  0424                     l1850:
  1978                           
  1979                           ;main_02.c: 176:     OSCCONbits.SCS = 1;
  1980  0424  3073               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1981  0425  120A  118A  24F6  120A  118A  	fcall	_printf
  1982  042A                     l116:
  1983  042A  0008               	return
  1984  042B                     __end_of_mensaje:
  1985                           
  1986                           	psect	text6
  1987  04F6                     __ptext6:	
  1988 ;; *************** function _printf *****************
  1989 ;; Defined at:
  1990 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  f               1    wreg     PTR const unsigned char 
  1993 ;;		 -> STR_13(63), STR_12(11), STR_11(3), STR_10(2), 
  1994 ;;		 -> STR_9(11), STR_8(3), STR_7(2), STR_6(12), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  f               1    7[COMMON] PTR const unsigned char 
  1997 ;;		 -> STR_13(63), STR_12(11), STR_11(3), STR_10(2), 
  1998 ;;		 -> STR_9(11), STR_8(3), STR_7(2), STR_6(12), 
  1999 ;;  tmpval          4    0        struct .
  2000 ;;  cp              2    0        PTR const unsigned char 
  2001 ;;  len             2    0        unsigned int 
  2002 ;;  val             2    0        unsigned int 
  2003 ;;  c               1    6[COMMON] unsigned char 
  2004 ;;  ap              1    5[COMMON] PTR void [1]
  2005 ;;		 -> ?_printf(2), 
  2006 ;;  flag            1    0        unsigned char 
  2007 ;;  prec            1    0        char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2   32[None  ] int 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         3       0       0       0       0
  2019 ;;      Temps:          1       0       0       0       0
  2020 ;;      Totals:         4       0       0       0       0
  2021 ;;Total ram usage:        4 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    2
  2024 ;; This function calls:
  2025 ;;		_putch
  2026 ;; This function is called by:
  2027 ;;		_mensaje
  2028 ;;		_mensaje1
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _printf
  2034  04F6                     _printf:
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2038                           ;printf@f stored from wreg
  2039  04F6  00F7               	movwf	printf@f
  2040  04F7                     l1264:
  2041                           
  2042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  2043  04F7  3070               	movlw	(low (?_printf| 0))& (0+255)
  2044  04F8  00F4               	movwf	??_printf
  2045  04F9  0874               	movf	??_printf,w
  2046  04FA  00F5               	movwf	printf@ap
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2049  04FB  2D02               	goto	l1268
  2050  04FC                     l1266:
  2051                           
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  2053  04FC  0876               	movf	printf@c,w
  2054  04FD  120A  118A  2575  120A  118A  	fcall	_putch
  2055  0502                     l1268:	
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2057                           
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2060  0502  3001               	movlw	1
  2061  0503  07F7               	addwf	printf@f,f
  2062  0504  30FF               	movlw	-1
  2063  0505  0777               	addwf	printf@f,w
  2064  0506  0084               	movwf	4
  2065  0507  120A  118A  2100  120A  118A  	fcall	stringdir
  2066  050C  00F4               	movwf	??_printf
  2067  050D  0874               	movf	??_printf,w
  2068  050E  00F6               	movwf	printf@c
  2069  050F  0876               	movf	printf@c,w
  2070  0510  1D03               	btfss	3,2
  2071  0511  2D13               	goto	u361
  2072  0512  2D14               	goto	u360
  2073  0513                     u361:
  2074  0513  2CFC               	goto	l1266
  2075  0514                     u360:
  2076  0514                     l294:
  2077  0514  0008               	return
  2078  0515                     __end_of_printf:
  2079                           
  2080                           	psect	text7
  2081  0575                     __ptext7:	
  2082 ;; *************** function _putch *****************
  2083 ;; Defined at:
  2084 ;;		line 201 in file "main_02.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  dato            1    wreg     unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  dato            1    3[COMMON] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         1       0       0       0       0
  2100 ;;      Temps:          0       0       0       0       0
  2101 ;;      Totals:         1       0       0       0       0
  2102 ;;Total ram usage:        1 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_printf
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _putch
  2114  0575                     _putch:
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _putch: [wreg]
  2118                           ;putch@dato stored from wreg
  2119  0575  00F3               	movwf	putch@dato
  2120  0576                     l1244:
  2121  0576                     l122:
  2122  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0578  1E0C               	btfss	12,4	;volatile
  2125  0579  2D7B               	goto	u351
  2126  057A  2D7C               	goto	u350
  2127  057B                     u351:
  2128  057B  2D76               	goto	l122
  2129  057C                     u350:
  2130  057C                     l1246:
  2131  057C  0873               	movf	putch@dato,w
  2132  057D  0099               	movwf	25	;volatile
  2133  057E                     l125:
  2134  057E  0008               	return
  2135  057F                     __end_of_putch:
  2136                           
  2137                           	psect	text8
  2138  025A                     __ptext8:	
  2139 ;; *************** function _division *****************
  2140 ;; Defined at:
  2141 ;;		line 207 in file "main_02.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  dividendo       1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  dividendo       1    7[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         0       1       0       0       0
  2157 ;;      Temps:          0       3       0       0       0
  2158 ;;      Totals:         0       4       0       0       0
  2159 ;;Total ram usage:        4 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    2
  2162 ;; This function calls:
  2163 ;;		___awdiv
  2164 ;;		___awmod
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _division
  2172  025A                     _division:
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2176                           ;division@dividendo stored from wreg
  2177  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2178  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2179  025C  00A7               	movwf	division@dividendo
  2180  025D                     l1830:
  2181  025D  3064               	movlw	100
  2182  025E  00F3               	movwf	___awdiv@divisor
  2183  025F  3000               	movlw	0
  2184  0260  00F4               	movwf	___awdiv@divisor+1
  2185  0261  0827               	movf	division@dividendo,w
  2186  0262  00A4               	movwf	??_division
  2187  0263  01A5               	clrf	??_division+1
  2188  0264  0824               	movf	??_division,w
  2189  0265  00F5               	movwf	___awdiv@dividend
  2190  0266  0825               	movf	??_division+1,w
  2191  0267  00F6               	movwf	___awdiv@dividend+1
  2192  0268  120A  118A  21F1  120A  118A  	fcall	___awdiv
  2193  026D  0873               	movf	?___awdiv,w
  2194  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2195  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0270  00A6               	movwf	??_division+2
  2197  0271  0826               	movf	??_division+2,w
  2198  0272  00FA               	movwf	_centenas
  2199  0273  3064               	movlw	100
  2200  0274  00F3               	movwf	___awmod@divisor
  2201  0275  3000               	movlw	0
  2202  0276  00F4               	movwf	___awmod@divisor+1
  2203  0277  0827               	movf	division@dividendo,w
  2204  0278  00A4               	movwf	??_division
  2205  0279  01A5               	clrf	??_division+1
  2206  027A  0824               	movf	??_division,w
  2207  027B  00F5               	movwf	___awmod@dividend
  2208  027C  0825               	movf	??_division+1,w
  2209  027D  00F6               	movwf	___awmod@dividend+1
  2210  027E  120A  118A  2327  120A  118A  	fcall	___awmod
  2211  0283  0873               	movf	?___awmod,w
  2212  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0286  00A6               	movwf	??_division+2
  2215  0287  0826               	movf	??_division+2,w
  2216  0288  00AE               	movwf	_residuo
  2217  0289  300A               	movlw	10
  2218  028A  00F3               	movwf	___awdiv@divisor
  2219  028B  3000               	movlw	0
  2220  028C  00F4               	movwf	___awdiv@divisor+1
  2221  028D  082E               	movf	_residuo,w
  2222  028E  00A4               	movwf	??_division
  2223  028F  01A5               	clrf	??_division+1
  2224  0290  0824               	movf	??_division,w
  2225  0291  00F5               	movwf	___awdiv@dividend
  2226  0292  0825               	movf	??_division+1,w
  2227  0293  00F6               	movwf	___awdiv@dividend+1
  2228  0294  120A  118A  21F1  120A  118A  	fcall	___awdiv
  2229  0299  0873               	movf	?___awdiv,w
  2230  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2231  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2232  029C  00A6               	movwf	??_division+2
  2233  029D  0826               	movf	??_division+2,w
  2234  029E  00F9               	movwf	_decenas
  2235  029F  300A               	movlw	10
  2236  02A0  00F3               	movwf	___awmod@divisor
  2237  02A1  3000               	movlw	0
  2238  02A2  00F4               	movwf	___awmod@divisor+1
  2239  02A3  082E               	movf	_residuo,w
  2240  02A4  00A4               	movwf	??_division
  2241  02A5  01A5               	clrf	??_division+1
  2242  02A6  0824               	movf	??_division,w
  2243  02A7  00F5               	movwf	___awmod@dividend
  2244  02A8  0825               	movf	??_division+1,w
  2245  02A9  00F6               	movwf	___awmod@dividend+1
  2246  02AA  120A  118A  2327  120A  118A  	fcall	___awmod
  2247  02AF  0873               	movf	?___awmod,w
  2248  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2249  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2250  02B2  00A6               	movwf	??_division+2
  2251  02B3  0826               	movf	??_division+2,w
  2252  02B4  00F8               	movwf	_unidades
  2253  02B5                     l1832:
  2254  02B5  3030               	movlw	48
  2255  02B6  00A4               	movwf	??_division
  2256  02B7  0824               	movf	??_division,w
  2257  02B8  07FA               	addwf	_centenas,f
  2258  02B9                     l1834:
  2259  02B9  3030               	movlw	48
  2260  02BA  00A4               	movwf	??_division
  2261  02BB  0824               	movf	??_division,w
  2262  02BC  07F9               	addwf	_decenas,f
  2263  02BD                     l1836:
  2264  02BD  3030               	movlw	48
  2265  02BE  00A4               	movwf	??_division
  2266  02BF  0824               	movf	??_division,w
  2267  02C0  07F8               	addwf	_unidades,f
  2268  02C1                     l128:
  2269  02C1  0008               	return
  2270  02C2                     __end_of_division:
  2271                           
  2272                           	psect	text9
  2273  0327                     __ptext9:	
  2274 ;; *************** function ___awmod *****************
  2275 ;; Defined at:
  2276 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  divisor         2    3[COMMON] int 
  2279 ;;  dividend        2    5[COMMON] int 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  sign            1    1[BANK0 ] unsigned char 
  2282 ;;  counter         1    0[BANK0 ] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2    3[COMMON] int 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         4       0       0       0       0
  2293 ;;      Locals:         0       2       0       0       0
  2294 ;;      Temps:          1       0       0       0       0
  2295 ;;      Totals:         5       2       0       0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_division
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function ___awmod
  2308  0327                     ___awmod:
  2309  0327                     l1752:	
  2310                           ;incstack = 0
  2311                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2312                           
  2313  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0329  01A1               	clrf	___awmod@sign
  2316  032A                     l1754:
  2317  032A  1FF6               	btfss	___awmod@dividend+1,7
  2318  032B  2B2D               	goto	u791
  2319  032C  2B2E               	goto	u790
  2320  032D                     u791:
  2321  032D  2B35               	goto	l1760
  2322  032E                     u790:
  2323  032E                     l1756:
  2324  032E  09F5               	comf	___awmod@dividend,f
  2325  032F  09F6               	comf	___awmod@dividend+1,f
  2326  0330  0AF5               	incf	___awmod@dividend,f
  2327  0331  1903               	skipnz
  2328  0332  0AF6               	incf	___awmod@dividend+1,f
  2329  0333                     l1758:
  2330  0333  01A1               	clrf	___awmod@sign
  2331  0334  0AA1               	incf	___awmod@sign,f
  2332  0335                     l1760:
  2333  0335  1FF4               	btfss	___awmod@divisor+1,7
  2334  0336  2B38               	goto	u801
  2335  0337  2B39               	goto	u800
  2336  0338                     u801:
  2337  0338  2B3E               	goto	l1764
  2338  0339                     u800:
  2339  0339                     l1762:
  2340  0339  09F3               	comf	___awmod@divisor,f
  2341  033A  09F4               	comf	___awmod@divisor+1,f
  2342  033B  0AF3               	incf	___awmod@divisor,f
  2343  033C  1903               	skipnz
  2344  033D  0AF4               	incf	___awmod@divisor+1,f
  2345  033E                     l1764:
  2346  033E  0873               	movf	___awmod@divisor,w
  2347  033F  0474               	iorwf	___awmod@divisor+1,w
  2348  0340  1903               	btfsc	3,2
  2349  0341  2B43               	goto	u811
  2350  0342  2B44               	goto	u810
  2351  0343                     u811:
  2352  0343  2B73               	goto	l1782
  2353  0344                     u810:
  2354  0344                     l1766:
  2355  0344  01A0               	clrf	___awmod@counter
  2356  0345  0AA0               	incf	___awmod@counter,f
  2357  0346  2B52               	goto	l1772
  2358  0347                     l1768:
  2359  0347  3001               	movlw	1
  2360  0348                     u825:
  2361  0348  1003               	clrc
  2362  0349  0DF3               	rlf	___awmod@divisor,f
  2363  034A  0DF4               	rlf	___awmod@divisor+1,f
  2364  034B  3EFF               	addlw	-1
  2365  034C  1D03               	skipz
  2366  034D  2B48               	goto	u825
  2367  034E                     l1770:
  2368  034E  3001               	movlw	1
  2369  034F  00F7               	movwf	??___awmod
  2370  0350  0877               	movf	??___awmod,w
  2371  0351  07A0               	addwf	___awmod@counter,f
  2372  0352                     l1772:
  2373  0352  1FF4               	btfss	___awmod@divisor+1,7
  2374  0353  2B55               	goto	u831
  2375  0354  2B56               	goto	u830
  2376  0355                     u831:
  2377  0355  2B47               	goto	l1768
  2378  0356                     u830:
  2379  0356                     l1774:
  2380  0356  0874               	movf	___awmod@divisor+1,w
  2381  0357  0276               	subwf	___awmod@dividend+1,w
  2382  0358  1D03               	skipz
  2383  0359  2B5C               	goto	u845
  2384  035A  0873               	movf	___awmod@divisor,w
  2385  035B  0275               	subwf	___awmod@dividend,w
  2386  035C                     u845:
  2387  035C  1C03               	skipc
  2388  035D  2B5F               	goto	u841
  2389  035E  2B60               	goto	u840
  2390  035F                     u841:
  2391  035F  2B66               	goto	l1778
  2392  0360                     u840:
  2393  0360                     l1776:
  2394  0360  0873               	movf	___awmod@divisor,w
  2395  0361  02F5               	subwf	___awmod@dividend,f
  2396  0362  0874               	movf	___awmod@divisor+1,w
  2397  0363  1C03               	skipc
  2398  0364  03F6               	decf	___awmod@dividend+1,f
  2399  0365  02F6               	subwf	___awmod@dividend+1,f
  2400  0366                     l1778:
  2401  0366  3001               	movlw	1
  2402  0367                     u855:
  2403  0367  1003               	clrc
  2404  0368  0CF4               	rrf	___awmod@divisor+1,f
  2405  0369  0CF3               	rrf	___awmod@divisor,f
  2406  036A  3EFF               	addlw	-1
  2407  036B  1D03               	skipz
  2408  036C  2B67               	goto	u855
  2409  036D                     l1780:
  2410  036D  3001               	movlw	1
  2411  036E  02A0               	subwf	___awmod@counter,f
  2412  036F  1D03               	btfss	3,2
  2413  0370  2B72               	goto	u861
  2414  0371  2B73               	goto	u860
  2415  0372                     u861:
  2416  0372  2B56               	goto	l1774
  2417  0373                     u860:
  2418  0373                     l1782:
  2419  0373  0821               	movf	___awmod@sign,w
  2420  0374  1903               	btfsc	3,2
  2421  0375  2B77               	goto	u871
  2422  0376  2B78               	goto	u870
  2423  0377                     u871:
  2424  0377  2B7D               	goto	l1786
  2425  0378                     u870:
  2426  0378                     l1784:
  2427  0378  09F5               	comf	___awmod@dividend,f
  2428  0379  09F6               	comf	___awmod@dividend+1,f
  2429  037A  0AF5               	incf	___awmod@dividend,f
  2430  037B  1903               	skipnz
  2431  037C  0AF6               	incf	___awmod@dividend+1,f
  2432  037D                     l1786:
  2433  037D  0876               	movf	___awmod@dividend+1,w
  2434  037E  00F4               	movwf	?___awmod+1
  2435  037F  0875               	movf	___awmod@dividend,w
  2436  0380  00F3               	movwf	?___awmod
  2437  0381                     l464:
  2438  0381  0008               	return
  2439  0382                     __end_of___awmod:
  2440                           
  2441                           	psect	text10
  2442  01F1                     __ptext10:	
  2443 ;; *************** function ___awdiv *****************
  2444 ;; Defined at:
  2445 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  divisor         2    3[COMMON] int 
  2448 ;;  dividend        2    5[COMMON] int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  quotient        2    2[BANK0 ] int 
  2451 ;;  sign            1    1[BANK0 ] unsigned char 
  2452 ;;  counter         1    0[BANK0 ] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  2    3[COMMON] int 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         4       0       0       0       0
  2463 ;;      Locals:         0       4       0       0       0
  2464 ;;      Temps:          1       0       0       0       0
  2465 ;;      Totals:         5       4       0       0       0
  2466 ;;Total ram usage:        9 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_division
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function ___awdiv
  2478  01F1                     ___awdiv:
  2479  01F1                     l1708:	
  2480                           ;incstack = 0
  2481                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2482                           
  2483  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2484  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2485  01F3  01A1               	clrf	___awdiv@sign
  2486  01F4                     l1710:
  2487  01F4  1FF4               	btfss	___awdiv@divisor+1,7
  2488  01F5  29F7               	goto	u691
  2489  01F6  29F8               	goto	u690
  2490  01F7                     u691:
  2491  01F7  29FF               	goto	l1716
  2492  01F8                     u690:
  2493  01F8                     l1712:
  2494  01F8  09F3               	comf	___awdiv@divisor,f
  2495  01F9  09F4               	comf	___awdiv@divisor+1,f
  2496  01FA  0AF3               	incf	___awdiv@divisor,f
  2497  01FB  1903               	skipnz
  2498  01FC  0AF4               	incf	___awdiv@divisor+1,f
  2499  01FD                     l1714:
  2500  01FD  01A1               	clrf	___awdiv@sign
  2501  01FE  0AA1               	incf	___awdiv@sign,f
  2502  01FF                     l1716:
  2503  01FF  1FF6               	btfss	___awdiv@dividend+1,7
  2504  0200  2A02               	goto	u701
  2505  0201  2A03               	goto	u700
  2506  0202                     u701:
  2507  0202  2A0C               	goto	l1722
  2508  0203                     u700:
  2509  0203                     l1718:
  2510  0203  09F5               	comf	___awdiv@dividend,f
  2511  0204  09F6               	comf	___awdiv@dividend+1,f
  2512  0205  0AF5               	incf	___awdiv@dividend,f
  2513  0206  1903               	skipnz
  2514  0207  0AF6               	incf	___awdiv@dividend+1,f
  2515  0208                     l1720:
  2516  0208  3001               	movlw	1
  2517  0209  00F7               	movwf	??___awdiv
  2518  020A  0877               	movf	??___awdiv,w
  2519  020B  06A1               	xorwf	___awdiv@sign,f
  2520  020C                     l1722:
  2521  020C  01A2               	clrf	___awdiv@quotient
  2522  020D  01A3               	clrf	___awdiv@quotient+1
  2523  020E                     l1724:
  2524  020E  0873               	movf	___awdiv@divisor,w
  2525  020F  0474               	iorwf	___awdiv@divisor+1,w
  2526  0210  1903               	btfsc	3,2
  2527  0211  2A13               	goto	u711
  2528  0212  2A14               	goto	u710
  2529  0213                     u711:
  2530  0213  2A4B               	goto	l1744
  2531  0214                     u710:
  2532  0214                     l1726:
  2533  0214  01A0               	clrf	___awdiv@counter
  2534  0215  0AA0               	incf	___awdiv@counter,f
  2535  0216  2A22               	goto	l1732
  2536  0217                     l1728:
  2537  0217  3001               	movlw	1
  2538  0218                     u725:
  2539  0218  1003               	clrc
  2540  0219  0DF3               	rlf	___awdiv@divisor,f
  2541  021A  0DF4               	rlf	___awdiv@divisor+1,f
  2542  021B  3EFF               	addlw	-1
  2543  021C  1D03               	skipz
  2544  021D  2A18               	goto	u725
  2545  021E                     l1730:
  2546  021E  3001               	movlw	1
  2547  021F  00F7               	movwf	??___awdiv
  2548  0220  0877               	movf	??___awdiv,w
  2549  0221  07A0               	addwf	___awdiv@counter,f
  2550  0222                     l1732:
  2551  0222  1FF4               	btfss	___awdiv@divisor+1,7
  2552  0223  2A25               	goto	u731
  2553  0224  2A26               	goto	u730
  2554  0225                     u731:
  2555  0225  2A17               	goto	l1728
  2556  0226                     u730:
  2557  0226                     l1734:
  2558  0226  3001               	movlw	1
  2559  0227                     u745:
  2560  0227  1003               	clrc
  2561  0228  0DA2               	rlf	___awdiv@quotient,f
  2562  0229  0DA3               	rlf	___awdiv@quotient+1,f
  2563  022A  3EFF               	addlw	-1
  2564  022B  1D03               	skipz
  2565  022C  2A27               	goto	u745
  2566  022D  0874               	movf	___awdiv@divisor+1,w
  2567  022E  0276               	subwf	___awdiv@dividend+1,w
  2568  022F  1D03               	skipz
  2569  0230  2A33               	goto	u755
  2570  0231  0873               	movf	___awdiv@divisor,w
  2571  0232  0275               	subwf	___awdiv@dividend,w
  2572  0233                     u755:
  2573  0233  1C03               	skipc
  2574  0234  2A36               	goto	u751
  2575  0235  2A37               	goto	u750
  2576  0236                     u751:
  2577  0236  2A3E               	goto	l1740
  2578  0237                     u750:
  2579  0237                     l1736:
  2580  0237  0873               	movf	___awdiv@divisor,w
  2581  0238  02F5               	subwf	___awdiv@dividend,f
  2582  0239  0874               	movf	___awdiv@divisor+1,w
  2583  023A  1C03               	skipc
  2584  023B  03F6               	decf	___awdiv@dividend+1,f
  2585  023C  02F6               	subwf	___awdiv@dividend+1,f
  2586  023D                     l1738:
  2587  023D  1422               	bsf	___awdiv@quotient,0
  2588  023E                     l1740:
  2589  023E  3001               	movlw	1
  2590  023F                     u765:
  2591  023F  1003               	clrc
  2592  0240  0CF4               	rrf	___awdiv@divisor+1,f
  2593  0241  0CF3               	rrf	___awdiv@divisor,f
  2594  0242  3EFF               	addlw	-1
  2595  0243  1D03               	skipz
  2596  0244  2A3F               	goto	u765
  2597  0245                     l1742:
  2598  0245  3001               	movlw	1
  2599  0246  02A0               	subwf	___awdiv@counter,f
  2600  0247  1D03               	btfss	3,2
  2601  0248  2A4A               	goto	u771
  2602  0249  2A4B               	goto	u770
  2603  024A                     u771:
  2604  024A  2A26               	goto	l1734
  2605  024B                     u770:
  2606  024B                     l1744:
  2607  024B  0821               	movf	___awdiv@sign,w
  2608  024C  1903               	btfsc	3,2
  2609  024D  2A4F               	goto	u781
  2610  024E  2A50               	goto	u780
  2611  024F                     u781:
  2612  024F  2A55               	goto	l1748
  2613  0250                     u780:
  2614  0250                     l1746:
  2615  0250  09A2               	comf	___awdiv@quotient,f
  2616  0251  09A3               	comf	___awdiv@quotient+1,f
  2617  0252  0AA2               	incf	___awdiv@quotient,f
  2618  0253  1903               	skipnz
  2619  0254  0AA3               	incf	___awdiv@quotient+1,f
  2620  0255                     l1748:
  2621  0255  0823               	movf	___awdiv@quotient+1,w
  2622  0256  00F4               	movwf	?___awdiv+1
  2623  0257  0822               	movf	___awdiv@quotient,w
  2624  0258  00F3               	movwf	?___awdiv
  2625  0259                     l451:
  2626  0259  0008               	return
  2627  025A                     __end_of___awdiv:
  2628                           
  2629                           	psect	text11
  2630  04A8                     __ptext11:	
  2631 ;; *************** function _Lcd_Write_String *****************
  2632 ;; Defined at:
  2633 ;;		line 94 in file "LCD_8b.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  a               1    wreg     PTR unsigned char 
  2636 ;;		 -> STR_5(3), STR_4(2), STR_3(3), STR_2(2), 
  2637 ;;		 -> STR_1(17), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2640 ;;		 -> STR_5(3), STR_4(2), STR_3(3), STR_2(2), 
  2641 ;;		 -> STR_1(17), 
  2642 ;;  i               2    0[BANK0 ] int 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         0       3       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         0       3       0       0       0
  2656 ;;Total ram usage:        3 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		_Lcd_Write_Char
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Lcd_Write_String
  2668  04A8                     _Lcd_Write_String:
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2672                           ;Lcd_Write_String@a stored from wreg
  2673  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2674  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2675  04AA  00A2               	movwf	Lcd_Write_String@a
  2676  04AB                     l1822:
  2677                           
  2678                           ;LCD_8b.c: 95:     int i;;LCD_8b.c: 96:     for (i = 0; a[i] != '\0'; i++)
  2679  04AB  01A0               	clrf	Lcd_Write_String@i
  2680  04AC  01A1               	clrf	Lcd_Write_String@i+1
  2681  04AD  2CC3               	goto	l1828
  2682  04AE                     l1824:
  2683                           
  2684                           ;LCD_8b.c: 97:         Lcd_Write_Char(a[i]);
  2685  04AE  0820               	movf	Lcd_Write_String@i,w
  2686  04AF  0722               	addwf	Lcd_Write_String@a,w
  2687  04B0  0084               	movwf	4
  2688  04B1  120A  118A  2100  120A  118A  	fcall	stringdir
  2689  04B6  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  2690  04BB                     l1826:
  2691  04BB  3001               	movlw	1
  2692  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2693  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2694  04BE  07A0               	addwf	Lcd_Write_String@i,f
  2695  04BF  1803               	skipnc
  2696  04C0  0AA1               	incf	Lcd_Write_String@i+1,f
  2697  04C1  3000               	movlw	0
  2698  04C2  07A1               	addwf	Lcd_Write_String@i+1,f
  2699  04C3                     l1828:
  2700  04C3  0820               	movf	Lcd_Write_String@i,w
  2701  04C4  0722               	addwf	Lcd_Write_String@a,w
  2702  04C5  0084               	movwf	4
  2703  04C6  120A  118A  2100  120A  118A  	fcall	stringdir
  2704  04CB  3A00               	xorlw	0
  2705  04CC  1D03               	skipz
  2706  04CD  2CCF               	goto	u921
  2707  04CE  2CD0               	goto	u920
  2708  04CF                     u921:
  2709  04CF  2CAE               	goto	l1824
  2710  04D0                     u920:
  2711  04D0                     l196:
  2712  04D0  0008               	return
  2713  04D1                     __end_of_Lcd_Write_String:
  2714                           
  2715                           	psect	text12
  2716  0515                     __ptext12:	
  2717 ;; *************** function _Lcd_Write_Char *****************
  2718 ;; Defined at:
  2719 ;;		line 79 in file "LCD_8b.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  a               1    wreg     unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  a               1    5[COMMON] unsigned char 
  2724 ;;  y               1    7[COMMON] unsigned char 
  2725 ;;  temp            1    6[COMMON] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       0       0
  2736 ;;      Locals:         3       0       0       0       0
  2737 ;;      Temps:          1       0       0       0       0
  2738 ;;      Totals:         4       0       0       0       0
  2739 ;;Total ram usage:        4 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    2
  2742 ;; This function calls:
  2743 ;;		_Lcd_Port
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;;		_Lcd_Write_String
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _Lcd_Write_Char
  2752  0515                     _Lcd_Write_Char:
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2756                           ;Lcd_Write_Char@a stored from wreg
  2757  0515  00F5               	movwf	Lcd_Write_Char@a
  2758  0516                     l1686:
  2759                           
  2760                           ;LCD_8b.c: 80:     char temp, y;;LCD_8b.c: 81:     temp = a;
  2761  0516  0875               	movf	Lcd_Write_Char@a,w
  2762  0517  00F4               	movwf	??_Lcd_Write_Char
  2763  0518  0874               	movf	??_Lcd_Write_Char,w
  2764  0519  00F6               	movwf	Lcd_Write_Char@temp
  2765                           
  2766                           ;LCD_8b.c: 82:     y = temp;
  2767  051A  0876               	movf	Lcd_Write_Char@temp,w
  2768  051B  00F4               	movwf	??_Lcd_Write_Char
  2769  051C  0874               	movf	??_Lcd_Write_Char,w
  2770  051D  00F7               	movwf	Lcd_Write_Char@y
  2771  051E                     l1688:
  2772                           
  2773                           ;LCD_8b.c: 83:     PORTEbits.RE0 = 1;
  2774  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2775  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0520  1409               	bsf	9,0	;volatile
  2777  0521                     l1690:
  2778                           
  2779                           ;LCD_8b.c: 84:     Lcd_Port(y);
  2780  0521  0877               	movf	Lcd_Write_Char@y,w
  2781  0522  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  2782  0527                     l1692:
  2783                           
  2784                           ;LCD_8b.c: 85:     PORTEbits.RE2 = 1;
  2785  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0529  1509               	bsf	9,2	;volatile
  2788  052A                     l1694:
  2789                           
  2790                           ;LCD_8b.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2791  052A  300D               	movlw	13
  2792  052B  00F4               	movwf	??_Lcd_Write_Char
  2793  052C                     u1167:
  2794  052C  0BF4               	decfsz	??_Lcd_Write_Char,f
  2795  052D  2D2C               	goto	u1167
  2796  052E                     l1696:
  2797                           
  2798                           ;LCD_8b.c: 87:     PORTEbits.RE2 = 0;
  2799  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2800  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0530  1109               	bcf	9,2	;volatile
  2802  0531                     l190:
  2803  0531  0008               	return
  2804  0532                     __end_of_Lcd_Write_Char:
  2805                           
  2806                           	psect	text13
  2807  0382                     __ptext13:	
  2808 ;; *************** function _Lcd_Set_Cursor *****************
  2809 ;; Defined at:
  2810 ;;		line 43 in file "LCD_8b.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  a               1    wreg     unsigned char 
  2813 ;;  b               1    7[COMMON] unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  a               1    2[BANK0 ] unsigned char 
  2816 ;;  temp            1    5[BANK0 ] unsigned char 
  2817 ;;  y               1    4[BANK0 ] unsigned char 
  2818 ;;  z               1    3[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         1       0       0       0       0
  2829 ;;      Locals:         0       4       0       0       0
  2830 ;;      Temps:          0       2       0       0       0
  2831 ;;      Totals:         1       6       0       0       0
  2832 ;;Total ram usage:        7 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    3
  2835 ;; This function calls:
  2836 ;;		_Lcd_Cmd
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _Lcd_Set_Cursor
  2844  0382                     _Lcd_Set_Cursor:
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2848                           ;Lcd_Set_Cursor@a stored from wreg
  2849  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0384  00A2               	movwf	Lcd_Set_Cursor@a
  2852  0385                     l1802:
  2853                           
  2854                           ;LCD_8b.c: 44:     char temp, z, y;;LCD_8b.c: 45:     if (a == 1) {
  2855  0385  0322               	decf	Lcd_Set_Cursor@a,w
  2856  0386  1D03               	btfss	3,2
  2857  0387  2B89               	goto	u881
  2858  0388  2B8A               	goto	u880
  2859  0389                     u881:
  2860  0389  2BAF               	goto	l1812
  2861  038A                     u880:
  2862  038A                     l1804:
  2863                           
  2864                           ;LCD_8b.c: 46:         temp = 0x80 + b - 1;
  2865  038A  0877               	movf	Lcd_Set_Cursor@b,w
  2866  038B  3E7F               	addlw	127
  2867  038C  00A0               	movwf	??_Lcd_Set_Cursor
  2868  038D  0820               	movf	??_Lcd_Set_Cursor,w
  2869  038E  00A5               	movwf	Lcd_Set_Cursor@temp
  2870                           
  2871                           ;LCD_8b.c: 47:         z = temp >> 4;
  2872  038F  0825               	movf	Lcd_Set_Cursor@temp,w
  2873  0390  00A0               	movwf	??_Lcd_Set_Cursor
  2874  0391  3004               	movlw	4
  2875  0392                     u895:
  2876  0392  1003               	clrc
  2877  0393  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2878  0394  3EFF               	addlw	-1
  2879  0395  1D03               	skipz
  2880  0396  2B92               	goto	u895
  2881  0397  0820               	movf	??_Lcd_Set_Cursor,w
  2882  0398  00A1               	movwf	??_Lcd_Set_Cursor+1
  2883  0399  0821               	movf	??_Lcd_Set_Cursor+1,w
  2884  039A  00A3               	movwf	Lcd_Set_Cursor@z
  2885  039B                     l1806:
  2886                           
  2887                           ;LCD_8b.c: 48:         y = temp & 0x0F;
  2888  039B  0825               	movf	Lcd_Set_Cursor@temp,w
  2889  039C  390F               	andlw	15
  2890  039D  00A0               	movwf	??_Lcd_Set_Cursor
  2891  039E  0820               	movf	??_Lcd_Set_Cursor,w
  2892  039F  00A4               	movwf	Lcd_Set_Cursor@y
  2893  03A0                     l1808:
  2894                           
  2895                           ;LCD_8b.c: 49:         Lcd_Cmd(z);
  2896  03A0  0823               	movf	Lcd_Set_Cursor@z,w
  2897  03A1  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2898  03A6                     l1810:
  2899                           
  2900                           ;LCD_8b.c: 51:         Lcd_Cmd(y);
  2901  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2902  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2903  03A8  0824               	movf	Lcd_Set_Cursor@y,w
  2904  03A9  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2905                           
  2906                           ;LCD_8b.c: 52:     } else if (a == 2) {
  2907  03AE  2BD9               	goto	l184
  2908  03AF                     l1812:
  2909  03AF  3002               	movlw	2
  2910  03B0  0622               	xorwf	Lcd_Set_Cursor@a,w
  2911  03B1  1D03               	btfss	3,2
  2912  03B2  2BB4               	goto	u901
  2913  03B3  2BB5               	goto	u900
  2914  03B4                     u901:
  2915  03B4  2BD9               	goto	l184
  2916  03B5                     u900:
  2917  03B5                     l1814:
  2918                           
  2919                           ;LCD_8b.c: 53:         temp = 0xC0 + b - 1;
  2920  03B5  0877               	movf	Lcd_Set_Cursor@b,w
  2921  03B6  3EBF               	addlw	191
  2922  03B7  00A0               	movwf	??_Lcd_Set_Cursor
  2923  03B8  0820               	movf	??_Lcd_Set_Cursor,w
  2924  03B9  00A5               	movwf	Lcd_Set_Cursor@temp
  2925                           
  2926                           ;LCD_8b.c: 54:         z = temp >> 4;
  2927  03BA  0825               	movf	Lcd_Set_Cursor@temp,w
  2928  03BB  00A0               	movwf	??_Lcd_Set_Cursor
  2929  03BC  3004               	movlw	4
  2930  03BD                     u915:
  2931  03BD  1003               	clrc
  2932  03BE  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2933  03BF  3EFF               	addlw	-1
  2934  03C0  1D03               	skipz
  2935  03C1  2BBD               	goto	u915
  2936  03C2  0820               	movf	??_Lcd_Set_Cursor,w
  2937  03C3  00A1               	movwf	??_Lcd_Set_Cursor+1
  2938  03C4  0821               	movf	??_Lcd_Set_Cursor+1,w
  2939  03C5  00A3               	movwf	Lcd_Set_Cursor@z
  2940  03C6                     l1816:
  2941                           
  2942                           ;LCD_8b.c: 55:         y = temp & 0xF0;
  2943  03C6  0825               	movf	Lcd_Set_Cursor@temp,w
  2944  03C7  39F0               	andlw	240
  2945  03C8  00A0               	movwf	??_Lcd_Set_Cursor
  2946  03C9  0820               	movf	??_Lcd_Set_Cursor,w
  2947  03CA  00A4               	movwf	Lcd_Set_Cursor@y
  2948  03CB                     l1818:
  2949                           
  2950                           ;LCD_8b.c: 56:         Lcd_Cmd(z);
  2951  03CB  0823               	movf	Lcd_Set_Cursor@z,w
  2952  03CC  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2953  03D1                     l1820:
  2954                           
  2955                           ;LCD_8b.c: 57:         Lcd_Cmd(y);
  2956  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2957  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2958  03D3  0824               	movf	Lcd_Set_Cursor@y,w
  2959  03D4  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2960  03D9                     l184:
  2961  03D9  0008               	return
  2962  03DA                     __end_of_Lcd_Set_Cursor:
  2963                           
  2964                           	psect	text14
  2965  042B                     __ptext14:	
  2966 ;; *************** function _Lcd_Init *****************
  2967 ;; Defined at:
  2968 ;;		line 61 in file "LCD_8b.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       2       0       0       0
  2985 ;;      Totals:         0       2       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    3
  2989 ;; This function calls:
  2990 ;;		_Lcd_Cmd
  2991 ;;		_Lcd_Port
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _Lcd_Init
  2999  042B                     _Lcd_Init:
  3000  042B                     l1790:	
  3001                           ;incstack = 0
  3002                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3003                           
  3004                           
  3005                           ;LCD_8b.c: 62:     Lcd_Port(0x00);
  3006  042B  3000               	movlw	0
  3007  042C  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  3008  0431                     l1792:
  3009                           
  3010                           ;LCD_8b.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3011  0431  301A               	movlw	26
  3012  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3013  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3014  0434  00A1               	movwf	??_Lcd_Init+1
  3015  0435  30F7               	movlw	247
  3016  0436  00A0               	movwf	??_Lcd_Init
  3017  0437                     u1177:
  3018  0437  0BA0               	decfsz	??_Lcd_Init,f
  3019  0438  2C37               	goto	u1177
  3020  0439  0BA1               	decfsz	??_Lcd_Init+1,f
  3021  043A  2C37               	goto	u1177
  3022  043B  2C3C               	nop2
  3023  043C                     l1794:
  3024                           
  3025                           ;LCD_8b.c: 64:     Lcd_Cmd(0x30);
  3026  043C  3030               	movlw	48
  3027  043D  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3028                           
  3029                           ;LCD_8b.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3030  0442  3007               	movlw	7
  3031  0443  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0444  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0445  00A1               	movwf	??_Lcd_Init+1
  3034  0446  307C               	movlw	124
  3035  0447  00A0               	movwf	??_Lcd_Init
  3036  0448                     u1187:
  3037  0448  0BA0               	decfsz	??_Lcd_Init,f
  3038  0449  2C48               	goto	u1187
  3039  044A  0BA1               	decfsz	??_Lcd_Init+1,f
  3040  044B  2C48               	goto	u1187
  3041  044C  0000               	nop
  3042  044D                     l1796:
  3043                           
  3044                           ;LCD_8b.c: 66:     Lcd_Cmd(0x30);
  3045  044D  3030               	movlw	48
  3046  044E  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3047  0453                     l1798:
  3048                           
  3049                           ;LCD_8b.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3050  0453  3041               	movlw	65
  3051  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0456  00A0               	movwf	??_Lcd_Init
  3054  0457                     u1197:
  3055  0457  0BA0               	decfsz	??_Lcd_Init,f
  3056  0458  2C57               	goto	u1197
  3057  0459  2C5A               	nop2
  3058                           
  3059                           ;LCD_8b.c: 68:     Lcd_Cmd(0x30);
  3060  045A  3030               	movlw	48
  3061  045B  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3062                           
  3063                           ;LCD_8b.c: 70:     Lcd_Cmd(0x3C);
  3064  0460  303C               	movlw	60
  3065  0461  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3066                           
  3067                           ;LCD_8b.c: 72:     Lcd_Cmd(0x08);
  3068  0466  3008               	movlw	8
  3069  0467  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3070                           
  3071                           ;LCD_8b.c: 74:     Lcd_Cmd(0x01);
  3072  046C  3001               	movlw	1
  3073  046D  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3074                           
  3075                           ;LCD_8b.c: 76:     Lcd_Cmd(0x06);
  3076  0472  3006               	movlw	6
  3077  0473  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3078  0478                     l187:
  3079  0478  0008               	return
  3080  0479                     __end_of_Lcd_Init:
  3081                           
  3082                           	psect	text15
  3083  0568                     __ptext15:	
  3084 ;; *************** function _Lcd_Clear *****************
  3085 ;; Defined at:
  3086 ;;		line 25 in file "LCD_8b.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, pclath, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3100 ;;      Params:         0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0
  3103 ;;      Totals:         0       0       0       0       0
  3104 ;;Total ram usage:        0 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    3
  3107 ;; This function calls:
  3108 ;;		_Lcd_Cmd
  3109 ;; This function is called by:
  3110 ;;		_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _Lcd_Clear
  3116  0568                     _Lcd_Clear:
  3117  0568                     l1800:	
  3118                           ;incstack = 0
  3119                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3120                           
  3121                           
  3122                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  3123  0568  3000               	movlw	0
  3124  0569  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3125                           
  3126                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  3127  056E  3001               	movlw	1
  3128  056F  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3129  0574                     l178:
  3130  0574  0008               	return
  3131  0575                     __end_of_Lcd_Clear:
  3132                           
  3133                           	psect	text16
  3134  054E                     __ptext16:	
  3135 ;; *************** function _Lcd_Cmd *****************
  3136 ;; Defined at:
  3137 ;;		line 17 in file "LCD_8b.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  a               1    wreg     unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  a               1    6[COMMON] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         0       0       0       0       0
  3152 ;;      Locals:         1       0       0       0       0
  3153 ;;      Temps:          2       0       0       0       0
  3154 ;;      Totals:         3       0       0       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    2
  3158 ;; This function calls:
  3159 ;;		_Lcd_Port
  3160 ;; This function is called by:
  3161 ;;		_Lcd_Clear
  3162 ;;		_Lcd_Set_Cursor
  3163 ;;		_Lcd_Init
  3164 ;;		_Lcd_Shift_Right
  3165 ;;		_Lcd_Shift_Left
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function _Lcd_Cmd
  3171  054E                     _Lcd_Cmd:
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3175                           ;Lcd_Cmd@a stored from wreg
  3176  054E  00F6               	movwf	Lcd_Cmd@a
  3177  054F                     l1698:
  3178                           
  3179                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  3180  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0551  1009               	bcf	9,0	;volatile
  3183  0552                     l1700:
  3184                           
  3185                           ;LCD_8b.c: 19:     Lcd_Port(a);
  3186  0552  0876               	movf	Lcd_Cmd@a,w
  3187  0553  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  3188  0558                     l1702:
  3189                           
  3190                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  3191  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3193  055A  1509               	bsf	9,2	;volatile
  3194  055B                     l1704:
  3195                           
  3196                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3197  055B  3006               	movlw	6
  3198  055C  00F5               	movwf	??_Lcd_Cmd+1
  3199  055D  3030               	movlw	48
  3200  055E  00F4               	movwf	??_Lcd_Cmd
  3201  055F                     u1207:
  3202  055F  0BF4               	decfsz	??_Lcd_Cmd,f
  3203  0560  2D5F               	goto	u1207
  3204  0561  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3205  0562  2D5F               	goto	u1207
  3206  0563  0000               	nop
  3207  0564                     l1706:
  3208                           
  3209                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  3210  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0566  1109               	bcf	9,2	;volatile
  3213  0567                     l175:
  3214  0567  0008               	return
  3215  0568                     __end_of_Lcd_Cmd:
  3216                           
  3217                           	psect	text17
  3218  057F                     __ptext17:	
  3219 ;; *************** function _Lcd_Port *****************
  3220 ;; Defined at:
  3221 ;;		line 12 in file "LCD_8b.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  a               1    wreg     unsigned char 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  a               1    3[COMMON] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         1       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         1       0       0       0       0
  3239 ;;Total ram usage:        1 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    1
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_Lcd_Cmd
  3246 ;;		_Lcd_Init
  3247 ;;		_Lcd_Write_Char
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _Lcd_Port
  3253  057F                     _Lcd_Port:
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _Lcd_Port: [wreg]
  3257                           ;Lcd_Port@a stored from wreg
  3258  057F  00F3               	movwf	Lcd_Port@a
  3259  0580                     l1684:
  3260                           
  3261                           ;LCD_8b.c: 13:     PORTD = a;
  3262  0580  0873               	movf	Lcd_Port@a,w
  3263  0581  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0582  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0583  0088               	movwf	8	;volatile
  3266  0584                     l172:
  3267  0584  0008               	return
  3268  0585                     __end_of_Lcd_Port:
  3269                           
  3270                           	psect	text18
  3271  0479                     __ptext18:	
  3272 ;; *************** function _isr *****************
  3273 ;; Defined at:
  3274 ;;		line 83 in file "main_02.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3288 ;;      Params:         0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0
  3290 ;;      Temps:          3       0       0       0       0
  3291 ;;      Totals:         3       0       0       0       0
  3292 ;;Total ram usage:        3 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		Interrupt level 1
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _isr
  3303  0479                     _isr:
  3304  0479                     i1l1592:
  3305                           
  3306                           ;main_02.c: 85:     Lcd_Write_Char(unidades);
  3307  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3308  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3309  047B  1F0C               	btfss	12,6	;volatile
  3310  047C  2C7E               	goto	u61_21
  3311  047D  2C7F               	goto	u61_20
  3312  047E                     u61_21:
  3313  047E  2CA0               	goto	i1l1606
  3314  047F                     u61_20:
  3315  047F                     i1l1594:
  3316                           
  3317                           ;main_02.c: 86: 
  3318  047F  0C1F               	rrf	31,w	;volatile
  3319  0480  00F0               	movwf	??_isr
  3320  0481  0C70               	rrf	??_isr,w
  3321  0482  390F               	andlw	15
  3322  0483  3A00               	xorlw	0
  3323  0484  1D03               	skipz
  3324  0485  2C87               	goto	u62_21
  3325  0486  2C88               	goto	u62_20
  3326  0487                     u62_21:
  3327  0487  2C91               	goto	i1l1600
  3328  0488                     u62_20:
  3329  0488                     i1l1596:
  3330                           
  3331                           ;main_02.c: 87: 
  3332  0488  081F               	movf	31,w	;volatile
  3333  0489  39C3               	andlw	-61
  3334  048A  3804               	iorlw	4
  3335  048B  009F               	movwf	31	;volatile
  3336  048C                     i1l1598:
  3337                           
  3338                           ;main_02.c: 88: 
  3339  048C  081E               	movf	30,w	;volatile
  3340  048D  00F0               	movwf	??_isr
  3341  048E  0870               	movf	??_isr,w
  3342  048F  00B2               	movwf	_voltaje1
  3343                           
  3344                           ;main_02.c: 89:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3345  0490  2CA0               	goto	i1l1606
  3346  0491                     i1l1600:
  3347  0491  0C1F               	rrf	31,w	;volatile
  3348  0492  00F0               	movwf	??_isr
  3349  0493  0C70               	rrf	??_isr,w
  3350  0494  390F               	andlw	15
  3351  0495  3A01               	xorlw	1
  3352  0496  1D03               	skipz
  3353  0497  2C99               	goto	u63_21
  3354  0498  2C9A               	goto	u63_20
  3355  0499                     u63_21:
  3356  0499  2CA0               	goto	i1l1606
  3357  049A                     u63_20:
  3358  049A                     i1l1602:
  3359                           
  3360                           ;main_02.c: 91:     if (ADCON0bits.GO == 0){
  3361  049A  30C3               	movlw	-61
  3362  049B  059F               	andwf	31,f	;volatile
  3363  049C                     i1l1604:
  3364                           
  3365                           ;main_02.c: 92:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3366  049C  081E               	movf	30,w	;volatile
  3367  049D  00F0               	movwf	??_isr
  3368  049E  0870               	movf	??_isr,w
  3369  049F  00B1               	movwf	_voltaje2
  3370  04A0                     i1l1606:
  3371                           
  3372                           ;main_02.c: 95: 
  3373  04A0  130C               	bcf	12,6	;volatile
  3374  04A1                     i1l97:
  3375  04A1  0872               	movf	??_isr+2,w
  3376  04A2  008A               	movwf	10
  3377  04A3  0E71               	swapf	??_isr+1,w
  3378  04A4  0083               	movwf	3
  3379  04A5  0EFE               	swapf	btemp,f
  3380  04A6  0E7E               	swapf	btemp,w
  3381  04A7  0009               	retfie
  3382  04A8                     __end_of_isr:
  3383  007E                     btemp	set	126	;btemp
  3384  007E                     wtemp0	set	126
  3385                           
  3386                           	psect	intentry
  3387  0004                     __pintentry:	
  3388                           ;incstack = 0
  3389                           ; Regs used in _isr: [wreg+status,2+status,0]
  3390                           
  3391  0004                     interrupt_function:
  3392  007E                     saved_w	set	btemp
  3393  0004  00FE               	movwf	btemp
  3394  0005  0E03               	swapf	3,w
  3395  0006  00F1               	movwf	??_isr+1
  3396  0007  080A               	movf	10,w
  3397  0008  00F2               	movwf	??_isr+2
  3398  0009  120A  118A  2C79   	ljmp	_isr
  3399                           
  3400                           	psect	config
  3401                           
  3402                           ;Config register CONFIG1 @ 0x2007
  3403                           ;	Oscillator Selection bits
  3404                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3405                           ;	Watchdog Timer Enable bit
  3406                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3407                           ;	Power-up Timer Enable bit
  3408                           ;	PWRTE = OFF, PWRT disabled
  3409                           ;	RE3/MCLR pin function select bit
  3410                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3411                           ;	Code Protection bit
  3412                           ;	CP = OFF, Program memory code protection is disabled
  3413                           ;	Data Code Protection bit
  3414                           ;	CPD = OFF, Data memory code protection is disabled
  3415                           ;	Brown Out Reset Selection bits
  3416                           ;	BOREN = OFF, BOR disabled
  3417                           ;	Internal External Switchover bit
  3418                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3419                           ;	Fail-Safe Clock Monitor Enabled bit
  3420                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3421                           ;	Low Voltage Programming Enable bit
  3422                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3423                           ;	In-Circuit Debugger Mode bit
  3424                           ;	DEBUG = 0x1, unprogrammed default
  3425  2007                     	org	8199
  3426  2007  20D4               	dw	8404
  3427                           
  3428                           ;Config register CONFIG2 @ 0x2008
  3429                           ;	Brown-out Reset Selection bit
  3430                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3431                           ;	Flash Program Memory Self Write Enable bits
  3432                           ;	WRT = OFF, Write protection off
  3433  2008                     	org	8200
  3434  2008  3FFF               	dw	16383

Data Sizes:
    Strings     122
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     11      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 63
		 -> STR_13(CODE[63]), STR_12(CODE[11]), STR_11(CODE[3]), STR_10(CODE[2]), 
		 -> STR_9(CODE[11]), STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _setup->_config_ADC
    _mensaje1->_printf
    _mensaje->_printf
    _printf->_putch
    _division->___awdiv
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3703
                                              8 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _division
                            _mensaje
                           _mensaje1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mensaje1                                             2     2      0     332
                                              0 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              2     2      0     332
                                              0 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     332
                                              4 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1660
                                              4 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     440
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _division
     ___awdiv
     ___awmod
   _mensaje
     _printf
       _putch
   _mensaje1
     _printf
       _putch
   _setup
     _config_ADC
     _config_USART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 01:20:49 2021

                        pc 0002               ___awdiv@sign 0021                         fsr 0004  
                      l102 003D                        l103 009B                        l122 0576  
                      l131 04F5                        l116 042A                        l108 00BA  
                      l125 057E                        l119 01F0                        l128 02C1  
                      l146 0326                        l163 054D                        l172 0584  
                      l190 0531                        l175 0567                        l184 03D9  
                      l178 0574                        l187 0478                        l451 0259  
                      l196 04D0                        l294 0514                        l464 0381  
                      u350 057C                        u351 057B                        u360 0514  
                      u361 0513                        u700 0203                        u701 0202  
                      u710 0214                        u711 0213                        u800 0339  
                      u801 0338                        u730 0226                        u810 0344  
                      u731 0225                        u811 0343                        u900 03B5  
                      u901 03B4                        u725 0218                        u750 0237  
                      u830 0356                        u751 0236                        u831 0355  
                      u920 04D0                        u840 0360                        u921 04CF  
                      u745 0227                        u841 035F                        u825 0348  
                      u770 024B                        u690 01F8                        u930 00A1  
                      u915 03BD                        u771 024A                        u755 0233  
                      u691 01F7                        u931 00A0                        u780 0250  
                      u860 0373                        u940 00A7                        u781 024F  
                      u765 023F                        u861 0372                        u845 035C  
                      u941 00A6                        u870 0378                        u790 032E  
                      u950 00B2                        u871 0377                        u855 0367  
                      u791 032D                        u951 00B1                        u880 038A  
                      u960 00B9                        u881 0389                        u961 00B8  
                      u970 00E7                        u971 00E6                        u895 0392  
                      u987 00DB                        u997 00EB                        _isr 0479  
                      fsr0 0004               ___awmod@sign 0021                       l1300 02C3  
                     l1310 02D0                       l1302 02C4                       l1320 02DB  
                     l1312 02D1                       l1304 02C8                       l1330 02E7  
                     l1322 02DF                       l1314 02D4                       l1306 02CC  
                     l1244 0576                       l1340 02F5                       l1332 02E8  
                     l1324 02E2                       l1316 02D5                       l1308 02CF  
                     l1500 04E9                       l1246 057C                       l1350 02FD  
                     l1342 02F6                       l1334 02EA                       l1326 02E3  
                     l1318 02D7                       l1270 0532                       l1502 04EA  
                     l1264 04F7                       l1360 030A                       l1352 0301  
                     l1344 02F7                       l1336 02EE                       l1328 02E4  
                     l1280 053E                       l1272 0536                       l1504 04EF  
                     l1266 04FC                       l1362 030D                       l1354 0305  
                     l1346 02FA                       l1338 02F2                       l1290 0549  
                     l1282 0541                       l1274 0537                       l1700 0552  
                     l1268 0502                       l1364 030E                       l1356 0308  
                     l1348 02FB                       l1292 054A                       l1284 0542  
                     l1276 053A                       l1702 0558                       l1710 01F4  
                     l1358 0309                       l1294 054B                       l1286 0545  
                     l1278 053D                       l1470 04D8                       l1704 055B  
                     l1800 0568                       l1720 0208                       l1712 01F8  
                     l1368 0310                       l1296 054C                       l1288 0546  
                     l1480 04DD                       l1472 04D9                       l1706 0564  
                     l1810 03A6                       l1802 0385                       l1730 021E  
                     l1722 020C                       l1714 01FD                       l1490 04E4  
                     l1482 04DE                       l1474 04DA                       l1466 04D1  
                     l1820 03D1                       l1804 038A                       l1812 03AF  
                     l1740 023E                       l1732 0222                       l1724 020E  
                     l1716 01FF                       l1708 01F1                       l1492 04E5  
                     l1484 04DF                       l1476 04DB                       l1468 04D5  
                     l1900 0090                       l1814 03B5                       l1806 039B  
                     l1822 04AB                       l1742 0245                       l1734 0226  
                     l1726 0214                       l1718 0203                       l1830 025D  
                     l1494 04E6                       l1486 04E0                       l1478 04DC  
                     l1910 00AC                       l1902 0096                       l1816 03C6  
                     l1808 03A0                       l1824 04AE                       l1736 0237  
                     l1728 0217                       l1744 024B                       l1760 0335  
                     l1752 0327                       l1832 02B5                       l1840 03DA  
                     l1496 04E7                       l1488 04E3                       l1920 00E1  
                     l1912 00B2                       l1904 00A1                       l1818 03CB  
                     l1690 0521                       l1826 04BB                       l1746 0250  
                     l1738 023D                       l1770 034E                       l1762 0339  
                     l1754 032A                       l1834 02B9                       l1850 0424  
                     l1842 03E0                       l1498 04E8                       l1922 00E7  
                     l1914 00B9                       l1906 00A7                       l1684 0580  
                     l1692 0527                       l1828 04C3                       l1748 0255  
                     l1780 036D                       l1772 0352                       l1764 033E  
                     l1756 032E                       l1836 02BD                       l1844 03EA  
                     l1860 0194                       l1924 00EE                       l1916 00BB  
                     l1908 00AB                       l1790 042B                       l1694 052A  
                     l1686 0516                       l1774 0356                       l1766 0344  
                     l1782 0373                       l1758 0333                       l1846 03EE  
                     l1870 01EA                       l1862 019E                       l1854 0180  
                     l1950 0318                       l1918 00D3                       l1792 0431  
                     l1696 052E                       l1688 051E                       l1784 0378  
                     l1776 0360                       l1768 0347                       l1848 03F8  
                     l1864 01CA                       l1856 0186                       l1880 002F  
                     l1698 054F                       l1794 043C                       l1786 037D  
                     l1778 0366                       l1866 01D0                       l1858 0190  
                     l1890 0065                       l1882 0037                       l1874 0020  
                     l1796 044D                       l1868 01E0                       l1892 006B  
                     l1884 0053                       l1876 0025                       l1798 0453  
                     l1894 0070                       l1886 0059                       l1878 002A  
                     l1896 0078                       l1888 005F                       l1898 007E  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0145  
                     STR_2 017E                       STR_3 017B                       STR_4 017E  
                     STR_5 017B                       STR_6 0156                       STR_7 017E  
                     STR_8 0178                       STR_9 0162                       u1007 02CA  
                     u1017 02DD                       u1107 01E6                       u1027 02F0  
                     u1117 03E6                       u1037 0303                       u1207 055F  
                     u1127 03F4                       u1047 018C                       u1137 0404  
                     u1057 019A                       u1147 0412                       u1067 01AA  
                     u1157 0420                       u1077 01B8                       u1167 052C  
                     u1087 01C6                       u1177 0437                       u1097 01D6  
                     u1187 0448                       u1197 0457             ??_config_USART 0073  
                     _RCIF 0065                       i1l97 04A1                       _TXIF 0064  
        ?_Lcd_Write_String 0070                       _dato 002B                       _main 0020  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
          __end_of_Lcd_Cmd 0568                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 025A             config_ADC@frec 0075                      STR_10 017E  
                    STR_11 0178                      STR_12 016D                      STR_13 0106  
          __end_of___awmod 0382                      _ANSEL 0188            ___awdiv@divisor 0073  
          ___awdiv@counter 0020                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u61_20 047F  
                    u61_21 047E                      u62_20 0488                      u62_21 0487  
                    u63_20 049A                      u63_21 0499    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _dato1 002C            __end_of_mensaje 042B                      _setup 04D1  
                    _putch 0575                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0479           __end_of_Lcd_Port 0585  
          __initialization 000F               __end_of_main 00F5                     ??_main 0028  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E           ___awdiv@dividend 0075  
                   ?_setup 0070                     ?_putch 0070                     i1l1600 0491  
                   i1l1602 049A                     i1l1604 049C                     i1l1606 04A0  
                   i1l1592 0479                     i1l1594 047F                     i1l1596 0488  
                   i1l1598 048C                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 001D           __end_of_division 02C2                  ??___awdiv 0077  
                ??___awmod 0077           __end_of_mensaje1 01F1           ___awdiv@quotient 0022  
     __end_of_config_USART 054E            ___awmod@divisor 0073            ___awmod@counter 0020  
                   _printf 04F6                  ??_mensaje 0020                     saved_w 007E  
          Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0024  
          Lcd_Set_Cursor@z 0023    __end_of__initialization 001C          __end_of_Lcd_Clear 0575  
           __pcstackCOMMON 0070              __end_of_setup 04F6              __end_of_putch 057F  
           _Lcd_Set_Cursor 0382                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0076                    ??_putch 0073                 __pbssBANK0 002B  
               __pmaintext 0020                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 03DA                    ?_printf 0070                 _config_ADC 02C2  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 0100  
                ?_division 0070             _Lcd_Write_Char 0515                    _Lcd_Cmd 054E  
                ?_mensaje1 0070      __size_of_config_USART 001C                    ___awdiv 01F1  
                  ___awmod 0327                    _decenas 0079            ?_Lcd_Set_Cursor 0077  
                  __ptext1 04D1                    __ptext2 0532                    __ptext3 02C2  
                  __ptext4 0180                    __ptext5 03DA                    __ptext6 04F6  
                  __ptext7 0575                    __ptext8 025A                    __ptext9 0327  
          __size_of_printf 001F               __size_of_isr 002F                    _mensaje 03DA  
         ___awmod@dividend 0075                    _residuo 002E     __end_of_Lcd_Write_Char 0532  
     end_of_initialization 001C                 ??_division 0024               _config_USART 0532  
               ??_mensaje1 0020                  _RCSTAbits 0018                    printf@c 0076  
                  printf@f 0077                  Lcd_Port@a 0073                  _PORTEbits 0009  
              ?_config_ADC 0070                  _TRISAbits 0085          division@dividendo 0027  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022          Lcd_Write_String@i 0020  
                _TXSTAbits 0098                  _Lcd_Clear 0568           _Lcd_Write_String 04A8  
              _BAUDCTLbits 0187             __end_of_printf 0515        start_initialization 000F  
              __end_of_isr 04A8          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
      __size_of_config_ADC 0065                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0075  
          Lcd_Write_Char@y 0077                   ??_printf 0074                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
        __size_of_division 0068          __size_of_mensaje1 0071           ??_Lcd_Set_Cursor 0020  
                 ?___awdiv 0073                   ?___awmod 0073                  __pstrings 0100  
                 ?_mensaje 0070             __size_of_setup 0025             __size_of_putch 000A  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 0105                 _ADCON1bits 009F               ??_config_ADC 0073  
         ??_Lcd_Write_Char 0074                  _voltaje_b 0030                  _voltaje_c 002F  
                 _Lcd_Init 042B                   _Lcd_Port 057F   __end_of_Lcd_Write_String 04D1  
         __size_of_Lcd_Cmd 001A         __end_of_config_ADC 0327           __size_of___awdiv 0069  
         __size_of___awmod 005B         __end_of__stringtab 0106           __size_of_mensaje 0051  
                 _centenas 007A                   __ptext10 01F1                   __ptext11 04A8  
                 __ptext12 0515                   __ptext13 0382                   __ptext14 042B  
                 __ptext15 0568                   __ptext16 054E                   __ptext17 057F  
                 __ptext18 0479                   _division 025A                   _contador 002D  
            __size_of_main 00D5                   _mensaje1 0180                   _unidades 0078  
                 _voltaje1 0032                   _voltaje2 0031                  putch@dato 0073  
               _INTCONbits 000B         Lcd_Write_Char@temp 0076                   intlevel1 0000  
                stringcode 0100                 _OSCCONbits 008F                   printf@ap 0075  
       Lcd_Set_Cursor@temp 0025                   stringdir 0100                   stringtab 0100  
            ?_config_USART 0070  
