

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 01:48:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0009                     _PORTEbits	set	9
   458  0018                     _RCSTAbits	set	24
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0007                     _PORTC	set	7
   462  0006                     _PORTB	set	6
   463  0005                     _PORTA	set	5
   464  000B                     _INTCONbits	set	11
   465  000C                     _PIR1bits	set	12
   466  0019                     _TXREG	set	25
   467  001A                     _RCREG	set	26
   468  001E                     _ADRESH	set	30
   469  001F                     _ADCON0bits	set	31
   470  0064                     _TXIF	set	100
   471  0065                     _RCIF	set	101
   472  0066                     _ADIF	set	102
   473  0098                     _TXSTAbits	set	152
   474  009A                     _SPBRGH	set	154
   475  0099                     _SPBRG	set	153
   476  009F                     _ADCON1bits	set	159
   477  008C                     _PIE1bits	set	140
   478  008F                     _OSCCONbits	set	143
   479  0089                     _TRISE	set	137
   480  0088                     _TRISD	set	136
   481  0085                     _TRISAbits	set	133
   482  0187                     _BAUDCTLbits	set	391
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  0100                     __pstrings:
   487  0100                     stringtab:
   488  0100                     __stringtab:
   489  0100                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  0100                     stringdir:
   493  0100  3001               	movlw	high stringdir
   494  0101  008A               	movwf	10
   495  0102  0804               	movf	4,w
   496  0103  0A84               	incf	4,f
   497  0104  0782               	addwf	2,f
   498  0105                     __stringbase:
   499  0105  3400               	retlw	0
   500  0106                     __end_of__stringtab:
   501  0106                     STR_13:
   502  0106  340D               	retlw	13
   503  0107  3450               	retlw	80	;'P'
   504  0108  3461               	retlw	97	;'a'
   505  0109  3472               	retlw	114	;'r'
   506  010A  3461               	retlw	97	;'a'
   507  010B  3420               	retlw	32	;' '
   508  010C  3469               	retlw	105	;'i'
   509  010D  346E               	retlw	110	;'n'
   510  010E  3463               	retlw	99	;'c'
   511  010F  3472               	retlw	114	;'r'
   512  0110  3465               	retlw	101	;'e'
   513  0111  346D               	retlw	109	;'m'
   514  0112  3465               	retlw	101	;'e'
   515  0113  346E               	retlw	110	;'n'
   516  0114  3474               	retlw	116	;'t'
   517  0115  3461               	retlw	97	;'a'
   518  0116  3472               	retlw	114	;'r'
   519  0117  3420               	retlw	32	;' '
   520  0118  3465               	retlw	101	;'e'
   521  0119  346C               	retlw	108	;'l'
   522  011A  3420               	retlw	32	;' '
   523  011B  3463               	retlw	99	;'c'
   524  011C  346F               	retlw	111	;'o'
   525  011D  346E               	retlw	110	;'n'
   526  011E  3474               	retlw	116	;'t'
   527  011F  3461               	retlw	97	;'a'
   528  0120  3464               	retlw	100	;'d'
   529  0121  346F               	retlw	111	;'o'
   530  0122  3472               	retlw	114	;'r'
   531  0123  3420               	retlw	32	;' '
   532  0124  3470               	retlw	112	;'p'
   533  0125  3472               	retlw	114	;'r'
   534  0126  3465               	retlw	101	;'e'
   535  0127  3473               	retlw	115	;'s'
   536  0128  3469               	retlw	105	;'i'
   537  0129  346F               	retlw	111	;'o'
   538  012A  346E               	retlw	110	;'n'
   539  012B  3465               	retlw	101	;'e'
   540  012C  3420               	retlw	32	;' '
   541  012D  342B               	retlw	43	;'+'
   542  012E  340D               	retlw	13
   543  012F  3479               	retlw	121	;'y'
   544  0130  3420               	retlw	32	;' '
   545  0131  3470               	retlw	112	;'p'
   546  0132  3461               	retlw	97	;'a'
   547  0133  3472               	retlw	114	;'r'
   548  0134  3461               	retlw	97	;'a'
   549  0135  3420               	retlw	32	;' '
   550  0136  3464               	retlw	100	;'d'
   551  0137  3465               	retlw	101	;'e'
   552  0138  3463               	retlw	99	;'c'
   553  0139  3472               	retlw	114	;'r'
   554  013A  3465               	retlw	101	;'e'
   555  013B  346D               	retlw	109	;'m'
   556  013C  3465               	retlw	101	;'e'
   557  013D  346E               	retlw	110	;'n'
   558  013E  3474               	retlw	116	;'t'
   559  013F  3461               	retlw	97	;'a'
   560  0140  3472               	retlw	114	;'r'
   561  0141  3420               	retlw	32	;' '
   562  0142  342D               	retlw	45	;'-'
   563  0143  340D               	retlw	13
   564  0144  3400               	retlw	0
   565  0145                     STR_1:
   566  0145  3453               	retlw	83	;'S'
   567  0146  345F               	retlw	95	;'_'
   568  0147  3431               	retlw	49	;'1'
   569  0148  343A               	retlw	58	;':'
   570  0149  3420               	retlw	32	;' '
   571  014A  3420               	retlw	32	;' '
   572  014B  3453               	retlw	83	;'S'
   573  014C  345F               	retlw	95	;'_'
   574  014D  3432               	retlw	50	;'2'
   575  014E  343A               	retlw	58	;':'
   576  014F  3420               	retlw	32	;' '
   577  0150  3420               	retlw	32	;' '
   578  0151  3453               	retlw	83	;'S'
   579  0152  345F               	retlw	95	;'_'
   580  0153  3433               	retlw	51	;'3'
   581  0154  343A               	retlw	58	;':'
   582  0155  3400               	retlw	0
   583  0156                     STR_6:
   584  0156  340D               	retlw	13
   585  0157  3456               	retlw	86	;'V'
   586  0158  346F               	retlw	111	;'o'
   587  0159  346C               	retlw	108	;'l'
   588  015A  3474               	retlw	116	;'t'
   589  015B  3461               	retlw	97	;'a'
   590  015C  346A               	retlw	106	;'j'
   591  015D  3465               	retlw	101	;'e'
   592  015E  3431               	retlw	49	;'1'
   593  015F  343A               	retlw	58	;':'
   594  0160  3420               	retlw	32	;' '
   595  0161  3400               	retlw	0
   596  0162                     STR_9:
   597  0162  3456               	retlw	86	;'V'
   598  0163  346F               	retlw	111	;'o'
   599  0164  346C               	retlw	108	;'l'
   600  0165  3474               	retlw	116	;'t'
   601  0166  3461               	retlw	97	;'a'
   602  0167  346A               	retlw	106	;'j'
   603  0168  3465               	retlw	101	;'e'
   604  0169  3432               	retlw	50	;'2'
   605  016A  343A               	retlw	58	;':'
   606  016B  3420               	retlw	32	;' '
   607  016C  3400               	retlw	0
   608  016D                     STR_12:
   609  016D  342D               	retlw	45	;'-'
   610  016E  342D               	retlw	45	;'-'
   611  016F  342D               	retlw	45	;'-'
   612  0170  342D               	retlw	45	;'-'
   613  0171  342D               	retlw	45	;'-'
   614  0172  342D               	retlw	45	;'-'
   615  0173  342D               	retlw	45	;'-'
   616  0174  342D               	retlw	45	;'-'
   617  0175  342D               	retlw	45	;'-'
   618  0176  342D               	retlw	45	;'-'
   619  0177  3400               	retlw	0
   620  0178                     STR_8:
   621  0178  340D               	retlw	13
   622  0179  340D               	retlw	13
   623  017A  3400               	retlw	0
   624  017B                     STR_3:
   625  017B  3456               	retlw	86	;'V'
   626  017C  3420               	retlw	32	;' '
   627  017D  3400               	retlw	0
   628  017E                     STR_2:
   629  017E  342E               	retlw	46	;'.'
   630  017F  3400               	retlw	0
   631  0178                     
   632                           	psect	cinit
   633  000F                     start_initialization:	
   634                           ; #config settings
   635                           
   636  000F                     __initialization:
   637                           
   638                           ; Clear objects allocated to COMMON
   639  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   640  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   641  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   642                           
   643                           ; Clear objects allocated to BANK0
   644  0012  1283               	bcf	3,5	;RP0=0, select bank0
   645  0013  1303               	bcf	3,6	;RP1=0, select bank0
   646  0014  01A9               	clrf	__pbssBANK0& (0+127)
   647  0015  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   648  0016  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   649  0017  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   650  0018  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   651  0019  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   652  001A  01AF               	clrf	(__pbssBANK0+6)& (0+127)
   653  001B  01B0               	clrf	(__pbssBANK0+7)& (0+127)
   654  001C                     end_of_initialization:	
   655                           ;End of C runtime variable initialization code
   656                           
   657  001C                     __end_of__initialization:
   658  001C  0183               	clrf	3
   659  001D  120A  118A  2820   	ljmp	_main	;jump to C main() function
   660                           
   661                           	psect	bssCOMMON
   662  0078                     __pbssCOMMON:
   663  0078                     _unidades:
   664  0078                     	ds	1
   665  0079                     _decenas:
   666  0079                     	ds	1
   667  007A                     _centenas:
   668  007A                     	ds	1
   669                           
   670                           	psect	bssBANK0
   671  0029                     __pbssBANK0:
   672  0029                     _dato:
   673  0029                     	ds	1
   674  002A                     _dato1:
   675  002A                     	ds	1
   676  002B                     _contador:
   677  002B                     	ds	1
   678  002C                     _residuo:
   679  002C                     	ds	1
   680  002D                     _voltaje_c:
   681  002D                     	ds	1
   682  002E                     _voltaje_b:
   683  002E                     	ds	1
   684  002F                     _voltaje2:
   685  002F                     	ds	1
   686  0030                     _voltaje1:
   687  0030                     	ds	1
   688                           
   689                           	psect	cstackCOMMON
   690  0070                     __pcstackCOMMON:
   691  0070                     ?_setup:
   692  0070                     ?_Lcd_Init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Clear:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_Lcd_Write_String:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_division:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_Lcd_Write_Char:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_mensaje:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_mensaje1:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_config_USART:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_config_ADC:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_isr:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ??_isr:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_main:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_putch:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Port:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Cmd:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_printf:	
   738                           ; 1 bytes @ 0x0
   739                           
   740                           
   741                           ; 2 bytes @ 0x0
   742  0070                     	ds	3
   743  0073                     ??_config_USART:
   744  0073                     ??_config_ADC:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_putch:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??_Lcd_Port:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ?___awdiv:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ?___awmod:	
   757                           ; 2 bytes @ 0x3
   758                           
   759  0073                     putch@dato:	
   760                           ; 2 bytes @ 0x3
   761                           
   762  0073                     Lcd_Port@a:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     ___awmod@divisor:	
   769                           ; 2 bytes @ 0x3
   770                           
   771                           
   772                           ; 2 bytes @ 0x3
   773  0073                     	ds	1
   774  0074                     ??_Lcd_Write_Char:
   775  0074                     ??_printf:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??_Lcd_Cmd:	
   779                           ; 1 bytes @ 0x4
   780                           
   781                           
   782                           ; 1 bytes @ 0x4
   783  0074                     	ds	1
   784  0075                     config_ADC@frec:
   785  0075                     Lcd_Write_Char@a:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  0075                     printf@ap:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     ___awdiv@dividend:	
   792                           ; 1 bytes @ 0x5
   793                           
   794  0075                     ___awmod@dividend:	
   795                           ; 2 bytes @ 0x5
   796                           
   797                           
   798                           ; 2 bytes @ 0x5
   799  0075                     	ds	1
   800  0076                     ??_setup:
   801  0076                     Lcd_Cmd@a:	
   802                           ; 1 bytes @ 0x6
   803                           
   804  0076                     Lcd_Write_Char@temp:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0076                     printf@c:	
   808                           ; 1 bytes @ 0x6
   809                           
   810                           
   811                           ; 1 bytes @ 0x6
   812  0076                     	ds	1
   813  0077                     ??_Lcd_Clear:
   814  0077                     ?_Lcd_Set_Cursor:	
   815                           ; 1 bytes @ 0x7
   816                           
   817  0077                     ??___awdiv:	
   818                           ; 1 bytes @ 0x7
   819                           
   820  0077                     ??___awmod:	
   821                           ; 1 bytes @ 0x7
   822                           
   823  0077                     Lcd_Set_Cursor@b:	
   824                           ; 1 bytes @ 0x7
   825                           
   826  0077                     Lcd_Write_Char@y:	
   827                           ; 1 bytes @ 0x7
   828                           
   829  0077                     printf@f:	
   830                           ; 1 bytes @ 0x7
   831                           
   832                           
   833                           ; 1 bytes @ 0x7
   834  0077                     	ds	1
   835  0078                     ??_Lcd_Write_String:
   836                           
   837                           	psect	cstackBANK0
   838  0020                     __pcstackBANK0:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  0020                     ??_Lcd_Init:
   842  0020                     ??_Lcd_Set_Cursor:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0020                     ??_mensaje:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     ??_mensaje1:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     ___awdiv@counter:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     ___awmod@counter:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     Lcd_Write_String@i:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 2 bytes @ 0x0
   862  0020                     	ds	1
   863  0021                     ___awdiv@sign:
   864  0021                     ___awmod@sign:	
   865                           ; 1 bytes @ 0x1
   866                           
   867                           
   868                           ; 1 bytes @ 0x1
   869  0021                     	ds	1
   870  0022                     Lcd_Set_Cursor@a:
   871  0022                     Lcd_Write_String@a:	
   872                           ; 1 bytes @ 0x2
   873                           
   874  0022                     ___awdiv@quotient:	
   875                           ; 1 bytes @ 0x2
   876                           
   877                           
   878                           ; 2 bytes @ 0x2
   879  0022                     	ds	1
   880  0023                     Lcd_Set_Cursor@z:
   881                           
   882                           ; 1 bytes @ 0x3
   883  0023                     	ds	1
   884  0024                     ??_division:
   885  0024                     Lcd_Set_Cursor@y:	
   886                           ; 1 bytes @ 0x4
   887                           
   888                           
   889                           ; 1 bytes @ 0x4
   890  0024                     	ds	1
   891  0025                     Lcd_Set_Cursor@temp:
   892                           
   893                           ; 1 bytes @ 0x5
   894  0025                     	ds	2
   895  0027                     division@dividendo:
   896                           
   897                           ; 1 bytes @ 0x7
   898  0027                     	ds	1
   899  0028                     ??_main:
   900                           
   901                           ; 1 bytes @ 0x8
   902  0028                     	ds	1
   903                           
   904                           	psect	maintext
   905  0020                     __pmaintext:	
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 101 in file "main_02.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : B00/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0
   927 ;;      Temps:          0       1       0       0       0
   928 ;;      Totals:         0       1       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels required when called:    4
   931 ;; This function calls:
   932 ;;		_Lcd_Clear
   933 ;;		_Lcd_Init
   934 ;;		_Lcd_Set_Cursor
   935 ;;		_Lcd_Write_Char
   936 ;;		_Lcd_Write_String
   937 ;;		_division
   938 ;;		_mensaje
   939 ;;		_mensaje1
   940 ;;		_setup
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _main
   948  0020                     _main:
   949  0020                     l1870:	
   950                           ;incstack = 0
   951                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   952                           
   953                           
   954                           ;main_02.c: 102: 
   955  0020  120A  118A  24D1  120A  118A  	fcall	_setup
   956  0025                     l1872:
   957                           
   958                           ;main_02.c: 104: void mensaje(void){
   959  0025  120A  118A  242B  120A  118A  	fcall	_Lcd_Init
   960  002A                     l1874:
   961                           
   962                           ;main_02.c: 105:     printf("\rVoltaje1: ");
   963  002A  120A  118A  2568  120A  118A  	fcall	_Lcd_Clear
   964  002F                     l1876:
   965                           
   966                           ;main_02.c: 107:     TXREG = centenas;
   967  002F  01F7               	clrf	Lcd_Set_Cursor@b
   968  0030  0AF7               	incf	Lcd_Set_Cursor@b,f
   969  0031  3001               	movlw	1
   970  0032  120A  118A  2382  120A  118A  	fcall	_Lcd_Set_Cursor
   971  0037                     l1878:
   972                           
   973                           ;main_02.c: 108:     _delay((unsigned long)((100)*(4000000/4000.0)));
   974  0037  3040               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   975  0038  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
   976  003D                     l102:	
   977                           ;main_02.c: 110:     _delay((unsigned long)((100)*(4000000/4000.0)));
   978                           
   979                           
   980                           ;main_02.c: 112:     _delay((unsigned long)((100)*(4000000/4000.0)));
   981  003D  1283               	bcf	3,5	;RP0=0, select bank0
   982  003E  1303               	bcf	3,6	;RP1=0, select bank0
   983  003F  0830               	movf	_voltaje1,w
   984  0040  120A  118A  225A  120A  118A  	fcall	_division
   985                           
   986                           ;main_02.c: 113:     TXREG = unidades;
   987  0045  01F7               	clrf	Lcd_Set_Cursor@b
   988  0046  0AF7               	incf	Lcd_Set_Cursor@b,f
   989  0047  3002               	movlw	2
   990  0048  120A  118A  2382  120A  118A  	fcall	_Lcd_Set_Cursor
   991                           
   992                           ;main_02.c: 114:     _delay((unsigned long)((100)*(4000000/4000.0)));
   993  004D  087A               	movf	_centenas,w
   994  004E  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
   995  0053                     l1880:
   996                           
   997                           ;main_02.c: 115:     printf("\r\r");
   998  0053  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   999  0054  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1000  0059                     l1882:
  1001                           
  1002                           ;main_02.c: 116: 
  1003  0059  0879               	movf	_decenas,w
  1004  005A  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1005  005F                     l1884:
  1006                           
  1007                           ;main_02.c: 117:     return;
  1008  005F  0878               	movf	_unidades,w
  1009  0060  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1010  0065                     l1886:
  1011                           
  1012                           ;main_02.c: 118: }
  1013  0065  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1014  0066  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1015  006B                     l1888:
  1016                           
  1017                           ;main_02.c: 119: 
  1018  006B  120A  118A  23DA  120A  118A  	fcall	_mensaje
  1019  0070                     l1890:
  1020                           
  1021                           ;main_02.c: 121:     printf("Voltaje2: ");
  1022  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0072  082F               	movf	_voltaje2,w
  1025  0073  120A  118A  225A  120A  118A  	fcall	_division
  1026  0078                     l1892:
  1027                           
  1028                           ;main_02.c: 122:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1029  0078  087A               	movf	_centenas,w
  1030  0079  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1031  007E                     l1894:
  1032                           
  1033                           ;main_02.c: 123:     TXREG = centenas;
  1034  007E  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1035  007F  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1036                           
  1037                           ;main_02.c: 124:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1038  0084  0879               	movf	_decenas,w
  1039  0085  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1040                           
  1041                           ;main_02.c: 125:     printf(".");
  1042  008A  0878               	movf	_unidades,w
  1043  008B  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1044  0090                     l1896:
  1045                           
  1046                           ;main_02.c: 126:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1047  0090  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1048  0091  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_String
  1049  0096                     l1898:
  1050                           
  1051                           ;main_02.c: 127:     TXREG = decenas;
  1052  0096  120A  118A  2180  120A  118A  	fcall	_mensaje1
  1053  009B                     l103:	
  1054                           ;main_02.c: 129:     TXREG = unidades;
  1055                           
  1056  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1057  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1058  009D  1E8C               	btfss	12,5	;volatile
  1059  009E  28A0               	goto	u931
  1060  009F  28A1               	goto	u930
  1061  00A0                     u931:
  1062  00A0  289B               	goto	l103
  1063  00A1                     u930:
  1064  00A1                     l1900:
  1065                           
  1066                           ;main_02.c: 130:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1067  00A1  302B               	movlw	43
  1068  00A2  061A               	xorwf	26,w	;volatile
  1069  00A3  1D03               	btfss	3,2
  1070  00A4  28A6               	goto	u941
  1071  00A5  28A7               	goto	u940
  1072  00A6                     u941:
  1073  00A6  28AC               	goto	l1906
  1074  00A7                     u940:
  1075  00A7                     l1902:
  1076                           
  1077                           ;main_02.c: 131:     printf("\r\r");
  1078  00A7  3001               	movlw	1
  1079  00A8  00A8               	movwf	??_main
  1080  00A9  0828               	movf	??_main,w
  1081  00AA  07AB               	addwf	_contador,f
  1082  00AB                     l1904:
  1083                           
  1084                           ;main_02.c: 133:     printf("----------");
  1085  00AB  019A               	clrf	26	;volatile
  1086  00AC                     l1906:
  1087                           
  1088                           ;main_02.c: 135:     printf("\rPara incrementar el contador presione +\ry para decrement
      +                          ar -\r");
  1089  00AC  302D               	movlw	45
  1090  00AD  061A               	xorwf	26,w	;volatile
  1091  00AE  1D03               	btfss	3,2
  1092  00AF  28B1               	goto	u951
  1093  00B0  28B2               	goto	u950
  1094  00B1                     u951:
  1095  00B1  28BB               	goto	l1912
  1096  00B2                     u950:
  1097  00B2                     l1908:
  1098                           
  1099                           ;main_02.c: 136: 
  1100  00B2  3001               	movlw	1
  1101  00B3  02AB               	subwf	_contador,f
  1102                           
  1103                           ;main_02.c: 137:     return;
  1104  00B4  0A2B               	incf	_contador,w
  1105  00B5  1D03               	btfss	3,2
  1106  00B6  28B8               	goto	u961
  1107  00B7  28B9               	goto	u960
  1108  00B8                     u961:
  1109  00B8  28BA               	goto	l108
  1110  00B9                     u960:
  1111  00B9                     l1910:
  1112  00B9  01AB               	clrf	_contador
  1113  00BA                     l108:
  1114                           
  1115                           ;main_02.c: 138: }
  1116  00BA  019A               	clrf	26	;volatile
  1117  00BB                     l1912:	
  1118                           ;main_02.c: 139: 
  1119                           
  1120                           
  1121                           ;main_02.c: 143:     return;
  1122  00BB  082B               	movf	_contador,w
  1123  00BC  120A  118A  225A  120A  118A  	fcall	_division
  1124                           
  1125                           ;main_02.c: 144: }
  1126  00C1  087A               	movf	_centenas,w
  1127  00C2  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1128                           
  1129                           ;main_02.c: 145: 
  1130  00C7  0879               	movf	_decenas,w
  1131  00C8  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1132                           
  1133                           ;main_02.c: 146: void division (char dividendo){
  1134  00CD  0878               	movf	_unidades,w
  1135  00CE  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  1136  00D3                     l1914:
  1137                           
  1138                           ;main_02.c: 152: 
  1139  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1140  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1141  00D5  189F               	btfsc	31,1	;volatile
  1142  00D6  28D8               	goto	u971
  1143  00D7  28D9               	goto	u970
  1144  00D8                     u971:
  1145  00D8  283D               	goto	l102
  1146  00D9                     u970:
  1147  00D9                     l1916:
  1148                           
  1149                           ;main_02.c: 153:     centenas += 48;
  1150  00D9  3020               	movlw	32
  1151  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1152  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1153  00DC  00A8               	movwf	??_main
  1154  00DD                     u987:
  1155  00DD  0BA8               	decfsz	??_main,f
  1156  00DE  28DD               	goto	u987
  1157  00DF  0000               	nop
  1158  00E0                     l1918:
  1159                           
  1160                           ;main_02.c: 154:     decenas += 48;
  1161  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1162  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1163  00E2  149F               	bsf	31,1	;volatile
  1164  00E3  283D               	goto	l102
  1165  00E4  120A  118A  280C   	ljmp	start
  1166  00E7                     __end_of_main:
  1167                           
  1168                           	psect	text1
  1169  04D1                     __ptext1:	
  1170 ;; *************** function _setup *****************
  1171 ;; Defined at:
  1172 ;;		line 222 in file "main_02.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    2
  1193 ;; This function calls:
  1194 ;;		_config_ADC
  1195 ;;		_config_USART
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _setup
  1203  04D1                     _setup:
  1204  04D1                     l1464:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1207                           
  1208  04D1  3003               	movlw	3
  1209  04D2  1683               	bsf	3,5	;RP0=1, select bank3
  1210  04D3  1703               	bsf	3,6	;RP1=1, select bank3
  1211  04D4  0088               	movwf	8	;volatile
  1212  04D5                     l1466:
  1213  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1214  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1215  04D7  1405               	bsf	5,0	;volatile
  1216  04D8                     l1468:
  1217  04D8  1485               	bsf	5,1	;volatile
  1218  04D9                     l1470:
  1219  04D9  0188               	clrf	8	;volatile
  1220  04DA                     l1472:
  1221  04DA  0189               	clrf	9	;volatile
  1222  04DB                     l1474:
  1223  04DB  120F               	bcf	15,4	;volatile
  1224  04DC                     l1476:
  1225  04DC  168F               	bsf	15,5	;volatile
  1226  04DD                     l1478:
  1227  04DD  170F               	bsf	15,6	;volatile
  1228  04DE                     l1480:
  1229  04DE  140F               	bsf	15,0	;volatile
  1230  04DF                     l1482:
  1231  04DF  170C               	bsf	12,6	;volatile
  1232  04E0                     l1484:
  1233  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1234  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1235  04E2  130C               	bcf	12,6	;volatile
  1236  04E3                     l1486:
  1237  04E3  178B               	bsf	11,7	;volatile
  1238  04E4                     l1488:
  1239  04E4  170B               	bsf	11,6	;volatile
  1240  04E5                     l1490:
  1241  04E5  0185               	clrf	5	;volatile
  1242  04E6                     l1492:
  1243  04E6  0186               	clrf	6	;volatile
  1244  04E7                     l1494:
  1245  04E7  0187               	clrf	7	;volatile
  1246  04E8                     l1496:
  1247  04E8  0188               	clrf	8	;volatile
  1248  04E9                     l1498:
  1249  04E9  0189               	clrf	9	;volatile
  1250  04EA                     l1500:
  1251  04EA  120A  118A  2532  120A  118A  	fcall	_config_USART
  1252  04EF                     l1502:
  1253  04EF  3001               	movlw	1
  1254  04F0  120A  118A  22C2  120A  118A  	fcall	_config_ADC
  1255  04F5                     l131:
  1256  04F5  0008               	return
  1257  04F6                     __end_of_setup:
  1258                           
  1259                           	psect	text2
  1260  0532                     __ptext2:	
  1261 ;; *************** function _config_USART *****************
  1262 ;; Defined at:
  1263 ;;		line 11 in file "config_USART.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0
  1280 ;;      Totals:         0       0       0       0       0
  1281 ;;Total ram usage:        0 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_setup
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _config_USART
  1293  0532                     _config_USART:
  1294  0532                     l1268:	
  1295                           ;incstack = 0
  1296                           ; Regs used in _config_USART: [wreg+status,2]
  1297                           
  1298                           
  1299                           ;config_USART.c: 13:     SPBRG = 103;
  1300  0532  3067               	movlw	103
  1301  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1302  0534  1303               	bcf	3,6	;RP1=0, select bank1
  1303  0535  0099               	movwf	25	;volatile
  1304  0536                     l1270:
  1305                           
  1306                           ;config_USART.c: 14:     SPBRGH = 0;
  1307  0536  019A               	clrf	26	;volatile
  1308  0537                     l1272:
  1309                           
  1310                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1311  0537  1683               	bsf	3,5	;RP0=1, select bank3
  1312  0538  1703               	bsf	3,6	;RP1=1, select bank3
  1313  0539  1587               	bsf	7,3	;volatile
  1314  053A                     l1274:
  1315                           
  1316                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1317  053A  1683               	bsf	3,5	;RP0=1, select bank1
  1318  053B  1303               	bcf	3,6	;RP1=0, select bank1
  1319  053C  1518               	bsf	24,2	;volatile
  1320  053D                     l1276:
  1321                           
  1322                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1323  053D  1218               	bcf	24,4	;volatile
  1324  053E                     l1278:
  1325                           
  1326                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1327  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1328  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0540  1798               	bsf	24,7	;volatile
  1330  0541                     l1280:
  1331                           
  1332                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1333  0541  1618               	bsf	24,4	;volatile
  1334  0542                     l1282:
  1335                           
  1336                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1337  0542  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0543  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0544  1318               	bcf	24,6	;volatile
  1340  0545                     l1284:
  1341                           
  1342                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1343  0545  1698               	bsf	24,5	;volatile
  1344  0546                     l1286:
  1345                           
  1346                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1347  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0548  1318               	bcf	24,6	;volatile
  1350  0549                     l1288:
  1351                           
  1352                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1353  0549  178B               	bsf	11,7	;volatile
  1354  054A                     l1290:
  1355                           
  1356                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1357  054A  170B               	bsf	11,6	;volatile
  1358  054B                     l1292:
  1359                           
  1360                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1361  054B  120C               	bcf	12,4	;volatile
  1362  054C                     l1294:
  1363                           
  1364                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1365  054C  128C               	bcf	12,5	;volatile
  1366  054D                     l163:
  1367  054D  0008               	return
  1368  054E                     __end_of_config_USART:
  1369                           
  1370                           	psect	text3
  1371  02C2                     __ptext3:	
  1372 ;; *************** function _config_ADC *****************
  1373 ;; Defined at:
  1374 ;;		line 15 in file "config_ADC.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  frec            1    wreg     unsigned char 
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  frec            1    5[COMMON] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         1       0       0       0       0
  1390 ;;      Temps:          2       0       0       0       0
  1391 ;;      Totals:         3       0       0       0       0
  1392 ;;Total ram usage:        3 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_setup
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _config_ADC
  1404  02C2                     _config_ADC:
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  1408                           ;config_ADC@frec stored from wreg
  1409  02C2  00F5               	movwf	config_ADC@frec
  1410  02C3                     l1298:
  1411                           
  1412                           ;config_ADC.c: 16:     switch(frec){
  1413  02C3  2B10               	goto	l1366
  1414  02C4                     l1300:
  1415                           
  1416                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  1417  02C4  30C3               	movlw	-61
  1418  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1419  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1420  02C7  059F               	andwf	31,f	;volatile
  1421  02C8                     l1302:
  1422                           
  1423                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1424  02C8  3021               	movlw	33
  1425  02C9  00F3               	movwf	??_config_ADC
  1426  02CA                     u997:
  1427  02CA  0BF3               	decfsz	??_config_ADC,f
  1428  02CB  2ACA               	goto	u997
  1429  02CC                     l1304:
  1430                           
  1431                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1432  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1433  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1434  02CE  131F               	bcf	31,6	;volatile
  1435  02CF                     l1306:
  1436                           
  1437                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1438  02CF  139F               	bcf	31,7	;volatile
  1439  02D0                     l1308:
  1440                           
  1441                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1442  02D0  141F               	bsf	31,0	;volatile
  1443  02D1                     l1310:
  1444                           
  1445                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1446  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1447  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  1448  02D3  139F               	bcf	31,7	;volatile
  1449  02D4                     l1312:
  1450                           
  1451                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1452  02D4  129F               	bcf	31,5	;volatile
  1453  02D5                     l1314:
  1454                           
  1455                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1456  02D5  121F               	bcf	31,4	;volatile
  1457                           
  1458                           ;config_ADC.c: 27:             break;
  1459  02D6  2B26               	goto	l146
  1460  02D7                     l1316:
  1461                           
  1462                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1463  02D7  30C3               	movlw	-61
  1464  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1465  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1466  02DA  059F               	andwf	31,f	;volatile
  1467  02DB                     l1318:
  1468                           
  1469                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1470  02DB  3021               	movlw	33
  1471  02DC  00F3               	movwf	??_config_ADC
  1472  02DD                     u1007:
  1473  02DD  0BF3               	decfsz	??_config_ADC,f
  1474  02DE  2ADD               	goto	u1007
  1475  02DF                     l1320:
  1476                           
  1477                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1478  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1479  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1480  02E1  171F               	bsf	31,6	;volatile
  1481  02E2                     l1322:
  1482                           
  1483                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1484  02E2  139F               	bcf	31,7	;volatile
  1485  02E3                     l1324:
  1486                           
  1487                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1488  02E3  141F               	bsf	31,0	;volatile
  1489  02E4                     l1326:
  1490                           
  1491                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1492  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  1493  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  1494  02E6  139F               	bcf	31,7	;volatile
  1495  02E7                     l1328:
  1496                           
  1497                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1498  02E7  129F               	bcf	31,5	;volatile
  1499  02E8                     l1330:
  1500                           
  1501                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1502  02E8  121F               	bcf	31,4	;volatile
  1503                           
  1504                           ;config_ADC.c: 38:             break;
  1505  02E9  2B26               	goto	l146
  1506  02EA                     l1332:
  1507                           
  1508                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  1509  02EA  30C3               	movlw	-61
  1510  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1511  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1512  02ED  059F               	andwf	31,f	;volatile
  1513  02EE                     l1334:
  1514                           
  1515                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1516  02EE  3021               	movlw	33
  1517  02EF  00F3               	movwf	??_config_ADC
  1518  02F0                     u1017:
  1519  02F0  0BF3               	decfsz	??_config_ADC,f
  1520  02F1  2AF0               	goto	u1017
  1521  02F2                     l1336:
  1522                           
  1523                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  1524  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1525  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1526  02F4  131F               	bcf	31,6	;volatile
  1527  02F5                     l1338:
  1528                           
  1529                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1530  02F5  179F               	bsf	31,7	;volatile
  1531  02F6                     l1340:
  1532                           
  1533                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1534  02F6  141F               	bsf	31,0	;volatile
  1535  02F7                     l1342:
  1536                           
  1537                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1538  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1539  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1540  02F9  139F               	bcf	31,7	;volatile
  1541  02FA                     l1344:
  1542                           
  1543                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1544  02FA  129F               	bcf	31,5	;volatile
  1545  02FB                     l1346:
  1546                           
  1547                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1548  02FB  121F               	bcf	31,4	;volatile
  1549                           
  1550                           ;config_ADC.c: 49:             break;
  1551  02FC  2B26               	goto	l146
  1552  02FD                     l1348:
  1553                           
  1554                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1555  02FD  30C3               	movlw	-61
  1556  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0300  059F               	andwf	31,f	;volatile
  1559  0301                     l1350:
  1560                           
  1561                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1562  0301  3021               	movlw	33
  1563  0302  00F3               	movwf	??_config_ADC
  1564  0303                     u1027:
  1565  0303  0BF3               	decfsz	??_config_ADC,f
  1566  0304  2B03               	goto	u1027
  1567  0305                     l1352:
  1568                           
  1569                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1570  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0307  171F               	bsf	31,6	;volatile
  1573  0308                     l1354:
  1574                           
  1575                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1576  0308  179F               	bsf	31,7	;volatile
  1577  0309                     l1356:
  1578                           
  1579                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1580  0309  141F               	bsf	31,0	;volatile
  1581  030A                     l1358:
  1582                           
  1583                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  1584  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1585  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1586  030C  139F               	bcf	31,7	;volatile
  1587  030D                     l1360:
  1588                           
  1589                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  1590  030D  129F               	bcf	31,5	;volatile
  1591  030E                     l1362:
  1592                           
  1593                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  1594  030E  121F               	bcf	31,4	;volatile
  1595                           
  1596                           ;config_ADC.c: 60:             break;
  1597  030F  2B26               	goto	l146
  1598  0310                     l1366:
  1599  0310  0875               	movf	config_ADC@frec,w
  1600  0311  00F3               	movwf	??_config_ADC
  1601  0312  01F4               	clrf	??_config_ADC+1
  1602                           
  1603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1604                           ; Switch size 1, requested type "simple"
  1605                           ; Number of cases is 1, Range of values is 0 to 0
  1606                           ; switch strategies available:
  1607                           ; Name         Instructions Cycles
  1608                           ; simple_byte            4     3 (average)
  1609                           ; direct_byte           11     8 (fixed)
  1610                           ; jumptable            260     6 (fixed)
  1611                           ;	Chosen strategy is simple_byte
  1612  0313  0874               	movf	??_config_ADC+1,w
  1613  0314  3A00               	xorlw	0	; case 0
  1614  0315  1903               	skipnz
  1615  0316  2B18               	goto	l1944
  1616  0317  2B26               	goto	l146
  1617  0318                     l1944:
  1618                           
  1619                           ; Switch size 1, requested type "simple"
  1620                           ; Number of cases is 4, Range of values is 0 to 3
  1621                           ; switch strategies available:
  1622                           ; Name         Instructions Cycles
  1623                           ; simple_byte           13     7 (average)
  1624                           ; direct_byte           20     8 (fixed)
  1625                           ; jumptable            260     6 (fixed)
  1626                           ;	Chosen strategy is simple_byte
  1627  0318  0873               	movf	??_config_ADC,w
  1628  0319  3A00               	xorlw	0	; case 0
  1629  031A  1903               	skipnz
  1630  031B  2AC4               	goto	l1300
  1631  031C  3A01               	xorlw	1	; case 1
  1632  031D  1903               	skipnz
  1633  031E  2AD7               	goto	l1316
  1634  031F  3A03               	xorlw	3	; case 2
  1635  0320  1903               	skipnz
  1636  0321  2AEA               	goto	l1332
  1637  0322  3A01               	xorlw	1	; case 3
  1638  0323  1903               	skipnz
  1639  0324  2AFD               	goto	l1348
  1640  0325  2B26               	goto	l146
  1641  0326                     l146:
  1642  0326  0008               	return
  1643  0327                     __end_of_config_ADC:
  1644                           
  1645                           	psect	text4
  1646  0180                     __ptext4:	
  1647 ;; *************** function _mensaje1 *****************
  1648 ;; Defined at:
  1649 ;;		line 181 in file "main_02.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          0       2       0       0       0
  1666 ;;      Totals:         0       2       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    3
  1670 ;; This function calls:
  1671 ;;		_printf
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _mensaje1
  1679  0180                     _mensaje1:
  1680  0180                     l1850:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _mensaje1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1683                           
  1684                           
  1685                           ;main_02.c: 182:     INTCONbits.PEIE = 1;
  1686  0180  305D               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1687  0181  120A  118A  24F6  120A  118A  	fcall	_printf
  1688  0186                     l1852:
  1689                           
  1690                           ;main_02.c: 183: 
  1691  0186  3082               	movlw	130
  1692  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0189  00A1               	movwf	??_mensaje1+1
  1695  018A  30DD               	movlw	221
  1696  018B  00A0               	movwf	??_mensaje1
  1697  018C                     u1037:
  1698  018C  0BA0               	decfsz	??_mensaje1,f
  1699  018D  298C               	goto	u1037
  1700  018E  0BA1               	decfsz	??_mensaje1+1,f
  1701  018F  298C               	goto	u1037
  1702  0190                     l1854:
  1703                           
  1704                           ;main_02.c: 184: 
  1705  0190  087A               	movf	_centenas,w
  1706  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0193  0099               	movwf	25	;volatile
  1709  0194                     l1856:
  1710                           
  1711                           ;main_02.c: 185:     PORTA = 0x00;
  1712  0194  3082               	movlw	130
  1713  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1714  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1715  0197  00A1               	movwf	??_mensaje1+1
  1716  0198  30DD               	movlw	221
  1717  0199  00A0               	movwf	??_mensaje1
  1718  019A                     u1047:
  1719  019A  0BA0               	decfsz	??_mensaje1,f
  1720  019B  299A               	goto	u1047
  1721  019C  0BA1               	decfsz	??_mensaje1+1,f
  1722  019D  299A               	goto	u1047
  1723  019E                     l1858:
  1724                           
  1725                           ;main_02.c: 186:     PORTB = 0x00;
  1726  019E  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1727  019F  120A  118A  24F6  120A  118A  	fcall	_printf
  1728                           
  1729                           ;main_02.c: 187:     PORTC = 0x00;
  1730  01A4  3082               	movlw	130
  1731  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1732  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1733  01A7  00A1               	movwf	??_mensaje1+1
  1734  01A8  30DD               	movlw	221
  1735  01A9  00A0               	movwf	??_mensaje1
  1736  01AA                     u1057:
  1737  01AA  0BA0               	decfsz	??_mensaje1,f
  1738  01AB  29AA               	goto	u1057
  1739  01AC  0BA1               	decfsz	??_mensaje1+1,f
  1740  01AD  29AA               	goto	u1057
  1741                           
  1742                           ;main_02.c: 188:     PORTD = 0x00;
  1743  01AE  0879               	movf	_decenas,w
  1744  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1745  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1746  01B1  0099               	movwf	25	;volatile
  1747                           
  1748                           ;main_02.c: 189:     PORTE = 0x00;
  1749  01B2  3082               	movlw	130
  1750  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01B5  00A1               	movwf	??_mensaje1+1
  1753  01B6  30DD               	movlw	221
  1754  01B7  00A0               	movwf	??_mensaje1
  1755  01B8                     u1067:
  1756  01B8  0BA0               	decfsz	??_mensaje1,f
  1757  01B9  29B8               	goto	u1067
  1758  01BA  0BA1               	decfsz	??_mensaje1+1,f
  1759  01BB  29B8               	goto	u1067
  1760                           
  1761                           ;main_02.c: 190: 
  1762  01BC  0878               	movf	_unidades,w
  1763  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1764  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1765  01BF  0099               	movwf	25	;volatile
  1766                           
  1767                           ;main_02.c: 191: 
  1768  01C0  3082               	movlw	130
  1769  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1770  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1771  01C3  00A1               	movwf	??_mensaje1+1
  1772  01C4  30DD               	movlw	221
  1773  01C5  00A0               	movwf	??_mensaje1
  1774  01C6                     u1077:
  1775  01C6  0BA0               	decfsz	??_mensaje1,f
  1776  01C7  29C6               	goto	u1077
  1777  01C8  0BA1               	decfsz	??_mensaje1+1,f
  1778  01C9  29C6               	goto	u1077
  1779  01CA                     l1860:
  1780                           
  1781                           ;main_02.c: 192:     config_USART();
  1782  01CA  3073               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1783  01CB  120A  118A  24F6  120A  118A  	fcall	_printf
  1784  01D0                     l1862:
  1785                           
  1786                           ;main_02.c: 193: 
  1787  01D0  3082               	movlw	130
  1788  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1789  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1790  01D3  00A1               	movwf	??_mensaje1+1
  1791  01D4  30DD               	movlw	221
  1792  01D5  00A0               	movwf	??_mensaje1
  1793  01D6                     u1087:
  1794  01D6  0BA0               	decfsz	??_mensaje1,f
  1795  01D7  29D6               	goto	u1087
  1796  01D8  0BA1               	decfsz	??_mensaje1+1,f
  1797  01D9  29D6               	goto	u1087
  1798                           
  1799                           ;main_02.c: 194:     config_ADC(1);
  1800  01DA  3068               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1801  01DB  120A  118A  24F6  120A  118A  	fcall	_printf
  1802  01E0                     l1864:
  1803                           
  1804                           ;main_02.c: 195:     return;
  1805  01E0  3082               	movlw	130
  1806  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1807  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1808  01E3  00A1               	movwf	??_mensaje1+1
  1809  01E4  30DD               	movlw	221
  1810  01E5  00A0               	movwf	??_mensaje1
  1811  01E6                     u1097:
  1812  01E6  0BA0               	decfsz	??_mensaje1,f
  1813  01E7  29E6               	goto	u1097
  1814  01E8  0BA1               	decfsz	??_mensaje1+1,f
  1815  01E9  29E6               	goto	u1097
  1816  01EA                     l1866:
  1817                           
  1818                           ;main_02.c: 196: }
  1819  01EA  3001               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1820  01EB  120A  118A  24F6  120A  118A  	fcall	_printf
  1821  01F0                     l119:
  1822  01F0  0008               	return
  1823  01F1                     __end_of_mensaje1:
  1824                           
  1825                           	psect	text5
  1826  03DA                     __ptext5:	
  1827 ;; *************** function _mensaje *****************
  1828 ;; Defined at:
  1829 ;;		line 165 in file "main_02.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         0       0       0       0       0
  1844 ;;      Locals:         0       0       0       0       0
  1845 ;;      Temps:          0       2       0       0       0
  1846 ;;      Totals:         0       2       0       0       0
  1847 ;;Total ram usage:        2 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    3
  1850 ;; This function calls:
  1851 ;;		_printf
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _mensaje
  1859  03DA                     _mensaje:
  1860  03DA                     l1836:	
  1861                           ;incstack = 0
  1862                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1863                           
  1864                           
  1865                           ;main_02.c: 166: 
  1866  03DA  3051               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1867  03DB  120A  118A  24F6  120A  118A  	fcall	_printf
  1868  03E0                     l1838:
  1869                           
  1870                           ;main_02.c: 167: 
  1871  03E0  3082               	movlw	130
  1872  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1873  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1874  03E3  00A1               	movwf	??_mensaje+1
  1875  03E4  30DD               	movlw	221
  1876  03E5  00A0               	movwf	??_mensaje
  1877  03E6                     u1107:
  1878  03E6  0BA0               	decfsz	??_mensaje,f
  1879  03E7  2BE6               	goto	u1107
  1880  03E8  0BA1               	decfsz	??_mensaje+1,f
  1881  03E9  2BE6               	goto	u1107
  1882  03EA                     l1840:
  1883                           
  1884                           ;main_02.c: 168:     TRISD = 0x00;
  1885  03EA  087A               	movf	_centenas,w
  1886  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1887  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1888  03ED  0099               	movwf	25	;volatile
  1889  03EE                     l1842:
  1890                           
  1891                           ;main_02.c: 169:     TRISE = 0x00;
  1892  03EE  3082               	movlw	130
  1893  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1894  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1895  03F1  00A1               	movwf	??_mensaje+1
  1896  03F2  30DD               	movlw	221
  1897  03F3  00A0               	movwf	??_mensaje
  1898  03F4                     u1117:
  1899  03F4  0BA0               	decfsz	??_mensaje,f
  1900  03F5  2BF4               	goto	u1117
  1901  03F6  0BA1               	decfsz	??_mensaje+1,f
  1902  03F7  2BF4               	goto	u1117
  1903  03F8                     l1844:
  1904                           
  1905                           ;main_02.c: 170: 
  1906  03F8  3079               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1907  03F9  120A  118A  24F6  120A  118A  	fcall	_printf
  1908                           
  1909                           ;main_02.c: 171: 
  1910  03FE  3082               	movlw	130
  1911  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0401  00A1               	movwf	??_mensaje+1
  1914  0402  30DD               	movlw	221
  1915  0403  00A0               	movwf	??_mensaje
  1916  0404                     u1127:
  1917  0404  0BA0               	decfsz	??_mensaje,f
  1918  0405  2C04               	goto	u1127
  1919  0406  0BA1               	decfsz	??_mensaje+1,f
  1920  0407  2C04               	goto	u1127
  1921                           
  1922                           ;main_02.c: 172: 
  1923  0408  0879               	movf	_decenas,w
  1924  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1925  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1926  040B  0099               	movwf	25	;volatile
  1927                           
  1928                           ;main_02.c: 173:     OSCCONbits.IRCF0 = 0;
  1929  040C  3082               	movlw	130
  1930  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1931  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1932  040F  00A1               	movwf	??_mensaje+1
  1933  0410  30DD               	movlw	221
  1934  0411  00A0               	movwf	??_mensaje
  1935  0412                     u1137:
  1936  0412  0BA0               	decfsz	??_mensaje,f
  1937  0413  2C12               	goto	u1137
  1938  0414  0BA1               	decfsz	??_mensaje+1,f
  1939  0415  2C12               	goto	u1137
  1940                           
  1941                           ;main_02.c: 174:     OSCCONbits.IRCF1 = 1;
  1942  0416  0878               	movf	_unidades,w
  1943  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0419  0099               	movwf	25	;volatile
  1946                           
  1947                           ;main_02.c: 175:     OSCCONbits.IRCF2 = 1;
  1948  041A  3082               	movlw	130
  1949  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1950  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1951  041D  00A1               	movwf	??_mensaje+1
  1952  041E  30DD               	movlw	221
  1953  041F  00A0               	movwf	??_mensaje
  1954  0420                     u1147:
  1955  0420  0BA0               	decfsz	??_mensaje,f
  1956  0421  2C20               	goto	u1147
  1957  0422  0BA1               	decfsz	??_mensaje+1,f
  1958  0423  2C20               	goto	u1147
  1959  0424                     l1846:
  1960                           
  1961                           ;main_02.c: 176:     OSCCONbits.SCS = 1;
  1962  0424  3073               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1963  0425  120A  118A  24F6  120A  118A  	fcall	_printf
  1964  042A                     l116:
  1965  042A  0008               	return
  1966  042B                     __end_of_mensaje:
  1967                           
  1968                           	psect	text6
  1969  04F6                     __ptext6:	
  1970 ;; *************** function _printf *****************
  1971 ;; Defined at:
  1972 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  f               1    wreg     PTR const unsigned char 
  1975 ;;		 -> STR_13(63), STR_12(11), STR_11(3), STR_10(2), 
  1976 ;;		 -> STR_9(11), STR_8(3), STR_7(2), STR_6(12), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  f               1    7[COMMON] PTR const unsigned char 
  1979 ;;		 -> STR_13(63), STR_12(11), STR_11(3), STR_10(2), 
  1980 ;;		 -> STR_9(11), STR_8(3), STR_7(2), STR_6(12), 
  1981 ;;  tmpval          4    0        struct .
  1982 ;;  cp              2    0        PTR const unsigned char 
  1983 ;;  len             2    0        unsigned int 
  1984 ;;  val             2    0        unsigned int 
  1985 ;;  c               1    6[COMMON] unsigned char 
  1986 ;;  ap              1    5[COMMON] PTR void [1]
  1987 ;;		 -> ?_printf(2), 
  1988 ;;  flag            1    0        unsigned char 
  1989 ;;  prec            1    0        char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  2   32[None  ] int 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         3       0       0       0       0
  2001 ;;      Temps:          1       0       0       0       0
  2002 ;;      Totals:         4       0       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    2
  2006 ;; This function calls:
  2007 ;;		_putch
  2008 ;; This function is called by:
  2009 ;;		_mensaje
  2010 ;;		_mensaje1
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _printf
  2016  04F6                     _printf:
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2020                           ;printf@f stored from wreg
  2021  04F6  00F7               	movwf	printf@f
  2022  04F7                     l1262:
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
  2025  04F7  3070               	movlw	(low (?_printf| 0))& (0+255)
  2026  04F8  00F4               	movwf	??_printf
  2027  04F9  0874               	movf	??_printf,w
  2028  04FA  00F5               	movwf	printf@ap
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2031  04FB  2D02               	goto	l1266
  2032  04FC                     l1264:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
  2035  04FC  0876               	movf	printf@c,w
  2036  04FD  120A  118A  2575  120A  118A  	fcall	_putch
  2037  0502                     l1266:	
  2038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2039                           
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2042  0502  3001               	movlw	1
  2043  0503  07F7               	addwf	printf@f,f
  2044  0504  30FF               	movlw	-1
  2045  0505  0777               	addwf	printf@f,w
  2046  0506  0084               	movwf	4
  2047  0507  120A  118A  2100  120A  118A  	fcall	stringdir
  2048  050C  00F4               	movwf	??_printf
  2049  050D  0874               	movf	??_printf,w
  2050  050E  00F6               	movwf	printf@c
  2051  050F  0876               	movf	printf@c,w
  2052  0510  1D03               	btfss	3,2
  2053  0511  2D13               	goto	u361
  2054  0512  2D14               	goto	u360
  2055  0513                     u361:
  2056  0513  2CFC               	goto	l1264
  2057  0514                     u360:
  2058  0514                     l294:
  2059  0514  0008               	return
  2060  0515                     __end_of_printf:
  2061                           
  2062                           	psect	text7
  2063  0575                     __ptext7:	
  2064 ;; *************** function _putch *****************
  2065 ;; Defined at:
  2066 ;;		line 201 in file "main_02.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  dato            1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  dato            1    3[COMMON] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         1       0       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_printf
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _putch
  2096  0575                     _putch:
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _putch: [wreg]
  2100                           ;putch@dato stored from wreg
  2101  0575  00F3               	movwf	putch@dato
  2102  0576                     l1242:
  2103  0576                     l122:
  2104  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0578  1E0C               	btfss	12,4	;volatile
  2107  0579  2D7B               	goto	u351
  2108  057A  2D7C               	goto	u350
  2109  057B                     u351:
  2110  057B  2D76               	goto	l122
  2111  057C                     u350:
  2112  057C                     l1244:
  2113  057C  0873               	movf	putch@dato,w
  2114  057D  0099               	movwf	25	;volatile
  2115  057E                     l125:
  2116  057E  0008               	return
  2117  057F                     __end_of_putch:
  2118                           
  2119                           	psect	text8
  2120  025A                     __ptext8:	
  2121 ;; *************** function _division *****************
  2122 ;; Defined at:
  2123 ;;		line 207 in file "main_02.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  dividendo       1    wreg     unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  dividendo       1    7[BANK0 ] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         0       1       0       0       0
  2139 ;;      Temps:          0       3       0       0       0
  2140 ;;      Totals:         0       4       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    2
  2144 ;; This function calls:
  2145 ;;		___awdiv
  2146 ;;		___awmod
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _division
  2154  025A                     _division:
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2158                           ;division@dividendo stored from wreg
  2159  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2160  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2161  025C  00A7               	movwf	division@dividendo
  2162  025D                     l1826:
  2163  025D  3064               	movlw	100
  2164  025E  00F3               	movwf	___awdiv@divisor
  2165  025F  3000               	movlw	0
  2166  0260  00F4               	movwf	___awdiv@divisor+1
  2167  0261  0827               	movf	division@dividendo,w
  2168  0262  00A4               	movwf	??_division
  2169  0263  01A5               	clrf	??_division+1
  2170  0264  0824               	movf	??_division,w
  2171  0265  00F5               	movwf	___awdiv@dividend
  2172  0266  0825               	movf	??_division+1,w
  2173  0267  00F6               	movwf	___awdiv@dividend+1
  2174  0268  120A  118A  21F1  120A  118A  	fcall	___awdiv
  2175  026D  0873               	movf	?___awdiv,w
  2176  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2177  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0270  00A6               	movwf	??_division+2
  2179  0271  0826               	movf	??_division+2,w
  2180  0272  00FA               	movwf	_centenas
  2181  0273  3064               	movlw	100
  2182  0274  00F3               	movwf	___awmod@divisor
  2183  0275  3000               	movlw	0
  2184  0276  00F4               	movwf	___awmod@divisor+1
  2185  0277  0827               	movf	division@dividendo,w
  2186  0278  00A4               	movwf	??_division
  2187  0279  01A5               	clrf	??_division+1
  2188  027A  0824               	movf	??_division,w
  2189  027B  00F5               	movwf	___awmod@dividend
  2190  027C  0825               	movf	??_division+1,w
  2191  027D  00F6               	movwf	___awmod@dividend+1
  2192  027E  120A  118A  2327  120A  118A  	fcall	___awmod
  2193  0283  0873               	movf	?___awmod,w
  2194  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0286  00A6               	movwf	??_division+2
  2197  0287  0826               	movf	??_division+2,w
  2198  0288  00AC               	movwf	_residuo
  2199  0289  300A               	movlw	10
  2200  028A  00F3               	movwf	___awdiv@divisor
  2201  028B  3000               	movlw	0
  2202  028C  00F4               	movwf	___awdiv@divisor+1
  2203  028D  082C               	movf	_residuo,w
  2204  028E  00A4               	movwf	??_division
  2205  028F  01A5               	clrf	??_division+1
  2206  0290  0824               	movf	??_division,w
  2207  0291  00F5               	movwf	___awdiv@dividend
  2208  0292  0825               	movf	??_division+1,w
  2209  0293  00F6               	movwf	___awdiv@dividend+1
  2210  0294  120A  118A  21F1  120A  118A  	fcall	___awdiv
  2211  0299  0873               	movf	?___awdiv,w
  2212  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2213  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2214  029C  00A6               	movwf	??_division+2
  2215  029D  0826               	movf	??_division+2,w
  2216  029E  00F9               	movwf	_decenas
  2217  029F  300A               	movlw	10
  2218  02A0  00F3               	movwf	___awmod@divisor
  2219  02A1  3000               	movlw	0
  2220  02A2  00F4               	movwf	___awmod@divisor+1
  2221  02A3  082C               	movf	_residuo,w
  2222  02A4  00A4               	movwf	??_division
  2223  02A5  01A5               	clrf	??_division+1
  2224  02A6  0824               	movf	??_division,w
  2225  02A7  00F5               	movwf	___awmod@dividend
  2226  02A8  0825               	movf	??_division+1,w
  2227  02A9  00F6               	movwf	___awmod@dividend+1
  2228  02AA  120A  118A  2327  120A  118A  	fcall	___awmod
  2229  02AF  0873               	movf	?___awmod,w
  2230  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2231  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2232  02B2  00A6               	movwf	??_division+2
  2233  02B3  0826               	movf	??_division+2,w
  2234  02B4  00F8               	movwf	_unidades
  2235  02B5                     l1828:
  2236  02B5  3030               	movlw	48
  2237  02B6  00A4               	movwf	??_division
  2238  02B7  0824               	movf	??_division,w
  2239  02B8  07FA               	addwf	_centenas,f
  2240  02B9                     l1830:
  2241  02B9  3030               	movlw	48
  2242  02BA  00A4               	movwf	??_division
  2243  02BB  0824               	movf	??_division,w
  2244  02BC  07F9               	addwf	_decenas,f
  2245  02BD                     l1832:
  2246  02BD  3030               	movlw	48
  2247  02BE  00A4               	movwf	??_division
  2248  02BF  0824               	movf	??_division,w
  2249  02C0  07F8               	addwf	_unidades,f
  2250  02C1                     l128:
  2251  02C1  0008               	return
  2252  02C2                     __end_of_division:
  2253                           
  2254                           	psect	text9
  2255  0327                     __ptext9:	
  2256 ;; *************** function ___awmod *****************
  2257 ;; Defined at:
  2258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  divisor         2    3[COMMON] int 
  2261 ;;  dividend        2    5[COMMON] int 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  sign            1    1[BANK0 ] unsigned char 
  2264 ;;  counter         1    0[BANK0 ] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    3[COMMON] int 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         4       0       0       0       0
  2275 ;;      Locals:         0       2       0       0       0
  2276 ;;      Temps:          1       0       0       0       0
  2277 ;;      Totals:         5       2       0       0       0
  2278 ;;Total ram usage:        7 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_division
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function ___awmod
  2290  0327                     ___awmod:
  2291  0327                     l1748:	
  2292                           ;incstack = 0
  2293                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2294                           
  2295  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0329  01A1               	clrf	___awmod@sign
  2298  032A                     l1750:
  2299  032A  1FF6               	btfss	___awmod@dividend+1,7
  2300  032B  2B2D               	goto	u791
  2301  032C  2B2E               	goto	u790
  2302  032D                     u791:
  2303  032D  2B35               	goto	l1756
  2304  032E                     u790:
  2305  032E                     l1752:
  2306  032E  09F5               	comf	___awmod@dividend,f
  2307  032F  09F6               	comf	___awmod@dividend+1,f
  2308  0330  0AF5               	incf	___awmod@dividend,f
  2309  0331  1903               	skipnz
  2310  0332  0AF6               	incf	___awmod@dividend+1,f
  2311  0333                     l1754:
  2312  0333  01A1               	clrf	___awmod@sign
  2313  0334  0AA1               	incf	___awmod@sign,f
  2314  0335                     l1756:
  2315  0335  1FF4               	btfss	___awmod@divisor+1,7
  2316  0336  2B38               	goto	u801
  2317  0337  2B39               	goto	u800
  2318  0338                     u801:
  2319  0338  2B3E               	goto	l1760
  2320  0339                     u800:
  2321  0339                     l1758:
  2322  0339  09F3               	comf	___awmod@divisor,f
  2323  033A  09F4               	comf	___awmod@divisor+1,f
  2324  033B  0AF3               	incf	___awmod@divisor,f
  2325  033C  1903               	skipnz
  2326  033D  0AF4               	incf	___awmod@divisor+1,f
  2327  033E                     l1760:
  2328  033E  0873               	movf	___awmod@divisor,w
  2329  033F  0474               	iorwf	___awmod@divisor+1,w
  2330  0340  1903               	btfsc	3,2
  2331  0341  2B43               	goto	u811
  2332  0342  2B44               	goto	u810
  2333  0343                     u811:
  2334  0343  2B73               	goto	l1778
  2335  0344                     u810:
  2336  0344                     l1762:
  2337  0344  01A0               	clrf	___awmod@counter
  2338  0345  0AA0               	incf	___awmod@counter,f
  2339  0346  2B52               	goto	l1768
  2340  0347                     l1764:
  2341  0347  3001               	movlw	1
  2342  0348                     u825:
  2343  0348  1003               	clrc
  2344  0349  0DF3               	rlf	___awmod@divisor,f
  2345  034A  0DF4               	rlf	___awmod@divisor+1,f
  2346  034B  3EFF               	addlw	-1
  2347  034C  1D03               	skipz
  2348  034D  2B48               	goto	u825
  2349  034E                     l1766:
  2350  034E  3001               	movlw	1
  2351  034F  00F7               	movwf	??___awmod
  2352  0350  0877               	movf	??___awmod,w
  2353  0351  07A0               	addwf	___awmod@counter,f
  2354  0352                     l1768:
  2355  0352  1FF4               	btfss	___awmod@divisor+1,7
  2356  0353  2B55               	goto	u831
  2357  0354  2B56               	goto	u830
  2358  0355                     u831:
  2359  0355  2B47               	goto	l1764
  2360  0356                     u830:
  2361  0356                     l1770:
  2362  0356  0874               	movf	___awmod@divisor+1,w
  2363  0357  0276               	subwf	___awmod@dividend+1,w
  2364  0358  1D03               	skipz
  2365  0359  2B5C               	goto	u845
  2366  035A  0873               	movf	___awmod@divisor,w
  2367  035B  0275               	subwf	___awmod@dividend,w
  2368  035C                     u845:
  2369  035C  1C03               	skipc
  2370  035D  2B5F               	goto	u841
  2371  035E  2B60               	goto	u840
  2372  035F                     u841:
  2373  035F  2B66               	goto	l1774
  2374  0360                     u840:
  2375  0360                     l1772:
  2376  0360  0873               	movf	___awmod@divisor,w
  2377  0361  02F5               	subwf	___awmod@dividend,f
  2378  0362  0874               	movf	___awmod@divisor+1,w
  2379  0363  1C03               	skipc
  2380  0364  03F6               	decf	___awmod@dividend+1,f
  2381  0365  02F6               	subwf	___awmod@dividend+1,f
  2382  0366                     l1774:
  2383  0366  3001               	movlw	1
  2384  0367                     u855:
  2385  0367  1003               	clrc
  2386  0368  0CF4               	rrf	___awmod@divisor+1,f
  2387  0369  0CF3               	rrf	___awmod@divisor,f
  2388  036A  3EFF               	addlw	-1
  2389  036B  1D03               	skipz
  2390  036C  2B67               	goto	u855
  2391  036D                     l1776:
  2392  036D  3001               	movlw	1
  2393  036E  02A0               	subwf	___awmod@counter,f
  2394  036F  1D03               	btfss	3,2
  2395  0370  2B72               	goto	u861
  2396  0371  2B73               	goto	u860
  2397  0372                     u861:
  2398  0372  2B56               	goto	l1770
  2399  0373                     u860:
  2400  0373                     l1778:
  2401  0373  0821               	movf	___awmod@sign,w
  2402  0374  1903               	btfsc	3,2
  2403  0375  2B77               	goto	u871
  2404  0376  2B78               	goto	u870
  2405  0377                     u871:
  2406  0377  2B7D               	goto	l1782
  2407  0378                     u870:
  2408  0378                     l1780:
  2409  0378  09F5               	comf	___awmod@dividend,f
  2410  0379  09F6               	comf	___awmod@dividend+1,f
  2411  037A  0AF5               	incf	___awmod@dividend,f
  2412  037B  1903               	skipnz
  2413  037C  0AF6               	incf	___awmod@dividend+1,f
  2414  037D                     l1782:
  2415  037D  0876               	movf	___awmod@dividend+1,w
  2416  037E  00F4               	movwf	?___awmod+1
  2417  037F  0875               	movf	___awmod@dividend,w
  2418  0380  00F3               	movwf	?___awmod
  2419  0381                     l464:
  2420  0381  0008               	return
  2421  0382                     __end_of___awmod:
  2422                           
  2423                           	psect	text10
  2424  01F1                     __ptext10:	
  2425 ;; *************** function ___awdiv *****************
  2426 ;; Defined at:
  2427 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  divisor         2    3[COMMON] int 
  2430 ;;  dividend        2    5[COMMON] int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  quotient        2    2[BANK0 ] int 
  2433 ;;  sign            1    1[BANK0 ] unsigned char 
  2434 ;;  counter         1    0[BANK0 ] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2    3[COMMON] int 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2444 ;;      Params:         4       0       0       0       0
  2445 ;;      Locals:         0       4       0       0       0
  2446 ;;      Temps:          1       0       0       0       0
  2447 ;;      Totals:         5       4       0       0       0
  2448 ;;Total ram usage:        9 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_division
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function ___awdiv
  2460  01F1                     ___awdiv:
  2461  01F1                     l1704:	
  2462                           ;incstack = 0
  2463                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2464                           
  2465  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2466  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2467  01F3  01A1               	clrf	___awdiv@sign
  2468  01F4                     l1706:
  2469  01F4  1FF4               	btfss	___awdiv@divisor+1,7
  2470  01F5  29F7               	goto	u691
  2471  01F6  29F8               	goto	u690
  2472  01F7                     u691:
  2473  01F7  29FF               	goto	l1712
  2474  01F8                     u690:
  2475  01F8                     l1708:
  2476  01F8  09F3               	comf	___awdiv@divisor,f
  2477  01F9  09F4               	comf	___awdiv@divisor+1,f
  2478  01FA  0AF3               	incf	___awdiv@divisor,f
  2479  01FB  1903               	skipnz
  2480  01FC  0AF4               	incf	___awdiv@divisor+1,f
  2481  01FD                     l1710:
  2482  01FD  01A1               	clrf	___awdiv@sign
  2483  01FE  0AA1               	incf	___awdiv@sign,f
  2484  01FF                     l1712:
  2485  01FF  1FF6               	btfss	___awdiv@dividend+1,7
  2486  0200  2A02               	goto	u701
  2487  0201  2A03               	goto	u700
  2488  0202                     u701:
  2489  0202  2A0C               	goto	l1718
  2490  0203                     u700:
  2491  0203                     l1714:
  2492  0203  09F5               	comf	___awdiv@dividend,f
  2493  0204  09F6               	comf	___awdiv@dividend+1,f
  2494  0205  0AF5               	incf	___awdiv@dividend,f
  2495  0206  1903               	skipnz
  2496  0207  0AF6               	incf	___awdiv@dividend+1,f
  2497  0208                     l1716:
  2498  0208  3001               	movlw	1
  2499  0209  00F7               	movwf	??___awdiv
  2500  020A  0877               	movf	??___awdiv,w
  2501  020B  06A1               	xorwf	___awdiv@sign,f
  2502  020C                     l1718:
  2503  020C  01A2               	clrf	___awdiv@quotient
  2504  020D  01A3               	clrf	___awdiv@quotient+1
  2505  020E                     l1720:
  2506  020E  0873               	movf	___awdiv@divisor,w
  2507  020F  0474               	iorwf	___awdiv@divisor+1,w
  2508  0210  1903               	btfsc	3,2
  2509  0211  2A13               	goto	u711
  2510  0212  2A14               	goto	u710
  2511  0213                     u711:
  2512  0213  2A4B               	goto	l1740
  2513  0214                     u710:
  2514  0214                     l1722:
  2515  0214  01A0               	clrf	___awdiv@counter
  2516  0215  0AA0               	incf	___awdiv@counter,f
  2517  0216  2A22               	goto	l1728
  2518  0217                     l1724:
  2519  0217  3001               	movlw	1
  2520  0218                     u725:
  2521  0218  1003               	clrc
  2522  0219  0DF3               	rlf	___awdiv@divisor,f
  2523  021A  0DF4               	rlf	___awdiv@divisor+1,f
  2524  021B  3EFF               	addlw	-1
  2525  021C  1D03               	skipz
  2526  021D  2A18               	goto	u725
  2527  021E                     l1726:
  2528  021E  3001               	movlw	1
  2529  021F  00F7               	movwf	??___awdiv
  2530  0220  0877               	movf	??___awdiv,w
  2531  0221  07A0               	addwf	___awdiv@counter,f
  2532  0222                     l1728:
  2533  0222  1FF4               	btfss	___awdiv@divisor+1,7
  2534  0223  2A25               	goto	u731
  2535  0224  2A26               	goto	u730
  2536  0225                     u731:
  2537  0225  2A17               	goto	l1724
  2538  0226                     u730:
  2539  0226                     l1730:
  2540  0226  3001               	movlw	1
  2541  0227                     u745:
  2542  0227  1003               	clrc
  2543  0228  0DA2               	rlf	___awdiv@quotient,f
  2544  0229  0DA3               	rlf	___awdiv@quotient+1,f
  2545  022A  3EFF               	addlw	-1
  2546  022B  1D03               	skipz
  2547  022C  2A27               	goto	u745
  2548  022D  0874               	movf	___awdiv@divisor+1,w
  2549  022E  0276               	subwf	___awdiv@dividend+1,w
  2550  022F  1D03               	skipz
  2551  0230  2A33               	goto	u755
  2552  0231  0873               	movf	___awdiv@divisor,w
  2553  0232  0275               	subwf	___awdiv@dividend,w
  2554  0233                     u755:
  2555  0233  1C03               	skipc
  2556  0234  2A36               	goto	u751
  2557  0235  2A37               	goto	u750
  2558  0236                     u751:
  2559  0236  2A3E               	goto	l1736
  2560  0237                     u750:
  2561  0237                     l1732:
  2562  0237  0873               	movf	___awdiv@divisor,w
  2563  0238  02F5               	subwf	___awdiv@dividend,f
  2564  0239  0874               	movf	___awdiv@divisor+1,w
  2565  023A  1C03               	skipc
  2566  023B  03F6               	decf	___awdiv@dividend+1,f
  2567  023C  02F6               	subwf	___awdiv@dividend+1,f
  2568  023D                     l1734:
  2569  023D  1422               	bsf	___awdiv@quotient,0
  2570  023E                     l1736:
  2571  023E  3001               	movlw	1
  2572  023F                     u765:
  2573  023F  1003               	clrc
  2574  0240  0CF4               	rrf	___awdiv@divisor+1,f
  2575  0241  0CF3               	rrf	___awdiv@divisor,f
  2576  0242  3EFF               	addlw	-1
  2577  0243  1D03               	skipz
  2578  0244  2A3F               	goto	u765
  2579  0245                     l1738:
  2580  0245  3001               	movlw	1
  2581  0246  02A0               	subwf	___awdiv@counter,f
  2582  0247  1D03               	btfss	3,2
  2583  0248  2A4A               	goto	u771
  2584  0249  2A4B               	goto	u770
  2585  024A                     u771:
  2586  024A  2A26               	goto	l1730
  2587  024B                     u770:
  2588  024B                     l1740:
  2589  024B  0821               	movf	___awdiv@sign,w
  2590  024C  1903               	btfsc	3,2
  2591  024D  2A4F               	goto	u781
  2592  024E  2A50               	goto	u780
  2593  024F                     u781:
  2594  024F  2A55               	goto	l1744
  2595  0250                     u780:
  2596  0250                     l1742:
  2597  0250  09A2               	comf	___awdiv@quotient,f
  2598  0251  09A3               	comf	___awdiv@quotient+1,f
  2599  0252  0AA2               	incf	___awdiv@quotient,f
  2600  0253  1903               	skipnz
  2601  0254  0AA3               	incf	___awdiv@quotient+1,f
  2602  0255                     l1744:
  2603  0255  0823               	movf	___awdiv@quotient+1,w
  2604  0256  00F4               	movwf	?___awdiv+1
  2605  0257  0822               	movf	___awdiv@quotient,w
  2606  0258  00F3               	movwf	?___awdiv
  2607  0259                     l451:
  2608  0259  0008               	return
  2609  025A                     __end_of___awdiv:
  2610                           
  2611                           	psect	text11
  2612  04A8                     __ptext11:	
  2613 ;; *************** function _Lcd_Write_String *****************
  2614 ;; Defined at:
  2615 ;;		line 94 in file "LCD_8b.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  a               1    wreg     PTR unsigned char 
  2618 ;;		 -> STR_5(3), STR_4(2), STR_3(3), STR_2(2), 
  2619 ;;		 -> STR_1(17), 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2622 ;;		 -> STR_5(3), STR_4(2), STR_3(3), STR_2(2), 
  2623 ;;		 -> STR_1(17), 
  2624 ;;  i               2    0[BANK0 ] int 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       3       0       0       0
  2636 ;;      Temps:          0       0       0       0       0
  2637 ;;      Totals:         0       3       0       0       0
  2638 ;;Total ram usage:        3 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    3
  2641 ;; This function calls:
  2642 ;;		_Lcd_Write_Char
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           
  2649                           ;psect for function _Lcd_Write_String
  2650  04A8                     _Lcd_Write_String:
  2651                           
  2652                           ;incstack = 0
  2653                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2654                           ;Lcd_Write_String@a stored from wreg
  2655  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2656  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2657  04AA  00A2               	movwf	Lcd_Write_String@a
  2658  04AB                     l1818:
  2659                           
  2660                           ;LCD_8b.c: 95:     int i;;LCD_8b.c: 96:     for (i = 0; a[i] != '\0'; i++)
  2661  04AB  01A0               	clrf	Lcd_Write_String@i
  2662  04AC  01A1               	clrf	Lcd_Write_String@i+1
  2663  04AD  2CC3               	goto	l1824
  2664  04AE                     l1820:
  2665                           
  2666                           ;LCD_8b.c: 97:         Lcd_Write_Char(a[i]);
  2667  04AE  0820               	movf	Lcd_Write_String@i,w
  2668  04AF  0722               	addwf	Lcd_Write_String@a,w
  2669  04B0  0084               	movwf	4
  2670  04B1  120A  118A  2100  120A  118A  	fcall	stringdir
  2671  04B6  120A  118A  2515  120A  118A  	fcall	_Lcd_Write_Char
  2672  04BB                     l1822:
  2673  04BB  3001               	movlw	1
  2674  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2675  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2676  04BE  07A0               	addwf	Lcd_Write_String@i,f
  2677  04BF  1803               	skipnc
  2678  04C0  0AA1               	incf	Lcd_Write_String@i+1,f
  2679  04C1  3000               	movlw	0
  2680  04C2  07A1               	addwf	Lcd_Write_String@i+1,f
  2681  04C3                     l1824:
  2682  04C3  0820               	movf	Lcd_Write_String@i,w
  2683  04C4  0722               	addwf	Lcd_Write_String@a,w
  2684  04C5  0084               	movwf	4
  2685  04C6  120A  118A  2100  120A  118A  	fcall	stringdir
  2686  04CB  3A00               	xorlw	0
  2687  04CC  1D03               	skipz
  2688  04CD  2CCF               	goto	u921
  2689  04CE  2CD0               	goto	u920
  2690  04CF                     u921:
  2691  04CF  2CAE               	goto	l1820
  2692  04D0                     u920:
  2693  04D0                     l196:
  2694  04D0  0008               	return
  2695  04D1                     __end_of_Lcd_Write_String:
  2696                           
  2697                           	psect	text12
  2698  0515                     __ptext12:	
  2699 ;; *************** function _Lcd_Write_Char *****************
  2700 ;; Defined at:
  2701 ;;		line 79 in file "LCD_8b.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               1    wreg     unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  a               1    5[COMMON] unsigned char 
  2706 ;;  y               1    7[COMMON] unsigned char 
  2707 ;;  temp            1    6[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         3       0       0       0       0
  2719 ;;      Temps:          1       0       0       0       0
  2720 ;;      Totals:         4       0       0       0       0
  2721 ;;Total ram usage:        4 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    2
  2724 ;; This function calls:
  2725 ;;		_Lcd_Port
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;;		_Lcd_Write_String
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _Lcd_Write_Char
  2734  0515                     _Lcd_Write_Char:
  2735                           
  2736                           ;incstack = 0
  2737                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2738                           ;Lcd_Write_Char@a stored from wreg
  2739  0515  00F5               	movwf	Lcd_Write_Char@a
  2740  0516                     l1682:
  2741                           
  2742                           ;LCD_8b.c: 80:     char temp, y;;LCD_8b.c: 81:     temp = a;
  2743  0516  0875               	movf	Lcd_Write_Char@a,w
  2744  0517  00F4               	movwf	??_Lcd_Write_Char
  2745  0518  0874               	movf	??_Lcd_Write_Char,w
  2746  0519  00F6               	movwf	Lcd_Write_Char@temp
  2747                           
  2748                           ;LCD_8b.c: 82:     y = temp;
  2749  051A  0876               	movf	Lcd_Write_Char@temp,w
  2750  051B  00F4               	movwf	??_Lcd_Write_Char
  2751  051C  0874               	movf	??_Lcd_Write_Char,w
  2752  051D  00F7               	movwf	Lcd_Write_Char@y
  2753  051E                     l1684:
  2754                           
  2755                           ;LCD_8b.c: 83:     PORTEbits.RE0 = 1;
  2756  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2757  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0520  1409               	bsf	9,0	;volatile
  2759  0521                     l1686:
  2760                           
  2761                           ;LCD_8b.c: 84:     Lcd_Port(y);
  2762  0521  0877               	movf	Lcd_Write_Char@y,w
  2763  0522  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  2764  0527                     l1688:
  2765                           
  2766                           ;LCD_8b.c: 85:     PORTEbits.RE2 = 1;
  2767  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0529  1509               	bsf	9,2	;volatile
  2770  052A                     l1690:
  2771                           
  2772                           ;LCD_8b.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2773  052A  300D               	movlw	13
  2774  052B  00F4               	movwf	??_Lcd_Write_Char
  2775  052C                     u1157:
  2776  052C  0BF4               	decfsz	??_Lcd_Write_Char,f
  2777  052D  2D2C               	goto	u1157
  2778  052E                     l1692:
  2779                           
  2780                           ;LCD_8b.c: 87:     PORTEbits.RE2 = 0;
  2781  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2782  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0530  1109               	bcf	9,2	;volatile
  2784  0531                     l190:
  2785  0531  0008               	return
  2786  0532                     __end_of_Lcd_Write_Char:
  2787                           
  2788                           	psect	text13
  2789  0382                     __ptext13:	
  2790 ;; *************** function _Lcd_Set_Cursor *****************
  2791 ;; Defined at:
  2792 ;;		line 43 in file "LCD_8b.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  a               1    wreg     unsigned char 
  2795 ;;  b               1    7[COMMON] unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  a               1    2[BANK0 ] unsigned char 
  2798 ;;  temp            1    5[BANK0 ] unsigned char 
  2799 ;;  y               1    4[BANK0 ] unsigned char 
  2800 ;;  z               1    3[BANK0 ] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2810 ;;      Params:         1       0       0       0       0
  2811 ;;      Locals:         0       4       0       0       0
  2812 ;;      Temps:          0       2       0       0       0
  2813 ;;      Totals:         1       6       0       0       0
  2814 ;;Total ram usage:        7 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    3
  2817 ;; This function calls:
  2818 ;;		_Lcd_Cmd
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           
  2825                           ;psect for function _Lcd_Set_Cursor
  2826  0382                     _Lcd_Set_Cursor:
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2830                           ;Lcd_Set_Cursor@a stored from wreg
  2831  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0384  00A2               	movwf	Lcd_Set_Cursor@a
  2834  0385                     l1798:
  2835                           
  2836                           ;LCD_8b.c: 44:     char temp, z, y;;LCD_8b.c: 45:     if (a == 1) {
  2837  0385  0322               	decf	Lcd_Set_Cursor@a,w
  2838  0386  1D03               	btfss	3,2
  2839  0387  2B89               	goto	u881
  2840  0388  2B8A               	goto	u880
  2841  0389                     u881:
  2842  0389  2BAF               	goto	l1808
  2843  038A                     u880:
  2844  038A                     l1800:
  2845                           
  2846                           ;LCD_8b.c: 46:         temp = 0x80 + b - 1;
  2847  038A  0877               	movf	Lcd_Set_Cursor@b,w
  2848  038B  3E7F               	addlw	127
  2849  038C  00A0               	movwf	??_Lcd_Set_Cursor
  2850  038D  0820               	movf	??_Lcd_Set_Cursor,w
  2851  038E  00A5               	movwf	Lcd_Set_Cursor@temp
  2852                           
  2853                           ;LCD_8b.c: 47:         z = temp >> 4;
  2854  038F  0825               	movf	Lcd_Set_Cursor@temp,w
  2855  0390  00A0               	movwf	??_Lcd_Set_Cursor
  2856  0391  3004               	movlw	4
  2857  0392                     u895:
  2858  0392  1003               	clrc
  2859  0393  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2860  0394  3EFF               	addlw	-1
  2861  0395  1D03               	skipz
  2862  0396  2B92               	goto	u895
  2863  0397  0820               	movf	??_Lcd_Set_Cursor,w
  2864  0398  00A1               	movwf	??_Lcd_Set_Cursor+1
  2865  0399  0821               	movf	??_Lcd_Set_Cursor+1,w
  2866  039A  00A3               	movwf	Lcd_Set_Cursor@z
  2867  039B                     l1802:
  2868                           
  2869                           ;LCD_8b.c: 48:         y = temp & 0x0F;
  2870  039B  0825               	movf	Lcd_Set_Cursor@temp,w
  2871  039C  390F               	andlw	15
  2872  039D  00A0               	movwf	??_Lcd_Set_Cursor
  2873  039E  0820               	movf	??_Lcd_Set_Cursor,w
  2874  039F  00A4               	movwf	Lcd_Set_Cursor@y
  2875  03A0                     l1804:
  2876                           
  2877                           ;LCD_8b.c: 49:         Lcd_Cmd(z);
  2878  03A0  0823               	movf	Lcd_Set_Cursor@z,w
  2879  03A1  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2880  03A6                     l1806:
  2881                           
  2882                           ;LCD_8b.c: 51:         Lcd_Cmd(y);
  2883  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2884  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2885  03A8  0824               	movf	Lcd_Set_Cursor@y,w
  2886  03A9  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2887                           
  2888                           ;LCD_8b.c: 52:     } else if (a == 2) {
  2889  03AE  2BD9               	goto	l184
  2890  03AF                     l1808:
  2891  03AF  3002               	movlw	2
  2892  03B0  0622               	xorwf	Lcd_Set_Cursor@a,w
  2893  03B1  1D03               	btfss	3,2
  2894  03B2  2BB4               	goto	u901
  2895  03B3  2BB5               	goto	u900
  2896  03B4                     u901:
  2897  03B4  2BD9               	goto	l184
  2898  03B5                     u900:
  2899  03B5                     l1810:
  2900                           
  2901                           ;LCD_8b.c: 53:         temp = 0xC0 + b - 1;
  2902  03B5  0877               	movf	Lcd_Set_Cursor@b,w
  2903  03B6  3EBF               	addlw	191
  2904  03B7  00A0               	movwf	??_Lcd_Set_Cursor
  2905  03B8  0820               	movf	??_Lcd_Set_Cursor,w
  2906  03B9  00A5               	movwf	Lcd_Set_Cursor@temp
  2907                           
  2908                           ;LCD_8b.c: 54:         z = temp >> 4;
  2909  03BA  0825               	movf	Lcd_Set_Cursor@temp,w
  2910  03BB  00A0               	movwf	??_Lcd_Set_Cursor
  2911  03BC  3004               	movlw	4
  2912  03BD                     u915:
  2913  03BD  1003               	clrc
  2914  03BE  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2915  03BF  3EFF               	addlw	-1
  2916  03C0  1D03               	skipz
  2917  03C1  2BBD               	goto	u915
  2918  03C2  0820               	movf	??_Lcd_Set_Cursor,w
  2919  03C3  00A1               	movwf	??_Lcd_Set_Cursor+1
  2920  03C4  0821               	movf	??_Lcd_Set_Cursor+1,w
  2921  03C5  00A3               	movwf	Lcd_Set_Cursor@z
  2922  03C6                     l1812:
  2923                           
  2924                           ;LCD_8b.c: 55:         y = temp & 0xF0;
  2925  03C6  0825               	movf	Lcd_Set_Cursor@temp,w
  2926  03C7  39F0               	andlw	240
  2927  03C8  00A0               	movwf	??_Lcd_Set_Cursor
  2928  03C9  0820               	movf	??_Lcd_Set_Cursor,w
  2929  03CA  00A4               	movwf	Lcd_Set_Cursor@y
  2930  03CB                     l1814:
  2931                           
  2932                           ;LCD_8b.c: 56:         Lcd_Cmd(z);
  2933  03CB  0823               	movf	Lcd_Set_Cursor@z,w
  2934  03CC  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2935  03D1                     l1816:
  2936                           
  2937                           ;LCD_8b.c: 57:         Lcd_Cmd(y);
  2938  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2939  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2940  03D3  0824               	movf	Lcd_Set_Cursor@y,w
  2941  03D4  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  2942  03D9                     l184:
  2943  03D9  0008               	return
  2944  03DA                     __end_of_Lcd_Set_Cursor:
  2945                           
  2946                           	psect	text14
  2947  042B                     __ptext14:	
  2948 ;; *************** function _Lcd_Init *****************
  2949 ;; Defined at:
  2950 ;;		line 61 in file "LCD_8b.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0
  2966 ;;      Temps:          0       2       0       0       0
  2967 ;;      Totals:         0       2       0       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    3
  2971 ;; This function calls:
  2972 ;;		_Lcd_Cmd
  2973 ;;		_Lcd_Port
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           
  2980                           ;psect for function _Lcd_Init
  2981  042B                     _Lcd_Init:
  2982  042B                     l1786:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2985                           
  2986                           
  2987                           ;LCD_8b.c: 62:     Lcd_Port(0x00);
  2988  042B  3000               	movlw	0
  2989  042C  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  2990  0431                     l1788:
  2991                           
  2992                           ;LCD_8b.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2993  0431  301A               	movlw	26
  2994  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0434  00A1               	movwf	??_Lcd_Init+1
  2997  0435  30F7               	movlw	247
  2998  0436  00A0               	movwf	??_Lcd_Init
  2999  0437                     u1167:
  3000  0437  0BA0               	decfsz	??_Lcd_Init,f
  3001  0438  2C37               	goto	u1167
  3002  0439  0BA1               	decfsz	??_Lcd_Init+1,f
  3003  043A  2C37               	goto	u1167
  3004  043B  2C3C               	nop2
  3005  043C                     l1790:
  3006                           
  3007                           ;LCD_8b.c: 64:     Lcd_Cmd(0x30);
  3008  043C  3030               	movlw	48
  3009  043D  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3010                           
  3011                           ;LCD_8b.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3012  0442  3007               	movlw	7
  3013  0443  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0444  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0445  00A1               	movwf	??_Lcd_Init+1
  3016  0446  307C               	movlw	124
  3017  0447  00A0               	movwf	??_Lcd_Init
  3018  0448                     u1177:
  3019  0448  0BA0               	decfsz	??_Lcd_Init,f
  3020  0449  2C48               	goto	u1177
  3021  044A  0BA1               	decfsz	??_Lcd_Init+1,f
  3022  044B  2C48               	goto	u1177
  3023  044C  0000               	nop
  3024  044D                     l1792:
  3025                           
  3026                           ;LCD_8b.c: 66:     Lcd_Cmd(0x30);
  3027  044D  3030               	movlw	48
  3028  044E  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3029  0453                     l1794:
  3030                           
  3031                           ;LCD_8b.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3032  0453  3041               	movlw	65
  3033  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0456  00A0               	movwf	??_Lcd_Init
  3036  0457                     u1187:
  3037  0457  0BA0               	decfsz	??_Lcd_Init,f
  3038  0458  2C57               	goto	u1187
  3039  0459  2C5A               	nop2
  3040                           
  3041                           ;LCD_8b.c: 68:     Lcd_Cmd(0x30);
  3042  045A  3030               	movlw	48
  3043  045B  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3044                           
  3045                           ;LCD_8b.c: 70:     Lcd_Cmd(0x3C);
  3046  0460  303C               	movlw	60
  3047  0461  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3048                           
  3049                           ;LCD_8b.c: 72:     Lcd_Cmd(0x08);
  3050  0466  3008               	movlw	8
  3051  0467  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3052                           
  3053                           ;LCD_8b.c: 74:     Lcd_Cmd(0x01);
  3054  046C  3001               	movlw	1
  3055  046D  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3056                           
  3057                           ;LCD_8b.c: 76:     Lcd_Cmd(0x06);
  3058  0472  3006               	movlw	6
  3059  0473  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3060  0478                     l187:
  3061  0478  0008               	return
  3062  0479                     __end_of_Lcd_Init:
  3063                           
  3064                           	psect	text15
  3065  0568                     __ptext15:	
  3066 ;; *************** function _Lcd_Clear *****************
  3067 ;; Defined at:
  3068 ;;		line 25 in file "LCD_8b.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    3
  3089 ;; This function calls:
  3090 ;;		_Lcd_Cmd
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _Lcd_Clear
  3098  0568                     _Lcd_Clear:
  3099  0568                     l1796:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3102                           
  3103                           
  3104                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  3105  0568  3000               	movlw	0
  3106  0569  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3107                           
  3108                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  3109  056E  3001               	movlw	1
  3110  056F  120A  118A  254E  120A  118A  	fcall	_Lcd_Cmd
  3111  0574                     l178:
  3112  0574  0008               	return
  3113  0575                     __end_of_Lcd_Clear:
  3114                           
  3115                           	psect	text16
  3116  054E                     __ptext16:	
  3117 ;; *************** function _Lcd_Cmd *****************
  3118 ;; Defined at:
  3119 ;;		line 17 in file "LCD_8b.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  a               1    wreg     unsigned char 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  a               1    6[COMMON] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         1       0       0       0       0
  3135 ;;      Temps:          2       0       0       0       0
  3136 ;;      Totals:         3       0       0       0       0
  3137 ;;Total ram usage:        3 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    2
  3140 ;; This function calls:
  3141 ;;		_Lcd_Port
  3142 ;; This function is called by:
  3143 ;;		_Lcd_Clear
  3144 ;;		_Lcd_Set_Cursor
  3145 ;;		_Lcd_Init
  3146 ;;		_Lcd_Shift_Right
  3147 ;;		_Lcd_Shift_Left
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _Lcd_Cmd
  3153  054E                     _Lcd_Cmd:
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3157                           ;Lcd_Cmd@a stored from wreg
  3158  054E  00F6               	movwf	Lcd_Cmd@a
  3159  054F                     l1694:
  3160                           
  3161                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  3162  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3163  0550  1303               	bcf	3,6	;RP1=0, select bank0
  3164  0551  1009               	bcf	9,0	;volatile
  3165  0552                     l1696:
  3166                           
  3167                           ;LCD_8b.c: 19:     Lcd_Port(a);
  3168  0552  0876               	movf	Lcd_Cmd@a,w
  3169  0553  120A  118A  257F  120A  118A  	fcall	_Lcd_Port
  3170  0558                     l1698:
  3171                           
  3172                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  3173  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0559  1303               	bcf	3,6	;RP1=0, select bank0
  3175  055A  1509               	bsf	9,2	;volatile
  3176  055B                     l1700:
  3177                           
  3178                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3179  055B  3006               	movlw	6
  3180  055C  00F5               	movwf	??_Lcd_Cmd+1
  3181  055D  3030               	movlw	48
  3182  055E  00F4               	movwf	??_Lcd_Cmd
  3183  055F                     u1197:
  3184  055F  0BF4               	decfsz	??_Lcd_Cmd,f
  3185  0560  2D5F               	goto	u1197
  3186  0561  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3187  0562  2D5F               	goto	u1197
  3188  0563  0000               	nop
  3189  0564                     l1702:
  3190                           
  3191                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  3192  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0566  1109               	bcf	9,2	;volatile
  3195  0567                     l175:
  3196  0567  0008               	return
  3197  0568                     __end_of_Lcd_Cmd:
  3198                           
  3199                           	psect	text17
  3200  057F                     __ptext17:	
  3201 ;; *************** function _Lcd_Port *****************
  3202 ;; Defined at:
  3203 ;;		line 12 in file "LCD_8b.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  a               1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  a               1    3[COMMON] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0
  3220 ;;      Totals:         1       0       0       0       0
  3221 ;;Total ram usage:        1 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    1
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_Lcd_Cmd
  3228 ;;		_Lcd_Init
  3229 ;;		_Lcd_Write_Char
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           
  3234                           ;psect for function _Lcd_Port
  3235  057F                     _Lcd_Port:
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _Lcd_Port: [wreg]
  3239                           ;Lcd_Port@a stored from wreg
  3240  057F  00F3               	movwf	Lcd_Port@a
  3241  0580                     l1680:
  3242                           
  3243                           ;LCD_8b.c: 13:     PORTD = a;
  3244  0580  0873               	movf	Lcd_Port@a,w
  3245  0581  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0582  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0583  0088               	movwf	8	;volatile
  3248  0584                     l172:
  3249  0584  0008               	return
  3250  0585                     __end_of_Lcd_Port:
  3251                           
  3252                           	psect	text18
  3253  0479                     __ptext18:	
  3254 ;; *************** function _isr *****************
  3255 ;; Defined at:
  3256 ;;		line 83 in file "main_02.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          3       0       0       0       0
  3273 ;;      Totals:         3       0       0       0       0
  3274 ;;Total ram usage:        3 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		Interrupt level 1
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _isr
  3285  0479                     _isr:
  3286  0479                     i1l1590:
  3287                           
  3288                           ;main_02.c: 85:     Lcd_Write_Char(unidades);
  3289  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3290  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3291  047B  1F0C               	btfss	12,6	;volatile
  3292  047C  2C7E               	goto	u61_21
  3293  047D  2C7F               	goto	u61_20
  3294  047E                     u61_21:
  3295  047E  2CA0               	goto	i1l1604
  3296  047F                     u61_20:
  3297  047F                     i1l1592:
  3298                           
  3299                           ;main_02.c: 86: 
  3300  047F  0C1F               	rrf	31,w	;volatile
  3301  0480  00F0               	movwf	??_isr
  3302  0481  0C70               	rrf	??_isr,w
  3303  0482  390F               	andlw	15
  3304  0483  3A00               	xorlw	0
  3305  0484  1D03               	skipz
  3306  0485  2C87               	goto	u62_21
  3307  0486  2C88               	goto	u62_20
  3308  0487                     u62_21:
  3309  0487  2C91               	goto	i1l1598
  3310  0488                     u62_20:
  3311  0488                     i1l1594:
  3312                           
  3313                           ;main_02.c: 87: 
  3314  0488  081F               	movf	31,w	;volatile
  3315  0489  39C3               	andlw	-61
  3316  048A  3804               	iorlw	4
  3317  048B  009F               	movwf	31	;volatile
  3318  048C                     i1l1596:
  3319                           
  3320                           ;main_02.c: 88: 
  3321  048C  081E               	movf	30,w	;volatile
  3322  048D  00F0               	movwf	??_isr
  3323  048E  0870               	movf	??_isr,w
  3324  048F  00B0               	movwf	_voltaje1
  3325                           
  3326                           ;main_02.c: 89: 
  3327  0490  2CA0               	goto	i1l1604
  3328  0491                     i1l1598:
  3329  0491  0C1F               	rrf	31,w	;volatile
  3330  0492  00F0               	movwf	??_isr
  3331  0493  0C70               	rrf	??_isr,w
  3332  0494  390F               	andlw	15
  3333  0495  3A01               	xorlw	1
  3334  0496  1D03               	skipz
  3335  0497  2C99               	goto	u63_21
  3336  0498  2C9A               	goto	u63_20
  3337  0499                     u63_21:
  3338  0499  2CA0               	goto	i1l1604
  3339  049A                     u63_20:
  3340  049A                     i1l1600:
  3341                           
  3342                           ;main_02.c: 91:     if (ADCON0bits.GO == 0){
  3343  049A  30C3               	movlw	-61
  3344  049B  059F               	andwf	31,f	;volatile
  3345  049C                     i1l1602:
  3346                           
  3347                           ;main_02.c: 92:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  3348  049C  081E               	movf	30,w	;volatile
  3349  049D  00F0               	movwf	??_isr
  3350  049E  0870               	movf	??_isr,w
  3351  049F  00AF               	movwf	_voltaje2
  3352  04A0                     i1l1604:
  3353                           
  3354                           ;main_02.c: 95: 
  3355  04A0  130C               	bcf	12,6	;volatile
  3356  04A1                     i1l97:
  3357  04A1  0872               	movf	??_isr+2,w
  3358  04A2  008A               	movwf	10
  3359  04A3  0E71               	swapf	??_isr+1,w
  3360  04A4  0083               	movwf	3
  3361  04A5  0EFE               	swapf	btemp,f
  3362  04A6  0E7E               	swapf	btemp,w
  3363  04A7  0009               	retfie
  3364  04A8                     __end_of_isr:
  3365  007E                     btemp	set	126	;btemp
  3366  007E                     wtemp0	set	126
  3367                           
  3368                           	psect	intentry
  3369  0004                     __pintentry:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _isr: [wreg+status,2+status,0]
  3372                           
  3373  0004                     interrupt_function:
  3374  007E                     saved_w	set	btemp
  3375  0004  00FE               	movwf	btemp
  3376  0005  0E03               	swapf	3,w
  3377  0006  00F1               	movwf	??_isr+1
  3378  0007  080A               	movf	10,w
  3379  0008  00F2               	movwf	??_isr+2
  3380  0009  120A  118A  2C79   	ljmp	_isr
  3381                           
  3382                           	psect	config
  3383                           
  3384                           ;Config register CONFIG1 @ 0x2007
  3385                           ;	Oscillator Selection bits
  3386                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3387                           ;	Watchdog Timer Enable bit
  3388                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3389                           ;	Power-up Timer Enable bit
  3390                           ;	PWRTE = OFF, PWRT disabled
  3391                           ;	RE3/MCLR pin function select bit
  3392                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3393                           ;	Code Protection bit
  3394                           ;	CP = OFF, Program memory code protection is disabled
  3395                           ;	Data Code Protection bit
  3396                           ;	CPD = OFF, Data memory code protection is disabled
  3397                           ;	Brown Out Reset Selection bits
  3398                           ;	BOREN = OFF, BOR disabled
  3399                           ;	Internal External Switchover bit
  3400                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3401                           ;	Fail-Safe Clock Monitor Enabled bit
  3402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3403                           ;	Low Voltage Programming Enable bit
  3404                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3405                           ;	In-Circuit Debugger Mode bit
  3406                           ;	DEBUG = 0x1, unprogrammed default
  3407  2007                     	org	8199
  3408  2007  20D4               	dw	8404
  3409                           
  3410                           ;Config register CONFIG2 @ 0x2008
  3411                           ;	Brown-out Reset Selection bit
  3412                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3413                           ;	Flash Program Memory Self Write Enable bits
  3414                           ;	WRT = OFF, Write protection off
  3415  2008                     	org	8200
  3416  2008  3FFF               	dw	16383

Data Sizes:
    Strings     122
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      9      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 63
		 -> STR_13(CODE[63]), STR_12(CODE[11]), STR_11(CODE[3]), STR_10(CODE[2]), 
		 -> STR_9(CODE[11]), STR_8(CODE[3]), STR_7(CODE[2]), STR_6(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _setup->_config_ADC
    _mensaje1->_printf
    _mensaje->_printf
    _printf->_putch
    _division->___awdiv
    _division->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3703
                                              8 BANK0      1     1      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _division
                            _mensaje
                           _mensaje1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mensaje1                                             2     2      0     332
                                              0 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              2     2      0     332
                                              0 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     332
                                              4 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1660
                                              4 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     440
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _division
     ___awdiv
     ___awmod
   _mensaje
     _printf
       _putch
   _mensaje1
     _printf
       _putch
   _setup
     _config_ADC
     _config_USART

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 01:48:07 2021

                        pc 0002               ___awdiv@sign 0021                         fsr 0004  
                      l102 003D                        l103 009B                        l122 0576  
                      l131 04F5                        l116 042A                        l108 00BA  
                      l125 057E                        l119 01F0                        l128 02C1  
                      l146 0326                        l163 054D                        l172 0584  
                      l190 0531                        l175 0567                        l184 03D9  
                      l178 0574                        l187 0478                        l451 0259  
                      l196 04D0                        l294 0514                        l464 0381  
                      u350 057C                        u351 057B                        u360 0514  
                      u361 0513                        u700 0203                        u701 0202  
                      u710 0214                        u711 0213                        u800 0339  
                      u801 0338                        u730 0226                        u810 0344  
                      u731 0225                        u811 0343                        u900 03B5  
                      u901 03B4                        u725 0218                        u750 0237  
                      u830 0356                        u751 0236                        u831 0355  
                      u920 04D0                        u840 0360                        u921 04CF  
                      u745 0227                        u841 035F                        u825 0348  
                      u770 024B                        u690 01F8                        u930 00A1  
                      u915 03BD                        u771 024A                        u755 0233  
                      u691 01F7                        u931 00A0                        u780 0250  
                      u860 0373                        u940 00A7                        u781 024F  
                      u765 023F                        u861 0372                        u845 035C  
                      u941 00A6                        u870 0378                        u790 032E  
                      u950 00B2                        u871 0377                        u855 0367  
                      u791 032D                        u951 00B1                        u880 038A  
                      u960 00B9                        u881 0389                        u961 00B8  
                      u970 00D9                        u971 00D8                        u895 0392  
                      u987 00DD                        u997 02CA                        _isr 0479  
                      fsr0 0004               ___awmod@sign 0021                       l1300 02C4  
                     l1310 02D1                       l1302 02C8                       l1320 02DF  
                     l1312 02D4                       l1304 02CC                       l1242 0576  
                     l1330 02E8                       l1322 02E2                       l1314 02D5  
                     l1306 02CF                       l1244 057C                       l1340 02F6  
                     l1332 02EA                       l1324 02E3                       l1316 02D7  
                     l1308 02D0                       l1500 04EA                       l1262 04F7  
                     l1350 0301                       l1342 02F7                       l1334 02EE  
                     l1326 02E4                       l1318 02DB                       l1270 0536  
                     l1502 04EF                       l1264 04FC                       l1360 030D  
                     l1352 0305                       l1344 02FA                       l1336 02F2  
                     l1328 02E7                       l1280 0541                       l1272 0537  
                     l1266 0502                       l1362 030E                       l1354 0308  
                     l1346 02FB                       l1338 02F5                       l1290 054A  
                     l1282 0542                       l1274 053A                       l1700 055B  
                     l1356 0309                       l1348 02FD                       l1292 054B  
                     l1284 0545                       l1276 053D                       l1268 0532  
                     l1702 0564                       l1710 01FD                       l1358 030A  
                     l1366 0310                       l1294 054C                       l1286 0546  
                     l1278 053E                       l1470 04D9                       l1800 038A  
                     l1720 020E                       l1712 01FF                       l1704 01F1  
                     l1288 0549                       l1480 04DE                       l1472 04DA  
                     l1464 04D1                       l1810 03B5                       l1802 039B  
                     l1730 0226                       l1722 0214                       l1714 0203  
                     l1706 01F4                       l1298 02C3                       l1490 04E5  
                     l1482 04DF                       l1474 04DB                       l1466 04D5  
                     l1812 03C6                       l1804 03A0                       l1820 04AE  
                     l1732 0237                       l1724 0217                       l1740 024B  
                     l1716 0208                       l1708 01F8                       l1492 04E6  
                     l1484 04E0                       l1476 04DC                       l1468 04D8  
                     l1900 00A1                       l1814 03CB                       l1806 03A6  
                     l1822 04BB                       l1742 0250                       l1734 023D  
                     l1726 021E                       l1718 020C                       l1750 032A  
                     l1830 02B9                       l1494 04E7                       l1486 04E3  
                     l1478 04DD                       l1910 00B9                       l1902 00A7  
                     l1680 0580                       l1816 03D1                       l1808 03AF  
                     l1824 04C3                       l1744 0255                       l1736 023E  
                     l1728 0222                       l1760 033E                       l1752 032E  
                     l1832 02BD                       l1840 03EA                       l1496 04E8  
                     l1488 04E4                       l1912 00BB                       l1904 00AB  
                     l1690 052A                       l1682 0516                       l1818 04AB  
                     l1738 0245                       l1770 0356                       l1762 0344  
                     l1754 0333                       l1826 025D                       l1842 03EE  
                     l1850 0180                       l1498 04E9                       l1914 00D3  
                     l1906 00AC                       l1692 052E                       l1684 051E  
                     l1780 0378                       l1772 0360                       l1764 0347  
                     l1756 0335                       l1748 0327                       l1828 02B5  
                     l1844 03F8                       l1836 03DA                       l1860 01CA  
                     l1852 0186                       l1916 00D9                       l1908 00B2  
                     l1694 054F                       l1790 043C                       l1686 0521  
                     l1782 037D                       l1774 0366                       l1766 034E  
                     l1758 0339                       l1846 0424                       l1838 03E0  
                     l1862 01D0                       l1854 0190                       l1918 00E0  
                     l1870 0020                       l1696 0552                       l1792 044D  
                     l1688 0527                       l1776 036D                       l1768 0352  
                     l1864 01E0                       l1856 0194                       l1944 0318  
                     l1880 0053                       l1872 0025                       l1698 0558  
                     l1794 0453                       l1786 042B                       l1778 0373  
                     l1866 01EA                       l1858 019E                       l1890 0070  
                     l1882 0059                       l1874 002A                       l1796 0568  
                     l1788 0431                       l1892 0078                       l1884 005F  
                     l1876 002F                       l1798 0385                       l1894 007E  
                     l1886 0065                       l1878 0037                       l1896 0090  
                     l1888 006B                       l1898 0096                       _ADIF 0066  
                     ?_isr 0070                       STR_1 0145                       STR_2 017E  
                     STR_3 017B                       STR_4 017E                       STR_5 017B  
                     STR_6 0156                       STR_7 017E                       STR_8 0178  
                     STR_9 0162                       u1007 02DD                       u1017 02F0  
                     u1107 03E6                       u1027 0303                       u1117 03F4  
                     u1037 018C                       u1127 0404                       u1047 019A  
                     u1137 0412                       u1057 01AA                       u1147 0420  
                     u1067 01B8                       u1157 052C                       u1077 01C6  
                     u1167 0437                       u1087 01D6                       u1177 0448  
                     u1097 01E6                       u1187 0457                       u1197 055F  
           ??_config_USART 0073                       _RCIF 0065                       i1l97 04A1  
                     _TXIF 0064          ?_Lcd_Write_String 0070                       _dato 0029  
                     _main 0020                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0078            __end_of_Lcd_Cmd 0568                      ??_isr 0070  
                    ?_main 0070            __end_of___awdiv 025A             config_ADC@frec 0075  
                    STR_10 017E                      STR_11 0178                      STR_12 016D  
                    STR_13 0106            __end_of___awmod 0382                      _ANSEL 0188  
          ___awdiv@divisor 0073            ___awdiv@counter 0020                      _RCREG 001A  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u61_20 047F                      u61_21 047E                      u62_20 0488  
                    u62_21 0487                      u63_20 049A                      u63_21 0499  
  __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _dato1 002A            __end_of_mensaje 042B  
                    _setup 04D1                      _putch 0575                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0479  
         __end_of_Lcd_Port 0585            __initialization 000F               __end_of_main 00E7  
                   ??_main 0028         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
         ___awdiv@dividend 0075                     ?_setup 0070                     ?_putch 0070  
                   i1l1600 049A                     i1l1602 049C                     i1l1604 04A0  
                   i1l1590 0479                     i1l1592 047F                     i1l1594 0488  
                   i1l1596 048C                     i1l1598 0491                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001D           __end_of_division 02C2  
                ??___awdiv 0077                  ??___awmod 0077           __end_of_mensaje1 01F1  
         ___awdiv@quotient 0022       __end_of_config_USART 054E            ___awmod@divisor 0073  
          ___awmod@counter 0020                     _printf 04F6                  ??_mensaje 0020  
                   saved_w 007E            Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0077  
          Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023    __end_of__initialization 001C  
        __end_of_Lcd_Clear 0575             __pcstackCOMMON 0070              __end_of_setup 04F6  
            __end_of_putch 057F             _Lcd_Set_Cursor 0382                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0076                    ??_putch 0073  
               __pbssBANK0 0029                 __pmaintext 0020                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 03DA                    ?_printf 0070  
               _config_ADC 02C2                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
               __stringtab 0100                  ?_division 0070             _Lcd_Write_Char 0515  
                  _Lcd_Cmd 054E                  ?_mensaje1 0070      __size_of_config_USART 001C  
                  ___awdiv 01F1                    ___awmod 0327                    _decenas 0079  
          ?_Lcd_Set_Cursor 0077                    __ptext1 04D1                    __ptext2 0532  
                  __ptext3 02C2                    __ptext4 0180                    __ptext5 03DA  
                  __ptext6 04F6                    __ptext7 0575                    __ptext8 025A  
                  __ptext9 0327            __size_of_printf 001F               __size_of_isr 002F  
                  _mensaje 03DA           ___awmod@dividend 0075                    _residuo 002C  
   __end_of_Lcd_Write_Char 0532       end_of_initialization 001C                 ??_division 0024  
             _config_USART 0532                 ??_mensaje1 0020                  _RCSTAbits 0018  
                  printf@c 0076                    printf@f 0077                  Lcd_Port@a 0073  
                _PORTEbits 0009                ?_config_ADC 0070                  _TRISAbits 0085  
        division@dividendo 0027            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _TXSTAbits 0098                  _Lcd_Clear 0568  
         _Lcd_Write_String 04A8                _BAUDCTLbits 0187             __end_of_printf 0515  
      start_initialization 000F                __end_of_isr 04A8          __size_of_Lcd_Init 004E  
        __size_of_Lcd_Port 0006        __size_of_config_ADC 0065                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077                   ??_printf 0074  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070          __size_of_division 0068          __size_of_mensaje1 0071  
         ??_Lcd_Set_Cursor 0020                   ?___awdiv 0073                   ?___awmod 0073  
                __pstrings 0100                   ?_mensaje 0070             __size_of_setup 0025  
           __size_of_putch 000A          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 0105                 _ADCON1bits 009F  
             ??_config_ADC 0073           ??_Lcd_Write_Char 0074                  _voltaje_b 002E  
                _voltaje_c 002D                   _Lcd_Init 042B                   _Lcd_Port 057F  
 __end_of_Lcd_Write_String 04D1           __size_of_Lcd_Cmd 001A         __end_of_config_ADC 0327  
         __size_of___awdiv 0069           __size_of___awmod 005B         __end_of__stringtab 0106  
         __size_of_mensaje 0051                   _centenas 007A                   __ptext10 01F1  
                 __ptext11 04A8                   __ptext12 0515                   __ptext13 0382  
                 __ptext14 042B                   __ptext15 0568                   __ptext16 054E  
                 __ptext17 057F                   __ptext18 0479                   _division 025A  
                 _contador 002B              __size_of_main 00C7                   _mensaje1 0180  
                 _unidades 0078                   _voltaje1 0030                   _voltaje2 002F  
                putch@dato 0073                 _INTCONbits 000B         Lcd_Write_Char@temp 0076  
                 intlevel1 0000                  stringcode 0100                 _OSCCONbits 008F  
                 printf@ap 0075         Lcd_Set_Cursor@temp 0025                   stringdir 0100  
                 stringtab 0100              ?_config_USART 0070  
