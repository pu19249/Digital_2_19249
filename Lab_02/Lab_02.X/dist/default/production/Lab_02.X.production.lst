

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 21:00:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	functab,global,class=ENTRY,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0008                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0088                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  008F                     	;# 
   280  0090                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0097                     	;# 
   290  0098                     	;# 
   291  0099                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0105                     	;# 
   299  0107                     	;# 
   300  0108                     	;# 
   301  0109                     	;# 
   302  010C                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  0185                     	;# 
   308  0187                     	;# 
   309  0188                     	;# 
   310  0189                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000D                     	;# 
   327  000E                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0014                     	;# 
   335  0015                     	;# 
   336  0015                     	;# 
   337  0016                     	;# 
   338  0017                     	;# 
   339  0018                     	;# 
   340  0019                     	;# 
   341  001A                     	;# 
   342  001B                     	;# 
   343  001B                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  0088                     	;# 
   353  0089                     	;# 
   354  008C                     	;# 
   355  008D                     	;# 
   356  008E                     	;# 
   357  008F                     	;# 
   358  0090                     	;# 
   359  0091                     	;# 
   360  0092                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0093                     	;# 
   364  0094                     	;# 
   365  0095                     	;# 
   366  0096                     	;# 
   367  0097                     	;# 
   368  0098                     	;# 
   369  0099                     	;# 
   370  009A                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  009F                     	;# 
   376  0105                     	;# 
   377  0107                     	;# 
   378  0108                     	;# 
   379  0109                     	;# 
   380  010C                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  0185                     	;# 
   386  0187                     	;# 
   387  0188                     	;# 
   388  0189                     	;# 
   389  018C                     	;# 
   390  018D                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  000E                     	;# 
   406  000E                     	;# 
   407  000F                     	;# 
   408  0010                     	;# 
   409  0011                     	;# 
   410  0012                     	;# 
   411  0013                     	;# 
   412  0014                     	;# 
   413  0015                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0017                     	;# 
   417  0018                     	;# 
   418  0019                     	;# 
   419  001A                     	;# 
   420  001B                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001D                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  0081                     	;# 
   427  0085                     	;# 
   428  0086                     	;# 
   429  0087                     	;# 
   430  0088                     	;# 
   431  0089                     	;# 
   432  008C                     	;# 
   433  008D                     	;# 
   434  008E                     	;# 
   435  008F                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  0105                     	;# 
   455  0107                     	;# 
   456  0108                     	;# 
   457  0109                     	;# 
   458  010C                     	;# 
   459  010C                     	;# 
   460  010D                     	;# 
   461  010E                     	;# 
   462  010F                     	;# 
   463  0185                     	;# 
   464  0187                     	;# 
   465  0188                     	;# 
   466  0189                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469                           
   470                           	psect	strings
   471  0800                     __pstrings:
   472  0800                     stringtab:
   473  0800                     __stringtab:
   474                           
   475                           ;	String table - string pointers are 1 byte each
   476  0800  1BFF               	btfsc	btemp+1,7
   477  0801  280A               	ljmp	stringcode
   478  0802  1383               	bcf	3,7
   479  0803  187F               	btfsc	btemp+1,0
   480  0804  1783               	bsf	3,7
   481  0805  0800               	movf	0,w
   482  0806  0A84               	incf	4,f
   483  0807  1903               	skipnz
   484  0808  0AFF               	incf	btemp+1,f
   485  0809  0008               	return
   486  080A                     stringcode:
   487  080A                     stringdir:
   488  080A  3008               	movlw	high stringdir
   489  080B  008A               	movwf	10
   490  080C  0804               	movf	4,w
   491  080D  0A84               	incf	4,f
   492  080E  0782               	addwf	2,f
   493  080F                     __stringbase:
   494  080F  3400               	retlw	0
   495  0810                     __end_of__stringtab:
   496  0810                     _dpowers:
   497  0810  3401               	retlw	1
   498  0811  3400               	retlw	0
   499  0812  340A               	retlw	10
   500  0813  3400               	retlw	0
   501  0814  3464               	retlw	100
   502  0815  3400               	retlw	0
   503  0816  34E8               	retlw	232
   504  0817  3403               	retlw	3
   505  0818  3410               	retlw	16
   506  0819  3427               	retlw	39
   507  081A                     __end_of_dpowers:
   508  0009                     _PORTEbits	set	9
   509  0018                     _RCSTAbits	set	24
   510  0009                     _PORTE	set	9
   511  0008                     _PORTD	set	8
   512  0007                     _PORTC	set	7
   513  0006                     _PORTB	set	6
   514  0005                     _PORTA	set	5
   515  000B                     _INTCONbits	set	11
   516  000C                     _PIR1bits	set	12
   517  0019                     _TXREG	set	25
   518  001E                     _ADRESH	set	30
   519  001F                     _ADCON0bits	set	31
   520  0064                     _TXIF	set	100
   521  0065                     _RCIF	set	101
   522  0066                     _ADIF	set	102
   523  0098                     _TXSTAbits	set	152
   524  009A                     _SPBRGH	set	154
   525  0099                     _SPBRG	set	153
   526  009F                     _ADCON1bits	set	159
   527  008C                     _PIE1bits	set	140
   528  008F                     _OSCCONbits	set	143
   529  0089                     _TRISE	set	137
   530  0088                     _TRISD	set	136
   531  0085                     _TRISAbits	set	133
   532  0187                     _BAUDCTLbits	set	391
   533  0188                     _ANSEL	set	392
   534  081A                     STR_1:
   535  081A  3453               	retlw	83	;'S'
   536  081B  345F               	retlw	95	;'_'
   537  081C  3431               	retlw	49	;'1'
   538  081D  343A               	retlw	58	;':'
   539  081E  3420               	retlw	32	;' '
   540  081F  3420               	retlw	32	;' '
   541  0820  3453               	retlw	83	;'S'
   542  0821  345F               	retlw	95	;'_'
   543  0822  3432               	retlw	50	;'2'
   544  0823  343A               	retlw	58	;':'
   545  0824  3420               	retlw	32	;' '
   546  0825  3420               	retlw	32	;' '
   547  0826  3453               	retlw	83	;'S'
   548  0827  345F               	retlw	95	;'_'
   549  0828  3433               	retlw	51	;'3'
   550  0829  343A               	retlw	58	;':'
   551  082A  3400               	retlw	0
   552  082B                     STR_18:
   553  082B  340D               	retlw	13
   554  082C  342D               	retlw	45	;'-'
   555  082D  342D               	retlw	45	;'-'
   556  082E  342D               	retlw	45	;'-'
   557  082F  342D               	retlw	45	;'-'
   558  0830  342D               	retlw	45	;'-'
   559  0831  342D               	retlw	45	;'-'
   560  0832  342D               	retlw	45	;'-'
   561  0833  342D               	retlw	45	;'-'
   562  0834  342D               	retlw	45	;'-'
   563  0835  342D               	retlw	45	;'-'
   564  0836  342D               	retlw	45	;'-'
   565  0837  3400               	retlw	0
   566  0838                     STR_13:
   567  0838  340D               	retlw	13
   568  0839  3456               	retlw	86	;'V'
   569  083A  346F               	retlw	111	;'o'
   570  083B  346C               	retlw	108	;'l'
   571  083C  3474               	retlw	116	;'t'
   572  083D  3461               	retlw	97	;'a'
   573  083E  346A               	retlw	106	;'j'
   574  083F  3465               	retlw	101	;'e'
   575  0840  3431               	retlw	49	;'1'
   576  0841  343A               	retlw	58	;':'
   577  0842  3420               	retlw	32	;' '
   578  0843  3400               	retlw	0
   579  0844                     STR_16:
   580  0844  3456               	retlw	86	;'V'
   581  0845  346F               	retlw	111	;'o'
   582  0846  346C               	retlw	108	;'l'
   583  0847  3474               	retlw	116	;'t'
   584  0848  3461               	retlw	97	;'a'
   585  0849  346A               	retlw	106	;'j'
   586  084A  3465               	retlw	101	;'e'
   587  084B  3432               	retlw	50	;'2'
   588  084C  343A               	retlw	58	;':'
   589  084D  3420               	retlw	32	;' '
   590  084E  3400               	retlw	0
   591  084F                     STR_11:
   592  084F  3420               	retlw	32	;' '
   593  0850  3420               	retlw	32	;' '
   594  0851  3420               	retlw	32	;' '
   595  0852  3400               	retlw	0
   596  0853                     STR_15:
   597  0853  340D               	retlw	13
   598  0854  340D               	retlw	13
   599  0855  3400               	retlw	0
   600  0856                     STR_2:
   601  0856  3425               	retlw	37	;'%'
   602  0857  3464               	retlw	100	;'d'
   603  0858  3400               	retlw	0
   604  0859                     STR_10:
   605  0859  342E               	retlw	46	;'.'
   606  085A  3400               	retlw	0
   607  0859                     
   608                           	psect	cinit
   609  000F                     start_initialization:	
   610                           ; #config settings
   611                           
   612  000F                     __initialization:
   613                           
   614                           ; Clear objects allocated to COMMON
   615  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   616  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   617                           
   618                           ; Clear objects allocated to BANK0
   619  0011  1383               	bcf	3,7	;select IRP bank0
   620  0012  3058               	movlw	low __pbssBANK0
   621  0013  0084               	movwf	4
   622  0014  3068               	movlw	low (__pbssBANK0+16)
   623  0015  120A  158A  225C  120A  118A  	fcall	clear_ram0
   624                           
   625                           ; Clear objects allocated to BANK1
   626  001A  30A0               	movlw	low __pbssBANK1
   627  001B  0084               	movwf	4
   628  001C  30C8               	movlw	low (__pbssBANK1+40)
   629  001D  120A  158A  225C  120A  118A  	fcall	clear_ram0
   630  0022                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633  0022                     __end_of__initialization:
   634  0022  0183               	clrf	3
   635  0023  120A  118A  2B90   	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssCOMMON
   638  0079                     __pbssCOMMON:
   639  0079                     _voltaje_c:
   640  0079                     	ds	1
   641  007A                     _voltaje_b:
   642  007A                     	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0058                     __pbssBANK0:
   646  0058                     _dato:
   647  0058                     	ds	1
   648  0059                     _dato1:
   649  0059                     	ds	1
   650  005A                     _voltaje2:
   651  005A                     	ds	1
   652  005B                     _voltaje1:
   653  005B                     	ds	1
   654  005C                     _buffer7:
   655  005C                     	ds	2
   656  005E                     _buffer6:
   657  005E                     	ds	2
   658  0060                     _buffer5:
   659  0060                     	ds	2
   660  0062                     _buffer4:
   661  0062                     	ds	2
   662  0064                     _buffer3:
   663  0064                     	ds	2
   664  0066                     _buffer2:
   665  0066                     	ds	2
   666                           
   667                           	psect	bssBANK1
   668  00A0                     __pbssBANK1:
   669  00A0                     _buffer1:
   670  00A0                     	ds	20
   671  00B4                     _buffer:
   672  00B4                     	ds	20
   673                           
   674                           	psect	clrtext
   675  0A5C                     clear_ram0:	
   676                           ;	Called with FSR containing the base address, and
   677                           ;	W with the last address+1
   678                           
   679  0A5C  0064               	clrwdt	;clear the watchdog before getting into this loop
   680  0A5D                     clrloop0:
   681  0A5D  0180               	clrf	0	;clear RAM location pointed to by FSR
   682  0A5E  0A84               	incf	4,f	;increment pointer
   683  0A5F  0604               	xorwf	4,w	;XOR with final address
   684  0A60  1903               	btfsc	3,2	;have we reached the end yet?
   685  0A61  3400               	retlw	0	;all done for this memory range, return
   686  0A62  0604               	xorwf	4,w	;XOR again to restore value
   687  0A63  2A5D               	goto	clrloop0	;do the next byte
   688                           
   689                           	psect	cstackCOMMON
   690  0070                     __pcstackCOMMON:
   691  0070                     ?_setup:
   692  0070                     ?_Lcd_Init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_Lcd_Clear:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_division1:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_division2:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_division3:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_mensaje:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_config_USART:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_config_ADC:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_isr:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ??_isr:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_main:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Lcd_Port:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Lcd_Cmd:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Write_Char:	
   732                           ; 1 bytes @ 0x0
   733                           
   734                           
   735                           ; 1 bytes @ 0x0
   736  0070                     	ds	3
   737  0073                     ??_config_USART:
   738  0073                     ??_config_ADC:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ?_putch:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     ??_Lcd_Port:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ?__Umul8_16:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ?___awdiv:	
   751                           ; 2 bytes @ 0x3
   752                           
   753  0073                     ?___awmod:	
   754                           ; 2 bytes @ 0x3
   755                           
   756  0073                     ?___lwdiv:	
   757                           ; 2 bytes @ 0x3
   758                           
   759  0073                     ?___xxtofl:	
   760                           ; 2 bytes @ 0x3
   761                           
   762  0073                     putch@dato:	
   763                           ; 4 bytes @ 0x3
   764                           
   765  0073                     Lcd_Port@a:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     __Umul8_16@multiplicand:	
   769                           ; 1 bytes @ 0x3
   770                           
   771  0073                     ___awdiv@divisor:	
   772                           ; 1 bytes @ 0x3
   773                           
   774  0073                     ___awmod@divisor:	
   775                           ; 2 bytes @ 0x3
   776                           
   777  0073                     ___lwdiv@divisor:	
   778                           ; 2 bytes @ 0x3
   779                           
   780  0073                     ___xxtofl@val:	
   781                           ; 2 bytes @ 0x3
   782                           
   783                           
   784                           ; 4 bytes @ 0x3
   785  0073                     	ds	1
   786  0074                     ??_putch:
   787  0074                     ??_Lcd_Cmd:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     ??_Lcd_Write_Char:	
   791                           ; 1 bytes @ 0x4
   792                           
   793                           
   794                           ; 1 bytes @ 0x4
   795  0074                     	ds	1
   796  0075                     ??__Umul8_16:
   797  0075                     config_ADC@frec:	
   798                           ; 1 bytes @ 0x5
   799                           
   800  0075                     Lcd_Write_Char@a:	
   801                           ; 1 bytes @ 0x5
   802                           
   803  0075                     ___awdiv@dividend:	
   804                           ; 1 bytes @ 0x5
   805                           
   806  0075                     ___awmod@dividend:	
   807                           ; 2 bytes @ 0x5
   808                           
   809  0075                     ___lwdiv@dividend:	
   810                           ; 2 bytes @ 0x5
   811                           
   812                           
   813                           ; 2 bytes @ 0x5
   814  0075                     	ds	1
   815  0076                     ??_setup:
   816  0076                     Lcd_Cmd@a:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     Lcd_Write_Char@temp:	
   820                           ; 1 bytes @ 0x6
   821                           
   822                           
   823                           ; 1 bytes @ 0x6
   824  0076                     	ds	1
   825  0077                     ??_Lcd_Init:
   826  0077                     ??_Lcd_Clear:	
   827                           ; 1 bytes @ 0x7
   828                           
   829  0077                     ?_Lcd_Set_Cursor:	
   830                           ; 1 bytes @ 0x7
   831                           
   832  0077                     ??___awdiv:	
   833                           ; 1 bytes @ 0x7
   834                           
   835  0077                     ??___awmod:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     ??___lwdiv:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     Lcd_Set_Cursor@b:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     Lcd_Write_Char@y:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     ___fltol@sign1:	
   848                           ; 1 bytes @ 0x7
   849                           
   850                           
   851                           ; 1 bytes @ 0x7
   852  0077                     	ds	1
   853  0078                     ??___lwmod:
   854  0078                     ___fltol@exp1:	
   855                           ; 1 bytes @ 0x8
   856                           
   857                           
   858                           ; 1 bytes @ 0x8
   859  0078                     	ds	1
   860                           
   861                           	psect	cstackBANK0
   862  0020                     __pcstackBANK0:
   863  0020                     ??_Lcd_Set_Cursor:
   864  0020                     ?_Lcd_Write_String:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0020                     ??___xxtofl:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     ___awdiv@counter:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     ___awmod@counter:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     ___lwdiv@counter:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0020                     Lcd_Write_String@a:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0020                     __Umul8_16@product:	
   883                           ; 2 bytes @ 0x0
   884                           
   885                           
   886                           ; 2 bytes @ 0x0
   887  0020                     	ds	1
   888  0021                     ___awdiv@sign:
   889  0021                     ___awmod@sign:	
   890                           ; 1 bytes @ 0x1
   891                           
   892  0021                     ___lwdiv@quotient:	
   893                           ; 1 bytes @ 0x1
   894                           
   895                           
   896                           ; 2 bytes @ 0x1
   897  0021                     	ds	1
   898  0022                     ??_Lcd_Write_String:
   899  0022                     Lcd_Set_Cursor@a:	
   900                           ; 1 bytes @ 0x2
   901                           
   902  0022                     ___awdiv@quotient:	
   903                           ; 1 bytes @ 0x2
   904                           
   905  0022                     __Umul8_16@word_mpld:	
   906                           ; 2 bytes @ 0x2
   907                           
   908                           
   909                           ; 2 bytes @ 0x2
   910  0022                     	ds	1
   911  0023                     ?___lwmod:
   912  0023                     Lcd_Set_Cursor@z:	
   913                           ; 2 bytes @ 0x3
   914                           
   915  0023                     ___lwmod@divisor:	
   916                           ; 1 bytes @ 0x3
   917                           
   918                           
   919                           ; 2 bytes @ 0x3
   920  0023                     	ds	1
   921  0024                     ??_division1:
   922  0024                     ??_division2:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0024                     ??_division3:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0024                     Lcd_Set_Cursor@y:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0024                     __Umul8_16@multiplier:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0024                     ___xxtofl@sign:	
   935                           ; 1 bytes @ 0x4
   936                           
   937                           
   938                           ; 1 bytes @ 0x4
   939  0024                     	ds	1
   940  0025                     Lcd_Set_Cursor@temp:
   941  0025                     ___xxtofl@exp:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0025                     Lcd_Write_String@i:	
   945                           ; 1 bytes @ 0x5
   946                           
   947  0025                     ___lwmod@dividend:	
   948                           ; 2 bytes @ 0x5
   949                           
   950                           
   951                           ; 2 bytes @ 0x5
   952  0025                     	ds	1
   953  0026                     ___xxtofl@arg:
   954                           
   955                           ; 4 bytes @ 0x6
   956  0026                     	ds	1
   957  0027                     ___lwmod@counter:
   958                           
   959                           ; 1 bytes @ 0x7
   960  0027                     	ds	1
   961  0028                     ?__doprnt:
   962  0028                     __doprnt@f:	
   963                           ; 2 bytes @ 0x8
   964                           
   965                           
   966                           ; 2 bytes @ 0x8
   967  0028                     	ds	1
   968  0029                     division1@centenas1:
   969  0029                     division2@decenas2:	
   970                           ; 1 bytes @ 0x9
   971                           
   972  0029                     division3@unidades3:	
   973                           ; 1 bytes @ 0x9
   974                           
   975                           
   976                           ; 1 bytes @ 0x9
   977  0029                     	ds	1
   978  002A                     ?___flmul:
   979  002A                     division1@dividendo:	
   980                           ; 4 bytes @ 0xA
   981                           
   982  002A                     division2@dividendo:	
   983                           ; 1 bytes @ 0xA
   984                           
   985  002A                     division3@dividendo:	
   986                           ; 1 bytes @ 0xA
   987                           
   988  002A                     __doprnt@ap:	
   989                           ; 1 bytes @ 0xA
   990                           
   991  002A                     ___flmul@b:	
   992                           ; 1 bytes @ 0xA
   993                           
   994                           
   995                           ; 4 bytes @ 0xA
   996  002A                     	ds	1
   997  002B                     ??__doprnt:
   998  002B                     division1@residuo1:	
   999                           ; 1 bytes @ 0xB
  1000                           
  1001  002B                     division2@residuo2:	
  1002                           ; 1 bytes @ 0xB
  1003                           
  1004  002B                     division3@residuo3:	
  1005                           ; 1 bytes @ 0xB
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0xB
  1009  002B                     	ds	3
  1010  002E                     ___flmul@a:
  1011                           
  1012                           ; 4 bytes @ 0xE
  1013  002E                     	ds	1
  1014  002F                     __doprnt@flag:
  1015                           
  1016                           ; 1 bytes @ 0xF
  1017  002F                     	ds	1
  1018  0030                     __doprnt@prec:
  1019                           
  1020                           ; 1 bytes @ 0x10
  1021  0030                     	ds	1
  1022  0031                     __doprnt@val:
  1023                           
  1024                           ; 2 bytes @ 0x11
  1025  0031                     	ds	1
  1026  0032                     ??___flmul:
  1027                           
  1028                           ; 1 bytes @ 0x12
  1029  0032                     	ds	1
  1030  0033                     __doprnt@c:
  1031                           
  1032                           ; 1 bytes @ 0x13
  1033  0033                     	ds	1
  1034  0034                     __doprnt@pb:
  1035                           
  1036                           ; 1 bytes @ 0x14
  1037  0034                     	ds	1
  1038  0035                     ?_sprintf:
  1039  0035                     ?_printf:	
  1040                           ; 2 bytes @ 0x15
  1041                           
  1042  0035                     sprintf@f:	
  1043                           ; 2 bytes @ 0x15
  1044                           
  1045  0035                     printf@f:	
  1046                           ; 1 bytes @ 0x15
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x15
  1050  0035                     	ds	2
  1051  0037                     ??_printf:
  1052  0037                     ___flmul@sign:	
  1053                           ; 1 bytes @ 0x17
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x17
  1057  0037                     	ds	1
  1058  0038                     ??_sprintf:
  1059  0038                     printf@ap:	
  1060                           ; 1 bytes @ 0x18
  1061                           
  1062  0038                     ___flmul@grs:	
  1063                           ; 1 bytes @ 0x18
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0x18
  1067  0038                     	ds	1
  1068  0039                     sprintf@ap:
  1069  0039                     printf@pb:	
  1070                           ; 1 bytes @ 0x19
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x19
  1074  0039                     	ds	1
  1075  003A                     sprintf@wh:
  1076                           
  1077                           ; 1 bytes @ 0x1A
  1078  003A                     	ds	1
  1079  003B                     ??_mensaje:
  1080  003B                     sprintf@pb:	
  1081                           ; 1 bytes @ 0x1B
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x1B
  1085  003B                     	ds	1
  1086  003C                     ___flmul@aexp:
  1087                           
  1088                           ; 1 bytes @ 0x1C
  1089  003C                     	ds	1
  1090  003D                     ___flmul@bexp:
  1091                           
  1092                           ; 1 bytes @ 0x1D
  1093  003D                     	ds	1
  1094  003E                     ___flmul@prod:
  1095                           
  1096                           ; 4 bytes @ 0x1E
  1097  003E                     	ds	4
  1098  0042                     ___flmul@temp:
  1099                           
  1100                           ; 2 bytes @ 0x22
  1101  0042                     	ds	2
  1102  0044                     ?___fltol:
  1103  0044                     ___fltol@f1:	
  1104                           ; 4 bytes @ 0x24
  1105                           
  1106                           
  1107                           ; 4 bytes @ 0x24
  1108  0044                     	ds	4
  1109  0048                     ??___fltol:
  1110                           
  1111                           ; 1 bytes @ 0x28
  1112  0048                     	ds	5
  1113  004D                     ??_main:
  1114                           
  1115                           ; 1 bytes @ 0x2D
  1116  004D                     	ds	5
  1117  0052                     main@centenas1:
  1118                           
  1119                           ; 1 bytes @ 0x32
  1120  0052                     	ds	1
  1121  0053                     main@decenas1:
  1122                           
  1123                           ; 1 bytes @ 0x33
  1124  0053                     	ds	1
  1125  0054                     main@unidades1:
  1126                           
  1127                           ; 1 bytes @ 0x34
  1128  0054                     	ds	1
  1129  0055                     main@centenas2:
  1130                           
  1131                           ; 1 bytes @ 0x35
  1132  0055                     	ds	1
  1133  0056                     main@decenas2:
  1134                           
  1135                           ; 1 bytes @ 0x36
  1136  0056                     	ds	1
  1137  0057                     main@unidades2:
  1138                           
  1139                           ; 1 bytes @ 0x37
  1140  0057                     	ds	1
  1141                           
  1142                           	psect	maintext
  1143  0390                     __pmaintext:	
  1144 ;;
  1145 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1146 ;;
  1147 ;; *************** function _main *****************
  1148 ;; Defined at:
  1149 ;;		line 118 in file "main_02.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  unidades2       1   55[BANK0 ] unsigned char 
  1154 ;;  decenas2        1   54[BANK0 ] unsigned char 
  1155 ;;  centenas2       1   53[BANK0 ] unsigned char 
  1156 ;;  unidades1       1   52[BANK0 ] unsigned char 
  1157 ;;  decenas1        1   51[BANK0 ] unsigned char 
  1158 ;;  centenas1       1   50[BANK0 ] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : B00/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       6       0       0       0
  1170 ;;      Temps:          0       5       0       0       0
  1171 ;;      Totals:         0      11       0       0       0
  1172 ;;Total ram usage:       11 bytes
  1173 ;; Hardware stack levels required when called:    5
  1174 ;; This function calls:
  1175 ;;		_Lcd_Clear
  1176 ;;		_Lcd_Init
  1177 ;;		_Lcd_Set_Cursor
  1178 ;;		_Lcd_Write_String
  1179 ;;		___flmul
  1180 ;;		___fltol
  1181 ;;		___xxtofl
  1182 ;;		_division1
  1183 ;;		_division2
  1184 ;;		_division3
  1185 ;;		_mensaje
  1186 ;;		_setup
  1187 ;;		_sprintf
  1188 ;; This function is called by:
  1189 ;;		Startup code after reset
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _main
  1195  0390                     _main:
  1196  0390                     l2910:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1199                           
  1200                           
  1201                           ;main_02.c: 119:     setup();
  1202  0390  120A  158A  230A  120A  118A  	fcall	_setup
  1203  0395                     l2912:
  1204                           
  1205                           ;main_02.c: 121:     Lcd_Init();
  1206  0395  120A  118A  27B3  120A  118A  	fcall	_Lcd_Init
  1207  039A                     l2914:
  1208                           
  1209                           ;main_02.c: 122:     Lcd_Clear();
  1210  039A  120A  158A  226D  120A  118A  	fcall	_Lcd_Clear
  1211  039F                     l2916:
  1212                           
  1213                           ;main_02.c: 127:     Lcd_Set_Cursor(1,1);
  1214  039F  01F7               	clrf	Lcd_Set_Cursor@b
  1215  03A0  0AF7               	incf	Lcd_Set_Cursor@b,f
  1216  03A1  3001               	movlw	1
  1217  03A2  120A  158A  254E  120A  118A  	fcall	_Lcd_Set_Cursor
  1218  03A7                     l2918:
  1219                           
  1220                           ;main_02.c: 128:     Lcd_Write_String("S_1:  S_2:  S_3:");
  1221  03A7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1222  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1223  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1224  03AA  00A0               	movwf	Lcd_Write_String@a
  1225  03AB  3080               	movlw	128
  1226  03AC  00A1               	movwf	Lcd_Write_String@a+1
  1227  03AD  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1228  03B2                     l110:	
  1229                           ;main_02.c: 130:     while(1){
  1230                           
  1231                           
  1232                           ;main_02.c: 131:     dato = voltaje1*0.0196;
  1233  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1234  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1235  03B4  085B               	movf	_voltaje1,w
  1236  03B5  00CD               	movwf	??_main
  1237  03B6  01CE               	clrf	??_main+1
  1238  03B7  01CF               	clrf	??_main+2
  1239  03B8  01D0               	clrf	??_main+3
  1240  03B9  0850               	movf	??_main+3,w
  1241  03BA  00F6               	movwf	___xxtofl@val+3
  1242  03BB  084F               	movf	??_main+2,w
  1243  03BC  00F5               	movwf	___xxtofl@val+2
  1244  03BD  084E               	movf	??_main+1,w
  1245  03BE  00F4               	movwf	___xxtofl@val+1
  1246  03BF  084D               	movf	??_main,w
  1247  03C0  00F3               	movwf	___xxtofl@val
  1248  03C1  3001               	movlw	1
  1249  03C2  120A  118A  26F7  120A  118A  	fcall	___xxtofl
  1250  03C7  0876               	movf	?___xxtofl+3,w
  1251  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1252  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1253  03CA  00B1               	movwf	___flmul@a+3
  1254  03CB  0875               	movf	?___xxtofl+2,w
  1255  03CC  00B0               	movwf	___flmul@a+2
  1256  03CD  0874               	movf	?___xxtofl+1,w
  1257  03CE  00AF               	movwf	___flmul@a+1
  1258  03CF  0873               	movf	?___xxtofl,w
  1259  03D0  00AE               	movwf	___flmul@a
  1260  03D1  303C               	movlw	60
  1261  03D2  00AD               	movwf	___flmul@b+3
  1262  03D3  30A0               	movlw	160
  1263  03D4  00AC               	movwf	___flmul@b+2
  1264  03D5  3090               	movlw	144
  1265  03D6  00AB               	movwf	___flmul@b+1
  1266  03D7  302E               	movlw	46
  1267  03D8  00AA               	movwf	___flmul@b
  1268  03D9  120A  118A  202F  120A  118A  	fcall	___flmul
  1269  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1270  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1271  03E0  082D               	movf	?___flmul+3,w
  1272  03E1  00C7               	movwf	___fltol@f1+3
  1273  03E2  082C               	movf	?___flmul+2,w
  1274  03E3  00C6               	movwf	___fltol@f1+2
  1275  03E4  082B               	movf	?___flmul+1,w
  1276  03E5  00C5               	movwf	___fltol@f1+1
  1277  03E6  082A               	movf	?___flmul,w
  1278  03E7  00C4               	movwf	___fltol@f1
  1279  03E8  120A  158A  26CF  120A  118A  	fcall	___fltol
  1280  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1281  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1282  03EF  0844               	movf	?___fltol,w
  1283  03F0  00D1               	movwf	??_main+4
  1284  03F1  0851               	movf	??_main+4,w
  1285  03F2  00D8               	movwf	_dato
  1286                           
  1287                           ;main_02.c: 132:     dato1 = voltaje2*0.0196;
  1288  03F3  085A               	movf	_voltaje2,w
  1289  03F4  00CD               	movwf	??_main
  1290  03F5  01CE               	clrf	??_main+1
  1291  03F6  01CF               	clrf	??_main+2
  1292  03F7  01D0               	clrf	??_main+3
  1293  03F8  0850               	movf	??_main+3,w
  1294  03F9  00F6               	movwf	___xxtofl@val+3
  1295  03FA  084F               	movf	??_main+2,w
  1296  03FB  00F5               	movwf	___xxtofl@val+2
  1297  03FC  084E               	movf	??_main+1,w
  1298  03FD  00F4               	movwf	___xxtofl@val+1
  1299  03FE  084D               	movf	??_main,w
  1300  03FF  00F3               	movwf	___xxtofl@val
  1301  0400  3001               	movlw	1
  1302  0401  120A  118A  26F7  120A  118A  	fcall	___xxtofl
  1303  0406  0876               	movf	?___xxtofl+3,w
  1304  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0409  00B1               	movwf	___flmul@a+3
  1307  040A  0875               	movf	?___xxtofl+2,w
  1308  040B  00B0               	movwf	___flmul@a+2
  1309  040C  0874               	movf	?___xxtofl+1,w
  1310  040D  00AF               	movwf	___flmul@a+1
  1311  040E  0873               	movf	?___xxtofl,w
  1312  040F  00AE               	movwf	___flmul@a
  1313  0410  303C               	movlw	60
  1314  0411  00AD               	movwf	___flmul@b+3
  1315  0412  30A0               	movlw	160
  1316  0413  00AC               	movwf	___flmul@b+2
  1317  0414  3090               	movlw	144
  1318  0415  00AB               	movwf	___flmul@b+1
  1319  0416  302E               	movlw	46
  1320  0417  00AA               	movwf	___flmul@b
  1321  0418  120A  118A  202F  120A  118A  	fcall	___flmul
  1322  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1323  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1324  041F  082D               	movf	?___flmul+3,w
  1325  0420  00C7               	movwf	___fltol@f1+3
  1326  0421  082C               	movf	?___flmul+2,w
  1327  0422  00C6               	movwf	___fltol@f1+2
  1328  0423  082B               	movf	?___flmul+1,w
  1329  0424  00C5               	movwf	___fltol@f1+1
  1330  0425  082A               	movf	?___flmul,w
  1331  0426  00C4               	movwf	___fltol@f1
  1332  0427  120A  158A  26CF  120A  118A  	fcall	___fltol
  1333  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1334  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  042E  0844               	movf	?___fltol,w
  1336  042F  00D1               	movwf	??_main+4
  1337  0430  0851               	movf	??_main+4,w
  1338  0431  00D9               	movwf	_dato1
  1339  0432                     l2920:
  1340                           
  1341                           ;main_02.c: 133:     sprintf(buffer, "%d", dato);
  1342  0432  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1343  0433  00CD               	movwf	??_main
  1344  0434  084D               	movf	??_main,w
  1345  0435  00B5               	movwf	sprintf@f
  1346  0436  0858               	movf	_dato,w
  1347  0437  00CE               	movwf	??_main+1
  1348  0438  01CF               	clrf	??_main+2
  1349  0439  084E               	movf	??_main+1,w
  1350  043A  00B6               	movwf	?_sprintf+1
  1351  043B  084F               	movf	??_main+2,w
  1352  043C  00B7               	movwf	?_sprintf+2
  1353  043D  30B4               	movlw	(low (_buffer| 0))& (0+255)
  1354  043E  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1355  0443                     l2922:
  1356                           
  1357                           ;main_02.c: 134:     sprintf(buffer1, "%d", dato1);
  1358  0443  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1359  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0446  00CD               	movwf	??_main
  1362  0447  084D               	movf	??_main,w
  1363  0448  00B5               	movwf	sprintf@f
  1364  0449  0859               	movf	_dato1,w
  1365  044A  00CE               	movwf	??_main+1
  1366  044B  01CF               	clrf	??_main+2
  1367  044C  084E               	movf	??_main+1,w
  1368  044D  00B6               	movwf	?_sprintf+1
  1369  044E  084F               	movf	??_main+2,w
  1370  044F  00B7               	movwf	?_sprintf+2
  1371  0450  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  1372  0451  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1373  0456                     l2924:
  1374                           
  1375                           ;main_02.c: 138:     char centenas1 = division1(dato);
  1376  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0458  0858               	movf	_dato,w
  1379  0459  120A  158A  244F  120A  118A  	fcall	_division1
  1380  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1381  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0460  00CD               	movwf	??_main
  1383  0461  084D               	movf	??_main,w
  1384  0462  00D2               	movwf	main@centenas1
  1385  0463                     l2926:
  1386                           
  1387                           ;main_02.c: 139:     char decenas1 = division2(dato);
  1388  0463  0858               	movf	_dato,w
  1389  0464  120A  158A  24A4  120A  118A  	fcall	_division2
  1390  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1391  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1392  046B  00CD               	movwf	??_main
  1393  046C  084D               	movf	??_main,w
  1394  046D  00D3               	movwf	main@decenas1
  1395  046E                     l2928:
  1396                           
  1397                           ;main_02.c: 140:     char unidades1 = division3(dato);
  1398  046E  0858               	movf	_dato,w
  1399  046F  120A  158A  24F9  120A  118A  	fcall	_division3
  1400  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0476  00CD               	movwf	??_main
  1403  0477  084D               	movf	??_main,w
  1404  0478  00D4               	movwf	main@unidades1
  1405  0479                     l2930:
  1406                           
  1407                           ;main_02.c: 142:     char centenas2 = division1(dato1);
  1408  0479  0859               	movf	_dato1,w
  1409  047A  120A  158A  244F  120A  118A  	fcall	_division1
  1410  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0481  00CD               	movwf	??_main
  1413  0482  084D               	movf	??_main,w
  1414  0483  00D5               	movwf	main@centenas2
  1415  0484                     l2932:
  1416                           
  1417                           ;main_02.c: 143:     char decenas2 = division2(dato1);
  1418  0484  0859               	movf	_dato1,w
  1419  0485  120A  158A  24A4  120A  118A  	fcall	_division2
  1420  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1421  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1422  048C  00CD               	movwf	??_main
  1423  048D  084D               	movf	??_main,w
  1424  048E  00D6               	movwf	main@decenas2
  1425  048F                     l2934:
  1426                           
  1427                           ;main_02.c: 144:     char unidades2 = division3(dato1);
  1428  048F  0859               	movf	_dato1,w
  1429  0490  120A  158A  24F9  120A  118A  	fcall	_division3
  1430  0495  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0496  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0497  00CD               	movwf	??_main
  1433  0498  084D               	movf	??_main,w
  1434  0499  00D7               	movwf	main@unidades2
  1435  049A                     l2936:
  1436                           
  1437                           ;main_02.c: 145:     sprintf(buffer2, "%d", centenas1);
  1438  049A  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1439  049B  00CD               	movwf	??_main
  1440  049C  084D               	movf	??_main,w
  1441  049D  00B5               	movwf	sprintf@f
  1442  049E  0852               	movf	main@centenas1,w
  1443  049F  00CE               	movwf	??_main+1
  1444  04A0  01CF               	clrf	??_main+2
  1445  04A1  084E               	movf	??_main+1,w
  1446  04A2  00B6               	movwf	?_sprintf+1
  1447  04A3  084F               	movf	??_main+2,w
  1448  04A4  00B7               	movwf	?_sprintf+2
  1449  04A5  3066               	movlw	(low (_buffer2| 0))& (0+255)
  1450  04A6  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1451  04AB                     l2938:
  1452                           
  1453                           ;main_02.c: 146:     sprintf(buffer3, "%d", decenas1);
  1454  04AB  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1455  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1456  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1457  04AE  00CD               	movwf	??_main
  1458  04AF  084D               	movf	??_main,w
  1459  04B0  00B5               	movwf	sprintf@f
  1460  04B1  0853               	movf	main@decenas1,w
  1461  04B2  00CE               	movwf	??_main+1
  1462  04B3  01CF               	clrf	??_main+2
  1463  04B4  084E               	movf	??_main+1,w
  1464  04B5  00B6               	movwf	?_sprintf+1
  1465  04B6  084F               	movf	??_main+2,w
  1466  04B7  00B7               	movwf	?_sprintf+2
  1467  04B8  3064               	movlw	(low (_buffer3| 0))& (0+255)
  1468  04B9  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1469  04BE                     l2940:
  1470                           
  1471                           ;main_02.c: 147:     sprintf(buffer4, "%d", unidades1);
  1472  04BE  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1473  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1474  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1475  04C1  00CD               	movwf	??_main
  1476  04C2  084D               	movf	??_main,w
  1477  04C3  00B5               	movwf	sprintf@f
  1478  04C4  0854               	movf	main@unidades1,w
  1479  04C5  00CE               	movwf	??_main+1
  1480  04C6  01CF               	clrf	??_main+2
  1481  04C7  084E               	movf	??_main+1,w
  1482  04C8  00B6               	movwf	?_sprintf+1
  1483  04C9  084F               	movf	??_main+2,w
  1484  04CA  00B7               	movwf	?_sprintf+2
  1485  04CB  3062               	movlw	(low (_buffer4| 0))& (0+255)
  1486  04CC  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1487  04D1                     l2942:
  1488                           
  1489                           ;main_02.c: 148:     sprintf(buffer5, "%d", centenas2);
  1490  04D1  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1491  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1492  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1493  04D4  00CD               	movwf	??_main
  1494  04D5  084D               	movf	??_main,w
  1495  04D6  00B5               	movwf	sprintf@f
  1496  04D7  0855               	movf	main@centenas2,w
  1497  04D8  00CE               	movwf	??_main+1
  1498  04D9  01CF               	clrf	??_main+2
  1499  04DA  084E               	movf	??_main+1,w
  1500  04DB  00B6               	movwf	?_sprintf+1
  1501  04DC  084F               	movf	??_main+2,w
  1502  04DD  00B7               	movwf	?_sprintf+2
  1503  04DE  3060               	movlw	(low (_buffer5| 0))& (0+255)
  1504  04DF  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1505  04E4                     l2944:
  1506                           
  1507                           ;main_02.c: 149:     sprintf(buffer6, "%d", decenas2);
  1508  04E4  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1509  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1510  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1511  04E7  00CD               	movwf	??_main
  1512  04E8  084D               	movf	??_main,w
  1513  04E9  00B5               	movwf	sprintf@f
  1514  04EA  0856               	movf	main@decenas2,w
  1515  04EB  00CE               	movwf	??_main+1
  1516  04EC  01CF               	clrf	??_main+2
  1517  04ED  084E               	movf	??_main+1,w
  1518  04EE  00B6               	movwf	?_sprintf+1
  1519  04EF  084F               	movf	??_main+2,w
  1520  04F0  00B7               	movwf	?_sprintf+2
  1521  04F1  305E               	movlw	(low (_buffer6| 0))& (0+255)
  1522  04F2  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1523  04F7                     l2946:
  1524                           
  1525                           ;main_02.c: 150:     sprintf(buffer7, "%d", unidades2);
  1526  04F7  3047               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1527  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1528  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1529  04FA  00CD               	movwf	??_main
  1530  04FB  084D               	movf	??_main,w
  1531  04FC  00B5               	movwf	sprintf@f
  1532  04FD  0857               	movf	main@unidades2,w
  1533  04FE  00CE               	movwf	??_main+1
  1534  04FF  01CF               	clrf	??_main+2
  1535  0500  084E               	movf	??_main+1,w
  1536  0501  00B6               	movwf	?_sprintf+1
  1537  0502  084F               	movf	??_main+2,w
  1538  0503  00B7               	movwf	?_sprintf+2
  1539  0504  305C               	movlw	(low (_buffer7| 0))& (0+255)
  1540  0505  120A  158A  22E7  120A  118A  	fcall	_sprintf
  1541  050A                     l2948:
  1542                           
  1543                           ;main_02.c: 153:     Lcd_Set_Cursor(2,1);
  1544  050A  01F7               	clrf	Lcd_Set_Cursor@b
  1545  050B  0AF7               	incf	Lcd_Set_Cursor@b,f
  1546  050C  3002               	movlw	2
  1547  050D  120A  158A  254E  120A  118A  	fcall	_Lcd_Set_Cursor
  1548  0512                     l2950:
  1549                           
  1550                           ;main_02.c: 154:     Lcd_Write_String(buffer4);
  1551  0512  3062               	movlw	(low (_buffer4| 0))& (0+255)
  1552  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0515  00A0               	movwf	Lcd_Write_String@a
  1555  0516  3000               	movlw	0
  1556  0517  00A1               	movwf	Lcd_Write_String@a+1
  1557  0518  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1558  051D                     l2952:
  1559                           
  1560                           ;main_02.c: 155:     Lcd_Write_String(".");
  1561  051D  304A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1562  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1563  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0520  00A0               	movwf	Lcd_Write_String@a
  1565  0521  3080               	movlw	128
  1566  0522  00A1               	movwf	Lcd_Write_String@a+1
  1567  0523  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1568  0528                     l2954:
  1569                           
  1570                           ;main_02.c: 156:     Lcd_Write_String(buffer3);
  1571  0528  3064               	movlw	(low (_buffer3| 0))& (0+255)
  1572  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1573  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1574  052B  00A0               	movwf	Lcd_Write_String@a
  1575  052C  3000               	movlw	0
  1576  052D  00A1               	movwf	Lcd_Write_String@a+1
  1577  052E  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1578  0533                     l2956:
  1579                           
  1580                           ;main_02.c: 157:     Lcd_Write_String(buffer2);
  1581  0533  3066               	movlw	(low (_buffer2| 0))& (0+255)
  1582  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0536  00A0               	movwf	Lcd_Write_String@a
  1585  0537  3000               	movlw	0
  1586  0538  00A1               	movwf	Lcd_Write_String@a+1
  1587  0539  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1588  053E                     l2958:
  1589                           
  1590                           ;main_02.c: 158:     Lcd_Write_String("   ");
  1591  053E  3040               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1592  053F  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0540  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0541  00A0               	movwf	Lcd_Write_String@a
  1595  0542  3080               	movlw	128
  1596  0543  00A1               	movwf	Lcd_Write_String@a+1
  1597  0544  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1598  0549                     l2960:
  1599                           
  1600                           ;main_02.c: 159:     Lcd_Write_String(buffer7);
  1601  0549  305C               	movlw	(low (_buffer7| 0))& (0+255)
  1602  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1603  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1604  054C  00A0               	movwf	Lcd_Write_String@a
  1605  054D  3000               	movlw	0
  1606  054E  00A1               	movwf	Lcd_Write_String@a+1
  1607  054F  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1608  0554                     l2962:
  1609                           
  1610                           ;main_02.c: 160:     Lcd_Write_String(".");
  1611  0554  304A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1612  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0557  00A0               	movwf	Lcd_Write_String@a
  1615  0558  3080               	movlw	128
  1616  0559  00A1               	movwf	Lcd_Write_String@a+1
  1617  055A  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1618  055F                     l2964:
  1619                           
  1620                           ;main_02.c: 161:     Lcd_Write_String(buffer6);
  1621  055F  305E               	movlw	(low (_buffer6| 0))& (0+255)
  1622  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0562  00A0               	movwf	Lcd_Write_String@a
  1625  0563  3000               	movlw	0
  1626  0564  00A1               	movwf	Lcd_Write_String@a+1
  1627  0565  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1628  056A                     l2966:
  1629                           
  1630                           ;main_02.c: 162:     Lcd_Write_String(buffer5);
  1631  056A  3060               	movlw	(low (_buffer5| 0))& (0+255)
  1632  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1633  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1634  056D  00A0               	movwf	Lcd_Write_String@a
  1635  056E  3000               	movlw	0
  1636  056F  00A1               	movwf	Lcd_Write_String@a+1
  1637  0570  120A  158A  23C3  120A  118A  	fcall	_Lcd_Write_String
  1638  0575                     l2968:
  1639                           
  1640                           ;main_02.c: 168:     if (ADCON0bits.GO == 0){
  1641  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0577  189F               	btfsc	31,1	;volatile
  1644  0578  2D7A               	goto	u3061
  1645  0579  2D7B               	goto	u3060
  1646  057A                     u3061:
  1647  057A  2D85               	goto	l2974
  1648  057B                     u3060:
  1649  057B                     l2970:
  1650                           
  1651                           ;main_02.c: 169:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1652  057B  3020               	movlw	32
  1653  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  057E  00CD               	movwf	??_main
  1656  057F                     u3077:
  1657  057F  0BCD               	decfsz	??_main,f
  1658  0580  2D7F               	goto	u3077
  1659  0581  0000               	nop
  1660  0582                     l2972:
  1661                           
  1662                           ;main_02.c: 170:             ADCON0bits.GO = 1;
  1663  0582  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0583  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0584  149F               	bsf	31,1	;volatile
  1666  0585                     l2974:
  1667                           
  1668                           ;main_02.c: 172:     mensaje();
  1669  0585  120A  158A  274B  120A  118A  	fcall	_mensaje
  1670  058A  2BB2               	goto	l110
  1671  058B  120A  118A  280C   	ljmp	start
  1672  058E                     __end_of_main:
  1673                           
  1674                           	psect	text1
  1675  0AE7                     __ptext1:	
  1676 ;; *************** function _sprintf *****************
  1677 ;; Defined at:
  1678 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  wh              1    wreg     PTR unsigned char 
  1681 ;;		 -> buffer7(2), buffer6(2), buffer5(2), buffer4(2), 
  1682 ;;		 -> buffer3(2), buffer2(2), buffer1(20), buffer(20), 
  1683 ;;  f               1   21[BANK0 ] PTR const unsigned char 
  1684 ;;		 -> STR_9(3), STR_8(3), STR_7(3), STR_6(3), 
  1685 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  wh              1   26[BANK0 ] PTR unsigned char 
  1688 ;;		 -> buffer7(2), buffer6(2), buffer5(2), buffer4(2), 
  1689 ;;		 -> buffer3(2), buffer2(2), buffer1(20), buffer(20), 
  1690 ;;  pb              2   27[BANK0 ] struct __prbuf
  1691 ;;  ap              1   25[BANK0 ] PTR void [1]
  1692 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   21[BANK0 ] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       3       0       0       0
  1703 ;;      Locals:         0       4       0       0       0
  1704 ;;      Temps:          0       1       0       0       0
  1705 ;;      Totals:         0       8       0       0       0
  1706 ;;Total ram usage:        8 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    3
  1709 ;; This function calls:
  1710 ;;		__doprnt
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _sprintf
  1718  0AE7                     _sprintf:
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1722                           ;sprintf@wh stored from wreg
  1723  0AE7  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0AE8  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0AE9  00BA               	movwf	sprintf@wh
  1726  0AEA                     l2774:
  1727  0AEA  083A               	movf	sprintf@wh,w
  1728  0AEB  00B8               	movwf	??_sprintf
  1729  0AEC  0838               	movf	??_sprintf,w
  1730  0AED  00BB               	movwf	sprintf@pb
  1731  0AEE                     l2776:
  1732  0AEE  01BC               	clrf	low ((sprintf@pb| 0+1))
  1733  0AEF                     l2778:
  1734  0AEF  3036               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1735  0AF0  00B8               	movwf	??_sprintf
  1736  0AF1  0838               	movf	??_sprintf,w
  1737  0AF2  00B9               	movwf	sprintf@ap
  1738  0AF3                     l2780:
  1739  0AF3  0835               	movf	sprintf@f,w
  1740  0AF4  00A8               	movwf	__doprnt@f
  1741  0AF5  3000               	movlw	0
  1742  0AF6  1D03               	btfss	3,2
  1743  0AF7  3080               	movlw	128
  1744  0AF8  00A9               	movwf	__doprnt@f+1
  1745  0AF9  3039               	movlw	(low (sprintf@ap| 0))& (0+255)
  1746  0AFA  00B8               	movwf	??_sprintf
  1747  0AFB  0838               	movf	??_sprintf,w
  1748  0AFC  00AA               	movwf	__doprnt@ap
  1749  0AFD  303B               	movlw	(low (sprintf@pb| 0))& (0+255)
  1750  0AFE  120A  118A  258E  120A  158A  	fcall	__doprnt
  1751  0B03                     l2782:
  1752  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0B05  083B               	movf	sprintf@pb,w
  1755  0B06  0084               	movwf	4
  1756  0B07  1383               	bcf	3,7	;select IRP bank0
  1757  0B08  0180               	clrf	0
  1758  0B09                     l804:
  1759  0B09  0008               	return
  1760  0B0A                     __end_of_sprintf:
  1761                           
  1762                           	psect	text2
  1763  0B0A                     __ptext2:	
  1764 ;; *************** function _setup *****************
  1765 ;; Defined at:
  1766 ;;		line 239 in file "main_02.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    2
  1787 ;; This function calls:
  1788 ;;		_config_ADC
  1789 ;;		_config_USART
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _setup
  1797  0B0A                     _setup:
  1798  0B0A                     l2086:	
  1799                           ;incstack = 0
  1800                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1801                           
  1802                           
  1803                           ;main_02.c: 241:     ANSEL = 0b00000011;
  1804  0B0A  3003               	movlw	3
  1805  0B0B  1683               	bsf	3,5	;RP0=1, select bank3
  1806  0B0C  1703               	bsf	3,6	;RP1=1, select bank3
  1807  0B0D  0088               	movwf	8	;volatile
  1808  0B0E                     l2088:
  1809                           
  1810                           ;main_02.c: 242:     TRISAbits.TRISA0 = 1;
  1811  0B0E  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0B0F  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0B10  1405               	bsf	5,0	;volatile
  1814  0B11                     l2090:
  1815                           
  1816                           ;main_02.c: 243:     TRISAbits.TRISA1 = 1;
  1817  0B11  1485               	bsf	5,1	;volatile
  1818  0B12                     l2092:
  1819                           
  1820                           ;main_02.c: 246:     TRISD = 0x00;
  1821  0B12  0188               	clrf	8	;volatile
  1822  0B13                     l2094:
  1823                           
  1824                           ;main_02.c: 247:     TRISE = 0x00;
  1825  0B13  0189               	clrf	9	;volatile
  1826  0B14                     l2096:
  1827                           
  1828                           ;main_02.c: 251:     OSCCONbits.IRCF0 = 0;
  1829  0B14  120F               	bcf	15,4	;volatile
  1830  0B15                     l2098:
  1831                           
  1832                           ;main_02.c: 252:     OSCCONbits.IRCF1 = 1;
  1833  0B15  168F               	bsf	15,5	;volatile
  1834  0B16                     l2100:
  1835                           
  1836                           ;main_02.c: 253:     OSCCONbits.IRCF2 = 1;
  1837  0B16  170F               	bsf	15,6	;volatile
  1838  0B17                     l2102:
  1839                           
  1840                           ;main_02.c: 254:     OSCCONbits.SCS = 1;
  1841  0B17  140F               	bsf	15,0	;volatile
  1842  0B18                     l2104:
  1843                           
  1844                           ;main_02.c: 257:     PIE1bits.ADIE = 1;
  1845  0B18  170C               	bsf	12,6	;volatile
  1846  0B19                     l2106:
  1847                           
  1848                           ;main_02.c: 258:     PIR1bits.ADIF = 0;
  1849  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0B1B  130C               	bcf	12,6	;volatile
  1852  0B1C                     l2108:
  1853                           
  1854                           ;main_02.c: 259:     INTCONbits.GIE = 1;
  1855  0B1C  178B               	bsf	11,7	;volatile
  1856  0B1D                     l2110:
  1857                           
  1858                           ;main_02.c: 260:     INTCONbits.PEIE = 1;
  1859  0B1D  170B               	bsf	11,6	;volatile
  1860  0B1E                     l2112:
  1861                           
  1862                           ;main_02.c: 263:     PORTA = 0x00;
  1863  0B1E  0185               	clrf	5	;volatile
  1864  0B1F                     l2114:
  1865                           
  1866                           ;main_02.c: 264:     PORTB = 0x00;
  1867  0B1F  0186               	clrf	6	;volatile
  1868  0B20                     l2116:
  1869                           
  1870                           ;main_02.c: 265:     PORTC = 0x00;
  1871  0B20  0187               	clrf	7	;volatile
  1872  0B21                     l2118:
  1873                           
  1874                           ;main_02.c: 266:     PORTD = 0x00;
  1875  0B21  0188               	clrf	8	;volatile
  1876  0B22                     l2120:
  1877                           
  1878                           ;main_02.c: 267:     PORTE = 0x00;
  1879  0B22  0189               	clrf	9	;volatile
  1880  0B23                     l2122:
  1881                           
  1882                           ;main_02.c: 270:     config_USART();
  1883  0B23  120A  158A  22AE  120A  158A  	fcall	_config_USART
  1884  0B28                     l2124:
  1885                           
  1886                           ;main_02.c: 272:     config_ADC(1);
  1887  0B28  3001               	movlw	1
  1888  0B29  120A  158A  2601  120A  158A  	fcall	_config_ADC
  1889  0B2E                     l141:
  1890  0B2E  0008               	return
  1891  0B2F                     __end_of_setup:
  1892                           
  1893                           	psect	text3
  1894  0AAE                     __ptext3:	
  1895 ;; *************** function _config_USART *****************
  1896 ;; Defined at:
  1897 ;;		line 11 in file "config_USART.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0
  1914 ;;      Totals:         0       0       0       0       0
  1915 ;;Total ram usage:        0 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_setup
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _config_USART
  1927  0AAE                     _config_USART:
  1928  0AAE                     l1864:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _config_USART: [wreg+status,2]
  1931                           
  1932                           
  1933                           ;config_USART.c: 13:     SPBRG = 103;
  1934  0AAE  3067               	movlw	103
  1935  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0AB1  0099               	movwf	25	;volatile
  1938  0AB2                     l1866:
  1939                           
  1940                           ;config_USART.c: 14:     SPBRGH = 0;
  1941  0AB2  019A               	clrf	26	;volatile
  1942  0AB3                     l1868:
  1943                           
  1944                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1945  0AB3  1683               	bsf	3,5	;RP0=1, select bank3
  1946  0AB4  1703               	bsf	3,6	;RP1=1, select bank3
  1947  0AB5  1587               	bsf	7,3	;volatile
  1948  0AB6                     l1870:
  1949                           
  1950                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1951  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0AB8  1518               	bsf	24,2	;volatile
  1954  0AB9                     l1872:
  1955                           
  1956                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1957  0AB9  1218               	bcf	24,4	;volatile
  1958  0ABA                     l1874:
  1959                           
  1960                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1961  0ABA  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0ABB  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0ABC  1798               	bsf	24,7	;volatile
  1964  0ABD                     l1876:
  1965                           
  1966                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1967  0ABD  1618               	bsf	24,4	;volatile
  1968  0ABE                     l1878:
  1969                           
  1970                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1971  0ABE  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0ABF  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0AC0  1318               	bcf	24,6	;volatile
  1974  0AC1                     l1880:
  1975                           
  1976                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1977  0AC1  1698               	bsf	24,5	;volatile
  1978  0AC2                     l1882:
  1979                           
  1980                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1981  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0AC4  1318               	bcf	24,6	;volatile
  1984  0AC5                     l1884:
  1985                           
  1986                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1987  0AC5  178B               	bsf	11,7	;volatile
  1988  0AC6                     l1886:
  1989                           
  1990                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1991  0AC6  170B               	bsf	11,6	;volatile
  1992  0AC7                     l1888:
  1993                           
  1994                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1995  0AC7  120C               	bcf	12,4	;volatile
  1996  0AC8                     l1890:
  1997                           
  1998                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1999  0AC8  128C               	bcf	12,5	;volatile
  2000  0AC9                     l173:
  2001  0AC9  0008               	return
  2002  0ACA                     __end_of_config_USART:
  2003                           
  2004                           	psect	text4
  2005  0E01                     __ptext4:	
  2006 ;; *************** function _config_ADC *****************
  2007 ;; Defined at:
  2008 ;;		line 15 in file "config_ADC.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  frec            1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  frec            1    5[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0
  2024 ;;      Temps:          2       0       0       0       0
  2025 ;;      Totals:         3       0       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_setup
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _config_ADC
  2038  0E01                     _config_ADC:
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  2042                           ;config_ADC@frec stored from wreg
  2043  0E01  00F5               	movwf	config_ADC@frec
  2044  0E02                     l1894:
  2045                           
  2046                           ;config_ADC.c: 16:     switch(frec){
  2047  0E02  2E4F               	goto	l1962
  2048  0E03                     l1896:
  2049                           
  2050                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  2051  0E03  30C3               	movlw	-61
  2052  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0E06  059F               	andwf	31,f	;volatile
  2055  0E07                     l1898:
  2056                           
  2057                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2058  0E07  3021               	movlw	33
  2059  0E08  00F3               	movwf	??_config_ADC
  2060  0E09                     u3087:
  2061  0E09  0BF3               	decfsz	??_config_ADC,f
  2062  0E0A  2E09               	goto	u3087
  2063  0E0B                     l1900:
  2064                           
  2065                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  2066  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0E0D  131F               	bcf	31,6	;volatile
  2069  0E0E                     l1902:
  2070                           
  2071                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  2072  0E0E  139F               	bcf	31,7	;volatile
  2073  0E0F                     l1904:
  2074                           
  2075                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  2076  0E0F  141F               	bsf	31,0	;volatile
  2077  0E10                     l1906:
  2078                           
  2079                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  2080  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0E12  139F               	bcf	31,7	;volatile
  2083  0E13                     l1908:
  2084                           
  2085                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  2086  0E13  129F               	bcf	31,5	;volatile
  2087  0E14                     l1910:
  2088                           
  2089                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  2090  0E14  121F               	bcf	31,4	;volatile
  2091                           
  2092                           ;config_ADC.c: 27:             break;
  2093  0E15  2E65               	goto	l156
  2094  0E16                     l1912:
  2095                           
  2096                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  2097  0E16  30C3               	movlw	-61
  2098  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0E19  059F               	andwf	31,f	;volatile
  2101  0E1A                     l1914:
  2102                           
  2103                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2104  0E1A  3021               	movlw	33
  2105  0E1B  00F3               	movwf	??_config_ADC
  2106  0E1C                     u3097:
  2107  0E1C  0BF3               	decfsz	??_config_ADC,f
  2108  0E1D  2E1C               	goto	u3097
  2109  0E1E                     l1916:
  2110                           
  2111                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  2112  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0E20  171F               	bsf	31,6	;volatile
  2115  0E21                     l1918:
  2116                           
  2117                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  2118  0E21  139F               	bcf	31,7	;volatile
  2119  0E22                     l1920:
  2120                           
  2121                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  2122  0E22  141F               	bsf	31,0	;volatile
  2123  0E23                     l1922:
  2124                           
  2125                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  2126  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  2127  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  2128  0E25  139F               	bcf	31,7	;volatile
  2129  0E26                     l1924:
  2130                           
  2131                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  2132  0E26  129F               	bcf	31,5	;volatile
  2133  0E27                     l1926:
  2134                           
  2135                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  2136  0E27  121F               	bcf	31,4	;volatile
  2137                           
  2138                           ;config_ADC.c: 38:             break;
  2139  0E28  2E65               	goto	l156
  2140  0E29                     l1928:
  2141                           
  2142                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  2143  0E29  30C3               	movlw	-61
  2144  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0E2C  059F               	andwf	31,f	;volatile
  2147  0E2D                     l1930:
  2148                           
  2149                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2150  0E2D  3021               	movlw	33
  2151  0E2E  00F3               	movwf	??_config_ADC
  2152  0E2F                     u3107:
  2153  0E2F  0BF3               	decfsz	??_config_ADC,f
  2154  0E30  2E2F               	goto	u3107
  2155  0E31                     l1932:
  2156                           
  2157                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  2158  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0E33  131F               	bcf	31,6	;volatile
  2161  0E34                     l1934:
  2162                           
  2163                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  2164  0E34  179F               	bsf	31,7	;volatile
  2165  0E35                     l1936:
  2166                           
  2167                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  2168  0E35  141F               	bsf	31,0	;volatile
  2169  0E36                     l1938:
  2170                           
  2171                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  2172  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0E38  139F               	bcf	31,7	;volatile
  2175  0E39                     l1940:
  2176                           
  2177                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  2178  0E39  129F               	bcf	31,5	;volatile
  2179  0E3A                     l1942:
  2180                           
  2181                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  2182  0E3A  121F               	bcf	31,4	;volatile
  2183                           
  2184                           ;config_ADC.c: 49:             break;
  2185  0E3B  2E65               	goto	l156
  2186  0E3C                     l1944:
  2187                           
  2188                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  2189  0E3C  30C3               	movlw	-61
  2190  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0E3F  059F               	andwf	31,f	;volatile
  2193  0E40                     l1946:
  2194                           
  2195                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2196  0E40  3021               	movlw	33
  2197  0E41  00F3               	movwf	??_config_ADC
  2198  0E42                     u3117:
  2199  0E42  0BF3               	decfsz	??_config_ADC,f
  2200  0E43  2E42               	goto	u3117
  2201  0E44                     l1948:
  2202                           
  2203                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  2204  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0E46  171F               	bsf	31,6	;volatile
  2207  0E47                     l1950:
  2208                           
  2209                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  2210  0E47  179F               	bsf	31,7	;volatile
  2211  0E48                     l1952:
  2212                           
  2213                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  2214  0E48  141F               	bsf	31,0	;volatile
  2215  0E49                     l1954:
  2216                           
  2217                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  2218  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0E4B  139F               	bcf	31,7	;volatile
  2221  0E4C                     l1956:
  2222                           
  2223                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  2224  0E4C  129F               	bcf	31,5	;volatile
  2225  0E4D                     l1958:
  2226                           
  2227                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  2228  0E4D  121F               	bcf	31,4	;volatile
  2229                           
  2230                           ;config_ADC.c: 60:             break;
  2231  0E4E  2E65               	goto	l156
  2232  0E4F                     l1962:
  2233  0E4F  0875               	movf	config_ADC@frec,w
  2234  0E50  00F3               	movwf	??_config_ADC
  2235  0E51  01F4               	clrf	??_config_ADC+1
  2236                           
  2237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 1, Range of values is 0 to 0
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte            4     3 (average)
  2243                           ; direct_byte           11     8 (fixed)
  2244                           ; jumptable            260     6 (fixed)
  2245                           ;	Chosen strategy is simple_byte
  2246  0E52  0874               	movf	??_config_ADC+1,w
  2247  0E53  3A00               	xorlw	0	; case 0
  2248  0E54  1903               	skipnz
  2249  0E55  2E57               	goto	l3016
  2250  0E56  2E65               	goto	l156
  2251  0E57                     l3016:
  2252                           
  2253                           ; Switch size 1, requested type "simple"
  2254                           ; Number of cases is 4, Range of values is 0 to 3
  2255                           ; switch strategies available:
  2256                           ; Name         Instructions Cycles
  2257                           ; simple_byte           13     7 (average)
  2258                           ; direct_byte           20     8 (fixed)
  2259                           ; jumptable            260     6 (fixed)
  2260                           ;	Chosen strategy is simple_byte
  2261  0E57  0873               	movf	??_config_ADC,w
  2262  0E58  3A00               	xorlw	0	; case 0
  2263  0E59  1903               	skipnz
  2264  0E5A  2E03               	goto	l1896
  2265  0E5B  3A01               	xorlw	1	; case 1
  2266  0E5C  1903               	skipnz
  2267  0E5D  2E16               	goto	l1912
  2268  0E5E  3A03               	xorlw	3	; case 2
  2269  0E5F  1903               	skipnz
  2270  0E60  2E29               	goto	l1928
  2271  0E61  3A01               	xorlw	1	; case 3
  2272  0E62  1903               	skipnz
  2273  0E63  2E3C               	goto	l1944
  2274  0E64  2E65               	goto	l156
  2275  0E65                     l156:
  2276  0E65  0008               	return
  2277  0E66                     __end_of_config_ADC:
  2278                           
  2279                           	psect	text5
  2280  0F4B                     __ptext5:	
  2281 ;; *************** function _mensaje *****************
  2282 ;; Defined at:
  2283 ;;		line 211 in file "main_02.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       0       0       0       0
  2299 ;;      Temps:          0       3       0       0       0
  2300 ;;      Totals:         0       3       0       0       0
  2301 ;;Total ram usage:        3 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    4
  2304 ;; This function calls:
  2305 ;;		_printf
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _mensaje
  2313  0F4B                     _mensaje:
  2314  0F4B                     l2804:	
  2315                           ;incstack = 0
  2316                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2317                           
  2318                           
  2319                           ;main_02.c: 212:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2320  0F4B  3003               	movlw	3
  2321  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0F4E  00BD               	movwf	??_mensaje+2
  2324  0F4F  308A               	movlw	138
  2325  0F50  00BC               	movwf	??_mensaje+1
  2326  0F51  3055               	movlw	85
  2327  0F52  00BB               	movwf	??_mensaje
  2328  0F53                     u3127:
  2329  0F53  0BBB               	decfsz	??_mensaje,f
  2330  0F54  2F53               	goto	u3127
  2331  0F55  0BBC               	decfsz	??_mensaje+1,f
  2332  0F56  2F53               	goto	u3127
  2333  0F57  0BBD               	decfsz	??_mensaje+2,f
  2334  0F58  2F53               	goto	u3127
  2335  0F59                     l2806:
  2336                           
  2337                           ;main_02.c: 213:     printf("\rVoltaje1: ");
  2338  0F59  3029               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2339  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2341  0F5C  00B5               	movwf	printf@f
  2342  0F5D  3080               	movlw	128
  2343  0F5E  00B6               	movwf	printf@f+1
  2344  0F5F  120A  158A  2294  120A  158A  	fcall	_printf
  2345  0F64                     l2808:
  2346                           
  2347                           ;main_02.c: 214:     printf(buffer4);
  2348  0F64  3062               	movlw	(low (_buffer4| 0))& (0+255)
  2349  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0F67  00B5               	movwf	printf@f
  2352  0F68  3000               	movlw	0
  2353  0F69  00B6               	movwf	printf@f+1
  2354  0F6A  120A  158A  2294  120A  158A  	fcall	_printf
  2355  0F6F                     l2810:
  2356                           
  2357                           ;main_02.c: 215:     printf(".");
  2358  0F6F  304A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2359  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0F72  00B5               	movwf	printf@f
  2362  0F73  3080               	movlw	128
  2363  0F74  00B6               	movwf	printf@f+1
  2364  0F75  120A  158A  2294  120A  158A  	fcall	_printf
  2365  0F7A                     l2812:
  2366                           
  2367                           ;main_02.c: 216:     printf(buffer3);
  2368  0F7A  3064               	movlw	(low (_buffer3| 0))& (0+255)
  2369  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0F7D  00B5               	movwf	printf@f
  2372  0F7E  3000               	movlw	0
  2373  0F7F  00B6               	movwf	printf@f+1
  2374  0F80  120A  158A  2294  120A  158A  	fcall	_printf
  2375  0F85                     l2814:
  2376                           
  2377                           ;main_02.c: 217:     printf(buffer2);
  2378  0F85  3066               	movlw	(low (_buffer2| 0))& (0+255)
  2379  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0F88  00B5               	movwf	printf@f
  2382  0F89  3000               	movlw	0
  2383  0F8A  00B6               	movwf	printf@f+1
  2384  0F8B  120A  158A  2294  120A  158A  	fcall	_printf
  2385  0F90                     l2816:
  2386                           
  2387                           ;main_02.c: 218:     printf("\r\r");
  2388  0F90  3044               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2389  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0F93  00B5               	movwf	printf@f
  2392  0F94  3080               	movlw	128
  2393  0F95  00B6               	movwf	printf@f+1
  2394  0F96  120A  158A  2294  120A  158A  	fcall	_printf
  2395                           
  2396                           ;main_02.c: 219:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2397  0F9B  3003               	movlw	3
  2398  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0F9E  00BD               	movwf	??_mensaje+2
  2401  0F9F  308A               	movlw	138
  2402  0FA0  00BC               	movwf	??_mensaje+1
  2403  0FA1  3055               	movlw	85
  2404  0FA2  00BB               	movwf	??_mensaje
  2405  0FA3                     u3137:
  2406  0FA3  0BBB               	decfsz	??_mensaje,f
  2407  0FA4  2FA3               	goto	u3137
  2408  0FA5  0BBC               	decfsz	??_mensaje+1,f
  2409  0FA6  2FA3               	goto	u3137
  2410  0FA7  0BBD               	decfsz	??_mensaje+2,f
  2411  0FA8  2FA3               	goto	u3137
  2412  0FA9                     l2818:
  2413                           
  2414                           ;main_02.c: 220:     printf("Voltaje2: ");
  2415  0FA9  3035               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2416  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0FAC  00B5               	movwf	printf@f
  2419  0FAD  3080               	movlw	128
  2420  0FAE  00B6               	movwf	printf@f+1
  2421  0FAF  120A  158A  2294  120A  158A  	fcall	_printf
  2422  0FB4                     l2820:
  2423                           
  2424                           ;main_02.c: 221:     printf(buffer7);
  2425  0FB4  305C               	movlw	(low (_buffer7| 0))& (0+255)
  2426  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0FB7  00B5               	movwf	printf@f
  2429  0FB8  3000               	movlw	0
  2430  0FB9  00B6               	movwf	printf@f+1
  2431  0FBA  120A  158A  2294  120A  158A  	fcall	_printf
  2432  0FBF                     l2822:
  2433                           
  2434                           ;main_02.c: 222:     printf(".");
  2435  0FBF  304A               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2436  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0FC2  00B5               	movwf	printf@f
  2439  0FC3  3080               	movlw	128
  2440  0FC4  00B6               	movwf	printf@f+1
  2441  0FC5  120A  158A  2294  120A  158A  	fcall	_printf
  2442  0FCA                     l2824:
  2443                           
  2444                           ;main_02.c: 223:     printf(buffer6);
  2445  0FCA  305E               	movlw	(low (_buffer6| 0))& (0+255)
  2446  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0FCD  00B5               	movwf	printf@f
  2449  0FCE  3000               	movlw	0
  2450  0FCF  00B6               	movwf	printf@f+1
  2451  0FD0  120A  158A  2294  120A  158A  	fcall	_printf
  2452  0FD5                     l2826:
  2453                           
  2454                           ;main_02.c: 224:     printf(buffer5);
  2455  0FD5  3060               	movlw	(low (_buffer5| 0))& (0+255)
  2456  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0FD8  00B5               	movwf	printf@f
  2459  0FD9  3000               	movlw	0
  2460  0FDA  00B6               	movwf	printf@f+1
  2461  0FDB  120A  158A  2294  120A  158A  	fcall	_printf
  2462  0FE0                     l2828:
  2463                           
  2464                           ;main_02.c: 225:     printf("\r-----------");
  2465  0FE0  301C               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2466  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0FE3  00B5               	movwf	printf@f
  2469  0FE4  3080               	movlw	128
  2470  0FE5  00B6               	movwf	printf@f+1
  2471  0FE6  120A  158A  2294  120A  158A  	fcall	_printf
  2472                           
  2473                           ;main_02.c: 226:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2474  0FEB  3003               	movlw	3
  2475  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0FEE  00BD               	movwf	??_mensaje+2
  2478  0FEF  308A               	movlw	138
  2479  0FF0  00BC               	movwf	??_mensaje+1
  2480  0FF1  3055               	movlw	85
  2481  0FF2  00BB               	movwf	??_mensaje
  2482  0FF3                     u3147:
  2483  0FF3  0BBB               	decfsz	??_mensaje,f
  2484  0FF4  2FF3               	goto	u3147
  2485  0FF5  0BBC               	decfsz	??_mensaje+1,f
  2486  0FF6  2FF3               	goto	u3147
  2487  0FF7  0BBD               	decfsz	??_mensaje+2,f
  2488  0FF8  2FF3               	goto	u3147
  2489  0FF9                     l129:	
  2490                           ;main_02.c: 227:     while (RCIF == 0);
  2491                           
  2492  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0FFB  1E8C               	btfss	12,5	;volatile
  2495  0FFC  2FFE               	goto	u2811
  2496  0FFD  2FFF               	goto	u2810
  2497  0FFE                     u2811:
  2498  0FFE  2FF9               	goto	l129
  2499  0FFF                     u2810:
  2500  0FFF                     l132:
  2501  0FFF  0008               	return
  2502  1000                     __end_of_mensaje:
  2503                           
  2504                           	psect	text6
  2505  0A94                     __ptext6:	
  2506 ;; *************** function _printf *****************
  2507 ;; Defined at:
  2508 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  f               2   21[BANK0 ] PTR const unsigned char 
  2511 ;;		 -> STR_18(13), STR_17(2), STR_16(11), STR_15(3), 
  2512 ;;		 -> STR_14(2), STR_13(12), buffer7(2), buffer6(2), 
  2513 ;;		 -> buffer5(2), buffer4(2), buffer3(2), buffer2(2), 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  pb              2   25[BANK0 ] struct __prbuf
  2516 ;;  ap              1   24[BANK0 ] PTR void [1]
  2517 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  2   21[BANK0 ] int 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       2       0       0       0
  2528 ;;      Locals:         0       3       0       0       0
  2529 ;;      Temps:          0       1       0       0       0
  2530 ;;      Totals:         0       6       0       0       0
  2531 ;;Total ram usage:        6 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    3
  2534 ;; This function calls:
  2535 ;;		__doprnt
  2536 ;; This function is called by:
  2537 ;;		_mensaje
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _printf
  2543  0A94                     _printf:
  2544  0A94                     l2698:	
  2545                           ;incstack = 0
  2546                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2547                           
  2548  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0A96  01B9               	clrf	printf@pb
  2551  0A97                     l2700:
  2552  0A97  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2553  0A98  00B7               	movwf	??_printf
  2554  0A99  0837               	movf	??_printf,w
  2555  0A9A  00BA               	movwf	low ((printf@pb| 0+1))
  2556  0A9B                     l2702:
  2557  0A9B  3037               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2558  0A9C  00B7               	movwf	??_printf
  2559  0A9D  0837               	movf	??_printf,w
  2560  0A9E  00B8               	movwf	printf@ap
  2561  0A9F                     l2704:
  2562                           
  2563                           ;	Return value of _printf is never used
  2564  0A9F  0835               	movf	printf@f,w
  2565  0AA0  00A8               	movwf	__doprnt@f
  2566  0AA1  0836               	movf	printf@f+1,w
  2567  0AA2  00A9               	movwf	__doprnt@f+1
  2568  0AA3  3038               	movlw	(low (printf@ap| 0))& (0+255)
  2569  0AA4  00B7               	movwf	??_printf
  2570  0AA5  0837               	movf	??_printf,w
  2571  0AA6  00AA               	movwf	__doprnt@ap
  2572  0AA7  3039               	movlw	(low (printf@pb| 0))& (0+255)
  2573  0AA8  120A  118A  258E  120A  158A  	fcall	__doprnt
  2574  0AAD                     l755:
  2575  0AAD  0008               	return
  2576  0AAE                     __end_of_printf:
  2577                           
  2578                           	psect	text7
  2579  058E                     __ptext7:	
  2580 ;; *************** function __doprnt *****************
  2581 ;; Defined at:
  2582 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  pb              1    wreg     PTR struct __prbuf
  2585 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2586 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  2587 ;;		 -> STR_18(13), STR_17(2), STR_16(11), STR_15(3), 
  2588 ;;		 -> STR_14(2), STR_13(12), STR_9(3), buffer7(2), 
  2589 ;;		 -> STR_8(3), buffer6(2), STR_7(3), buffer5(2), 
  2590 ;;		 -> STR_6(3), buffer4(2), STR_5(3), buffer3(2), 
  2591 ;;		 -> STR_4(3), buffer2(2), STR_3(3), STR_2(3), 
  2592 ;;  ap              1   10[BANK0 ] PTR PTR void 
  2593 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  pb              1   20[BANK0 ] PTR struct __prbuf
  2596 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2597 ;;  tmpval          4    0        struct .
  2598 ;;  val             2   17[BANK0 ] unsigned int 
  2599 ;;  cp              2    0        PTR const unsigned char 
  2600 ;;  len             2    0        unsigned int 
  2601 ;;  c               1   19[BANK0 ] unsigned char 
  2602 ;;  prec            1   16[BANK0 ] char 
  2603 ;;  flag            1   15[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2    8[BANK0 ] int 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2613 ;;      Params:         0       3       0       0       0
  2614 ;;      Locals:         0       6       0       0       0
  2615 ;;      Temps:          0       4       0       0       0
  2616 ;;      Totals:         0      13       0       0       0
  2617 ;;Total ram usage:       13 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    2
  2620 ;; This function calls:
  2621 ;;		Absolute function
  2622 ;;		___lwdiv
  2623 ;;		___lwmod
  2624 ;;		_putch
  2625 ;; This function is called by:
  2626 ;;		_printf
  2627 ;;		_sprintf
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function __doprnt
  2633  058E                     __doprnt:
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2637                           ;__doprnt@pb stored from wreg
  2638  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2639  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2640  0590  00B4               	movwf	__doprnt@pb
  2641  0591                     l2618:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2644  0591  2EDA               	goto	l2688
  2645  0592                     l2620:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2648  0592  3025               	movlw	37
  2649  0593  0633               	xorwf	__doprnt@c,w
  2650  0594  1903               	btfsc	3,2
  2651  0595  2D97               	goto	u2541
  2652  0596  2D98               	goto	u2540
  2653  0597                     u2541:
  2654  0597  2DBE               	goto	l2630
  2655  0598                     u2540:
  2656  0598                     l2622:
  2657  0598  0A34               	incf	__doprnt@pb,w
  2658  0599  0084               	movwf	4
  2659  059A  1383               	bcf	3,7	;select IRP bank0
  2660  059B  0800               	movf	0,w
  2661  059C  1903               	btfsc	3,2
  2662  059D  2D9F               	goto	u2551
  2663  059E  2DA0               	goto	u2550
  2664  059F                     u2551:
  2665  059F  2DAF               	goto	l2626
  2666  05A0                     u2550:
  2667  05A0                     l2624:
  2668  05A0  0833               	movf	__doprnt@c,w
  2669  05A1  00AB               	movwf	??__doprnt
  2670  05A2  082B               	movf	??__doprnt,w
  2671  05A3  00F3               	movwf	putch@dato
  2672  05A4  0A34               	incf	__doprnt@pb,w
  2673  05A5  0084               	movwf	4
  2674  05A6  0800               	movf	0,w
  2675  05A7  120A  118A  2026  120A  118A  	fcall	fptable
  2676  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2677  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2678  05AE  2D91               	goto	l2618
  2679  05AF                     l2626:
  2680  05AF  0833               	movf	__doprnt@c,w
  2681  05B0  00AB               	movwf	??__doprnt
  2682  05B1  0834               	movf	__doprnt@pb,w
  2683  05B2  0084               	movwf	4
  2684  05B3  0800               	movf	0,w
  2685  05B4  0084               	movwf	4
  2686  05B5  082B               	movf	??__doprnt,w
  2687  05B6  0080               	movwf	0
  2688  05B7                     l2628:
  2689  05B7  3001               	movlw	1
  2690  05B8  00AB               	movwf	??__doprnt
  2691  05B9  0834               	movf	__doprnt@pb,w
  2692  05BA  0084               	movwf	4
  2693  05BB  082B               	movf	??__doprnt,w
  2694  05BC  0780               	addwf	0,f
  2695  05BD  2D91               	goto	l2618
  2696  05BE                     l2630:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2699  05BE  01AF               	clrf	__doprnt@flag
  2700                           
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2702  05BF  2DE6               	goto	l2642
  2703  05C0                     l2632:
  2704  05C0  0A34               	incf	__doprnt@pb,w
  2705  05C1  0084               	movwf	4
  2706  05C2  1383               	bcf	3,7	;select IRP bank0
  2707  05C3  0800               	movf	0,w
  2708  05C4  1903               	btfsc	3,2
  2709  05C5  2DC7               	goto	u2561
  2710  05C6  2DC8               	goto	u2560
  2711  05C7                     u2561:
  2712  05C7  2DD7               	goto	l2636
  2713  05C8                     u2560:
  2714  05C8                     l2634:
  2715  05C8  0833               	movf	__doprnt@c,w
  2716  05C9  00AB               	movwf	??__doprnt
  2717  05CA  082B               	movf	??__doprnt,w
  2718  05CB  00F3               	movwf	putch@dato
  2719  05CC  0A34               	incf	__doprnt@pb,w
  2720  05CD  0084               	movwf	4
  2721  05CE  0800               	movf	0,w
  2722  05CF  120A  118A  2026  120A  118A  	fcall	fptable
  2723  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  2724  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  2725  05D6  2D91               	goto	l2618
  2726  05D7                     l2636:
  2727  05D7  0833               	movf	__doprnt@c,w
  2728  05D8  00AB               	movwf	??__doprnt
  2729  05D9  0834               	movf	__doprnt@pb,w
  2730  05DA  0084               	movwf	4
  2731  05DB  0800               	movf	0,w
  2732  05DC  0084               	movwf	4
  2733  05DD  082B               	movf	??__doprnt,w
  2734  05DE  0080               	movwf	0
  2735  05DF                     l2638:
  2736  05DF  3001               	movlw	1
  2737  05E0  00AB               	movwf	??__doprnt
  2738  05E1  0834               	movf	__doprnt@pb,w
  2739  05E2  0084               	movwf	4
  2740  05E3  082B               	movf	??__doprnt,w
  2741  05E4  0780               	addwf	0,f
  2742  05E5  2D91               	goto	l2618
  2743  05E6                     l2642:
  2744  05E6  0829               	movf	__doprnt@f+1,w
  2745  05E7  00AC               	movwf	??__doprnt+1
  2746  05E8  0828               	movf	__doprnt@f,w
  2747  05E9  00AB               	movwf	??__doprnt
  2748  05EA  0AA8               	incf	__doprnt@f,f
  2749  05EB  1903               	skipnz
  2750  05EC  0AA9               	incf	__doprnt@f+1,f
  2751  05ED  082C               	movf	??__doprnt+1,w
  2752  05EE  00FF               	movwf	btemp+1
  2753  05EF  082B               	movf	??__doprnt,w
  2754  05F0  0084               	movwf	4
  2755  05F1  120A  158A  2000  120A  118A  	fcall	stringtab
  2756  05F6  00B3               	movwf	__doprnt@c
  2757  05F7  00AD               	movwf	??__doprnt+2
  2758  05F8  01AE               	clrf	??__doprnt+3
  2759                           
  2760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2761                           ; Switch size 1, requested type "simple"
  2762                           ; Number of cases is 1, Range of values is 0 to 0
  2763                           ; switch strategies available:
  2764                           ; Name         Instructions Cycles
  2765                           ; simple_byte            4     3 (average)
  2766                           ; direct_byte           11     8 (fixed)
  2767                           ; jumptable            260     6 (fixed)
  2768                           ;	Chosen strategy is simple_byte
  2769  05F9  082E               	movf	??__doprnt+3,w
  2770  05FA  3A00               	xorlw	0	; case 0
  2771  05FB  1903               	skipnz
  2772  05FC  2DFE               	goto	l3018
  2773  05FD  2DC0               	goto	l2632
  2774  05FE                     l3018:
  2775                           
  2776                           ; Switch size 1, requested type "simple"
  2777                           ; Number of cases is 3, Range of values is 0 to 105
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte           10     6 (average)
  2781                           ; jumptable            260     6 (fixed)
  2782                           ;	Chosen strategy is simple_byte
  2783  05FE  082D               	movf	??__doprnt+2,w
  2784  05FF  3A00               	xorlw	0	; case 0
  2785  0600  1903               	skipnz
  2786  0601  2EF4               	goto	l2690
  2787  0602  3A64               	xorlw	100	; case 100
  2788  0603  1903               	skipnz
  2789  0604  2E09               	goto	l2644
  2790  0605  3A0D               	xorlw	13	; case 105
  2791  0606  1903               	skipnz
  2792  0607  2E09               	goto	l2644
  2793  0608  2DC0               	goto	l2632
  2794  0609                     l2644:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2797  0609  082A               	movf	__doprnt@ap,w
  2798  060A  0084               	movwf	4
  2799  060B  1383               	bcf	3,7	;select IRP bank0
  2800  060C  0800               	movf	0,w
  2801  060D  00AB               	movwf	??__doprnt
  2802  060E  3002               	movlw	2
  2803  060F  0780               	addwf	0,f
  2804  0610  082B               	movf	??__doprnt,w
  2805  0611  0084               	movwf	4
  2806  0612  0800               	movf	0,w
  2807  0613  00B1               	movwf	__doprnt@val
  2808  0614  0A84               	incf	4,f
  2809  0615  0800               	movf	0,w
  2810  0616  00B2               	movwf	__doprnt@val+1
  2811  0617                     l2646:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2814  0617  1FB2               	btfss	__doprnt@val+1,7
  2815  0618  2E1A               	goto	u2571
  2816  0619  2E1B               	goto	u2570
  2817  061A                     u2571:
  2818  061A  2E24               	goto	l2652
  2819  061B                     u2570:
  2820  061B                     l2648:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2823  061B  3003               	movlw	3
  2824  061C  00AB               	movwf	??__doprnt
  2825  061D  082B               	movf	??__doprnt,w
  2826  061E  04AF               	iorwf	__doprnt@flag,f
  2827  061F                     l2650:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2830  061F  09B1               	comf	__doprnt@val,f
  2831  0620  09B2               	comf	__doprnt@val+1,f
  2832  0621  0AB1               	incf	__doprnt@val,f
  2833  0622  1903               	skipnz
  2834  0623  0AB2               	incf	__doprnt@val+1,f
  2835  0624                     l2652:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2838  0624  01B3               	clrf	__doprnt@c
  2839  0625  0AB3               	incf	__doprnt@c,f
  2840  0626                     l2658:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2843  0626  0833               	movf	__doprnt@c,w
  2844  0627  00AB               	movwf	??__doprnt
  2845  0628  072B               	addwf	??__doprnt,w
  2846  0629  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2847  062A  0084               	movwf	4
  2848  062B  120A  158A  200A  120A  118A  	fcall	stringdir
  2849  0630  00AC               	movwf	??__doprnt+1
  2850  0631  120A  158A  200A  120A  118A  	fcall	stringdir
  2851  0636  00AD               	movwf	??__doprnt+2
  2852  0637  082D               	movf	??__doprnt+2,w
  2853  0638  0232               	subwf	__doprnt@val+1,w
  2854  0639  1D03               	skipz
  2855  063A  2E3D               	goto	u2585
  2856  063B  082C               	movf	??__doprnt+1,w
  2857  063C  0231               	subwf	__doprnt@val,w
  2858  063D                     u2585:
  2859  063D  1803               	skipnc
  2860  063E  2E40               	goto	u2581
  2861  063F  2E41               	goto	u2580
  2862  0640                     u2581:
  2863  0640  2E42               	goto	l2662
  2864  0641                     u2580:
  2865  0641  2E4C               	goto	l2664
  2866  0642                     l2662:
  2867  0642  3001               	movlw	1
  2868  0643  00AB               	movwf	??__doprnt
  2869  0644  082B               	movf	??__doprnt,w
  2870  0645  07B3               	addwf	__doprnt@c,f
  2871  0646  3005               	movlw	5
  2872  0647  0633               	xorwf	__doprnt@c,w
  2873  0648  1D03               	btfss	3,2
  2874  0649  2E4B               	goto	u2591
  2875  064A  2E4C               	goto	u2590
  2876  064B                     u2591:
  2877  064B  2E26               	goto	l2658
  2878  064C                     u2590:
  2879  064C                     l2664:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2882  064C  082F               	movf	__doprnt@flag,w
  2883  064D  3903               	andlw	3
  2884  064E  1903               	btfsc	3,2
  2885  064F  2E51               	goto	u2601
  2886  0650  2E52               	goto	u2600
  2887  0651                     u2601:
  2888  0651  2E75               	goto	l2674
  2889  0652                     u2600:
  2890  0652                     l2666:
  2891  0652  0A34               	incf	__doprnt@pb,w
  2892  0653  0084               	movwf	4
  2893  0654  1383               	bcf	3,7	;select IRP bank0
  2894  0655  0800               	movf	0,w
  2895  0656  1903               	btfsc	3,2
  2896  0657  2E59               	goto	u2611
  2897  0658  2E5A               	goto	u2610
  2898  0659                     u2611:
  2899  0659  2E67               	goto	l2670
  2900  065A                     u2610:
  2901  065A                     l2668:
  2902  065A  302D               	movlw	45
  2903  065B  00AB               	movwf	??__doprnt
  2904  065C  082B               	movf	??__doprnt,w
  2905  065D  00F3               	movwf	putch@dato
  2906  065E  0A34               	incf	__doprnt@pb,w
  2907  065F  0084               	movwf	4
  2908  0660  0800               	movf	0,w
  2909  0661  120A  118A  2026  120A  118A  	fcall	fptable
  2910  0666  2E75               	goto	l2674
  2911  0667                     l2670:
  2912  0667  302D               	movlw	45
  2913  0668  00AB               	movwf	??__doprnt
  2914  0669  0834               	movf	__doprnt@pb,w
  2915  066A  0084               	movwf	4
  2916  066B  0800               	movf	0,w
  2917  066C  0084               	movwf	4
  2918  066D  082B               	movf	??__doprnt,w
  2919  066E  0080               	movwf	0
  2920  066F                     l2672:
  2921  066F  3001               	movlw	1
  2922  0670  00AB               	movwf	??__doprnt
  2923  0671  0834               	movf	__doprnt@pb,w
  2924  0672  0084               	movwf	4
  2925  0673  082B               	movf	??__doprnt,w
  2926  0674  0780               	addwf	0,f
  2927  0675                     l2674:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2930  0675  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0676  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0677  0833               	movf	__doprnt@c,w
  2933  0678  00AB               	movwf	??__doprnt
  2934  0679  082B               	movf	??__doprnt,w
  2935  067A  00B0               	movwf	__doprnt@prec
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2938  067B  2ECF               	goto	l2686
  2939  067C                     l2676:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2942  067C  300A               	movlw	10
  2943  067D  00A3               	movwf	___lwmod@divisor
  2944  067E  3000               	movlw	0
  2945  067F  00A4               	movwf	___lwmod@divisor+1
  2946  0680  0830               	movf	__doprnt@prec,w
  2947  0681  00AB               	movwf	??__doprnt
  2948  0682  072B               	addwf	??__doprnt,w
  2949  0683  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2950  0684  0084               	movwf	4
  2951  0685  120A  158A  200A  120A  118A  	fcall	stringdir
  2952  068A  00F3               	movwf	___lwdiv@divisor
  2953  068B  120A  158A  200A  120A  118A  	fcall	stringdir
  2954  0690  00F4               	movwf	___lwdiv@divisor+1
  2955  0691  0832               	movf	__doprnt@val+1,w
  2956  0692  00F6               	movwf	___lwdiv@dividend+1
  2957  0693  0831               	movf	__doprnt@val,w
  2958  0694  00F5               	movwf	___lwdiv@dividend
  2959  0695  120A  158A  2409  120A  118A  	fcall	___lwdiv
  2960  069A  0874               	movf	?___lwdiv+1,w
  2961  069B  1283               	bcf	3,5	;RP0=0, select bank0
  2962  069C  1303               	bcf	3,6	;RP1=0, select bank0
  2963  069D  00A6               	movwf	___lwmod@dividend+1
  2964  069E  0873               	movf	?___lwdiv,w
  2965  069F  00A5               	movwf	___lwmod@dividend
  2966  06A0  120A  158A  2387  120A  118A  	fcall	___lwmod
  2967  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2968  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2969  06A7  0823               	movf	?___lwmod,w
  2970  06A8  3E30               	addlw	48
  2971  06A9  00AC               	movwf	??__doprnt+1
  2972  06AA  082C               	movf	??__doprnt+1,w
  2973  06AB  00B3               	movwf	__doprnt@c
  2974  06AC                     l2678:
  2975  06AC  0A34               	incf	__doprnt@pb,w
  2976  06AD  0084               	movwf	4
  2977  06AE  1383               	bcf	3,7	;select IRP bank0
  2978  06AF  0800               	movf	0,w
  2979  06B0  1903               	btfsc	3,2
  2980  06B1  2EB3               	goto	u2621
  2981  06B2  2EB4               	goto	u2620
  2982  06B3                     u2621:
  2983  06B3  2EC1               	goto	l2682
  2984  06B4                     u2620:
  2985  06B4                     l2680:
  2986  06B4  0833               	movf	__doprnt@c,w
  2987  06B5  00AB               	movwf	??__doprnt
  2988  06B6  082B               	movf	??__doprnt,w
  2989  06B7  00F3               	movwf	putch@dato
  2990  06B8  0A34               	incf	__doprnt@pb,w
  2991  06B9  0084               	movwf	4
  2992  06BA  0800               	movf	0,w
  2993  06BB  120A  118A  2026  120A  118A  	fcall	fptable
  2994  06C0  2ECF               	goto	l2686
  2995  06C1                     l2682:
  2996  06C1  0833               	movf	__doprnt@c,w
  2997  06C2  00AB               	movwf	??__doprnt
  2998  06C3  0834               	movf	__doprnt@pb,w
  2999  06C4  0084               	movwf	4
  3000  06C5  0800               	movf	0,w
  3001  06C6  0084               	movwf	4
  3002  06C7  082B               	movf	??__doprnt,w
  3003  06C8  0080               	movwf	0
  3004  06C9                     l2684:
  3005  06C9  3001               	movlw	1
  3006  06CA  00AB               	movwf	??__doprnt
  3007  06CB  0834               	movf	__doprnt@pb,w
  3008  06CC  0084               	movwf	4
  3009  06CD  082B               	movf	??__doprnt,w
  3010  06CE  0780               	addwf	0,f
  3011  06CF                     l2686:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3014  06CF  30FF               	movlw	255
  3015  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3016  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3017  06D2  00AB               	movwf	??__doprnt
  3018  06D3  082B               	movf	??__doprnt,w
  3019  06D4  07B0               	addwf	__doprnt@prec,f
  3020  06D5  0A30               	incf	__doprnt@prec,w
  3021  06D6  1D03               	btfss	3,2
  3022  06D7  2ED9               	goto	u2631
  3023  06D8  2EDA               	goto	u2630
  3024  06D9                     u2631:
  3025  06D9  2E7C               	goto	l2676
  3026  06DA                     u2630:
  3027  06DA                     l2688:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3030  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  3031  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  3032  06DC  0829               	movf	__doprnt@f+1,w
  3033  06DD  00AC               	movwf	??__doprnt+1
  3034  06DE  0828               	movf	__doprnt@f,w
  3035  06DF  00AB               	movwf	??__doprnt
  3036  06E0  0AA8               	incf	__doprnt@f,f
  3037  06E1  1903               	skipnz
  3038  06E2  0AA9               	incf	__doprnt@f+1,f
  3039  06E3  082C               	movf	??__doprnt+1,w
  3040  06E4  00FF               	movwf	btemp+1
  3041  06E5  082B               	movf	??__doprnt,w
  3042  06E6  0084               	movwf	4
  3043  06E7  120A  158A  2000  120A  118A  	fcall	stringtab
  3044  06EC  00AD               	movwf	??__doprnt+2
  3045  06ED  082D               	movf	??__doprnt+2,w
  3046  06EE  00B3               	movwf	__doprnt@c
  3047  06EF  0833               	movf	__doprnt@c,w
  3048  06F0  1D03               	btfss	3,2
  3049  06F1  2EF3               	goto	u2641
  3050  06F2  2EF4               	goto	u2640
  3051  06F3                     u2641:
  3052  06F3  2D92               	goto	l2620
  3053  06F4                     u2640:
  3054  06F4                     l2690:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3057  06F4  01A8               	clrf	?__doprnt
  3058  06F5  01A9               	clrf	?__doprnt+1
  3059  06F6                     l797:
  3060  06F6  0008               	return
  3061  06F7                     __end_of__doprnt:
  3062                           
  3063                           	psect	text8
  3064  0A64                     __ptext8:	
  3065 ;; *************** function _putch *****************
  3066 ;; Defined at:
  3067 ;;		line 231 in file "main_02.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  dato            1    3[COMMON] unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3081 ;;      Params:         1       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0
  3084 ;;      Totals:         1       0       0       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_printf
  3092 ;;		__doprnt
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _putch
  3098  0A64                     _putch:
  3099  0A64                     l1718:	
  3100                           ;incstack = 0
  3101                           ; Regs used in _putch: [wreg]
  3102                           
  3103  0A64                     l135:	
  3104                           ;main_02.c: 232:     while(TXIF == 0);
  3105                           
  3106  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0A66  1E0C               	btfss	12,4	;volatile
  3109  0A67  2A69               	goto	u1211
  3110  0A68  2A6A               	goto	u1210
  3111  0A69                     u1211:
  3112  0A69  2A64               	goto	l135
  3113  0A6A                     u1210:
  3114  0A6A                     l1720:
  3115                           
  3116                           ;main_02.c: 233:     TXREG = dato;
  3117  0A6A  0873               	movf	putch@dato,w
  3118  0A6B  0099               	movwf	25	;volatile
  3119  0A6C                     l138:
  3120  0A6C  0008               	return
  3121  0A6D                     __end_of_putch:
  3122                           
  3123                           	psect	text9
  3124  0B87                     __ptext9:	
  3125 ;; *************** function ___lwmod *****************
  3126 ;; Defined at:
  3127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  divisor         2    3[BANK0 ] unsigned int 
  3130 ;;  dividend        2    5[BANK0 ] unsigned int 
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;  counter         1    7[BANK0 ] unsigned char 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  2    3[BANK0 ] unsigned int 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       4       0       0       0
  3143 ;;      Locals:         0       1       0       0       0
  3144 ;;      Temps:          1       0       0       0       0
  3145 ;;      Totals:         1       5       0       0       0
  3146 ;;Total ram usage:        6 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		__doprnt
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function ___lwmod
  3158  0B87                     ___lwmod:
  3159  0B87                     l2596:	
  3160                           ;incstack = 0
  3161                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3162                           
  3163  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0B89  0823               	movf	___lwmod@divisor,w
  3166  0B8A  0424               	iorwf	___lwmod@divisor+1,w
  3167  0B8B  1903               	btfsc	3,2
  3168  0B8C  2B8E               	goto	u2481
  3169  0B8D  2B8F               	goto	u2480
  3170  0B8E                     u2481:
  3171  0B8E  2BBE               	goto	l2614
  3172  0B8F                     u2480:
  3173  0B8F                     l2598:
  3174  0B8F  01A7               	clrf	___lwmod@counter
  3175  0B90  0AA7               	incf	___lwmod@counter,f
  3176  0B91  2B9D               	goto	l2604
  3177  0B92                     l2600:
  3178  0B92  3001               	movlw	1
  3179  0B93                     u2495:
  3180  0B93  1003               	clrc
  3181  0B94  0DA3               	rlf	___lwmod@divisor,f
  3182  0B95  0DA4               	rlf	___lwmod@divisor+1,f
  3183  0B96  3EFF               	addlw	-1
  3184  0B97  1D03               	skipz
  3185  0B98  2B93               	goto	u2495
  3186  0B99                     l2602:
  3187  0B99  3001               	movlw	1
  3188  0B9A  00F8               	movwf	??___lwmod
  3189  0B9B  0878               	movf	??___lwmod,w
  3190  0B9C  07A7               	addwf	___lwmod@counter,f
  3191  0B9D                     l2604:
  3192  0B9D  1FA4               	btfss	___lwmod@divisor+1,7
  3193  0B9E  2BA0               	goto	u2501
  3194  0B9F  2BA1               	goto	u2500
  3195  0BA0                     u2501:
  3196  0BA0  2B92               	goto	l2600
  3197  0BA1                     u2500:
  3198  0BA1                     l2606:
  3199  0BA1  0824               	movf	___lwmod@divisor+1,w
  3200  0BA2  0226               	subwf	___lwmod@dividend+1,w
  3201  0BA3  1D03               	skipz
  3202  0BA4  2BA7               	goto	u2515
  3203  0BA5  0823               	movf	___lwmod@divisor,w
  3204  0BA6  0225               	subwf	___lwmod@dividend,w
  3205  0BA7                     u2515:
  3206  0BA7  1C03               	skipc
  3207  0BA8  2BAA               	goto	u2511
  3208  0BA9  2BAB               	goto	u2510
  3209  0BAA                     u2511:
  3210  0BAA  2BB1               	goto	l2610
  3211  0BAB                     u2510:
  3212  0BAB                     l2608:
  3213  0BAB  0823               	movf	___lwmod@divisor,w
  3214  0BAC  02A5               	subwf	___lwmod@dividend,f
  3215  0BAD  0824               	movf	___lwmod@divisor+1,w
  3216  0BAE  1C03               	skipc
  3217  0BAF  03A6               	decf	___lwmod@dividend+1,f
  3218  0BB0  02A6               	subwf	___lwmod@dividend+1,f
  3219  0BB1                     l2610:
  3220  0BB1  3001               	movlw	1
  3221  0BB2                     u2525:
  3222  0BB2  1003               	clrc
  3223  0BB3  0CA4               	rrf	___lwmod@divisor+1,f
  3224  0BB4  0CA3               	rrf	___lwmod@divisor,f
  3225  0BB5  3EFF               	addlw	-1
  3226  0BB6  1D03               	skipz
  3227  0BB7  2BB2               	goto	u2525
  3228  0BB8                     l2612:
  3229  0BB8  3001               	movlw	1
  3230  0BB9  02A7               	subwf	___lwmod@counter,f
  3231  0BBA  1D03               	btfss	3,2
  3232  0BBB  2BBD               	goto	u2531
  3233  0BBC  2BBE               	goto	u2530
  3234  0BBD                     u2531:
  3235  0BBD  2BA1               	goto	l2606
  3236  0BBE                     u2530:
  3237  0BBE                     l2614:
  3238  0BBE  0826               	movf	___lwmod@dividend+1,w
  3239  0BBF  00A4               	movwf	?___lwmod+1
  3240  0BC0  0825               	movf	___lwmod@dividend,w
  3241  0BC1  00A3               	movwf	?___lwmod
  3242  0BC2                     l580:
  3243  0BC2  0008               	return
  3244  0BC3                     __end_of___lwmod:
  3245                           
  3246                           	psect	text10
  3247  0C09                     __ptext10:	
  3248 ;; *************** function ___lwdiv *****************
  3249 ;; Defined at:
  3250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  divisor         2    3[COMMON] unsigned int 
  3253 ;;  dividend        2    5[COMMON] unsigned int 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  quotient        2    1[BANK0 ] unsigned int 
  3256 ;;  counter         1    0[BANK0 ] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  2    3[COMMON] unsigned int 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         4       0       0       0       0
  3267 ;;      Locals:         0       3       0       0       0
  3268 ;;      Temps:          1       0       0       0       0
  3269 ;;      Totals:         5       3       0       0       0
  3270 ;;Total ram usage:        8 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    1
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		__doprnt
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function ___lwdiv
  3282  0C09                     ___lwdiv:
  3283  0C09                     l2570:	
  3284                           ;incstack = 0
  3285                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3286                           
  3287  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0C0B  01A1               	clrf	___lwdiv@quotient
  3290  0C0C  01A2               	clrf	___lwdiv@quotient+1
  3291  0C0D                     l2572:
  3292  0C0D  0873               	movf	___lwdiv@divisor,w
  3293  0C0E  0474               	iorwf	___lwdiv@divisor+1,w
  3294  0C0F  1903               	btfsc	3,2
  3295  0C10  2C12               	goto	u2411
  3296  0C11  2C13               	goto	u2410
  3297  0C12                     u2411:
  3298  0C12  2C4A               	goto	l2592
  3299  0C13                     u2410:
  3300  0C13                     l2574:
  3301  0C13  01A0               	clrf	___lwdiv@counter
  3302  0C14  0AA0               	incf	___lwdiv@counter,f
  3303  0C15  2C21               	goto	l2580
  3304  0C16                     l2576:
  3305  0C16  3001               	movlw	1
  3306  0C17                     u2425:
  3307  0C17  1003               	clrc
  3308  0C18  0DF3               	rlf	___lwdiv@divisor,f
  3309  0C19  0DF4               	rlf	___lwdiv@divisor+1,f
  3310  0C1A  3EFF               	addlw	-1
  3311  0C1B  1D03               	skipz
  3312  0C1C  2C17               	goto	u2425
  3313  0C1D                     l2578:
  3314  0C1D  3001               	movlw	1
  3315  0C1E  00F7               	movwf	??___lwdiv
  3316  0C1F  0877               	movf	??___lwdiv,w
  3317  0C20  07A0               	addwf	___lwdiv@counter,f
  3318  0C21                     l2580:
  3319  0C21  1FF4               	btfss	___lwdiv@divisor+1,7
  3320  0C22  2C24               	goto	u2431
  3321  0C23  2C25               	goto	u2430
  3322  0C24                     u2431:
  3323  0C24  2C16               	goto	l2576
  3324  0C25                     u2430:
  3325  0C25                     l2582:
  3326  0C25  3001               	movlw	1
  3327  0C26                     u2445:
  3328  0C26  1003               	clrc
  3329  0C27  0DA1               	rlf	___lwdiv@quotient,f
  3330  0C28  0DA2               	rlf	___lwdiv@quotient+1,f
  3331  0C29  3EFF               	addlw	-1
  3332  0C2A  1D03               	skipz
  3333  0C2B  2C26               	goto	u2445
  3334  0C2C  0874               	movf	___lwdiv@divisor+1,w
  3335  0C2D  0276               	subwf	___lwdiv@dividend+1,w
  3336  0C2E  1D03               	skipz
  3337  0C2F  2C32               	goto	u2455
  3338  0C30  0873               	movf	___lwdiv@divisor,w
  3339  0C31  0275               	subwf	___lwdiv@dividend,w
  3340  0C32                     u2455:
  3341  0C32  1C03               	skipc
  3342  0C33  2C35               	goto	u2451
  3343  0C34  2C36               	goto	u2450
  3344  0C35                     u2451:
  3345  0C35  2C3D               	goto	l2588
  3346  0C36                     u2450:
  3347  0C36                     l2584:
  3348  0C36  0873               	movf	___lwdiv@divisor,w
  3349  0C37  02F5               	subwf	___lwdiv@dividend,f
  3350  0C38  0874               	movf	___lwdiv@divisor+1,w
  3351  0C39  1C03               	skipc
  3352  0C3A  03F6               	decf	___lwdiv@dividend+1,f
  3353  0C3B  02F6               	subwf	___lwdiv@dividend+1,f
  3354  0C3C                     l2586:
  3355  0C3C  1421               	bsf	___lwdiv@quotient,0
  3356  0C3D                     l2588:
  3357  0C3D  3001               	movlw	1
  3358  0C3E                     u2465:
  3359  0C3E  1003               	clrc
  3360  0C3F  0CF4               	rrf	___lwdiv@divisor+1,f
  3361  0C40  0CF3               	rrf	___lwdiv@divisor,f
  3362  0C41  3EFF               	addlw	-1
  3363  0C42  1D03               	skipz
  3364  0C43  2C3E               	goto	u2465
  3365  0C44                     l2590:
  3366  0C44  3001               	movlw	1
  3367  0C45  02A0               	subwf	___lwdiv@counter,f
  3368  0C46  1D03               	btfss	3,2
  3369  0C47  2C49               	goto	u2471
  3370  0C48  2C4A               	goto	u2470
  3371  0C49                     u2471:
  3372  0C49  2C25               	goto	l2582
  3373  0C4A                     u2470:
  3374  0C4A                     l2592:
  3375  0C4A  0822               	movf	___lwdiv@quotient+1,w
  3376  0C4B  00F4               	movwf	?___lwdiv+1
  3377  0C4C  0821               	movf	___lwdiv@quotient,w
  3378  0C4D  00F3               	movwf	?___lwdiv
  3379  0C4E                     l570:
  3380  0C4E  0008               	return
  3381  0C4F                     __end_of___lwdiv:
  3382                           
  3383                           	psect	text11
  3384  0CF9                     __ptext11:	
  3385 ;; *************** function _division3 *****************
  3386 ;; Defined at:
  3387 ;;		line 196 in file "main_02.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  dividendo       1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  dividendo       1   10[BANK0 ] unsigned char 
  3392 ;;  residuo3        1   11[BANK0 ] unsigned char 
  3393 ;;  unidades3       1    9[BANK0 ] unsigned char 
  3394 ;;  decenas3        1    0        unsigned char 
  3395 ;;  centenas3       1    0        unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      unsigned char 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       5       0       0       0
  3407 ;;      Temps:          0       3       0       0       0
  3408 ;;      Totals:         0       8       0       0       0
  3409 ;;Total ram usage:        8 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    2
  3412 ;; This function calls:
  3413 ;;		___awdiv
  3414 ;;		___awmod
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           
  3421                           ;psect for function _division3
  3422  0CF9                     _division3:
  3423                           
  3424                           ;incstack = 0
  3425                           ; Regs used in _division3: [wreg+status,2+status,0+pclath+cstack]
  3426                           ;division3@dividendo stored from wreg
  3427  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0CFB  00AA               	movwf	division3@dividendo
  3430  0CFC                     l2798:
  3431  0CFC  3064               	movlw	100
  3432  0CFD  00F3               	movwf	___awdiv@divisor
  3433  0CFE  3000               	movlw	0
  3434  0CFF  00F4               	movwf	___awdiv@divisor+1
  3435  0D00  082A               	movf	division3@dividendo,w
  3436  0D01  00A4               	movwf	??_division3
  3437  0D02  01A5               	clrf	??_division3+1
  3438  0D03  0824               	movf	??_division3,w
  3439  0D04  00F5               	movwf	___awdiv@dividend
  3440  0D05  0825               	movf	??_division3+1,w
  3441  0D06  00F6               	movwf	___awdiv@dividend+1
  3442  0D07  120A  158A  2666  120A  158A  	fcall	___awdiv
  3443                           
  3444                           ;main_02.c: 198:     char residuo3 = dividendo%100;
  3445  0D0C  3064               	movlw	100
  3446  0D0D  00F3               	movwf	___awmod@divisor
  3447  0D0E  3000               	movlw	0
  3448  0D0F  00F4               	movwf	___awmod@divisor+1
  3449  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0D12  082A               	movf	division3@dividendo,w
  3452  0D13  00A4               	movwf	??_division3
  3453  0D14  01A5               	clrf	??_division3+1
  3454  0D15  0824               	movf	??_division3,w
  3455  0D16  00F5               	movwf	___awmod@dividend
  3456  0D17  0825               	movf	??_division3+1,w
  3457  0D18  00F6               	movwf	___awmod@dividend+1
  3458  0D19  120A  158A  25A6  120A  158A  	fcall	___awmod
  3459  0D1E  0873               	movf	?___awmod,w
  3460  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  3461  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  3462  0D21  00A6               	movwf	??_division3+2
  3463  0D22  0826               	movf	??_division3+2,w
  3464  0D23  00AB               	movwf	division3@residuo3
  3465  0D24  300A               	movlw	10
  3466  0D25  00F3               	movwf	___awdiv@divisor
  3467  0D26  3000               	movlw	0
  3468  0D27  00F4               	movwf	___awdiv@divisor+1
  3469  0D28  082B               	movf	division3@residuo3,w
  3470  0D29  00A4               	movwf	??_division3
  3471  0D2A  01A5               	clrf	??_division3+1
  3472  0D2B  0824               	movf	??_division3,w
  3473  0D2C  00F5               	movwf	___awdiv@dividend
  3474  0D2D  0825               	movf	??_division3+1,w
  3475  0D2E  00F6               	movwf	___awdiv@dividend+1
  3476  0D2F  120A  158A  2666  120A  158A  	fcall	___awdiv
  3477                           
  3478                           ;main_02.c: 200:     char unidades3 = residuo3%10;
  3479  0D34  300A               	movlw	10
  3480  0D35  00F3               	movwf	___awmod@divisor
  3481  0D36  3000               	movlw	0
  3482  0D37  00F4               	movwf	___awmod@divisor+1
  3483  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0D3A  082B               	movf	division3@residuo3,w
  3486  0D3B  00A4               	movwf	??_division3
  3487  0D3C  01A5               	clrf	??_division3+1
  3488  0D3D  0824               	movf	??_division3,w
  3489  0D3E  00F5               	movwf	___awmod@dividend
  3490  0D3F  0825               	movf	??_division3+1,w
  3491  0D40  00F6               	movwf	___awmod@dividend+1
  3492  0D41  120A  158A  25A6  120A  158A  	fcall	___awmod
  3493  0D46  0873               	movf	?___awmod,w
  3494  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0D49  00A6               	movwf	??_division3+2
  3497  0D4A  0826               	movf	??_division3+2,w
  3498  0D4B  00A9               	movwf	division3@unidades3
  3499  0D4C                     l2800:
  3500                           
  3501                           ;main_02.c: 202:     return unidades3;
  3502  0D4C  0829               	movf	division3@unidades3,w
  3503  0D4D                     l123:
  3504  0D4D  0008               	return
  3505  0D4E                     __end_of_division3:
  3506                           
  3507                           	psect	text12
  3508  0CA4                     __ptext12:	
  3509 ;; *************** function _division2 *****************
  3510 ;; Defined at:
  3511 ;;		line 187 in file "main_02.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  dividendo       1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  dividendo       1   10[BANK0 ] unsigned char 
  3516 ;;  residuo2        1   11[BANK0 ] unsigned char 
  3517 ;;  decenas2        1    9[BANK0 ] unsigned char 
  3518 ;;  unidades2       1    0        unsigned char 
  3519 ;;  centenas2       1    0        unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      unsigned char 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       0       0       0       0
  3530 ;;      Locals:         0       5       0       0       0
  3531 ;;      Temps:          0       3       0       0       0
  3532 ;;      Totals:         0       8       0       0       0
  3533 ;;Total ram usage:        8 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    2
  3536 ;; This function calls:
  3537 ;;		___awdiv
  3538 ;;		___awmod
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function _division2
  3546  0CA4                     _division2:
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in _division2: [wreg+status,2+status,0+pclath+cstack]
  3550                           ;division2@dividendo stored from wreg
  3551  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0CA6  00AA               	movwf	division2@dividendo
  3554  0CA7                     l2792:
  3555  0CA7  3064               	movlw	100
  3556  0CA8  00F3               	movwf	___awdiv@divisor
  3557  0CA9  3000               	movlw	0
  3558  0CAA  00F4               	movwf	___awdiv@divisor+1
  3559  0CAB  082A               	movf	division2@dividendo,w
  3560  0CAC  00A4               	movwf	??_division2
  3561  0CAD  01A5               	clrf	??_division2+1
  3562  0CAE  0824               	movf	??_division2,w
  3563  0CAF  00F5               	movwf	___awdiv@dividend
  3564  0CB0  0825               	movf	??_division2+1,w
  3565  0CB1  00F6               	movwf	___awdiv@dividend+1
  3566  0CB2  120A  158A  2666  120A  158A  	fcall	___awdiv
  3567                           
  3568                           ;main_02.c: 189:     char residuo2 = dividendo%100;
  3569  0CB7  3064               	movlw	100
  3570  0CB8  00F3               	movwf	___awmod@divisor
  3571  0CB9  3000               	movlw	0
  3572  0CBA  00F4               	movwf	___awmod@divisor+1
  3573  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0CBD  082A               	movf	division2@dividendo,w
  3576  0CBE  00A4               	movwf	??_division2
  3577  0CBF  01A5               	clrf	??_division2+1
  3578  0CC0  0824               	movf	??_division2,w
  3579  0CC1  00F5               	movwf	___awmod@dividend
  3580  0CC2  0825               	movf	??_division2+1,w
  3581  0CC3  00F6               	movwf	___awmod@dividend+1
  3582  0CC4  120A  158A  25A6  120A  158A  	fcall	___awmod
  3583  0CC9  0873               	movf	?___awmod,w
  3584  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0CCC  00A6               	movwf	??_division2+2
  3587  0CCD  0826               	movf	??_division2+2,w
  3588  0CCE  00AB               	movwf	division2@residuo2
  3589                           
  3590                           ;main_02.c: 190:     char decenas2 = residuo2/10;
  3591  0CCF  300A               	movlw	10
  3592  0CD0  00F3               	movwf	___awdiv@divisor
  3593  0CD1  3000               	movlw	0
  3594  0CD2  00F4               	movwf	___awdiv@divisor+1
  3595  0CD3  082B               	movf	division2@residuo2,w
  3596  0CD4  00A4               	movwf	??_division2
  3597  0CD5  01A5               	clrf	??_division2+1
  3598  0CD6  0824               	movf	??_division2,w
  3599  0CD7  00F5               	movwf	___awdiv@dividend
  3600  0CD8  0825               	movf	??_division2+1,w
  3601  0CD9  00F6               	movwf	___awdiv@dividend+1
  3602  0CDA  120A  158A  2666  120A  158A  	fcall	___awdiv
  3603  0CDF  0873               	movf	?___awdiv,w
  3604  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0CE2  00A6               	movwf	??_division2+2
  3607  0CE3  0826               	movf	??_division2+2,w
  3608  0CE4  00A9               	movwf	division2@decenas2
  3609  0CE5  300A               	movlw	10
  3610  0CE6  00F3               	movwf	___awmod@divisor
  3611  0CE7  3000               	movlw	0
  3612  0CE8  00F4               	movwf	___awmod@divisor+1
  3613  0CE9  082B               	movf	division2@residuo2,w
  3614  0CEA  00A4               	movwf	??_division2
  3615  0CEB  01A5               	clrf	??_division2+1
  3616  0CEC  0824               	movf	??_division2,w
  3617  0CED  00F5               	movwf	___awmod@dividend
  3618  0CEE  0825               	movf	??_division2+1,w
  3619  0CEF  00F6               	movwf	___awmod@dividend+1
  3620  0CF0  120A  158A  25A6  120A  158A  	fcall	___awmod
  3621  0CF5                     l2794:
  3622                           
  3623                           ;main_02.c: 193:     return decenas2;
  3624  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0CF7  0829               	movf	division2@decenas2,w
  3627  0CF8                     l120:
  3628  0CF8  0008               	return
  3629  0CF9                     __end_of_division2:
  3630                           
  3631                           	psect	text13
  3632  0C4F                     __ptext13:	
  3633 ;; *************** function _division1 *****************
  3634 ;; Defined at:
  3635 ;;		line 178 in file "main_02.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  dividendo       1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  dividendo       1   10[BANK0 ] unsigned char 
  3640 ;;  residuo1        1   11[BANK0 ] unsigned char 
  3641 ;;  centenas1       1    9[BANK0 ] unsigned char 
  3642 ;;  unidades1       1    0        unsigned char 
  3643 ;;  decenas1        1    0        unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      unsigned char 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0, pclath, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       5       0       0       0
  3655 ;;      Temps:          0       3       0       0       0
  3656 ;;      Totals:         0       8       0       0       0
  3657 ;;Total ram usage:        8 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		___awdiv
  3662 ;;		___awmod
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _division1
  3670  0C4F                     _division1:
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _division1: [wreg+status,2+status,0+pclath+cstack]
  3674                           ;division1@dividendo stored from wreg
  3675  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0C51  00AA               	movwf	division1@dividendo
  3678  0C52                     l2786:
  3679                           
  3680                           ;main_02.c: 179:     char centenas1 = dividendo/100;
  3681  0C52  3064               	movlw	100
  3682  0C53  00F3               	movwf	___awdiv@divisor
  3683  0C54  3000               	movlw	0
  3684  0C55  00F4               	movwf	___awdiv@divisor+1
  3685  0C56  082A               	movf	division1@dividendo,w
  3686  0C57  00A4               	movwf	??_division1
  3687  0C58  01A5               	clrf	??_division1+1
  3688  0C59  0824               	movf	??_division1,w
  3689  0C5A  00F5               	movwf	___awdiv@dividend
  3690  0C5B  0825               	movf	??_division1+1,w
  3691  0C5C  00F6               	movwf	___awdiv@dividend+1
  3692  0C5D  120A  158A  2666  120A  158A  	fcall	___awdiv
  3693  0C62  0873               	movf	?___awdiv,w
  3694  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  3695  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  3696  0C65  00A6               	movwf	??_division1+2
  3697  0C66  0826               	movf	??_division1+2,w
  3698  0C67  00A9               	movwf	division1@centenas1
  3699                           
  3700                           ;main_02.c: 180:     char residuo1 = dividendo%100;
  3701  0C68  3064               	movlw	100
  3702  0C69  00F3               	movwf	___awmod@divisor
  3703  0C6A  3000               	movlw	0
  3704  0C6B  00F4               	movwf	___awmod@divisor+1
  3705  0C6C  082A               	movf	division1@dividendo,w
  3706  0C6D  00A4               	movwf	??_division1
  3707  0C6E  01A5               	clrf	??_division1+1
  3708  0C6F  0824               	movf	??_division1,w
  3709  0C70  00F5               	movwf	___awmod@dividend
  3710  0C71  0825               	movf	??_division1+1,w
  3711  0C72  00F6               	movwf	___awmod@dividend+1
  3712  0C73  120A  158A  25A6  120A  158A  	fcall	___awmod
  3713  0C78  0873               	movf	?___awmod,w
  3714  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0C7B  00A6               	movwf	??_division1+2
  3717  0C7C  0826               	movf	??_division1+2,w
  3718  0C7D  00AB               	movwf	division1@residuo1
  3719  0C7E  300A               	movlw	10
  3720  0C7F  00F3               	movwf	___awdiv@divisor
  3721  0C80  3000               	movlw	0
  3722  0C81  00F4               	movwf	___awdiv@divisor+1
  3723  0C82  082B               	movf	division1@residuo1,w
  3724  0C83  00A4               	movwf	??_division1
  3725  0C84  01A5               	clrf	??_division1+1
  3726  0C85  0824               	movf	??_division1,w
  3727  0C86  00F5               	movwf	___awdiv@dividend
  3728  0C87  0825               	movf	??_division1+1,w
  3729  0C88  00F6               	movwf	___awdiv@dividend+1
  3730  0C89  120A  158A  2666  120A  158A  	fcall	___awdiv
  3731  0C8E  300A               	movlw	10
  3732  0C8F  00F3               	movwf	___awmod@divisor
  3733  0C90  3000               	movlw	0
  3734  0C91  00F4               	movwf	___awmod@divisor+1
  3735  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  3736  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  3737  0C94  082B               	movf	division1@residuo1,w
  3738  0C95  00A4               	movwf	??_division1
  3739  0C96  01A5               	clrf	??_division1+1
  3740  0C97  0824               	movf	??_division1,w
  3741  0C98  00F5               	movwf	___awmod@dividend
  3742  0C99  0825               	movf	??_division1+1,w
  3743  0C9A  00F6               	movwf	___awmod@dividend+1
  3744  0C9B  120A  158A  25A6  120A  158A  	fcall	___awmod
  3745  0CA0                     l2788:
  3746                           
  3747                           ;main_02.c: 184:     return centenas1;
  3748  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0CA2  0829               	movf	division1@centenas1,w
  3751  0CA3                     l117:
  3752  0CA3  0008               	return
  3753  0CA4                     __end_of_division1:
  3754                           
  3755                           	psect	text14
  3756  0DA6                     __ptext14:	
  3757 ;; *************** function ___awmod *****************
  3758 ;; Defined at:
  3759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  divisor         2    3[COMMON] int 
  3762 ;;  dividend        2    5[COMMON] int 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  sign            1    1[BANK0 ] unsigned char 
  3765 ;;  counter         1    0[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2    3[COMMON] int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         4       0       0       0       0
  3776 ;;      Locals:         0       2       0       0       0
  3777 ;;      Temps:          1       0       0       0       0
  3778 ;;      Totals:         5       2       0       0       0
  3779 ;;Total ram usage:        7 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_division1
  3786 ;;		_division2
  3787 ;;		_division3
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           
  3792                           ;psect for function ___awmod
  3793  0DA6                     ___awmod:
  3794  0DA6                     l2708:	
  3795                           ;incstack = 0
  3796                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3797                           
  3798  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0DA8  01A1               	clrf	___awmod@sign
  3801  0DA9                     l2710:
  3802  0DA9  1FF6               	btfss	___awmod@dividend+1,7
  3803  0DAA  2DAC               	goto	u2651
  3804  0DAB  2DAD               	goto	u2650
  3805  0DAC                     u2651:
  3806  0DAC  2DB4               	goto	l2716
  3807  0DAD                     u2650:
  3808  0DAD                     l2712:
  3809  0DAD  09F5               	comf	___awmod@dividend,f
  3810  0DAE  09F6               	comf	___awmod@dividend+1,f
  3811  0DAF  0AF5               	incf	___awmod@dividend,f
  3812  0DB0  1903               	skipnz
  3813  0DB1  0AF6               	incf	___awmod@dividend+1,f
  3814  0DB2                     l2714:
  3815  0DB2  01A1               	clrf	___awmod@sign
  3816  0DB3  0AA1               	incf	___awmod@sign,f
  3817  0DB4                     l2716:
  3818  0DB4  1FF4               	btfss	___awmod@divisor+1,7
  3819  0DB5  2DB7               	goto	u2661
  3820  0DB6  2DB8               	goto	u2660
  3821  0DB7                     u2661:
  3822  0DB7  2DBD               	goto	l2720
  3823  0DB8                     u2660:
  3824  0DB8                     l2718:
  3825  0DB8  09F3               	comf	___awmod@divisor,f
  3826  0DB9  09F4               	comf	___awmod@divisor+1,f
  3827  0DBA  0AF3               	incf	___awmod@divisor,f
  3828  0DBB  1903               	skipnz
  3829  0DBC  0AF4               	incf	___awmod@divisor+1,f
  3830  0DBD                     l2720:
  3831  0DBD  0873               	movf	___awmod@divisor,w
  3832  0DBE  0474               	iorwf	___awmod@divisor+1,w
  3833  0DBF  1903               	btfsc	3,2
  3834  0DC0  2DC2               	goto	u2671
  3835  0DC1  2DC3               	goto	u2670
  3836  0DC2                     u2671:
  3837  0DC2  2DF2               	goto	l2738
  3838  0DC3                     u2670:
  3839  0DC3                     l2722:
  3840  0DC3  01A0               	clrf	___awmod@counter
  3841  0DC4  0AA0               	incf	___awmod@counter,f
  3842  0DC5  2DD1               	goto	l2728
  3843  0DC6                     l2724:
  3844  0DC6  3001               	movlw	1
  3845  0DC7                     u2685:
  3846  0DC7  1003               	clrc
  3847  0DC8  0DF3               	rlf	___awmod@divisor,f
  3848  0DC9  0DF4               	rlf	___awmod@divisor+1,f
  3849  0DCA  3EFF               	addlw	-1
  3850  0DCB  1D03               	skipz
  3851  0DCC  2DC7               	goto	u2685
  3852  0DCD                     l2726:
  3853  0DCD  3001               	movlw	1
  3854  0DCE  00F7               	movwf	??___awmod
  3855  0DCF  0877               	movf	??___awmod,w
  3856  0DD0  07A0               	addwf	___awmod@counter,f
  3857  0DD1                     l2728:
  3858  0DD1  1FF4               	btfss	___awmod@divisor+1,7
  3859  0DD2  2DD4               	goto	u2691
  3860  0DD3  2DD5               	goto	u2690
  3861  0DD4                     u2691:
  3862  0DD4  2DC6               	goto	l2724
  3863  0DD5                     u2690:
  3864  0DD5                     l2730:
  3865  0DD5  0874               	movf	___awmod@divisor+1,w
  3866  0DD6  0276               	subwf	___awmod@dividend+1,w
  3867  0DD7  1D03               	skipz
  3868  0DD8  2DDB               	goto	u2705
  3869  0DD9  0873               	movf	___awmod@divisor,w
  3870  0DDA  0275               	subwf	___awmod@dividend,w
  3871  0DDB                     u2705:
  3872  0DDB  1C03               	skipc
  3873  0DDC  2DDE               	goto	u2701
  3874  0DDD  2DDF               	goto	u2700
  3875  0DDE                     u2701:
  3876  0DDE  2DE5               	goto	l2734
  3877  0DDF                     u2700:
  3878  0DDF                     l2732:
  3879  0DDF  0873               	movf	___awmod@divisor,w
  3880  0DE0  02F5               	subwf	___awmod@dividend,f
  3881  0DE1  0874               	movf	___awmod@divisor+1,w
  3882  0DE2  1C03               	skipc
  3883  0DE3  03F6               	decf	___awmod@dividend+1,f
  3884  0DE4  02F6               	subwf	___awmod@dividend+1,f
  3885  0DE5                     l2734:
  3886  0DE5  3001               	movlw	1
  3887  0DE6                     u2715:
  3888  0DE6  1003               	clrc
  3889  0DE7  0CF4               	rrf	___awmod@divisor+1,f
  3890  0DE8  0CF3               	rrf	___awmod@divisor,f
  3891  0DE9  3EFF               	addlw	-1
  3892  0DEA  1D03               	skipz
  3893  0DEB  2DE6               	goto	u2715
  3894  0DEC                     l2736:
  3895  0DEC  3001               	movlw	1
  3896  0DED  02A0               	subwf	___awmod@counter,f
  3897  0DEE  1D03               	btfss	3,2
  3898  0DEF  2DF1               	goto	u2721
  3899  0DF0  2DF2               	goto	u2720
  3900  0DF1                     u2721:
  3901  0DF1  2DD5               	goto	l2730
  3902  0DF2                     u2720:
  3903  0DF2                     l2738:
  3904  0DF2  0821               	movf	___awmod@sign,w
  3905  0DF3  1903               	btfsc	3,2
  3906  0DF4  2DF6               	goto	u2731
  3907  0DF5  2DF7               	goto	u2730
  3908  0DF6                     u2731:
  3909  0DF6  2DFC               	goto	l2742
  3910  0DF7                     u2730:
  3911  0DF7                     l2740:
  3912  0DF7  09F5               	comf	___awmod@dividend,f
  3913  0DF8  09F6               	comf	___awmod@dividend+1,f
  3914  0DF9  0AF5               	incf	___awmod@dividend,f
  3915  0DFA  1903               	skipnz
  3916  0DFB  0AF6               	incf	___awmod@dividend+1,f
  3917  0DFC                     l2742:
  3918  0DFC  0876               	movf	___awmod@dividend+1,w
  3919  0DFD  00F4               	movwf	?___awmod+1
  3920  0DFE  0875               	movf	___awmod@dividend,w
  3921  0DFF  00F3               	movwf	?___awmod
  3922  0E00                     l464:
  3923  0E00  0008               	return
  3924  0E01                     __end_of___awmod:
  3925                           
  3926                           	psect	text15
  3927  0E66                     __ptext15:	
  3928 ;; *************** function ___awdiv *****************
  3929 ;; Defined at:
  3930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  divisor         2    3[COMMON] int 
  3933 ;;  dividend        2    5[COMMON] int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  quotient        2    2[BANK0 ] int 
  3936 ;;  sign            1    1[BANK0 ] unsigned char 
  3937 ;;  counter         1    0[BANK0 ] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  2    3[COMMON] int 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         4       0       0       0       0
  3948 ;;      Locals:         0       4       0       0       0
  3949 ;;      Temps:          1       0       0       0       0
  3950 ;;      Totals:         5       4       0       0       0
  3951 ;;Total ram usage:        9 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_division1
  3958 ;;		_division2
  3959 ;;		_division3
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function ___awdiv
  3965  0E66                     ___awdiv:
  3966  0E66                     l1990:	
  3967                           ;incstack = 0
  3968                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3969                           
  3970  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0E68  01A1               	clrf	___awdiv@sign
  3973  0E69                     l1992:
  3974  0E69  1FF4               	btfss	___awdiv@divisor+1,7
  3975  0E6A  2E6C               	goto	u1461
  3976  0E6B  2E6D               	goto	u1460
  3977  0E6C                     u1461:
  3978  0E6C  2E74               	goto	l1998
  3979  0E6D                     u1460:
  3980  0E6D                     l1994:
  3981  0E6D  09F3               	comf	___awdiv@divisor,f
  3982  0E6E  09F4               	comf	___awdiv@divisor+1,f
  3983  0E6F  0AF3               	incf	___awdiv@divisor,f
  3984  0E70  1903               	skipnz
  3985  0E71  0AF4               	incf	___awdiv@divisor+1,f
  3986  0E72                     l1996:
  3987  0E72  01A1               	clrf	___awdiv@sign
  3988  0E73  0AA1               	incf	___awdiv@sign,f
  3989  0E74                     l1998:
  3990  0E74  1FF6               	btfss	___awdiv@dividend+1,7
  3991  0E75  2E77               	goto	u1471
  3992  0E76  2E78               	goto	u1470
  3993  0E77                     u1471:
  3994  0E77  2E81               	goto	l2004
  3995  0E78                     u1470:
  3996  0E78                     l2000:
  3997  0E78  09F5               	comf	___awdiv@dividend,f
  3998  0E79  09F6               	comf	___awdiv@dividend+1,f
  3999  0E7A  0AF5               	incf	___awdiv@dividend,f
  4000  0E7B  1903               	skipnz
  4001  0E7C  0AF6               	incf	___awdiv@dividend+1,f
  4002  0E7D                     l2002:
  4003  0E7D  3001               	movlw	1
  4004  0E7E  00F7               	movwf	??___awdiv
  4005  0E7F  0877               	movf	??___awdiv,w
  4006  0E80  06A1               	xorwf	___awdiv@sign,f
  4007  0E81                     l2004:
  4008  0E81  01A2               	clrf	___awdiv@quotient
  4009  0E82  01A3               	clrf	___awdiv@quotient+1
  4010  0E83                     l2006:
  4011  0E83  0873               	movf	___awdiv@divisor,w
  4012  0E84  0474               	iorwf	___awdiv@divisor+1,w
  4013  0E85  1903               	btfsc	3,2
  4014  0E86  2E88               	goto	u1481
  4015  0E87  2E89               	goto	u1480
  4016  0E88                     u1481:
  4017  0E88  2EC0               	goto	l2026
  4018  0E89                     u1480:
  4019  0E89                     l2008:
  4020  0E89  01A0               	clrf	___awdiv@counter
  4021  0E8A  0AA0               	incf	___awdiv@counter,f
  4022  0E8B  2E97               	goto	l2014
  4023  0E8C                     l2010:
  4024  0E8C  3001               	movlw	1
  4025  0E8D                     u1495:
  4026  0E8D  1003               	clrc
  4027  0E8E  0DF3               	rlf	___awdiv@divisor,f
  4028  0E8F  0DF4               	rlf	___awdiv@divisor+1,f
  4029  0E90  3EFF               	addlw	-1
  4030  0E91  1D03               	skipz
  4031  0E92  2E8D               	goto	u1495
  4032  0E93                     l2012:
  4033  0E93  3001               	movlw	1
  4034  0E94  00F7               	movwf	??___awdiv
  4035  0E95  0877               	movf	??___awdiv,w
  4036  0E96  07A0               	addwf	___awdiv@counter,f
  4037  0E97                     l2014:
  4038  0E97  1FF4               	btfss	___awdiv@divisor+1,7
  4039  0E98  2E9A               	goto	u1501
  4040  0E99  2E9B               	goto	u1500
  4041  0E9A                     u1501:
  4042  0E9A  2E8C               	goto	l2010
  4043  0E9B                     u1500:
  4044  0E9B                     l2016:
  4045  0E9B  3001               	movlw	1
  4046  0E9C                     u1515:
  4047  0E9C  1003               	clrc
  4048  0E9D  0DA2               	rlf	___awdiv@quotient,f
  4049  0E9E  0DA3               	rlf	___awdiv@quotient+1,f
  4050  0E9F  3EFF               	addlw	-1
  4051  0EA0  1D03               	skipz
  4052  0EA1  2E9C               	goto	u1515
  4053  0EA2  0874               	movf	___awdiv@divisor+1,w
  4054  0EA3  0276               	subwf	___awdiv@dividend+1,w
  4055  0EA4  1D03               	skipz
  4056  0EA5  2EA8               	goto	u1525
  4057  0EA6  0873               	movf	___awdiv@divisor,w
  4058  0EA7  0275               	subwf	___awdiv@dividend,w
  4059  0EA8                     u1525:
  4060  0EA8  1C03               	skipc
  4061  0EA9  2EAB               	goto	u1521
  4062  0EAA  2EAC               	goto	u1520
  4063  0EAB                     u1521:
  4064  0EAB  2EB3               	goto	l2022
  4065  0EAC                     u1520:
  4066  0EAC                     l2018:
  4067  0EAC  0873               	movf	___awdiv@divisor,w
  4068  0EAD  02F5               	subwf	___awdiv@dividend,f
  4069  0EAE  0874               	movf	___awdiv@divisor+1,w
  4070  0EAF  1C03               	skipc
  4071  0EB0  03F6               	decf	___awdiv@dividend+1,f
  4072  0EB1  02F6               	subwf	___awdiv@dividend+1,f
  4073  0EB2                     l2020:
  4074  0EB2  1422               	bsf	___awdiv@quotient,0
  4075  0EB3                     l2022:
  4076  0EB3  3001               	movlw	1
  4077  0EB4                     u1535:
  4078  0EB4  1003               	clrc
  4079  0EB5  0CF4               	rrf	___awdiv@divisor+1,f
  4080  0EB6  0CF3               	rrf	___awdiv@divisor,f
  4081  0EB7  3EFF               	addlw	-1
  4082  0EB8  1D03               	skipz
  4083  0EB9  2EB4               	goto	u1535
  4084  0EBA                     l2024:
  4085  0EBA  3001               	movlw	1
  4086  0EBB  02A0               	subwf	___awdiv@counter,f
  4087  0EBC  1D03               	btfss	3,2
  4088  0EBD  2EBF               	goto	u1541
  4089  0EBE  2EC0               	goto	u1540
  4090  0EBF                     u1541:
  4091  0EBF  2E9B               	goto	l2016
  4092  0EC0                     u1540:
  4093  0EC0                     l2026:
  4094  0EC0  0821               	movf	___awdiv@sign,w
  4095  0EC1  1903               	btfsc	3,2
  4096  0EC2  2EC4               	goto	u1551
  4097  0EC3  2EC5               	goto	u1550
  4098  0EC4                     u1551:
  4099  0EC4  2ECA               	goto	l2030
  4100  0EC5                     u1550:
  4101  0EC5                     l2028:
  4102  0EC5  09A2               	comf	___awdiv@quotient,f
  4103  0EC6  09A3               	comf	___awdiv@quotient+1,f
  4104  0EC7  0AA2               	incf	___awdiv@quotient,f
  4105  0EC8  1903               	skipnz
  4106  0EC9  0AA3               	incf	___awdiv@quotient+1,f
  4107  0ECA                     l2030:
  4108  0ECA  0823               	movf	___awdiv@quotient+1,w
  4109  0ECB  00F4               	movwf	?___awdiv+1
  4110  0ECC  0822               	movf	___awdiv@quotient,w
  4111  0ECD  00F3               	movwf	?___awdiv
  4112  0ECE                     l451:
  4113  0ECE  0008               	return
  4114  0ECF                     __end_of___awdiv:
  4115                           
  4116                           	psect	text16
  4117  06F7                     __ptext16:	
  4118 ;; *************** function ___xxtofl *****************
  4119 ;; Defined at:
  4120 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  sign            1    wreg     unsigned char 
  4123 ;;  val             4    3[COMMON] long 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  sign            1    4[BANK0 ] unsigned char 
  4126 ;;  arg             4    6[BANK0 ] unsigned long 
  4127 ;;  exp             1    5[BANK0 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  4    3[COMMON] unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         4       0       0       0       0
  4138 ;;      Locals:         0       6       0       0       0
  4139 ;;      Temps:          0       4       0       0       0
  4140 ;;      Totals:         4      10       0       0       0
  4141 ;;Total ram usage:       14 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    1
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_main
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           
  4152                           ;psect for function ___xxtofl
  4153  06F7                     ___xxtofl:
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4157                           ;___xxtofl@sign stored from wreg
  4158  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4159  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4160  06F9  00A4               	movwf	___xxtofl@sign
  4161  06FA                     l2866:
  4162  06FA  0824               	movf	___xxtofl@sign,w
  4163  06FB  1903               	btfsc	3,2
  4164  06FC  2EFE               	goto	u2921
  4165  06FD  2EFF               	goto	u2920
  4166  06FE                     u2921:
  4167  06FE  2F13               	goto	l2872
  4168  06FF                     u2920:
  4169  06FF                     l2868:
  4170  06FF  1FF6               	btfss	___xxtofl@val+3,7
  4171  0700  2F02               	goto	u2931
  4172  0701  2F03               	goto	u2930
  4173  0702                     u2931:
  4174  0702  2F13               	goto	l2872
  4175  0703                     u2930:
  4176  0703                     l2870:
  4177  0703  0973               	comf	___xxtofl@val,w
  4178  0704  00A6               	movwf	___xxtofl@arg
  4179  0705  0974               	comf	___xxtofl@val+1,w
  4180  0706  00A7               	movwf	___xxtofl@arg+1
  4181  0707  0975               	comf	___xxtofl@val+2,w
  4182  0708  00A8               	movwf	___xxtofl@arg+2
  4183  0709  0976               	comf	___xxtofl@val+3,w
  4184  070A  00A9               	movwf	___xxtofl@arg+3
  4185  070B  0AA6               	incf	___xxtofl@arg,f
  4186  070C  1903               	skipnz
  4187  070D  0AA7               	incf	___xxtofl@arg+1,f
  4188  070E  1903               	skipnz
  4189  070F  0AA8               	incf	___xxtofl@arg+2,f
  4190  0710  1903               	skipnz
  4191  0711  0AA9               	incf	___xxtofl@arg+3,f
  4192  0712  2F1B               	goto	l731
  4193  0713                     l2872:
  4194  0713  0876               	movf	___xxtofl@val+3,w
  4195  0714  00A9               	movwf	___xxtofl@arg+3
  4196  0715  0875               	movf	___xxtofl@val+2,w
  4197  0716  00A8               	movwf	___xxtofl@arg+2
  4198  0717  0874               	movf	___xxtofl@val+1,w
  4199  0718  00A7               	movwf	___xxtofl@arg+1
  4200  0719  0873               	movf	___xxtofl@val,w
  4201  071A  00A6               	movwf	___xxtofl@arg
  4202  071B                     l731:
  4203  071B  0876               	movf	___xxtofl@val+3,w
  4204  071C  0475               	iorwf	___xxtofl@val+2,w
  4205  071D  0474               	iorwf	___xxtofl@val+1,w
  4206  071E  0473               	iorwf	___xxtofl@val,w
  4207  071F  1D03               	skipz
  4208  0720  2F22               	goto	u2941
  4209  0721  2F23               	goto	u2940
  4210  0722                     u2941:
  4211  0722  2F2C               	goto	l2878
  4212  0723                     u2940:
  4213  0723                     l2874:
  4214  0723  3000               	movlw	0
  4215  0724  00F6               	movwf	?___xxtofl+3
  4216  0725  3000               	movlw	0
  4217  0726  00F5               	movwf	?___xxtofl+2
  4218  0727  3000               	movlw	0
  4219  0728  00F4               	movwf	?___xxtofl+1
  4220  0729  3000               	movlw	0
  4221  072A  00F3               	movwf	?___xxtofl
  4222  072B  2FB2               	goto	l733
  4223  072C                     l2878:
  4224  072C  3096               	movlw	150
  4225  072D  00A0               	movwf	??___xxtofl
  4226  072E  0820               	movf	??___xxtofl,w
  4227  072F  00A5               	movwf	___xxtofl@exp
  4228  0730  2F3E               	goto	l2882
  4229  0731                     l2880:
  4230  0731  3001               	movlw	1
  4231  0732  00A0               	movwf	??___xxtofl
  4232  0733  0820               	movf	??___xxtofl,w
  4233  0734  07A5               	addwf	___xxtofl@exp,f
  4234  0735  3001               	movlw	1
  4235  0736                     u2955:
  4236  0736  1003               	clrc
  4237  0737  0CA9               	rrf	___xxtofl@arg+3,f
  4238  0738  0CA8               	rrf	___xxtofl@arg+2,f
  4239  0739  0CA7               	rrf	___xxtofl@arg+1,f
  4240  073A  0CA6               	rrf	___xxtofl@arg,f
  4241  073B  3EFF               	addlw	-1
  4242  073C  1D03               	skipz
  4243  073D  2F36               	goto	u2955
  4244  073E                     l2882:
  4245  073E  30FE               	movlw	254
  4246  073F  0529               	andwf	___xxtofl@arg+3,w
  4247  0740  1D03               	btfss	3,2
  4248  0741  2F43               	goto	u2961
  4249  0742  2F44               	goto	u2960
  4250  0743                     u2961:
  4251  0743  2F31               	goto	l2880
  4252  0744                     u2960:
  4253  0744  2F60               	goto	l737
  4254  0745                     l2884:
  4255  0745  3001               	movlw	1
  4256  0746  00A0               	movwf	??___xxtofl
  4257  0747  0820               	movf	??___xxtofl,w
  4258  0748  07A5               	addwf	___xxtofl@exp,f
  4259  0749                     l2886:
  4260  0749  3001               	movlw	1
  4261  074A  07A6               	addwf	___xxtofl@arg,f
  4262  074B  3000               	movlw	0
  4263  074C  1803               	skipnc
  4264  074D  3001               	movlw	1
  4265  074E  07A7               	addwf	___xxtofl@arg+1,f
  4266  074F  3000               	movlw	0
  4267  0750  1803               	skipnc
  4268  0751  3001               	movlw	1
  4269  0752  07A8               	addwf	___xxtofl@arg+2,f
  4270  0753  3000               	movlw	0
  4271  0754  1803               	skipnc
  4272  0755  3001               	movlw	1
  4273  0756  07A9               	addwf	___xxtofl@arg+3,f
  4274  0757                     l2888:
  4275  0757  3001               	movlw	1
  4276  0758                     u2975:
  4277  0758  1003               	clrc
  4278  0759  0CA9               	rrf	___xxtofl@arg+3,f
  4279  075A  0CA8               	rrf	___xxtofl@arg+2,f
  4280  075B  0CA7               	rrf	___xxtofl@arg+1,f
  4281  075C  0CA6               	rrf	___xxtofl@arg,f
  4282  075D  3EFF               	addlw	-1
  4283  075E  1D03               	skipz
  4284  075F  2F58               	goto	u2975
  4285  0760                     l737:
  4286  0760  30FF               	movlw	255
  4287  0761  0529               	andwf	___xxtofl@arg+3,w
  4288  0762  1D03               	btfss	3,2
  4289  0763  2F65               	goto	u2981
  4290  0764  2F66               	goto	u2980
  4291  0765                     u2981:
  4292  0765  2F45               	goto	l2884
  4293  0766                     u2980:
  4294  0766  2F72               	goto	l2892
  4295  0767                     l2890:
  4296  0767  3001               	movlw	1
  4297  0768  02A5               	subwf	___xxtofl@exp,f
  4298  0769  3001               	movlw	1
  4299  076A  00A0               	movwf	??___xxtofl
  4300  076B                     u2995:
  4301  076B  1003               	clrc
  4302  076C  0DA6               	rlf	___xxtofl@arg,f
  4303  076D  0DA7               	rlf	___xxtofl@arg+1,f
  4304  076E  0DA8               	rlf	___xxtofl@arg+2,f
  4305  076F  0DA9               	rlf	___xxtofl@arg+3,f
  4306  0770  0BA0               	decfsz	??___xxtofl,f
  4307  0771  2F6B               	goto	u2995
  4308  0772                     l2892:
  4309  0772  1BA8               	btfsc	___xxtofl@arg+2,7
  4310  0773  2F75               	goto	u3001
  4311  0774  2F76               	goto	u3000
  4312  0775                     u3001:
  4313  0775  2F7C               	goto	l744
  4314  0776                     u3000:
  4315  0776                     l2894:
  4316  0776  3002               	movlw	2
  4317  0777  0225               	subwf	___xxtofl@exp,w
  4318  0778  1803               	skipnc
  4319  0779  2F7B               	goto	u3011
  4320  077A  2F7C               	goto	u3010
  4321  077B                     u3011:
  4322  077B  2F67               	goto	l2890
  4323  077C                     u3010:
  4324  077C                     l744:
  4325  077C  1825               	btfsc	___xxtofl@exp,0
  4326  077D  2F7F               	goto	u3021
  4327  077E  2F80               	goto	u3020
  4328  077F                     u3021:
  4329  077F  2F88               	goto	l745
  4330  0780                     u3020:
  4331  0780                     l2896:
  4332  0780  30FF               	movlw	255
  4333  0781  05A6               	andwf	___xxtofl@arg,f
  4334  0782  30FF               	movlw	255
  4335  0783  05A7               	andwf	___xxtofl@arg+1,f
  4336  0784  307F               	movlw	127
  4337  0785  05A8               	andwf	___xxtofl@arg+2,f
  4338  0786  30FF               	movlw	255
  4339  0787  05A9               	andwf	___xxtofl@arg+3,f
  4340  0788                     l745:
  4341  0788  1003               	clrc
  4342  0789  0CA5               	rrf	___xxtofl@exp,f
  4343  078A                     l2898:
  4344  078A  0825               	movf	___xxtofl@exp,w
  4345  078B  00A0               	movwf	??___xxtofl
  4346  078C  01A1               	clrf	??___xxtofl+1
  4347  078D  01A2               	clrf	??___xxtofl+2
  4348  078E  01A3               	clrf	??___xxtofl+3
  4349  078F  3018               	movlw	24
  4350  0790                     u3035:
  4351  0790  1003               	clrc
  4352  0791  0DA0               	rlf	??___xxtofl,f
  4353  0792  0DA1               	rlf	??___xxtofl+1,f
  4354  0793  0DA2               	rlf	??___xxtofl+2,f
  4355  0794  0DA3               	rlf	??___xxtofl+3,f
  4356  0795                     u3030:
  4357  0795  3EFF               	addlw	-1
  4358  0796  1D03               	skipz
  4359  0797  2F90               	goto	u3035
  4360  0798  0820               	movf	??___xxtofl,w
  4361  0799  04A6               	iorwf	___xxtofl@arg,f
  4362  079A  0821               	movf	??___xxtofl+1,w
  4363  079B  04A7               	iorwf	___xxtofl@arg+1,f
  4364  079C  0822               	movf	??___xxtofl+2,w
  4365  079D  04A8               	iorwf	___xxtofl@arg+2,f
  4366  079E  0823               	movf	??___xxtofl+3,w
  4367  079F  04A9               	iorwf	___xxtofl@arg+3,f
  4368  07A0                     l2900:
  4369  07A0  0824               	movf	___xxtofl@sign,w
  4370  07A1  1903               	btfsc	3,2
  4371  07A2  2FA4               	goto	u3041
  4372  07A3  2FA5               	goto	u3040
  4373  07A4                     u3041:
  4374  07A4  2FAA               	goto	l2906
  4375  07A5                     u3040:
  4376  07A5                     l2902:
  4377  07A5  1FF6               	btfss	___xxtofl@val+3,7
  4378  07A6  2FA8               	goto	u3051
  4379  07A7  2FA9               	goto	u3050
  4380  07A8                     u3051:
  4381  07A8  2FAA               	goto	l2906
  4382  07A9                     u3050:
  4383  07A9                     l2904:
  4384  07A9  17A9               	bsf	___xxtofl@arg+3,7
  4385  07AA                     l2906:
  4386  07AA  0829               	movf	___xxtofl@arg+3,w
  4387  07AB  00F6               	movwf	?___xxtofl+3
  4388  07AC  0828               	movf	___xxtofl@arg+2,w
  4389  07AD  00F5               	movwf	?___xxtofl+2
  4390  07AE  0827               	movf	___xxtofl@arg+1,w
  4391  07AF  00F4               	movwf	?___xxtofl+1
  4392  07B0  0826               	movf	___xxtofl@arg,w
  4393  07B1  00F3               	movwf	?___xxtofl
  4394  07B2                     l733:
  4395  07B2  0008               	return
  4396  07B3                     __end_of___xxtofl:
  4397                           
  4398                           	psect	text17
  4399  0ECF                     __ptext17:	
  4400 ;; *************** function ___fltol *****************
  4401 ;; Defined at:
  4402 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  f1              4   36[BANK0 ] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  exp1            1    8[COMMON] unsigned char 
  4407 ;;  sign1           1    7[COMMON] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  4   36[BANK0 ] long 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       4       0       0       0
  4418 ;;      Locals:         2       0       0       0       0
  4419 ;;      Temps:          0       5       0       0       0
  4420 ;;      Totals:         2       9       0       0       0
  4421 ;;Total ram usage:       11 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    1
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function ___fltol
  4433  0ECF                     ___fltol:
  4434  0ECF                     l2830:	
  4435                           ;incstack = 0
  4436                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4437                           
  4438  0ECF  1003               	clrc
  4439  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0ED2  0D46               	rlf	___fltol@f1+2,w
  4442  0ED3  0D47               	rlf	___fltol@f1+3,w
  4443  0ED4  00C8               	movwf	??___fltol
  4444  0ED5  0848               	movf	??___fltol,w
  4445  0ED6  00F8               	movwf	___fltol@exp1
  4446  0ED7  0878               	movf	___fltol@exp1,w
  4447  0ED8  1D03               	btfss	3,2
  4448  0ED9  2EDB               	goto	u2821
  4449  0EDA  2EDC               	goto	u2820
  4450  0EDB                     u2821:
  4451  0EDB  2EE5               	goto	l2836
  4452  0EDC                     u2820:
  4453  0EDC                     l2832:
  4454  0EDC  3000               	movlw	0
  4455  0EDD  00C7               	movwf	?___fltol+3
  4456  0EDE  3000               	movlw	0
  4457  0EDF  00C6               	movwf	?___fltol+2
  4458  0EE0  3000               	movlw	0
  4459  0EE1  00C5               	movwf	?___fltol+1
  4460  0EE2  3000               	movlw	0
  4461  0EE3  00C4               	movwf	?___fltol
  4462  0EE4  2F4A               	goto	l484
  4463  0EE5                     l2836:
  4464  0EE5  0844               	movf	___fltol@f1,w
  4465  0EE6  00C8               	movwf	??___fltol
  4466  0EE7  0845               	movf	___fltol@f1+1,w
  4467  0EE8  00C9               	movwf	??___fltol+1
  4468  0EE9  0846               	movf	___fltol@f1+2,w
  4469  0EEA  00CA               	movwf	??___fltol+2
  4470  0EEB  0847               	movf	___fltol@f1+3,w
  4471  0EEC  00CB               	movwf	??___fltol+3
  4472  0EED  301F               	movlw	31
  4473  0EEE                     u2835:
  4474  0EEE  1003               	clrc
  4475  0EEF  0CCB               	rrf	??___fltol+3,f
  4476  0EF0  0CCA               	rrf	??___fltol+2,f
  4477  0EF1  0CC9               	rrf	??___fltol+1,f
  4478  0EF2  0CC8               	rrf	??___fltol,f
  4479  0EF3                     u2830:
  4480  0EF3  3EFF               	addlw	-1
  4481  0EF4  1D03               	skipz
  4482  0EF5  2EEE               	goto	u2835
  4483  0EF6  0848               	movf	??___fltol,w
  4484  0EF7  00CC               	movwf	??___fltol+4
  4485  0EF8  084C               	movf	??___fltol+4,w
  4486  0EF9  00F7               	movwf	___fltol@sign1
  4487  0EFA                     l2838:
  4488  0EFA  17C6               	bsf	___fltol@f1+2,7
  4489  0EFB                     l2840:
  4490  0EFB  30FF               	movlw	255
  4491  0EFC  05C4               	andwf	___fltol@f1,f
  4492  0EFD  30FF               	movlw	255
  4493  0EFE  05C5               	andwf	___fltol@f1+1,f
  4494  0EFF  30FF               	movlw	255
  4495  0F00  05C6               	andwf	___fltol@f1+2,f
  4496  0F01  3000               	movlw	0
  4497  0F02  05C7               	andwf	___fltol@f1+3,f
  4498  0F03                     l2842:
  4499  0F03  3096               	movlw	150
  4500  0F04  02F8               	subwf	___fltol@exp1,f
  4501  0F05                     l2844:
  4502  0F05  1FF8               	btfss	___fltol@exp1,7
  4503  0F06  2F08               	goto	u2841
  4504  0F07  2F09               	goto	u2840
  4505  0F08                     u2841:
  4506  0F08  2F23               	goto	l2854
  4507  0F09                     u2840:
  4508  0F09                     l2846:
  4509  0F09  0878               	movf	___fltol@exp1,w
  4510  0F0A  3A80               	xorlw	128
  4511  0F0B  3E97               	addlw	151
  4512  0F0C  1803               	skipnc
  4513  0F0D  2F0F               	goto	u2851
  4514  0F0E  2F10               	goto	u2850
  4515  0F0F                     u2851:
  4516  0F0F  2F11               	goto	l2852
  4517  0F10                     u2850:
  4518  0F10  2EDC               	goto	l2832
  4519  0F11                     l2852:
  4520  0F11  3001               	movlw	1
  4521  0F12                     u2865:
  4522  0F12  1003               	clrc
  4523  0F13  0CC7               	rrf	___fltol@f1+3,f
  4524  0F14  0CC6               	rrf	___fltol@f1+2,f
  4525  0F15  0CC5               	rrf	___fltol@f1+1,f
  4526  0F16  0CC4               	rrf	___fltol@f1,f
  4527  0F17  3EFF               	addlw	-1
  4528  0F18  1D03               	skipz
  4529  0F19  2F12               	goto	u2865
  4530  0F1A  3001               	movlw	1
  4531  0F1B  00C8               	movwf	??___fltol
  4532  0F1C  0848               	movf	??___fltol,w
  4533  0F1D  07F8               	addwf	___fltol@exp1,f
  4534  0F1E  1D03               	btfss	3,2
  4535  0F1F  2F21               	goto	u2871
  4536  0F20  2F22               	goto	u2870
  4537  0F21                     u2871:
  4538  0F21  2F11               	goto	l2852
  4539  0F22                     u2870:
  4540  0F22  2F3A               	goto	l2862
  4541  0F23                     l2854:
  4542  0F23  3020               	movlw	32
  4543  0F24  0278               	subwf	___fltol@exp1,w
  4544  0F25  1C03               	skipc
  4545  0F26  2F28               	goto	u2881
  4546  0F27  2F29               	goto	u2880
  4547  0F28                     u2881:
  4548  0F28  2F35               	goto	l491
  4549  0F29                     u2880:
  4550  0F29  2EDC               	goto	l2832
  4551  0F2A                     l2860:
  4552  0F2A  3001               	movlw	1
  4553  0F2B  00C8               	movwf	??___fltol
  4554  0F2C                     u2895:
  4555  0F2C  1003               	clrc
  4556  0F2D  0DC4               	rlf	___fltol@f1,f
  4557  0F2E  0DC5               	rlf	___fltol@f1+1,f
  4558  0F2F  0DC6               	rlf	___fltol@f1+2,f
  4559  0F30  0DC7               	rlf	___fltol@f1+3,f
  4560  0F31  0BC8               	decfsz	??___fltol,f
  4561  0F32  2F2C               	goto	u2895
  4562  0F33  3001               	movlw	1
  4563  0F34  02F8               	subwf	___fltol@exp1,f
  4564  0F35                     l491:
  4565  0F35  0878               	movf	___fltol@exp1,w
  4566  0F36  1D03               	btfss	3,2
  4567  0F37  2F39               	goto	u2901
  4568  0F38  2F3A               	goto	u2900
  4569  0F39                     u2901:
  4570  0F39  2F2A               	goto	l2860
  4571  0F3A                     u2900:
  4572  0F3A                     l2862:
  4573  0F3A  0877               	movf	___fltol@sign1,w
  4574  0F3B  1903               	btfsc	3,2
  4575  0F3C  2F3E               	goto	u2911
  4576  0F3D  2F3F               	goto	u2910
  4577  0F3E                     u2911:
  4578  0F3E  2F4A               	goto	l494
  4579  0F3F                     u2910:
  4580  0F3F                     l2864:
  4581  0F3F  09C4               	comf	___fltol@f1,f
  4582  0F40  09C5               	comf	___fltol@f1+1,f
  4583  0F41  09C6               	comf	___fltol@f1+2,f
  4584  0F42  09C7               	comf	___fltol@f1+3,f
  4585  0F43  0AC4               	incf	___fltol@f1,f
  4586  0F44  1903               	skipnz
  4587  0F45  0AC5               	incf	___fltol@f1+1,f
  4588  0F46  1903               	skipnz
  4589  0F47  0AC6               	incf	___fltol@f1+2,f
  4590  0F48  1903               	skipnz
  4591  0F49  0AC7               	incf	___fltol@f1+3,f
  4592  0F4A                     l494:
  4593  0F4A                     l484:
  4594  0F4A  0008               	return
  4595  0F4B                     __end_of___fltol:
  4596                           
  4597                           	psect	text18
  4598  002F                     __ptext18:	
  4599 ;; *************** function ___flmul *****************
  4600 ;; Defined at:
  4601 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  b               4   10[BANK0 ] long 
  4604 ;;  a               4   14[BANK0 ] long 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  prod            4   30[BANK0 ] struct .
  4607 ;;  grs             4   24[BANK0 ] unsigned long 
  4608 ;;  temp            2   34[BANK0 ] struct .
  4609 ;;  bexp            1   29[BANK0 ] unsigned char 
  4610 ;;  aexp            1   28[BANK0 ] unsigned char 
  4611 ;;  sign            1   23[BANK0 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  4   10[BANK0 ] unsigned char 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4621 ;;      Params:         0       8       0       0       0
  4622 ;;      Locals:         0      13       0       0       0
  4623 ;;      Temps:          0       5       0       0       0
  4624 ;;      Totals:         0      26       0       0       0
  4625 ;;Total ram usage:       26 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    2
  4628 ;; This function calls:
  4629 ;;		__Umul8_16
  4630 ;; This function is called by:
  4631 ;;		_main
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function ___flmul
  4637  002F                     ___flmul:
  4638  002F                     l2260:	
  4639                           ;incstack = 0
  4640                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4641                           
  4642  002F  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0030  1303               	bcf	3,6	;RP1=0, select bank0
  4644  0031  082D               	movf	___flmul@b+3,w
  4645  0032  3980               	andlw	128
  4646  0033  00B2               	movwf	??___flmul
  4647  0034  0832               	movf	??___flmul,w
  4648  0035  00B7               	movwf	___flmul@sign
  4649  0036                     l2262:
  4650  0036  082D               	movf	___flmul@b+3,w
  4651  0037  00B2               	movwf	??___flmul
  4652  0038  0732               	addwf	??___flmul,w
  4653  0039  00B3               	movwf	??___flmul+1
  4654  003A  0833               	movf	??___flmul+1,w
  4655  003B  00BD               	movwf	___flmul@bexp
  4656  003C                     l2264:
  4657  003C  1FAC               	btfss	___flmul@b+2,7
  4658  003D  283F               	goto	u1861
  4659  003E  2840               	goto	u1860
  4660  003F                     u1861:
  4661  003F  2841               	goto	l2268
  4662  0040                     u1860:
  4663  0040                     l2266:
  4664  0040  143D               	bsf	___flmul@bexp,0
  4665  0041                     l2268:
  4666  0041  083D               	movf	___flmul@bexp,w
  4667  0042  1903               	btfsc	3,2
  4668  0043  2845               	goto	u1871
  4669  0044  2846               	goto	u1870
  4670  0045                     u1871:
  4671  0045  2855               	goto	l2276
  4672  0046                     u1870:
  4673  0046                     l2270:
  4674  0046  0A3D               	incf	___flmul@bexp,w
  4675  0047  1D03               	btfss	3,2
  4676  0048  284A               	goto	u1881
  4677  0049  284B               	goto	u1880
  4678  004A                     u1881:
  4679  004A  2853               	goto	l2274
  4680  004B                     u1880:
  4681  004B                     l2272:
  4682  004B  3000               	movlw	0
  4683  004C  00AD               	movwf	___flmul@b+3
  4684  004D  3000               	movlw	0
  4685  004E  00AC               	movwf	___flmul@b+2
  4686  004F  3000               	movlw	0
  4687  0050  00AB               	movwf	___flmul@b+1
  4688  0051  3000               	movlw	0
  4689  0052  00AA               	movwf	___flmul@b
  4690  0053                     l2274:
  4691  0053  17AC               	bsf	___flmul@b+2,7
  4692  0054  285D               	goto	l2278
  4693  0055                     l2276:
  4694  0055  3000               	movlw	0
  4695  0056  00AD               	movwf	___flmul@b+3
  4696  0057  3000               	movlw	0
  4697  0058  00AC               	movwf	___flmul@b+2
  4698  0059  3000               	movlw	0
  4699  005A  00AB               	movwf	___flmul@b+1
  4700  005B  3000               	movlw	0
  4701  005C  00AA               	movwf	___flmul@b
  4702  005D                     l2278:
  4703  005D  0831               	movf	___flmul@a+3,w
  4704  005E  3980               	andlw	128
  4705  005F  00B2               	movwf	??___flmul
  4706  0060  0832               	movf	??___flmul,w
  4707  0061  06B7               	xorwf	___flmul@sign,f
  4708  0062                     l2280:
  4709  0062  0831               	movf	___flmul@a+3,w
  4710  0063  00B2               	movwf	??___flmul
  4711  0064  0732               	addwf	??___flmul,w
  4712  0065  00B3               	movwf	??___flmul+1
  4713  0066  0833               	movf	??___flmul+1,w
  4714  0067  00BC               	movwf	___flmul@aexp
  4715  0068                     l2282:
  4716  0068  1FB0               	btfss	___flmul@a+2,7
  4717  0069  286B               	goto	u1891
  4718  006A  286C               	goto	u1890
  4719  006B                     u1891:
  4720  006B  286D               	goto	l2286
  4721  006C                     u1890:
  4722  006C                     l2284:
  4723  006C  143C               	bsf	___flmul@aexp,0
  4724  006D                     l2286:
  4725  006D  083C               	movf	___flmul@aexp,w
  4726  006E  1903               	btfsc	3,2
  4727  006F  2871               	goto	u1901
  4728  0070  2872               	goto	u1900
  4729  0071                     u1901:
  4730  0071  2881               	goto	l2294
  4731  0072                     u1900:
  4732  0072                     l2288:
  4733  0072  0A3C               	incf	___flmul@aexp,w
  4734  0073  1D03               	btfss	3,2
  4735  0074  2876               	goto	u1911
  4736  0075  2877               	goto	u1910
  4737  0076                     u1911:
  4738  0076  287F               	goto	l2292
  4739  0077                     u1910:
  4740  0077                     l2290:
  4741  0077  3000               	movlw	0
  4742  0078  00B1               	movwf	___flmul@a+3
  4743  0079  3000               	movlw	0
  4744  007A  00B0               	movwf	___flmul@a+2
  4745  007B  3000               	movlw	0
  4746  007C  00AF               	movwf	___flmul@a+1
  4747  007D  3000               	movlw	0
  4748  007E  00AE               	movwf	___flmul@a
  4749  007F                     l2292:
  4750  007F  17B0               	bsf	___flmul@a+2,7
  4751  0080  2889               	goto	l2296
  4752  0081                     l2294:
  4753  0081  3000               	movlw	0
  4754  0082  00B1               	movwf	___flmul@a+3
  4755  0083  3000               	movlw	0
  4756  0084  00B0               	movwf	___flmul@a+2
  4757  0085  3000               	movlw	0
  4758  0086  00AF               	movwf	___flmul@a+1
  4759  0087  3000               	movlw	0
  4760  0088  00AE               	movwf	___flmul@a
  4761  0089                     l2296:
  4762  0089  083C               	movf	___flmul@aexp,w
  4763  008A  1903               	btfsc	3,2
  4764  008B  288D               	goto	u1921
  4765  008C  288E               	goto	u1920
  4766  008D                     u1921:
  4767  008D  2893               	goto	l2300
  4768  008E                     u1920:
  4769  008E                     l2298:
  4770  008E  083D               	movf	___flmul@bexp,w
  4771  008F  1D03               	btfss	3,2
  4772  0090  2892               	goto	u1931
  4773  0091  2893               	goto	u1930
  4774  0092                     u1931:
  4775  0092  289C               	goto	l2304
  4776  0093                     u1930:
  4777  0093                     l2300:
  4778  0093  3000               	movlw	0
  4779  0094  00AD               	movwf	?___flmul+3
  4780  0095  3000               	movlw	0
  4781  0096  00AC               	movwf	?___flmul+2
  4782  0097  3000               	movlw	0
  4783  0098  00AB               	movwf	?___flmul+1
  4784  0099  3000               	movlw	0
  4785  009A  00AA               	movwf	?___flmul
  4786  009B  2B8F               	goto	l687
  4787  009C                     l2304:
  4788  009C  082A               	movf	___flmul@b,w
  4789  009D  00B2               	movwf	??___flmul
  4790  009E  0832               	movf	??___flmul,w
  4791  009F  00F3               	movwf	__Umul8_16@multiplicand
  4792  00A0  0830               	movf	___flmul@a+2,w
  4793  00A1  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  4794  00A6  0874               	movf	?__Umul8_16+1,w
  4795  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  4796  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  4797  00A9  00C3               	movwf	___flmul@temp+1
  4798  00AA  0873               	movf	?__Umul8_16,w
  4799  00AB  00C2               	movwf	___flmul@temp
  4800  00AC                     l2306:
  4801  00AC  0842               	movf	___flmul@temp,w
  4802  00AD  00B2               	movwf	??___flmul
  4803  00AE  01B3               	clrf	??___flmul+1
  4804  00AF  01B4               	clrf	??___flmul+2
  4805  00B0  01B5               	clrf	??___flmul+3
  4806  00B1  0835               	movf	??___flmul+3,w
  4807  00B2  00BB               	movwf	___flmul@grs+3
  4808  00B3  0834               	movf	??___flmul+2,w
  4809  00B4  00BA               	movwf	___flmul@grs+2
  4810  00B5  0833               	movf	??___flmul+1,w
  4811  00B6  00B9               	movwf	___flmul@grs+1
  4812  00B7  0832               	movf	??___flmul,w
  4813  00B8  00B8               	movwf	___flmul@grs
  4814  00B9                     l2308:
  4815  00B9  0843               	movf	___flmul@temp+1,w
  4816  00BA  00B2               	movwf	??___flmul
  4817  00BB  01B3               	clrf	??___flmul+1
  4818  00BC  01B4               	clrf	??___flmul+2
  4819  00BD  01B5               	clrf	??___flmul+3
  4820  00BE  0835               	movf	??___flmul+3,w
  4821  00BF  00C1               	movwf	___flmul@prod+3
  4822  00C0  0834               	movf	??___flmul+2,w
  4823  00C1  00C0               	movwf	___flmul@prod+2
  4824  00C2  0833               	movf	??___flmul+1,w
  4825  00C3  00BF               	movwf	___flmul@prod+1
  4826  00C4  0832               	movf	??___flmul,w
  4827  00C5  00BE               	movwf	___flmul@prod
  4828  00C6  082B               	movf	___flmul@b+1,w
  4829  00C7  00B2               	movwf	??___flmul
  4830  00C8  0832               	movf	??___flmul,w
  4831  00C9  00F3               	movwf	__Umul8_16@multiplicand
  4832  00CA  082F               	movf	___flmul@a+1,w
  4833  00CB  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  4834  00D0  0874               	movf	?__Umul8_16+1,w
  4835  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  4836  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  4837  00D3  00C3               	movwf	___flmul@temp+1
  4838  00D4  0873               	movf	?__Umul8_16,w
  4839  00D5  00C2               	movwf	___flmul@temp
  4840  00D6                     l2310:
  4841  00D6  0842               	movf	___flmul@temp,w
  4842  00D7  00B2               	movwf	??___flmul
  4843  00D8  01B3               	clrf	??___flmul+1
  4844  00D9  01B4               	clrf	??___flmul+2
  4845  00DA  01B5               	clrf	??___flmul+3
  4846  00DB  0832               	movf	??___flmul,w
  4847  00DC  07B8               	addwf	___flmul@grs,f
  4848  00DD  0833               	movf	??___flmul+1,w
  4849  00DE  1103               	clrz
  4850  00DF  1803               	skipnc
  4851  00E0  3E01               	addlw	1
  4852  00E1  1903               	skipnz
  4853  00E2  28E4               	goto	u1941
  4854  00E3  07B9               	addwf	___flmul@grs+1,f
  4855  00E4                     u1941:
  4856  00E4  0834               	movf	??___flmul+2,w
  4857  00E5  1103               	clrz
  4858  00E6  1803               	skipnc
  4859  00E7  3E01               	addlw	1
  4860  00E8  1903               	skipnz
  4861  00E9  28EB               	goto	u1942
  4862  00EA  07BA               	addwf	___flmul@grs+2,f
  4863  00EB                     u1942:
  4864  00EB  0835               	movf	??___flmul+3,w
  4865  00EC  1103               	clrz
  4866  00ED  1803               	skipnc
  4867  00EE  3E01               	addlw	1
  4868  00EF  1903               	skipnz
  4869  00F0  28F2               	goto	u1943
  4870  00F1  07BB               	addwf	___flmul@grs+3,f
  4871  00F2                     u1943:
  4872  00F2                     l2312:
  4873  00F2  0843               	movf	___flmul@temp+1,w
  4874  00F3  00B2               	movwf	??___flmul
  4875  00F4  01B3               	clrf	??___flmul+1
  4876  00F5  01B4               	clrf	??___flmul+2
  4877  00F6  01B5               	clrf	??___flmul+3
  4878  00F7  0832               	movf	??___flmul,w
  4879  00F8  07BE               	addwf	___flmul@prod,f
  4880  00F9  0833               	movf	??___flmul+1,w
  4881  00FA  1103               	clrz
  4882  00FB  1803               	skipnc
  4883  00FC  3E01               	addlw	1
  4884  00FD  1903               	skipnz
  4885  00FE  2900               	goto	u1951
  4886  00FF  07BF               	addwf	___flmul@prod+1,f
  4887  0100                     u1951:
  4888  0100  0834               	movf	??___flmul+2,w
  4889  0101  1103               	clrz
  4890  0102  1803               	skipnc
  4891  0103  3E01               	addlw	1
  4892  0104  1903               	skipnz
  4893  0105  2907               	goto	u1952
  4894  0106  07C0               	addwf	___flmul@prod+2,f
  4895  0107                     u1952:
  4896  0107  0835               	movf	??___flmul+3,w
  4897  0108  1103               	clrz
  4898  0109  1803               	skipnc
  4899  010A  3E01               	addlw	1
  4900  010B  1903               	skipnz
  4901  010C  290E               	goto	u1953
  4902  010D  07C1               	addwf	___flmul@prod+3,f
  4903  010E                     u1953:
  4904  010E  082C               	movf	___flmul@b+2,w
  4905  010F  00B2               	movwf	??___flmul
  4906  0110  0832               	movf	??___flmul,w
  4907  0111  00F3               	movwf	__Umul8_16@multiplicand
  4908  0112  082E               	movf	___flmul@a,w
  4909  0113  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  4910  0118  0874               	movf	?__Umul8_16+1,w
  4911  0119  1283               	bcf	3,5	;RP0=0, select bank0
  4912  011A  1303               	bcf	3,6	;RP1=0, select bank0
  4913  011B  00C3               	movwf	___flmul@temp+1
  4914  011C  0873               	movf	?__Umul8_16,w
  4915  011D  00C2               	movwf	___flmul@temp
  4916  011E                     l2314:
  4917  011E  0842               	movf	___flmul@temp,w
  4918  011F  00B2               	movwf	??___flmul
  4919  0120  01B3               	clrf	??___flmul+1
  4920  0121  01B4               	clrf	??___flmul+2
  4921  0122  01B5               	clrf	??___flmul+3
  4922  0123  0832               	movf	??___flmul,w
  4923  0124  07B8               	addwf	___flmul@grs,f
  4924  0125  0833               	movf	??___flmul+1,w
  4925  0126  1103               	clrz
  4926  0127  1803               	skipnc
  4927  0128  3E01               	addlw	1
  4928  0129  1903               	skipnz
  4929  012A  292C               	goto	u1961
  4930  012B  07B9               	addwf	___flmul@grs+1,f
  4931  012C                     u1961:
  4932  012C  0834               	movf	??___flmul+2,w
  4933  012D  1103               	clrz
  4934  012E  1803               	skipnc
  4935  012F  3E01               	addlw	1
  4936  0130  1903               	skipnz
  4937  0131  2933               	goto	u1962
  4938  0132  07BA               	addwf	___flmul@grs+2,f
  4939  0133                     u1962:
  4940  0133  0835               	movf	??___flmul+3,w
  4941  0134  1103               	clrz
  4942  0135  1803               	skipnc
  4943  0136  3E01               	addlw	1
  4944  0137  1903               	skipnz
  4945  0138  293A               	goto	u1963
  4946  0139  07BB               	addwf	___flmul@grs+3,f
  4947  013A                     u1963:
  4948  013A                     l2316:
  4949  013A  0843               	movf	___flmul@temp+1,w
  4950  013B  00B2               	movwf	??___flmul
  4951  013C  01B3               	clrf	??___flmul+1
  4952  013D  01B4               	clrf	??___flmul+2
  4953  013E  01B5               	clrf	??___flmul+3
  4954  013F  0832               	movf	??___flmul,w
  4955  0140  07BE               	addwf	___flmul@prod,f
  4956  0141  0833               	movf	??___flmul+1,w
  4957  0142  1103               	clrz
  4958  0143  1803               	skipnc
  4959  0144  3E01               	addlw	1
  4960  0145  1903               	skipnz
  4961  0146  2948               	goto	u1971
  4962  0147  07BF               	addwf	___flmul@prod+1,f
  4963  0148                     u1971:
  4964  0148  0834               	movf	??___flmul+2,w
  4965  0149  1103               	clrz
  4966  014A  1803               	skipnc
  4967  014B  3E01               	addlw	1
  4968  014C  1903               	skipnz
  4969  014D  294F               	goto	u1972
  4970  014E  07C0               	addwf	___flmul@prod+2,f
  4971  014F                     u1972:
  4972  014F  0835               	movf	??___flmul+3,w
  4973  0150  1103               	clrz
  4974  0151  1803               	skipnc
  4975  0152  3E01               	addlw	1
  4976  0153  1903               	skipnz
  4977  0154  2956               	goto	u1973
  4978  0155  07C1               	addwf	___flmul@prod+3,f
  4979  0156                     u1973:
  4980  0156                     l2318:
  4981  0156  3008               	movlw	8
  4982  0157  00B2               	movwf	??___flmul
  4983  0158                     u1985:
  4984  0158  1003               	clrc
  4985  0159  0DB8               	rlf	___flmul@grs,f
  4986  015A  0DB9               	rlf	___flmul@grs+1,f
  4987  015B  0DBA               	rlf	___flmul@grs+2,f
  4988  015C  0DBB               	rlf	___flmul@grs+3,f
  4989  015D  0BB2               	decfsz	??___flmul,f
  4990  015E  2958               	goto	u1985
  4991  015F                     l2320:
  4992  015F  082B               	movf	___flmul@b+1,w
  4993  0160  00B2               	movwf	??___flmul
  4994  0161  0832               	movf	??___flmul,w
  4995  0162  00F3               	movwf	__Umul8_16@multiplicand
  4996  0163  082E               	movf	___flmul@a,w
  4997  0164  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  4998  0169  0874               	movf	?__Umul8_16+1,w
  4999  016A  1283               	bcf	3,5	;RP0=0, select bank0
  5000  016B  1303               	bcf	3,6	;RP1=0, select bank0
  5001  016C  00C3               	movwf	___flmul@temp+1
  5002  016D  0873               	movf	?__Umul8_16,w
  5003  016E  00C2               	movwf	___flmul@temp
  5004  016F                     l2322:
  5005  016F  0842               	movf	___flmul@temp,w
  5006  0170  00B2               	movwf	??___flmul
  5007  0171  0843               	movf	___flmul@temp+1,w
  5008  0172  00B3               	movwf	??___flmul+1
  5009  0173  01B4               	clrf	??___flmul+2
  5010  0174  01B5               	clrf	??___flmul+3
  5011  0175  0832               	movf	??___flmul,w
  5012  0176  07B8               	addwf	___flmul@grs,f
  5013  0177  0833               	movf	??___flmul+1,w
  5014  0178  1103               	clrz
  5015  0179  1803               	skipnc
  5016  017A  3E01               	addlw	1
  5017  017B  1903               	skipnz
  5018  017C  297E               	goto	u1991
  5019  017D  07B9               	addwf	___flmul@grs+1,f
  5020  017E                     u1991:
  5021  017E  0834               	movf	??___flmul+2,w
  5022  017F  1103               	clrz
  5023  0180  1803               	skipnc
  5024  0181  3E01               	addlw	1
  5025  0182  1903               	skipnz
  5026  0183  2985               	goto	u1992
  5027  0184  07BA               	addwf	___flmul@grs+2,f
  5028  0185                     u1992:
  5029  0185  0835               	movf	??___flmul+3,w
  5030  0186  1103               	clrz
  5031  0187  1803               	skipnc
  5032  0188  3E01               	addlw	1
  5033  0189  1903               	skipnz
  5034  018A  298C               	goto	u1993
  5035  018B  07BB               	addwf	___flmul@grs+3,f
  5036  018C                     u1993:
  5037  018C                     l2324:
  5038  018C  082A               	movf	___flmul@b,w
  5039  018D  00B2               	movwf	??___flmul
  5040  018E  0832               	movf	??___flmul,w
  5041  018F  00F3               	movwf	__Umul8_16@multiplicand
  5042  0190  082F               	movf	___flmul@a+1,w
  5043  0191  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  5044  0196  0874               	movf	?__Umul8_16+1,w
  5045  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0198  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0199  00C3               	movwf	___flmul@temp+1
  5048  019A  0873               	movf	?__Umul8_16,w
  5049  019B  00C2               	movwf	___flmul@temp
  5050  019C                     l2326:
  5051  019C  0842               	movf	___flmul@temp,w
  5052  019D  00B2               	movwf	??___flmul
  5053  019E  0843               	movf	___flmul@temp+1,w
  5054  019F  00B3               	movwf	??___flmul+1
  5055  01A0  01B4               	clrf	??___flmul+2
  5056  01A1  01B5               	clrf	??___flmul+3
  5057  01A2  0832               	movf	??___flmul,w
  5058  01A3  07B8               	addwf	___flmul@grs,f
  5059  01A4  0833               	movf	??___flmul+1,w
  5060  01A5  1103               	clrz
  5061  01A6  1803               	skipnc
  5062  01A7  3E01               	addlw	1
  5063  01A8  1903               	skipnz
  5064  01A9  29AB               	goto	u2001
  5065  01AA  07B9               	addwf	___flmul@grs+1,f
  5066  01AB                     u2001:
  5067  01AB  0834               	movf	??___flmul+2,w
  5068  01AC  1103               	clrz
  5069  01AD  1803               	skipnc
  5070  01AE  3E01               	addlw	1
  5071  01AF  1903               	skipnz
  5072  01B0  29B2               	goto	u2002
  5073  01B1  07BA               	addwf	___flmul@grs+2,f
  5074  01B2                     u2002:
  5075  01B2  0835               	movf	??___flmul+3,w
  5076  01B3  1103               	clrz
  5077  01B4  1803               	skipnc
  5078  01B5  3E01               	addlw	1
  5079  01B6  1903               	skipnz
  5080  01B7  29B9               	goto	u2003
  5081  01B8  07BB               	addwf	___flmul@grs+3,f
  5082  01B9                     u2003:
  5083  01B9                     l2328:
  5084  01B9  3008               	movlw	8
  5085  01BA  00B2               	movwf	??___flmul
  5086  01BB                     u2015:
  5087  01BB  1003               	clrc
  5088  01BC  0DB8               	rlf	___flmul@grs,f
  5089  01BD  0DB9               	rlf	___flmul@grs+1,f
  5090  01BE  0DBA               	rlf	___flmul@grs+2,f
  5091  01BF  0DBB               	rlf	___flmul@grs+3,f
  5092  01C0  0BB2               	decfsz	??___flmul,f
  5093  01C1  29BB               	goto	u2015
  5094  01C2  082A               	movf	___flmul@b,w
  5095  01C3  00B2               	movwf	??___flmul
  5096  01C4  0832               	movf	??___flmul,w
  5097  01C5  00F3               	movwf	__Umul8_16@multiplicand
  5098  01C6  082E               	movf	___flmul@a,w
  5099  01C7  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  5100  01CC  0874               	movf	?__Umul8_16+1,w
  5101  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  5102  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  5103  01CF  00C3               	movwf	___flmul@temp+1
  5104  01D0  0873               	movf	?__Umul8_16,w
  5105  01D1  00C2               	movwf	___flmul@temp
  5106  01D2                     l2330:
  5107  01D2  0842               	movf	___flmul@temp,w
  5108  01D3  00B2               	movwf	??___flmul
  5109  01D4  0843               	movf	___flmul@temp+1,w
  5110  01D5  00B3               	movwf	??___flmul+1
  5111  01D6  01B4               	clrf	??___flmul+2
  5112  01D7  01B5               	clrf	??___flmul+3
  5113  01D8  0832               	movf	??___flmul,w
  5114  01D9  07B8               	addwf	___flmul@grs,f
  5115  01DA  0833               	movf	??___flmul+1,w
  5116  01DB  1103               	clrz
  5117  01DC  1803               	skipnc
  5118  01DD  3E01               	addlw	1
  5119  01DE  1903               	skipnz
  5120  01DF  29E1               	goto	u2021
  5121  01E0  07B9               	addwf	___flmul@grs+1,f
  5122  01E1                     u2021:
  5123  01E1  0834               	movf	??___flmul+2,w
  5124  01E2  1103               	clrz
  5125  01E3  1803               	skipnc
  5126  01E4  3E01               	addlw	1
  5127  01E5  1903               	skipnz
  5128  01E6  29E8               	goto	u2022
  5129  01E7  07BA               	addwf	___flmul@grs+2,f
  5130  01E8                     u2022:
  5131  01E8  0835               	movf	??___flmul+3,w
  5132  01E9  1103               	clrz
  5133  01EA  1803               	skipnc
  5134  01EB  3E01               	addlw	1
  5135  01EC  1903               	skipnz
  5136  01ED  29EF               	goto	u2023
  5137  01EE  07BB               	addwf	___flmul@grs+3,f
  5138  01EF                     u2023:
  5139  01EF                     l2332:
  5140  01EF  082B               	movf	___flmul@b+1,w
  5141  01F0  00B2               	movwf	??___flmul
  5142  01F1  0832               	movf	??___flmul,w
  5143  01F2  00F3               	movwf	__Umul8_16@multiplicand
  5144  01F3  0830               	movf	___flmul@a+2,w
  5145  01F4  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  5146  01F9  0874               	movf	?__Umul8_16+1,w
  5147  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  5148  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  5149  01FC  00C3               	movwf	___flmul@temp+1
  5150  01FD  0873               	movf	?__Umul8_16,w
  5151  01FE  00C2               	movwf	___flmul@temp
  5152  01FF  0842               	movf	___flmul@temp,w
  5153  0200  00B2               	movwf	??___flmul
  5154  0201  0843               	movf	___flmul@temp+1,w
  5155  0202  00B3               	movwf	??___flmul+1
  5156  0203  01B4               	clrf	??___flmul+2
  5157  0204  01B5               	clrf	??___flmul+3
  5158  0205  0832               	movf	??___flmul,w
  5159  0206  07BE               	addwf	___flmul@prod,f
  5160  0207  0833               	movf	??___flmul+1,w
  5161  0208  1103               	clrz
  5162  0209  1803               	skipnc
  5163  020A  3E01               	addlw	1
  5164  020B  1903               	skipnz
  5165  020C  2A0E               	goto	u2031
  5166  020D  07BF               	addwf	___flmul@prod+1,f
  5167  020E                     u2031:
  5168  020E  0834               	movf	??___flmul+2,w
  5169  020F  1103               	clrz
  5170  0210  1803               	skipnc
  5171  0211  3E01               	addlw	1
  5172  0212  1903               	skipnz
  5173  0213  2A15               	goto	u2032
  5174  0214  07C0               	addwf	___flmul@prod+2,f
  5175  0215                     u2032:
  5176  0215  0835               	movf	??___flmul+3,w
  5177  0216  1103               	clrz
  5178  0217  1803               	skipnc
  5179  0218  3E01               	addlw	1
  5180  0219  1903               	skipnz
  5181  021A  2A1C               	goto	u2033
  5182  021B  07C1               	addwf	___flmul@prod+3,f
  5183  021C                     u2033:
  5184  021C                     l2334:
  5185  021C  082C               	movf	___flmul@b+2,w
  5186  021D  00B2               	movwf	??___flmul
  5187  021E  0832               	movf	??___flmul,w
  5188  021F  00F3               	movwf	__Umul8_16@multiplicand
  5189  0220  082F               	movf	___flmul@a+1,w
  5190  0221  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  5191  0226  0874               	movf	?__Umul8_16+1,w
  5192  0227  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0228  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0229  00C3               	movwf	___flmul@temp+1
  5195  022A  0873               	movf	?__Umul8_16,w
  5196  022B  00C2               	movwf	___flmul@temp
  5197  022C                     l2336:
  5198  022C  0842               	movf	___flmul@temp,w
  5199  022D  00B2               	movwf	??___flmul
  5200  022E  0843               	movf	___flmul@temp+1,w
  5201  022F  00B3               	movwf	??___flmul+1
  5202  0230  01B4               	clrf	??___flmul+2
  5203  0231  01B5               	clrf	??___flmul+3
  5204  0232  0832               	movf	??___flmul,w
  5205  0233  07BE               	addwf	___flmul@prod,f
  5206  0234  0833               	movf	??___flmul+1,w
  5207  0235  1103               	clrz
  5208  0236  1803               	skipnc
  5209  0237  3E01               	addlw	1
  5210  0238  1903               	skipnz
  5211  0239  2A3B               	goto	u2041
  5212  023A  07BF               	addwf	___flmul@prod+1,f
  5213  023B                     u2041:
  5214  023B  0834               	movf	??___flmul+2,w
  5215  023C  1103               	clrz
  5216  023D  1803               	skipnc
  5217  023E  3E01               	addlw	1
  5218  023F  1903               	skipnz
  5219  0240  2A42               	goto	u2042
  5220  0241  07C0               	addwf	___flmul@prod+2,f
  5221  0242                     u2042:
  5222  0242  0835               	movf	??___flmul+3,w
  5223  0243  1103               	clrz
  5224  0244  1803               	skipnc
  5225  0245  3E01               	addlw	1
  5226  0246  1903               	skipnz
  5227  0247  2A49               	goto	u2043
  5228  0248  07C1               	addwf	___flmul@prod+3,f
  5229  0249                     u2043:
  5230  0249  082C               	movf	___flmul@b+2,w
  5231  024A  00B2               	movwf	??___flmul
  5232  024B  0832               	movf	??___flmul,w
  5233  024C  00F3               	movwf	__Umul8_16@multiplicand
  5234  024D  0830               	movf	___flmul@a+2,w
  5235  024E  120A  158A  232F  120A  118A  	fcall	__Umul8_16
  5236  0253  0874               	movf	?__Umul8_16+1,w
  5237  0254  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0255  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0256  00C3               	movwf	___flmul@temp+1
  5240  0257  0873               	movf	?__Umul8_16,w
  5241  0258  00C2               	movwf	___flmul@temp
  5242  0259                     l2338:
  5243  0259  0842               	movf	___flmul@temp,w
  5244  025A  00B2               	movwf	??___flmul
  5245  025B  0843               	movf	___flmul@temp+1,w
  5246  025C  00B3               	movwf	??___flmul+1
  5247  025D  01B4               	clrf	??___flmul+2
  5248  025E  01B5               	clrf	??___flmul+3
  5249  025F  3008               	movlw	8
  5250  0260                     u2055:
  5251  0260  1003               	clrc
  5252  0261  0DB2               	rlf	??___flmul,f
  5253  0262  0DB3               	rlf	??___flmul+1,f
  5254  0263  0DB4               	rlf	??___flmul+2,f
  5255  0264  0DB5               	rlf	??___flmul+3,f
  5256  0265                     u2050:
  5257  0265  3EFF               	addlw	-1
  5258  0266  1D03               	skipz
  5259  0267  2A60               	goto	u2055
  5260  0268  0832               	movf	??___flmul,w
  5261  0269  07BE               	addwf	___flmul@prod,f
  5262  026A  0833               	movf	??___flmul+1,w
  5263  026B  1103               	clrz
  5264  026C  1803               	skipnc
  5265  026D  3E01               	addlw	1
  5266  026E  1903               	skipnz
  5267  026F  2A71               	goto	u2061
  5268  0270  07BF               	addwf	___flmul@prod+1,f
  5269  0271                     u2061:
  5270  0271  0834               	movf	??___flmul+2,w
  5271  0272  1103               	clrz
  5272  0273  1803               	skipnc
  5273  0274  3E01               	addlw	1
  5274  0275  1903               	skipnz
  5275  0276  2A78               	goto	u2062
  5276  0277  07C0               	addwf	___flmul@prod+2,f
  5277  0278                     u2062:
  5278  0278  0835               	movf	??___flmul+3,w
  5279  0279  1103               	clrz
  5280  027A  1803               	skipnc
  5281  027B  3E01               	addlw	1
  5282  027C  1903               	skipnz
  5283  027D  2A7F               	goto	u2063
  5284  027E  07C1               	addwf	___flmul@prod+3,f
  5285  027F                     u2063:
  5286  027F                     l2340:
  5287  027F  0838               	movf	___flmul@grs,w
  5288  0280  00B2               	movwf	??___flmul
  5289  0281  0839               	movf	___flmul@grs+1,w
  5290  0282  00B3               	movwf	??___flmul+1
  5291  0283  083A               	movf	___flmul@grs+2,w
  5292  0284  00B4               	movwf	??___flmul+2
  5293  0285  083B               	movf	___flmul@grs+3,w
  5294  0286  00B5               	movwf	??___flmul+3
  5295  0287  3018               	movlw	24
  5296  0288                     u2075:
  5297  0288  1003               	clrc
  5298  0289  0CB5               	rrf	??___flmul+3,f
  5299  028A  0CB4               	rrf	??___flmul+2,f
  5300  028B  0CB3               	rrf	??___flmul+1,f
  5301  028C  0CB2               	rrf	??___flmul,f
  5302  028D                     u2070:
  5303  028D  3EFF               	addlw	-1
  5304  028E  1D03               	skipz
  5305  028F  2A88               	goto	u2075
  5306  0290  0832               	movf	??___flmul,w
  5307  0291  07BE               	addwf	___flmul@prod,f
  5308  0292  0833               	movf	??___flmul+1,w
  5309  0293  1103               	clrz
  5310  0294  1803               	skipnc
  5311  0295  3E01               	addlw	1
  5312  0296  1903               	skipnz
  5313  0297  2A99               	goto	u2081
  5314  0298  07BF               	addwf	___flmul@prod+1,f
  5315  0299                     u2081:
  5316  0299  0834               	movf	??___flmul+2,w
  5317  029A  1103               	clrz
  5318  029B  1803               	skipnc
  5319  029C  3E01               	addlw	1
  5320  029D  1903               	skipnz
  5321  029E  2AA0               	goto	u2082
  5322  029F  07C0               	addwf	___flmul@prod+2,f
  5323  02A0                     u2082:
  5324  02A0  0835               	movf	??___flmul+3,w
  5325  02A1  1103               	clrz
  5326  02A2  1803               	skipnc
  5327  02A3  3E01               	addlw	1
  5328  02A4  1903               	skipnz
  5329  02A5  2AA7               	goto	u2083
  5330  02A6  07C1               	addwf	___flmul@prod+3,f
  5331  02A7                     u2083:
  5332  02A7                     l2342:
  5333  02A7  3008               	movlw	8
  5334  02A8  00B2               	movwf	??___flmul
  5335  02A9                     u2095:
  5336  02A9  1003               	clrc
  5337  02AA  0DB8               	rlf	___flmul@grs,f
  5338  02AB  0DB9               	rlf	___flmul@grs+1,f
  5339  02AC  0DBA               	rlf	___flmul@grs+2,f
  5340  02AD  0DBB               	rlf	___flmul@grs+3,f
  5341  02AE  0BB2               	decfsz	??___flmul,f
  5342  02AF  2AA9               	goto	u2095
  5343  02B0                     l2344:
  5344  02B0  083D               	movf	___flmul@bexp,w
  5345  02B1  073C               	addwf	___flmul@aexp,w
  5346  02B2  00B2               	movwf	??___flmul
  5347  02B3  01B3               	clrf	??___flmul+1
  5348  02B4  0DB3               	rlf	??___flmul+1,f
  5349  02B5  0832               	movf	??___flmul,w
  5350  02B6  3E82               	addlw	130
  5351  02B7  00C2               	movwf	___flmul@temp
  5352  02B8  0833               	movf	??___flmul+1,w
  5353  02B9  1803               	skipnc
  5354  02BA  3E01               	addlw	1
  5355  02BB  3EFF               	addlw	255
  5356  02BC  00C3               	movwf	___flmul@temp+1
  5357  02BD  2ADB               	goto	l2356
  5358  02BE                     l2346:
  5359  02BE  3001               	movlw	1
  5360  02BF  00B2               	movwf	??___flmul
  5361  02C0                     u2105:
  5362  02C0  1003               	clrc
  5363  02C1  0DBE               	rlf	___flmul@prod,f
  5364  02C2  0DBF               	rlf	___flmul@prod+1,f
  5365  02C3  0DC0               	rlf	___flmul@prod+2,f
  5366  02C4  0DC1               	rlf	___flmul@prod+3,f
  5367  02C5  0BB2               	decfsz	??___flmul,f
  5368  02C6  2AC0               	goto	u2105
  5369  02C7                     l2348:
  5370  02C7  1FBB               	btfss	___flmul@grs+3,7
  5371  02C8  2ACA               	goto	u2111
  5372  02C9  2ACB               	goto	u2110
  5373  02CA                     u2111:
  5374  02CA  2ACC               	goto	l2352
  5375  02CB                     u2110:
  5376  02CB                     l2350:
  5377  02CB  143E               	bsf	___flmul@prod,0
  5378  02CC                     l2352:
  5379  02CC  3001               	movlw	1
  5380  02CD  00B2               	movwf	??___flmul
  5381  02CE                     u2125:
  5382  02CE  1003               	clrc
  5383  02CF  0DB8               	rlf	___flmul@grs,f
  5384  02D0  0DB9               	rlf	___flmul@grs+1,f
  5385  02D1  0DBA               	rlf	___flmul@grs+2,f
  5386  02D2  0DBB               	rlf	___flmul@grs+3,f
  5387  02D3  0BB2               	decfsz	??___flmul,f
  5388  02D4  2ACE               	goto	u2125
  5389  02D5                     l2354:
  5390  02D5  30FF               	movlw	255
  5391  02D6  07C2               	addwf	___flmul@temp,f
  5392  02D7  1803               	skipnc
  5393  02D8  0AC3               	incf	___flmul@temp+1,f
  5394  02D9  30FF               	movlw	255
  5395  02DA  07C3               	addwf	___flmul@temp+1,f
  5396  02DB                     l2356:
  5397  02DB  1FC0               	btfss	___flmul@prod+2,7
  5398  02DC  2ADE               	goto	u2131
  5399  02DD  2ADF               	goto	u2130
  5400  02DE                     u2131:
  5401  02DE  2ABE               	goto	l2346
  5402  02DF                     u2130:
  5403  02DF                     l2358:
  5404  02DF  01BC               	clrf	___flmul@aexp
  5405  02E0                     l2360:
  5406  02E0  1FBB               	btfss	___flmul@grs+3,7
  5407  02E1  2AE3               	goto	u2141
  5408  02E2  2AE4               	goto	u2140
  5409  02E3                     u2141:
  5410  02E3  2B00               	goto	l2368
  5411  02E4                     u2140:
  5412  02E4                     l2362:
  5413  02E4  30FF               	movlw	255
  5414  02E5  0538               	andwf	___flmul@grs,w
  5415  02E6  00B2               	movwf	??___flmul
  5416  02E7  30FF               	movlw	255
  5417  02E8  0539               	andwf	___flmul@grs+1,w
  5418  02E9  00B3               	movwf	??___flmul+1
  5419  02EA  30FF               	movlw	255
  5420  02EB  053A               	andwf	___flmul@grs+2,w
  5421  02EC  00B4               	movwf	??___flmul+2
  5422  02ED  307F               	movlw	127
  5423  02EE  053B               	andwf	___flmul@grs+3,w
  5424  02EF  00B5               	movwf	??___flmul+3
  5425  02F0  0835               	movf	??___flmul+3,w
  5426  02F1  0434               	iorwf	??___flmul+2,w
  5427  02F2  0433               	iorwf	??___flmul+1,w
  5428  02F3  0432               	iorwf	??___flmul,w
  5429  02F4  1903               	skipnz
  5430  02F5  2AF7               	goto	u2151
  5431  02F6  2AF8               	goto	u2150
  5432  02F7                     u2151:
  5433  02F7  2AFB               	goto	l693
  5434  02F8                     u2150:
  5435  02F8                     l2364:
  5436  02F8  01BC               	clrf	___flmul@aexp
  5437  02F9  0ABC               	incf	___flmul@aexp,f
  5438  02FA  2B00               	goto	l2368
  5439  02FB                     l693:
  5440  02FB  1C3E               	btfss	___flmul@prod,0
  5441  02FC  2AFE               	goto	u2161
  5442  02FD  2AFF               	goto	u2160
  5443  02FE                     u2161:
  5444  02FE  2B00               	goto	l2368
  5445  02FF                     u2160:
  5446  02FF  2AF8               	goto	l2364
  5447  0300                     l2368:
  5448  0300  083C               	movf	___flmul@aexp,w
  5449  0301  1903               	btfsc	3,2
  5450  0302  2B04               	goto	u2171
  5451  0303  2B05               	goto	u2170
  5452  0304                     u2171:
  5453  0304  2B36               	goto	l2378
  5454  0305                     u2170:
  5455  0305                     l2370:
  5456  0305  3001               	movlw	1
  5457  0306  07BE               	addwf	___flmul@prod,f
  5458  0307  3000               	movlw	0
  5459  0308  1803               	skipnc
  5460  0309  3001               	movlw	1
  5461  030A  07BF               	addwf	___flmul@prod+1,f
  5462  030B  3000               	movlw	0
  5463  030C  1803               	skipnc
  5464  030D  3001               	movlw	1
  5465  030E  07C0               	addwf	___flmul@prod+2,f
  5466  030F  3000               	movlw	0
  5467  0310  1803               	skipnc
  5468  0311  3001               	movlw	1
  5469  0312  07C1               	addwf	___flmul@prod+3,f
  5470  0313                     l2372:
  5471  0313  1C41               	btfss	___flmul@prod+3,0
  5472  0314  2B16               	goto	u2181
  5473  0315  2B17               	goto	u2180
  5474  0316                     u2181:
  5475  0316  2B36               	goto	l2378
  5476  0317                     u2180:
  5477  0317                     l2374:
  5478  0317  083E               	movf	___flmul@prod,w
  5479  0318  00B2               	movwf	??___flmul
  5480  0319  083F               	movf	___flmul@prod+1,w
  5481  031A  00B3               	movwf	??___flmul+1
  5482  031B  0840               	movf	___flmul@prod+2,w
  5483  031C  00B4               	movwf	??___flmul+2
  5484  031D  0841               	movf	___flmul@prod+3,w
  5485  031E  00B5               	movwf	??___flmul+3
  5486  031F  3001               	movlw	1
  5487  0320  00B6               	movwf	??___flmul+4
  5488  0321                     u2195:
  5489  0321  0D35               	rlf	??___flmul+3,w
  5490  0322  0CB5               	rrf	??___flmul+3,f
  5491  0323  0CB4               	rrf	??___flmul+2,f
  5492  0324  0CB3               	rrf	??___flmul+1,f
  5493  0325  0CB2               	rrf	??___flmul,f
  5494  0326                     u2190:
  5495  0326  0BB6               	decfsz	??___flmul+4,f
  5496  0327  2B21               	goto	u2195
  5497  0328  0835               	movf	??___flmul+3,w
  5498  0329  00C1               	movwf	___flmul@prod+3
  5499  032A  0834               	movf	??___flmul+2,w
  5500  032B  00C0               	movwf	___flmul@prod+2
  5501  032C  0833               	movf	??___flmul+1,w
  5502  032D  00BF               	movwf	___flmul@prod+1
  5503  032E  0832               	movf	??___flmul,w
  5504  032F  00BE               	movwf	___flmul@prod
  5505  0330                     l2376:
  5506  0330  3001               	movlw	1
  5507  0331  07C2               	addwf	___flmul@temp,f
  5508  0332  1803               	skipnc
  5509  0333  0AC3               	incf	___flmul@temp+1,f
  5510  0334  3000               	movlw	0
  5511  0335  07C3               	addwf	___flmul@temp+1,f
  5512  0336                     l2378:
  5513  0336  0843               	movf	___flmul@temp+1,w
  5514  0337  3A80               	xorlw	128
  5515  0338  00FF               	movwf	btemp+1
  5516  0339  3080               	movlw	128
  5517  033A  027F               	subwf	btemp+1,w
  5518  033B  1D03               	skipz
  5519  033C  2B3F               	goto	u2205
  5520  033D  30FF               	movlw	255
  5521  033E  0242               	subwf	___flmul@temp,w
  5522  033F                     u2205:
  5523  033F  1C03               	skipc
  5524  0340  2B42               	goto	u2201
  5525  0341  2B43               	goto	u2200
  5526  0342                     u2201:
  5527  0342  2B4E               	goto	l2382
  5528  0343                     u2200:
  5529  0343                     l2380:
  5530  0343  307F               	movlw	127
  5531  0344  1283               	bcf	3,5	;RP0=0, select bank0
  5532  0345  1303               	bcf	3,6	;RP1=0, select bank0
  5533  0346  00C1               	movwf	___flmul@prod+3
  5534  0347  3080               	movlw	128
  5535  0348  00C0               	movwf	___flmul@prod+2
  5536  0349  3000               	movlw	0
  5537  034A  00BF               	movwf	___flmul@prod+1
  5538  034B  3000               	movlw	0
  5539  034C  00BE               	movwf	___flmul@prod
  5540  034D  2B83               	goto	l699
  5541  034E                     l2382:
  5542  034E  1283               	bcf	3,5	;RP0=0, select bank0
  5543  034F  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0350  0843               	movf	___flmul@temp+1,w
  5545  0351  3A80               	xorlw	128
  5546  0352  00FF               	movwf	btemp+1
  5547  0353  3080               	movlw	128
  5548  0354  027F               	subwf	btemp+1,w
  5549  0355  1D03               	skipz
  5550  0356  2B59               	goto	u2215
  5551  0357  3001               	movlw	1
  5552  0358  0242               	subwf	___flmul@temp,w
  5553  0359                     u2215:
  5554  0359  1803               	skipnc
  5555  035A  2B5C               	goto	u2211
  5556  035B  2B5D               	goto	u2210
  5557  035C                     u2211:
  5558  035C  2B69               	goto	l2388
  5559  035D                     u2210:
  5560  035D                     l2384:
  5561  035D  3000               	movlw	0
  5562  035E  1283               	bcf	3,5	;RP0=0, select bank0
  5563  035F  1303               	bcf	3,6	;RP1=0, select bank0
  5564  0360  00C1               	movwf	___flmul@prod+3
  5565  0361  3000               	movlw	0
  5566  0362  00C0               	movwf	___flmul@prod+2
  5567  0363  3000               	movlw	0
  5568  0364  00BF               	movwf	___flmul@prod+1
  5569  0365  3000               	movlw	0
  5570  0366  00BE               	movwf	___flmul@prod
  5571  0367                     l2386:
  5572  0367  01B7               	clrf	___flmul@sign
  5573  0368  2B83               	goto	l699
  5574  0369                     l2388:
  5575  0369  1283               	bcf	3,5	;RP0=0, select bank0
  5576  036A  1303               	bcf	3,6	;RP1=0, select bank0
  5577  036B  0842               	movf	___flmul@temp,w
  5578  036C  00B2               	movwf	??___flmul
  5579  036D  0832               	movf	??___flmul,w
  5580  036E  00BD               	movwf	___flmul@bexp
  5581  036F  30FF               	movlw	255
  5582  0370  05BE               	andwf	___flmul@prod,f
  5583  0371  30FF               	movlw	255
  5584  0372  05BF               	andwf	___flmul@prod+1,f
  5585  0373  307F               	movlw	127
  5586  0374  05C0               	andwf	___flmul@prod+2,f
  5587  0375  3000               	movlw	0
  5588  0376  05C1               	andwf	___flmul@prod+3,f
  5589  0377                     l2390:
  5590  0377  1C3D               	btfss	___flmul@bexp,0
  5591  0378  2B7A               	goto	u2221
  5592  0379  2B7B               	goto	u2220
  5593  037A                     u2221:
  5594  037A  2B7C               	goto	l2394
  5595  037B                     u2220:
  5596  037B                     l2392:
  5597  037B  17C0               	bsf	___flmul@prod+2,7
  5598  037C                     l2394:
  5599  037C  083D               	movf	___flmul@bexp,w
  5600  037D  00B2               	movwf	??___flmul
  5601  037E  1003               	clrc
  5602  037F  0C32               	rrf	??___flmul,w
  5603  0380  00B3               	movwf	??___flmul+1
  5604  0381  0833               	movf	??___flmul+1,w
  5605  0382  00C1               	movwf	___flmul@prod+3
  5606  0383                     l699:
  5607  0383  0837               	movf	___flmul@sign,w
  5608  0384  00B2               	movwf	??___flmul
  5609  0385  0832               	movf	??___flmul,w
  5610  0386  04C1               	iorwf	___flmul@prod+3,f
  5611  0387                     l2396:
  5612  0387  0841               	movf	___flmul@prod+3,w
  5613  0388  00AD               	movwf	?___flmul+3
  5614  0389  0840               	movf	___flmul@prod+2,w
  5615  038A  00AC               	movwf	?___flmul+2
  5616  038B  083F               	movf	___flmul@prod+1,w
  5617  038C  00AB               	movwf	?___flmul+1
  5618  038D  083E               	movf	___flmul@prod,w
  5619  038E  00AA               	movwf	?___flmul
  5620  038F                     l687:
  5621  038F  0008               	return
  5622  0390                     __end_of___flmul:
  5623                           
  5624                           	psect	text19
  5625  0B2F                     __ptext19:	
  5626 ;; *************** function __Umul8_16 *****************
  5627 ;; Defined at:
  5628 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  multiplier      1    wreg     unsigned char 
  5631 ;;  multiplicand    1    3[COMMON] unsigned char 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5634 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5635 ;;  product         2    0[BANK0 ] unsigned int 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  2    3[COMMON] unsigned int 
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5645 ;;      Params:         2       0       0       0       0
  5646 ;;      Locals:         0       5       0       0       0
  5647 ;;      Temps:          2       0       0       0       0
  5648 ;;      Totals:         4       5       0       0       0
  5649 ;;Total ram usage:        9 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		___flmul
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function __Umul8_16
  5661  0B2F                     __Umul8_16:
  5662                           
  5663                           ;incstack = 0
  5664                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5665                           ;__Umul8_16@multiplier stored from wreg
  5666  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0B31  00A4               	movwf	__Umul8_16@multiplier
  5669  0B32                     l2072:
  5670  0B32  01A0               	clrf	__Umul8_16@product
  5671  0B33  01A1               	clrf	__Umul8_16@product+1
  5672  0B34                     l2074:
  5673  0B34  0873               	movf	__Umul8_16@multiplicand,w
  5674  0B35  00F5               	movwf	??__Umul8_16
  5675  0B36  01F6               	clrf	??__Umul8_16+1
  5676  0B37  0875               	movf	??__Umul8_16,w
  5677  0B38  00A2               	movwf	__Umul8_16@word_mpld
  5678  0B39  0876               	movf	??__Umul8_16+1,w
  5679  0B3A  00A3               	movwf	__Umul8_16@word_mpld+1
  5680  0B3B                     l2076:
  5681  0B3B  1C24               	btfss	__Umul8_16@multiplier,0
  5682  0B3C  2B3E               	goto	u1651
  5683  0B3D  2B3F               	goto	u1650
  5684  0B3E                     u1651:
  5685  0B3E  2B45               	goto	l706
  5686  0B3F                     u1650:
  5687  0B3F                     l2078:
  5688  0B3F  0822               	movf	__Umul8_16@word_mpld,w
  5689  0B40  07A0               	addwf	__Umul8_16@product,f
  5690  0B41  1803               	skipnc
  5691  0B42  0AA1               	incf	__Umul8_16@product+1,f
  5692  0B43  0823               	movf	__Umul8_16@word_mpld+1,w
  5693  0B44  07A1               	addwf	__Umul8_16@product+1,f
  5694  0B45                     l706:
  5695  0B45  3001               	movlw	1
  5696  0B46                     u1665:
  5697  0B46  1003               	clrc
  5698  0B47  0DA2               	rlf	__Umul8_16@word_mpld,f
  5699  0B48  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5700  0B49  3EFF               	addlw	-1
  5701  0B4A  1D03               	skipz
  5702  0B4B  2B46               	goto	u1665
  5703  0B4C  1003               	clrc
  5704  0B4D  0CA4               	rrf	__Umul8_16@multiplier,f
  5705  0B4E                     l2080:
  5706  0B4E  0824               	movf	__Umul8_16@multiplier,w
  5707  0B4F  1D03               	btfss	3,2
  5708  0B50  2B52               	goto	u1671
  5709  0B51  2B53               	goto	u1670
  5710  0B52                     u1671:
  5711  0B52  2B3B               	goto	l2076
  5712  0B53                     u1670:
  5713  0B53                     l2082:
  5714  0B53  0821               	movf	__Umul8_16@product+1,w
  5715  0B54  00F4               	movwf	?__Umul8_16+1
  5716  0B55  0820               	movf	__Umul8_16@product,w
  5717  0B56  00F3               	movwf	?__Umul8_16
  5718  0B57                     l708:
  5719  0B57  0008               	return
  5720  0B58                     __end_of__Umul8_16:
  5721                           
  5722                           	psect	text20
  5723  0BC3                     __ptext20:	
  5724 ;; *************** function _Lcd_Write_String *****************
  5725 ;; Defined at:
  5726 ;;		line 94 in file "LCD_8b.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  a               2    0[BANK0 ] PTR unsigned char 
  5729 ;;		 -> STR_12(2), STR_11(4), STR_10(2), buffer7(2), 
  5730 ;;		 -> buffer6(2), buffer5(2), buffer4(2), buffer3(2), 
  5731 ;;		 -> buffer2(2), STR_1(17), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  i               2    5[BANK0 ] int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5743 ;;      Params:         0       2       0       0       0
  5744 ;;      Locals:         0       2       0       0       0
  5745 ;;      Temps:          0       3       0       0       0
  5746 ;;      Totals:         0       7       0       0       0
  5747 ;;Total ram usage:        7 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    3
  5750 ;; This function calls:
  5751 ;;		_Lcd_Write_Char
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _Lcd_Write_String
  5759  0BC3                     _Lcd_Write_String:
  5760  0BC3                     l2766:	
  5761                           ;incstack = 0
  5762                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5763                           
  5764                           
  5765                           ;LCD_8b.c: 95:     int i;;LCD_8b.c: 96:     for (i = 0; a[i] != '\0'; i++)
  5766  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  5768  0BC5  01A5               	clrf	Lcd_Write_String@i
  5769  0BC6  01A6               	clrf	Lcd_Write_String@i+1
  5770  0BC7  2BEC               	goto	l2772
  5771  0BC8                     l2768:
  5772                           
  5773                           ;LCD_8b.c: 97:         Lcd_Write_Char(a[i]);
  5774  0BC8  0825               	movf	Lcd_Write_String@i,w
  5775  0BC9  0720               	addwf	Lcd_Write_String@a,w
  5776  0BCA  00A3               	movwf	??_Lcd_Write_String+1
  5777  0BCB  0821               	movf	Lcd_Write_String@a+1,w
  5778  0BCC  00A2               	movwf	??_Lcd_Write_String
  5779  0BCD  1803               	skipnc
  5780  0BCE  0AA2               	incf	??_Lcd_Write_String,f
  5781  0BCF  1FA5               	btfss	Lcd_Write_String@i,7
  5782  0BD0  2BD2               	goto	u2780
  5783  0BD1  03A2               	decf	??_Lcd_Write_String,f
  5784  0BD2                     u2780:
  5785  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0BD4  0822               	movf	??_Lcd_Write_String,w
  5788  0BD5  00A4               	movwf	??_Lcd_Write_String+2
  5789  0BD6  0824               	movf	??_Lcd_Write_String+2,w
  5790  0BD7  00FF               	movwf	btemp+1
  5791  0BD8  0823               	movf	??_Lcd_Write_String+1,w
  5792  0BD9  0084               	movwf	4
  5793  0BDA  120A  158A  2000  120A  158A  	fcall	stringtab
  5794  0BDF  120A  158A  22CA  120A  158A  	fcall	_Lcd_Write_Char
  5795  0BE4                     l2770:
  5796  0BE4  3001               	movlw	1
  5797  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  5798  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  5799  0BE7  07A5               	addwf	Lcd_Write_String@i,f
  5800  0BE8  1803               	skipnc
  5801  0BE9  0AA6               	incf	Lcd_Write_String@i+1,f
  5802  0BEA  3000               	movlw	0
  5803  0BEB  07A6               	addwf	Lcd_Write_String@i+1,f
  5804  0BEC                     l2772:
  5805  0BEC  0825               	movf	Lcd_Write_String@i,w
  5806  0BED  0720               	addwf	Lcd_Write_String@a,w
  5807  0BEE  00A3               	movwf	??_Lcd_Write_String+1
  5808  0BEF  0821               	movf	Lcd_Write_String@a+1,w
  5809  0BF0  00A2               	movwf	??_Lcd_Write_String
  5810  0BF1  1803               	skipnc
  5811  0BF2  0AA2               	incf	??_Lcd_Write_String,f
  5812  0BF3  1FA5               	btfss	Lcd_Write_String@i,7
  5813  0BF4  2BF6               	goto	u2790
  5814  0BF5  03A2               	decf	??_Lcd_Write_String,f
  5815  0BF6                     u2790:
  5816  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5817  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5818  0BF8  0822               	movf	??_Lcd_Write_String,w
  5819  0BF9  00A4               	movwf	??_Lcd_Write_String+2
  5820  0BFA  0824               	movf	??_Lcd_Write_String+2,w
  5821  0BFB  00FF               	movwf	btemp+1
  5822  0BFC  0823               	movf	??_Lcd_Write_String+1,w
  5823  0BFD  0084               	movwf	4
  5824  0BFE  120A  158A  2000  120A  158A  	fcall	stringtab
  5825  0C03  3A00               	xorlw	0
  5826  0C04  1D03               	skipz
  5827  0C05  2C07               	goto	u2801
  5828  0C06  2C08               	goto	u2800
  5829  0C07                     u2801:
  5830  0C07  2BC8               	goto	l2768
  5831  0C08                     u2800:
  5832  0C08                     l206:
  5833  0C08  0008               	return
  5834  0C09                     __end_of_Lcd_Write_String:
  5835                           
  5836                           	psect	text21
  5837  0ACA                     __ptext21:	
  5838 ;; *************** function _Lcd_Write_Char *****************
  5839 ;; Defined at:
  5840 ;;		line 79 in file "LCD_8b.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  a               1    wreg     unsigned char 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  a               1    5[COMMON] unsigned char 
  5845 ;;  y               1    7[COMMON] unsigned char 
  5846 ;;  temp            1    6[COMMON] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      void 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, pclath, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5856 ;;      Params:         0       0       0       0       0
  5857 ;;      Locals:         3       0       0       0       0
  5858 ;;      Temps:          1       0       0       0       0
  5859 ;;      Totals:         4       0       0       0       0
  5860 ;;Total ram usage:        4 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		_Lcd_Port
  5865 ;; This function is called by:
  5866 ;;		_Lcd_Write_String
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           
  5871                           ;psect for function _Lcd_Write_Char
  5872  0ACA                     _Lcd_Write_Char:
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5876                           ;Lcd_Write_Char@a stored from wreg
  5877  0ACA  00F5               	movwf	Lcd_Write_Char@a
  5878  0ACB                     l1978:
  5879                           
  5880                           ;LCD_8b.c: 80:     char temp, y;;LCD_8b.c: 81:     temp = a;
  5881  0ACB  0875               	movf	Lcd_Write_Char@a,w
  5882  0ACC  00F4               	movwf	??_Lcd_Write_Char
  5883  0ACD  0874               	movf	??_Lcd_Write_Char,w
  5884  0ACE  00F6               	movwf	Lcd_Write_Char@temp
  5885                           
  5886                           ;LCD_8b.c: 82:     y = temp;
  5887  0ACF  0876               	movf	Lcd_Write_Char@temp,w
  5888  0AD0  00F4               	movwf	??_Lcd_Write_Char
  5889  0AD1  0874               	movf	??_Lcd_Write_Char,w
  5890  0AD2  00F7               	movwf	Lcd_Write_Char@y
  5891  0AD3                     l1980:
  5892                           
  5893                           ;LCD_8b.c: 83:     PORTEbits.RE0 = 1;
  5894  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0AD5  1409               	bsf	9,0	;volatile
  5897  0AD6                     l1982:
  5898                           
  5899                           ;LCD_8b.c: 84:     Lcd_Port(y);
  5900  0AD6  0877               	movf	Lcd_Write_Char@y,w
  5901  0AD7  120A  118A  27FA  120A  158A  	fcall	_Lcd_Port
  5902  0ADC                     l1984:
  5903                           
  5904                           ;LCD_8b.c: 85:     PORTEbits.RE2 = 1;
  5905  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5906  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5907  0ADE  1509               	bsf	9,2	;volatile
  5908  0ADF                     l1986:
  5909                           
  5910                           ;LCD_8b.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5911  0ADF  300D               	movlw	13
  5912  0AE0  00F4               	movwf	??_Lcd_Write_Char
  5913  0AE1                     u3157:
  5914  0AE1  0BF4               	decfsz	??_Lcd_Write_Char,f
  5915  0AE2  2AE1               	goto	u3157
  5916  0AE3                     l1988:
  5917                           
  5918                           ;LCD_8b.c: 87:     PORTEbits.RE2 = 0;
  5919  0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  5920  0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  5921  0AE5  1109               	bcf	9,2	;volatile
  5922  0AE6                     l200:
  5923  0AE6  0008               	return
  5924  0AE7                     __end_of_Lcd_Write_Char:
  5925                           
  5926                           	psect	text22
  5927  0D4E                     __ptext22:	
  5928 ;; *************** function _Lcd_Set_Cursor *****************
  5929 ;; Defined at:
  5930 ;;		line 43 in file "LCD_8b.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  a               1    wreg     unsigned char 
  5933 ;;  b               1    7[COMMON] unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  a               1    2[BANK0 ] unsigned char 
  5936 ;;  temp            1    5[BANK0 ] unsigned char 
  5937 ;;  y               1    4[BANK0 ] unsigned char 
  5938 ;;  z               1    3[BANK0 ] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5948 ;;      Params:         1       0       0       0       0
  5949 ;;      Locals:         0       4       0       0       0
  5950 ;;      Temps:          0       2       0       0       0
  5951 ;;      Totals:         1       6       0       0       0
  5952 ;;Total ram usage:        7 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    3
  5955 ;; This function calls:
  5956 ;;		_Lcd_Cmd
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _Lcd_Set_Cursor
  5964  0D4E                     _Lcd_Set_Cursor:
  5965                           
  5966                           ;incstack = 0
  5967                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5968                           ;Lcd_Set_Cursor@a stored from wreg
  5969  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  5970  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  5971  0D50  00A2               	movwf	Lcd_Set_Cursor@a
  5972  0D51                     l2746:
  5973                           
  5974                           ;LCD_8b.c: 44:     char temp, z, y;;LCD_8b.c: 45:     if (a == 1) {
  5975  0D51  0322               	decf	Lcd_Set_Cursor@a,w
  5976  0D52  1D03               	btfss	3,2
  5977  0D53  2D55               	goto	u2741
  5978  0D54  2D56               	goto	u2740
  5979  0D55                     u2741:
  5980  0D55  2D7B               	goto	l2756
  5981  0D56                     u2740:
  5982  0D56                     l2748:
  5983                           
  5984                           ;LCD_8b.c: 46:         temp = 0x80 + b - 1;
  5985  0D56  0877               	movf	Lcd_Set_Cursor@b,w
  5986  0D57  3E7F               	addlw	127
  5987  0D58  00A0               	movwf	??_Lcd_Set_Cursor
  5988  0D59  0820               	movf	??_Lcd_Set_Cursor,w
  5989  0D5A  00A5               	movwf	Lcd_Set_Cursor@temp
  5990                           
  5991                           ;LCD_8b.c: 47:         z = temp >> 4;
  5992  0D5B  0825               	movf	Lcd_Set_Cursor@temp,w
  5993  0D5C  00A0               	movwf	??_Lcd_Set_Cursor
  5994  0D5D  3004               	movlw	4
  5995  0D5E                     u2755:
  5996  0D5E  1003               	clrc
  5997  0D5F  0CA0               	rrf	??_Lcd_Set_Cursor,f
  5998  0D60  3EFF               	addlw	-1
  5999  0D61  1D03               	skipz
  6000  0D62  2D5E               	goto	u2755
  6001  0D63  0820               	movf	??_Lcd_Set_Cursor,w
  6002  0D64  00A1               	movwf	??_Lcd_Set_Cursor+1
  6003  0D65  0821               	movf	??_Lcd_Set_Cursor+1,w
  6004  0D66  00A3               	movwf	Lcd_Set_Cursor@z
  6005  0D67                     l2750:
  6006                           
  6007                           ;LCD_8b.c: 48:         y = temp & 0x0F;
  6008  0D67  0825               	movf	Lcd_Set_Cursor@temp,w
  6009  0D68  390F               	andlw	15
  6010  0D69  00A0               	movwf	??_Lcd_Set_Cursor
  6011  0D6A  0820               	movf	??_Lcd_Set_Cursor,w
  6012  0D6B  00A4               	movwf	Lcd_Set_Cursor@y
  6013  0D6C                     l2752:
  6014                           
  6015                           ;LCD_8b.c: 49:         Lcd_Cmd(z);
  6016  0D6C  0823               	movf	Lcd_Set_Cursor@z,w
  6017  0D6D  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6018  0D72                     l2754:
  6019                           
  6020                           ;LCD_8b.c: 51:         Lcd_Cmd(y);
  6021  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  6023  0D74  0824               	movf	Lcd_Set_Cursor@y,w
  6024  0D75  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6025                           
  6026                           ;LCD_8b.c: 52:     } else if (a == 2) {
  6027  0D7A  2DA5               	goto	l194
  6028  0D7B                     l2756:
  6029  0D7B  3002               	movlw	2
  6030  0D7C  0622               	xorwf	Lcd_Set_Cursor@a,w
  6031  0D7D  1D03               	btfss	3,2
  6032  0D7E  2D80               	goto	u2761
  6033  0D7F  2D81               	goto	u2760
  6034  0D80                     u2761:
  6035  0D80  2DA5               	goto	l194
  6036  0D81                     u2760:
  6037  0D81                     l2758:
  6038                           
  6039                           ;LCD_8b.c: 53:         temp = 0xC0 + b - 1;
  6040  0D81  0877               	movf	Lcd_Set_Cursor@b,w
  6041  0D82  3EBF               	addlw	191
  6042  0D83  00A0               	movwf	??_Lcd_Set_Cursor
  6043  0D84  0820               	movf	??_Lcd_Set_Cursor,w
  6044  0D85  00A5               	movwf	Lcd_Set_Cursor@temp
  6045                           
  6046                           ;LCD_8b.c: 54:         z = temp >> 4;
  6047  0D86  0825               	movf	Lcd_Set_Cursor@temp,w
  6048  0D87  00A0               	movwf	??_Lcd_Set_Cursor
  6049  0D88  3004               	movlw	4
  6050  0D89                     u2775:
  6051  0D89  1003               	clrc
  6052  0D8A  0CA0               	rrf	??_Lcd_Set_Cursor,f
  6053  0D8B  3EFF               	addlw	-1
  6054  0D8C  1D03               	skipz
  6055  0D8D  2D89               	goto	u2775
  6056  0D8E  0820               	movf	??_Lcd_Set_Cursor,w
  6057  0D8F  00A1               	movwf	??_Lcd_Set_Cursor+1
  6058  0D90  0821               	movf	??_Lcd_Set_Cursor+1,w
  6059  0D91  00A3               	movwf	Lcd_Set_Cursor@z
  6060  0D92                     l2760:
  6061                           
  6062                           ;LCD_8b.c: 55:         y = temp & 0xF0;
  6063  0D92  0825               	movf	Lcd_Set_Cursor@temp,w
  6064  0D93  39F0               	andlw	240
  6065  0D94  00A0               	movwf	??_Lcd_Set_Cursor
  6066  0D95  0820               	movf	??_Lcd_Set_Cursor,w
  6067  0D96  00A4               	movwf	Lcd_Set_Cursor@y
  6068  0D97                     l2762:
  6069                           
  6070                           ;LCD_8b.c: 56:         Lcd_Cmd(z);
  6071  0D97  0823               	movf	Lcd_Set_Cursor@z,w
  6072  0D98  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6073  0D9D                     l2764:
  6074                           
  6075                           ;LCD_8b.c: 57:         Lcd_Cmd(y);
  6076  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  6077  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  6078  0D9F  0824               	movf	Lcd_Set_Cursor@y,w
  6079  0DA0  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6080  0DA5                     l194:
  6081  0DA5  0008               	return
  6082  0DA6                     __end_of_Lcd_Set_Cursor:
  6083                           
  6084                           	psect	text23
  6085  07B3                     __ptext23:	
  6086 ;; *************** function _Lcd_Init *****************
  6087 ;; Defined at:
  6088 ;;		line 61 in file "LCD_8b.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6102 ;;      Params:         0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0
  6104 ;;      Temps:          2       0       0       0       0
  6105 ;;      Totals:         2       0       0       0       0
  6106 ;;Total ram usage:        2 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    3
  6109 ;; This function calls:
  6110 ;;		_Lcd_Cmd
  6111 ;;		_Lcd_Port
  6112 ;; This function is called by:
  6113 ;;		_main
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           
  6118                           ;psect for function _Lcd_Init
  6119  07B3                     _Lcd_Init:
  6120  07B3                     l2128:	
  6121                           ;incstack = 0
  6122                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  6123                           
  6124                           
  6125                           ;LCD_8b.c: 62:     Lcd_Port(0x00);
  6126  07B3  3000               	movlw	0
  6127  07B4  120A  118A  27FA  120A  118A  	fcall	_Lcd_Port
  6128  07B9                     l2130:
  6129                           
  6130                           ;LCD_8b.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  6131  07B9  301A               	movlw	26
  6132  07BA  00F8               	movwf	??_Lcd_Init+1
  6133  07BB  30F8               	movlw	248
  6134  07BC  00F7               	movwf	??_Lcd_Init
  6135  07BD                     u3167:
  6136  07BD  0BF7               	decfsz	??_Lcd_Init,f
  6137  07BE  2FBD               	goto	u3167
  6138  07BF  0BF8               	decfsz	??_Lcd_Init+1,f
  6139  07C0  2FBD               	goto	u3167
  6140  07C1  0000               	nop
  6141  07C2                     l2132:
  6142                           
  6143                           ;LCD_8b.c: 64:     Lcd_Cmd(0x30);
  6144  07C2  3030               	movlw	48
  6145  07C3  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6146                           
  6147                           ;LCD_8b.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  6148  07C8  3007               	movlw	7
  6149  07C9  00F8               	movwf	??_Lcd_Init+1
  6150  07CA  307D               	movlw	125
  6151  07CB  00F7               	movwf	??_Lcd_Init
  6152  07CC                     u3177:
  6153  07CC  0BF7               	decfsz	??_Lcd_Init,f
  6154  07CD  2FCC               	goto	u3177
  6155  07CE  0BF8               	decfsz	??_Lcd_Init+1,f
  6156  07CF  2FCC               	goto	u3177
  6157  07D0                     l2134:
  6158                           
  6159                           ;LCD_8b.c: 66:     Lcd_Cmd(0x30);
  6160  07D0  3030               	movlw	48
  6161  07D1  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6162  07D6                     l2136:
  6163                           
  6164                           ;LCD_8b.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  6165  07D6  3042               	movlw	66
  6166  07D7  00F7               	movwf	??_Lcd_Init
  6167  07D8                     u3187:
  6168  07D8  0BF7               	decfsz	??_Lcd_Init,f
  6169  07D9  2FD8               	goto	u3187
  6170  07DA  0000               	nop
  6171                           
  6172                           ;LCD_8b.c: 68:     Lcd_Cmd(0x30);
  6173  07DB  3030               	movlw	48
  6174  07DC  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6175                           
  6176                           ;LCD_8b.c: 70:     Lcd_Cmd(0x3C);
  6177  07E1  303C               	movlw	60
  6178  07E2  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6179                           
  6180                           ;LCD_8b.c: 72:     Lcd_Cmd(0x08);
  6181  07E7  3008               	movlw	8
  6182  07E8  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6183                           
  6184                           ;LCD_8b.c: 74:     Lcd_Cmd(0x01);
  6185  07ED  3001               	movlw	1
  6186  07EE  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6187                           
  6188                           ;LCD_8b.c: 76:     Lcd_Cmd(0x06);
  6189  07F3  3006               	movlw	6
  6190  07F4  120A  158A  227A  120A  118A  	fcall	_Lcd_Cmd
  6191  07F9                     l197:
  6192  07F9  0008               	return
  6193  07FA                     __end_of_Lcd_Init:
  6194                           
  6195                           	psect	text24
  6196  0A6D                     __ptext24:	
  6197 ;; *************** function _Lcd_Clear *****************
  6198 ;; Defined at:
  6199 ;;		line 25 in file "LCD_8b.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6213 ;;      Params:         0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0
  6216 ;;      Totals:         0       0       0       0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		_Lcd_Cmd
  6222 ;; This function is called by:
  6223 ;;		_main
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function _Lcd_Clear
  6229  0A6D                     _Lcd_Clear:
  6230  0A6D                     l2138:	
  6231                           ;incstack = 0
  6232                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6233                           
  6234                           
  6235                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  6236  0A6D  3000               	movlw	0
  6237  0A6E  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6238                           
  6239                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  6240  0A73  3001               	movlw	1
  6241  0A74  120A  158A  227A  120A  158A  	fcall	_Lcd_Cmd
  6242  0A79                     l188:
  6243  0A79  0008               	return
  6244  0A7A                     __end_of_Lcd_Clear:
  6245                           
  6246                           	psect	text25
  6247  0A7A                     __ptext25:	
  6248 ;; *************** function _Lcd_Cmd *****************
  6249 ;; Defined at:
  6250 ;;		line 17 in file "LCD_8b.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  a               1    wreg     unsigned char 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  a               1    6[COMMON] unsigned char 
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg, status,2, status,0, pclath, cstack
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6264 ;;      Params:         0       0       0       0       0
  6265 ;;      Locals:         1       0       0       0       0
  6266 ;;      Temps:          2       0       0       0       0
  6267 ;;      Totals:         3       0       0       0       0
  6268 ;;Total ram usage:        3 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    2
  6271 ;; This function calls:
  6272 ;;		_Lcd_Port
  6273 ;; This function is called by:
  6274 ;;		_Lcd_Clear
  6275 ;;		_Lcd_Set_Cursor
  6276 ;;		_Lcd_Init
  6277 ;;		_Lcd_Shift_Right
  6278 ;;		_Lcd_Shift_Left
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function _Lcd_Cmd
  6284  0A7A                     _Lcd_Cmd:
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6288                           ;Lcd_Cmd@a stored from wreg
  6289  0A7A  00F6               	movwf	Lcd_Cmd@a
  6290  0A7B                     l1968:
  6291                           
  6292                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  6293  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0A7D  1009               	bcf	9,0	;volatile
  6296  0A7E                     l1970:
  6297                           
  6298                           ;LCD_8b.c: 19:     Lcd_Port(a);
  6299  0A7E  0876               	movf	Lcd_Cmd@a,w
  6300  0A7F  120A  118A  27FA  120A  158A  	fcall	_Lcd_Port
  6301  0A84                     l1972:
  6302                           
  6303                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  6304  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  6305  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  6306  0A86  1509               	bsf	9,2	;volatile
  6307  0A87                     l1974:
  6308                           
  6309                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6310  0A87  3006               	movlw	6
  6311  0A88  00F5               	movwf	??_Lcd_Cmd+1
  6312  0A89  3030               	movlw	48
  6313  0A8A  00F4               	movwf	??_Lcd_Cmd
  6314  0A8B                     u3197:
  6315  0A8B  0BF4               	decfsz	??_Lcd_Cmd,f
  6316  0A8C  2A8B               	goto	u3197
  6317  0A8D  0BF5               	decfsz	??_Lcd_Cmd+1,f
  6318  0A8E  2A8B               	goto	u3197
  6319  0A8F  0000               	nop
  6320  0A90                     l1976:
  6321                           
  6322                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  6323  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  6324  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  6325  0A92  1109               	bcf	9,2	;volatile
  6326  0A93                     l185:
  6327  0A93  0008               	return
  6328  0A94                     __end_of_Lcd_Cmd:
  6329                           
  6330                           	psect	text26
  6331  07FA                     __ptext26:	
  6332 ;; *************** function _Lcd_Port *****************
  6333 ;; Defined at:
  6334 ;;		line 12 in file "LCD_8b.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  a               1    wreg     unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  a               1    3[COMMON] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6348 ;;      Params:         0       0       0       0       0
  6349 ;;      Locals:         1       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0
  6351 ;;      Totals:         1       0       0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used:    1
  6354 ;; Hardware stack levels required when called:    1
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_Lcd_Cmd
  6359 ;;		_Lcd_Init
  6360 ;;		_Lcd_Write_Char
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _Lcd_Port
  6366  07FA                     _Lcd_Port:
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _Lcd_Port: [wreg]
  6370                           ;Lcd_Port@a stored from wreg
  6371  07FA  00F3               	movwf	Lcd_Port@a
  6372  07FB                     l1772:
  6373                           
  6374                           ;LCD_8b.c: 13:     PORTD = a;
  6375  07FB  0873               	movf	Lcd_Port@a,w
  6376  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  6377  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  6378  07FE  0088               	movwf	8	;volatile
  6379  07FF                     l182:
  6380  07FF  0008               	return
  6381  0800                     __end_of_Lcd_Port:
  6382                           
  6383                           	psect	text27
  6384  0B58                     __ptext27:	
  6385 ;; *************** function _isr *****************
  6386 ;; Defined at:
  6387 ;;		line 95 in file "main_02.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6401 ;;      Params:         0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0
  6403 ;;      Temps:          3       0       0       0       0
  6404 ;;      Totals:         3       0       0       0       0
  6405 ;;Total ram usage:        3 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		Interrupt level 1
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           
  6415                           ;psect for function _isr
  6416  0B58                     _isr:
  6417  0B58                     i1l2444:
  6418  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  6419  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  6420  0B5A  1F0C               	btfss	12,6	;volatile
  6421  0B5B  2B5D               	goto	u237_21
  6422  0B5C  2B5E               	goto	u237_20
  6423  0B5D                     u237_21:
  6424  0B5D  2B7F               	goto	i1l2458
  6425  0B5E                     u237_20:
  6426  0B5E                     i1l2446:
  6427  0B5E  0C1F               	rrf	31,w	;volatile
  6428  0B5F  00F0               	movwf	??_isr
  6429  0B60  0C70               	rrf	??_isr,w
  6430  0B61  390F               	andlw	15
  6431  0B62  3A00               	xorlw	0
  6432  0B63  1D03               	skipz
  6433  0B64  2B66               	goto	u238_21
  6434  0B65  2B67               	goto	u238_20
  6435  0B66                     u238_21:
  6436  0B66  2B70               	goto	i1l2452
  6437  0B67                     u238_20:
  6438  0B67                     i1l2448:
  6439  0B67  081F               	movf	31,w	;volatile
  6440  0B68  39C3               	andlw	-61
  6441  0B69  3804               	iorlw	4
  6442  0B6A  009F               	movwf	31	;volatile
  6443  0B6B                     i1l2450:
  6444  0B6B  081E               	movf	30,w	;volatile
  6445  0B6C  00F0               	movwf	??_isr
  6446  0B6D  0870               	movf	??_isr,w
  6447  0B6E  00DB               	movwf	_voltaje1
  6448  0B6F  2B7F               	goto	i1l2458
  6449  0B70                     i1l2452:
  6450  0B70  0C1F               	rrf	31,w	;volatile
  6451  0B71  00F0               	movwf	??_isr
  6452  0B72  0C70               	rrf	??_isr,w
  6453  0B73  390F               	andlw	15
  6454  0B74  3A01               	xorlw	1
  6455  0B75  1D03               	skipz
  6456  0B76  2B78               	goto	u239_21
  6457  0B77  2B79               	goto	u239_20
  6458  0B78                     u239_21:
  6459  0B78  2B7F               	goto	i1l2458
  6460  0B79                     u239_20:
  6461  0B79                     i1l2454:
  6462  0B79  30C3               	movlw	-61
  6463  0B7A  059F               	andwf	31,f	;volatile
  6464  0B7B                     i1l2456:
  6465  0B7B  081E               	movf	30,w	;volatile
  6466  0B7C  00F0               	movwf	??_isr
  6467  0B7D  0870               	movf	??_isr,w
  6468  0B7E  00DA               	movwf	_voltaje2
  6469  0B7F                     i1l2458:
  6470  0B7F  130C               	bcf	12,6	;volatile
  6471  0B80                     i1l105:
  6472  0B80  0872               	movf	??_isr+2,w
  6473  0B81  008A               	movwf	10
  6474  0B82  0E71               	swapf	??_isr+1,w
  6475  0B83  0083               	movwf	3
  6476  0B84  0EFE               	swapf	btemp,f
  6477  0B85  0E7E               	swapf	btemp,w
  6478  0B86  0009               	retfie
  6479  0B87                     __end_of_isr:
  6480  0002                     
  6481                           	psect	intentry
  6482  0004                     __pintentry:	
  6483                           ;incstack = 0
  6484                           ; Regs used in _isr: [wreg+status,2+status,0]
  6485                           
  6486  0004                     interrupt_function:
  6487  007E                     saved_w	set	btemp
  6488  0004  00FE               	movwf	btemp
  6489  0005  0E03               	swapf	3,w
  6490  0006  00F1               	movwf	??_isr+1
  6491  0007  080A               	movf	10,w
  6492  0008  00F2               	movwf	??_isr+2
  6493  0009  120A  158A  2B58   	ljmp	_isr
  6494                           
  6495                           	psect	functab
  6496  0026                     __pfunctab:
  6497  0026                     __fptable:
  6498  0026                     fptable:
  6499  0026  00FF               	movwf	(btemp+1)& (0+127)
  6500  0027  3000               	movlw	high fptable
  6501  0028  008A               	movwf	10
  6502  0029  087F               	movf	(btemp+1)& (0+127),w
  6503  002A  0782               	addwf	2,f
  6504  002B                     fpbase:
  6505  002B  282B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  6506  002C                     fp__putch:
  6507  002C  120A  158A  2A64   	ljmp	_putch
  6508  002F                     __end_of__fptable:
  6509  007E                     btemp	set	126	;btemp
  6510  007E                     wtemp0	set	126
  6511                           
  6512                           	psect	config
  6513                           
  6514                           ;Config register CONFIG1 @ 0x2007
  6515                           ;	Oscillator Selection bits
  6516                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6517                           ;	Watchdog Timer Enable bit
  6518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6519                           ;	Power-up Timer Enable bit
  6520                           ;	PWRTE = OFF, PWRT disabled
  6521                           ;	RE3/MCLR pin function select bit
  6522                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6523                           ;	Code Protection bit
  6524                           ;	CP = OFF, Program memory code protection is disabled
  6525                           ;	Data Code Protection bit
  6526                           ;	CPD = OFF, Data memory code protection is disabled
  6527                           ;	Brown Out Reset Selection bits
  6528                           ;	BOREN = OFF, BOR disabled
  6529                           ;	Internal External Switchover bit
  6530                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6531                           ;	Fail-Safe Clock Monitor Enabled bit
  6532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6533                           ;	Low Voltage Programming Enable bit
  6534                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6535                           ;	In-Circuit Debugger Mode bit
  6536                           ;	DEBUG = 0x1, unprogrammed default
  6537  2007                     	org	8199
  6538  2007  20D4               	dw	8404
  6539                           
  6540                           ;Config register CONFIG2 @ 0x2008
  6541                           ;	Brown-out Reset Selection bit
  6542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6543                           ;	Flash Program Memory Self Write Enable bits
  6544                           ;	WRT = OFF, Write protection off
  6545  2008                     	org	8200
  6546  2008  3FFF               	dw	16383

Data Sizes:
    Strings     65
    Constant    10
    Data        0
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     56      72
    BANK1            80      0      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> buffer7(BANK0[2]), buffer6(BANK0[2]), buffer5(BANK0[2]), buffer4(BANK0[2]), 
		 -> buffer3(BANK0[2]), buffer2(BANK0[2]), buffer1(BANK1[20]), buffer(BANK1[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer7(BANK0[2]), buffer6(BANK0[2]), buffer5(BANK0[2]), 
		 -> buffer4(BANK0[2]), buffer3(BANK0[2]), buffer2(BANK0[2]), buffer1(BANK1[20]), 
		 -> buffer(BANK1[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[13]), STR_17(CODE[2]), STR_16(CODE[11]), STR_15(CODE[3]), 
		 -> STR_14(CODE[2]), STR_13(CODE[12]), STR_9(CODE[3]), buffer7(BANK0[2]), 
		 -> STR_8(CODE[3]), buffer6(BANK0[2]), STR_7(CODE[3]), buffer5(BANK0[2]), 
		 -> STR_6(CODE[3]), buffer4(BANK0[2]), STR_5(CODE[3]), buffer3(BANK0[2]), 
		 -> STR_4(CODE[3]), buffer2(BANK0[2]), STR_3(CODE[3]), STR_2(CODE[3]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer7(BANK0[2]), buffer6(BANK0[2]), buffer5(BANK0[2]), 
		 -> buffer4(BANK0[2]), buffer3(BANK0[2]), buffer2(BANK0[2]), buffer1(BANK1[20]), 
		 -> buffer(BANK1[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[13]), STR_17(CODE[2]), STR_16(CODE[11]), STR_15(CODE[3]), 
		 -> STR_14(CODE[2]), STR_13(CODE[12]), buffer7(BANK0[2]), buffer6(BANK0[2]), 
		 -> buffer5(BANK0[2]), buffer4(BANK0[2]), buffer3(BANK0[2]), buffer2(BANK0[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1066__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1066__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer7(BANK0[2]), buffer6(BANK0[2]), buffer5(BANK0[2]), 
		 -> buffer4(BANK0[2]), buffer3(BANK0[2]), buffer2(BANK0[2]), buffer1(BANK1[20]), 
		 -> buffer(BANK1[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer7(BANK0[2]), buffer6(BANK0[2]), buffer5(BANK0[2]), 
		 -> buffer4(BANK0[2]), buffer3(BANK0[2]), buffer2(BANK0[2]), buffer1(BANK1[20]), 
		 -> buffer(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[2]), STR_11(CODE[4]), STR_10(CODE[2]), buffer7(BANK0[2]), 
		 -> buffer6(BANK0[2]), buffer5(BANK0[2]), buffer4(BANK0[2]), buffer3(BANK0[2]), 
		 -> buffer2(BANK0[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->___fltol
    _setup->_config_ADC
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _division3->___awdiv
    _division3->___awmod
    _division2->___awdiv
    _division2->___awmod
    _division1->___awdiv
    _division1->___awmod
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->__doprnt
    _mensaje->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _division3->___awdiv
    _division2->___awdiv
    _division1->___awdiv
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   22408
                                             45 BANK0     11    11      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _division1
                          _division2
                          _division3
                            _mensaje
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              8     5      3    3962
                                             21 BANK0      8     5      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              3     3      0    3958
                                             27 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    3958
                                             21 BANK0      6     4      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             21    18      3    2676
                                              8 BANK0     13    10      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     234
                                              3 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _division3                                            8     8      0    2892
                                              4 BANK0      8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _division2                                            8     8      0    2892
                                              4 BANK0      8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _division1                                            8     8      0    2892
                                              4 BANK0      8     8      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1212
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1120
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _division1
     ___awdiv
     ___awmod
   _division2
     ___awdiv
     ___awmod
   _division3
     ___awdiv
     ___awmod
   _mensaje
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _config_ADC
     _config_USART
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 21:00:43 2021

                        pc 0002               ___awdiv@sign 0021                         fsr 0004  
      __Umul8_16@word_mpld 0022                        l110 03B2                        l200 0AE6  
                      l120 0CF8                        l123 0D4D                        l132 0FFF  
                      l117 0CA3                        l141 0B2E                        l206 0C08  
                      l135 0A64                        l129 0FF9                        l138 0A6C  
                      l156 0E65                        l173 0AC9                        l182 07FF  
                      l185 0A93                        l194 0DA5                        l451 0ECE  
                      l188 0A79                        l197 07F9                        l464 0E00  
                      l706 0B45                        l570 0C4E                        l491 0F35  
                      l731 071B                        l708 0B57                        l484 0F4A  
                      l580 0BC2                        l804 0B09                        l733 07B2  
                      l494 0F4A                        l744 077C                        l745 0788  
                      l737 0760                        l755 0AAD                        l693 02FB  
                      l687 038F                        l699 0383                        l797 06F6  
                      _isr 0B58                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 003C               ___flmul@bexp 003D  
             ___flmul@sign 0037               ___flmul@temp 0042               ___flmul@prod 003E  
             ___fltol@exp1 0078                       l2000 0E78                       l2010 0E8C  
                     l2002 0E7D                       l2020 0EB2                       l2012 0E93  
                     l2004 0E81                       l2100 0B16                       l2030 0ECA  
                     l2022 0EB3                       l2014 0E97                       l2006 0E83  
                     l2110 0B1D                       l2102 0B17                       l2024 0EBA  
                     l2016 0E9B                       l2008 0E89                       l2120 0B22  
                     l2112 0B1E                       l2104 0B18                       l2130 07B9  
                     l2018 0EAC                       l2026 0EC0                       l2122 0B23  
                     l2114 0B1F                       l2106 0B19                       l2132 07C2  
                     l2300 0093                       l2028 0EC5                       l2124 0B28  
                     l2116 0B20                       l2108 0B1C                       l2134 07D0  
                     l2310 00D6                       l2118 0B21                       l2136 07D6  
                     l2128 07B3                       l2080 0B4E                       l2072 0B32  
                     l2320 015F                       l2312 00F2                       l2304 009C  
                     l3016 0E57                       l2138 0A6D                       l2082 0B53  
                     l2074 0B34                       l2330 01D2                       l2322 016F  
                     l2314 011E                       l2306 00AC                       l3018 05FE  
                     l2090 0B11                       l2076 0B3B                       l2340 027F  
                     l2332 01EF                       l2324 018C                       l2316 013A  
                     l2308 00B9                       l2260 002F                       l2092 0B12  
                     l2078 0B3F                       l2350 02CB                       l2342 02A7  
                     l2334 021C                       l2326 019C                       l2318 0156  
                     l2270 0046                       l2262 0036                       l2094 0B13  
                     l2086 0B0A                       l2360 02E0                       l2352 02CC  
                     l2344 02B0                       l2336 022C                       l2328 01B9  
                     l2280 0062                       l2272 004B                       l2264 003C  
                     l2600 0B92                       l1720 0A6A                       l2096 0B14  
                     l2088 0B0E                       l2370 0305                       l2362 02E4  
                     l2354 02D5                       l2346 02BE                       l2338 0259  
                     l2290 0077                       l2282 0068                       l2274 0053  
                     l2266 0040                       l2610 0BB1                       l2602 0B99  
                     l2098 0B15                       l2380 0343                       l2372 0313  
                     l2364 02F8                       l2348 02C7                       l2356 02DB  
                     l2292 007F                       l2284 006C                       l2276 0055  
                     l2268 0041                       l2612 0BB8                       l2604 0B9D  
                     l2620 0592                       l2700 0A97                       l1900 0E0B  
                     l2390 0377                       l2382 034E                       l2374 0317  
                     l2358 02DF                       l2294 0081                       l2286 006D  
                     l2278 005D                       l2710 0DA9                       l2606 0BA1  
                     l2614 0BBE                       l1718 0A64                       l2622 0598  
                     l2630 05BE                       l2702 0A9B                       l1910 0E14  
                     l1902 0E0E                       l2392 037B                       l2384 035D  
                     l2376 0330                       l2368 0300                       l2296 0089  
                     l2288 0072                       l2720 0DBD                       l2712 0DAD  
                     l2800 0D4C                       l2608 0BAB                       l2632 05C0  
                     l2624 05A0                       l2704 0A9F                       l1920 0E22  
                     l1912 0E16                       l1904 0E0F                       l2394 037C  
                     l2386 0367                       l2378 0336                       l2298 008E  
                     l2730 0DD5                       l2722 0DC3                       l2714 0DB2  
                     l2570 0C09                       l2650 061F                       l2634 05C8  
                     l2642 05E6                       l2626 05AF                       l2618 0591  
                     l2810 0F6F                       l1930 0E2D                       l1922 0E23  
                     l1914 0E1A                       l1906 0E10                       l1772 07FB  
                     l2396 0387                       l2388 0369                       l2900 07A0  
                     l2740 0DF7                       l2732 0DDF                       l2724 0DC6  
                     l2716 0DB4                       l2708 0DA6                       l2580 0C21  
                     l2572 0C0D                       l2652 0624                       l2644 0609  
                     l2636 05D7                       l2628 05B7                       l2820 0FB4  
                     l2812 0F7A                       l2804 0F4B                       l1940 0E39  
                     l1932 0E31                       l1924 0E26                       l1916 0E1E  
                     l1908 0E13                       l2750 0D67                       l2830 0ECF  
                     l2902 07A5                       l2742 0DFC                       l2734 0DE5  
                     l2726 0DCD                       l2718 0DB8                       l2590 0C44  
                     l2582 0C25                       l2574 0C13                       l2670 0667  
                     l2662 0642                       l2646 0617                       l2638 05DF  
                     l2822 0FBF                       l2814 0F85                       l2806 0F59  
                     l1950 0E47                       l1942 0E3A                       l1934 0E34  
                     l1926 0E27                       l1918 0E21                       l1870 0AB6  
                     l2910 0390                       l2760 0D92                       l2752 0D6C  
                     l2840 0EFB                       l2832 0EDC                       l2904 07A9  
                     l2736 0DEC                       l2728 0DD1                       l2584 0C36  
                     l2576 0C16                       l2592 0C4A                       l2680 06B4  
                     l2672 066F                       l2664 064C                       l2648 061B  
                     l2824 0FCA                       l2816 0F90                       l2808 0F64  
                     l1952 0E48                       l1944 0E3C                       l1936 0E35  
                     l1928 0E29                       l1880 0AC1                       l1872 0AB9  
                     l1864 0AAE                       l2920 0432                       l2912 0395  
                     l1970 0A7E                       l2762 0D97                       l2754 0D72  
                     l2746 0D51                       l2770 0BE4                       l2842 0F03  
                     l2906 07AA                       l2738 0DF2                       l2586 0C3C  
                     l2578 0C1D                       l2682 06C1                       l2666 0652  
                     l2674 0675                       l2658 0626                       l2690 06F4  
                     l2826 0FD5                       l2818 0FA9                       l1954 0E49  
                     l1946 0E40                       l1938 0E36                       l1962 0E4F  
                     l1890 0AC8                       l1882 0AC2                       l1874 0ABA  
                     l1866 0AB2                       l2930 0479                       l2922 0443  
                     l2914 039A                       l1972 0A84                       l2764 0D9D  
                     l2748 0D56                       l2756 0D7B                       l1980 0AD3  
                     l2772 0BEC                       l2860 0F2A                       l2852 0F11  
                     l2844 0F05                       l2836 0EE5                       l2588 0C3D  
                     l2596 0B87                       l2684 06C9                       l2676 067C  
                     l2668 065A                       l2828 0FE0                       l1956 0E4C  
                     l1948 0E44                       l1884 0AC5                       l1876 0ABD  
                     l1868 0AB3                       l2780 0AF3                       l2940 04BE  
                     l2932 0484                       l2924 0456                       l2916 039F  
                     l1974 0A87                       l2758 0D81                       l1982 0AD6  
                     l2766 0BC3                       l2862 0F3A                       l2846 0F09  
                     l2854 0F23                       l2838 0EFA                       l2870 0703  
                     l1990 0E66                       l2598 0B8F                       l2678 06AC  
                     l2686 06CF                       l1958 0E4D                       l1894 0E02  
                     l1886 0AC6                       l1878 0ABE                       l2782 0B03  
                     l2774 0AEA                       l2950 0512                       l2942 04D1  
                     l2934 048F                       l2926 0463                       l2918 03A7  
                     l1976 0A90                       l1968 0A7B                       l1984 0ADC  
                     l2768 0BC8                       l2864 0F3F                       l2880 0731  
                     l2872 0713                       l1992 0E69                       l2792 0CA7  
                     l2688 06DA                       l1896 0E03                       l1888 0AC7  
                     l2776 0AEE                       l2960 0549                       l2952 051D  
                     l2944 04E4                       l2936 049A                       l2928 046E  
                     l1986 0ADF                       l1978 0ACB                       l2890 0767  
                     l2882 073E                       l2874 0723                       l2866 06FA  
                     l1994 0E6D                       l2786 0C52                       l2794 0CF5  
                     l2698 0A94                       l1898 0E07                       l2778 0AEF  
                     l2970 057B                       l2962 0554                       l2954 0528  
                     l2946 04F7                       l2938 04AB                       l1988 0AE3  
                     l2892 0772                       l2884 0745                       l2868 06FF  
                     l1996 0E72                       l2788 0CA0                       l2972 0582  
                     l2964 055F                       l2956 0533                       l2948 050A  
                     l2894 0776                       l2886 0749                       l2878 072C  
                     l1998 0E74                       l2798 0CFC                       l2974 0585  
                     l2966 056A                       l2958 053E                       l2896 0780  
                     l2888 0757                       l2968 0575                       l2898 078A  
                     _ADIF 0066                       ?_isr 0070                       STR_1 081A  
                     STR_2 0856                       STR_3 0856                       STR_4 0856  
                     STR_5 0856                       STR_6 0856                       STR_7 0856  
                     STR_8 0856                       STR_9 0856                       u2001 01AB  
                     u2002 01B2                       u1210 0A6A                       u2003 01B9  
                     u1211 0A69                       u2021 01E1                       u2110 02CB  
                     u2022 01E8                       u2111 02CA                       u2031 020E  
                     u2023 01EF                       u2015 01BB                       u2200 0343  
                     u2032 0215                       u3000 0776                       u2201 0342  
                     u2105 02C0                       u2041 023B                       u2033 021C  
                     u3001 0775                       u2210 035D                       u2130 02DF  
                     u2050 0265                       u2042 0242                       u3010 077C  
                     u2211 035C                       u2131 02DE                       u2043 0249  
                     u3011 077B                       u2220 037B                       u2140 02E4  
                     u3020 0780                       u1500 0E9B                       u2221 037A  
                     u2205 033F                       u2141 02E3                       u2125 02CE  
                     u2061 0271                       u3021 077F                       u1501 0E9A  
                     u2150 02F8                       u2070 028D                       u2062 0278  
                     u3030 0795                       u2215 0359                       u2151 02F7  
                     u2063 027F                       u2055 0260                       u2160 02FF  
                     u3040 07A5                       u1520 0EAC                       u2161 02FE  
                     u2081 0299                       u3041 07A4                       u1521 0EAB  
                     u2170 0305                       u2082 02A0                       u3050 07A9  
                     u2410 0C13                       u2171 0304                       u2083 02A7  
                     u2075 0288                       u3051 07A8                       u3035 0790  
                     u1515 0E9C                       u2411 0C12                       u3107 0E2F  
                     u2180 0317                       u1540 0EC0                       u1460 0E6D  
                     u2500 0BA1                       u3060 057B                       u2181 0316  
                     u1541 0EBF                       u1525 0EA8                       u1461 0E6C  
                     u2501 0BA0                       u3117 0E42                       u3061 057A  
                     u2190 0326                       u1550 0EC5                       u1470 0E78  
                     u2430 0C25                       u2510 0BAB                       u2095 02A9  
                     u1551 0EC4                       u1535 0EB4                       u1471 0E77  
                     u2431 0C24                       u2511 0BAA                       u3127 0F53  
                     u1480 0E89                       u2600 0652                       u1481 0E88  
                     u2425 0C17                       u2601 0651                       u3137 0FA3  
           ??_config_USART 0073                       u1650 0B3F                       u2450 0C36  
                     u2530 0BBE                       u2610 065A                       u1651 0B3E  
                     u2195 0321                       u2451 0C35                       u2531 0BBD  
                     u2515 0BA7                       u2611 0659                       u3147 0FF3  
                     u1900 0072                       u2700 0DDF                       u2620 06B4  
                     u2540 0598                       u3157 0AE1                       u1901 0071  
                     u2701 0DDE                       u2445 0C26                       u2525 0BB2  
                     u2621 06B3                       u2541 0597                       u3077 057F  
                     u1670 0B53                       u1910 0077                       u2470 0C4A  
                     u2630 06DA                       u2550 05A0                       u3167 07BD  
                     u1671 0B52                       u1911 0076                       u1495 0E8D  
                     u2471 0C49                       u2455 0C32                       u2631 06D9  
                     u2551 059F                       u3087 0E09                       u2800 0C08  
                     u1920 008E                       u2720 0DF2                       u2480 0B8F  
                     u2640 06F4                       u2560 05C8                       u3177 07CC  
                     u2801 0C07                       u1665 0B46                       u1921 008D  
                     u2721 0DF1                       u2705 0DDB                       u2465 0C3E  
                     u2481 0B8E                       u2641 06F3                       u2561 05C7  
                     u3097 0E1C                       u1930 0093                       u2730 0DF7  
                     u2650 0DAD                       u2570 061B                       u2810 0FFF  
                     u3187 07D8                       u1931 0092                       u2731 0DF6  
                     u2715 0DE6                       u2651 0DAC                       u2571 061A  
                     u2811 0FFE                       u2740 0D56                       u1860 0040  
                     u2900 0F3A                       u2820 0EDC                       u2660 0DB8  
                     u2580 0641                       u3197 0A8B                       u2741 0D55  
                     u1941 00E4                       u1861 003F                       u2901 0F39  
                     u2821 0EDB                       u2661 0DB7                       u2581 0640  
                     u1942 00EB                       u1870 0046                       u2910 0F3F  
                     u2830 0EF3                       u2670 0DC3                       u2590 064C  
                     u1951 0100                       u1943 00F2                       u1871 0045  
                     u2911 0F3E                       u2671 0DC2                       u2495 0B93  
                     u2591 064B                       u2760 0D81                       u1952 0107  
                     u1880 004B                       u2840 0F09                       u2920 06FF  
                     u2761 0D80                       u1961 012C                       u1953 010E  
                     u1881 004A                       u2841 0F08                       u2921 06FE  
                     u2585 063D                       u1962 0133                       u1890 006C  
                     u2850 0F10                       u2930 0703                       u2690 0DD5  
                     u2755 0D5E                       u1971 0148                       u1963 013A  
                     u1891 006B                       u2851 0F0F                       u2835 0EEE  
                     u2931 0702                       u2691 0DD4                       u2780 0BD2  
                     u1972 014F                       u2940 0723                       u1973 0156  
                     u2941 0722                       u2685 0DC7                       u2790 0BF6  
                     u2870 0F22                       u2775 0D89                       u1991 017E  
                     u2871 0F21                       u1992 0185                       u2880 0F29  
                     u2960 0744                       u1993 018C                       u1985 0158  
                     u2881 0F28                       u2865 0F12                       u2961 0743  
                     u2955 0736                       u2980 0766                       _RCIF 0065  
                     u2981 0765                       u2895 0F2C                       u2975 0758  
                     u2995 076B                       _TXIF 0064          ?_Lcd_Write_String 0020  
                     _dato 0058                       _main 0390                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0022            __end_of_Lcd_Cmd 0A94  
             main@decenas1 0053               main@decenas2 0056                      ??_isr 0070  
            ___fltol@sign1 0077                      ?_main 0070            __end_of___awdiv 0ECF  
           config_ADC@frec 0075                      STR_10 0859                      STR_11 084F  
                    STR_12 0859                      STR_13 0838                      STR_14 0859  
                    STR_15 0853                      STR_16 0844                      STR_17 0859  
                    STR_18 082B            __end_of___awmod 0E01            __end_of___flmul 0390  
          __end_of___fltol 0F4B                      _ANSEL 0188            ___awdiv@divisor 0073  
          __end_of___lwdiv 0C4F                      i1l105 0B80            __end_of___lwmod 0BC3  
          ___awdiv@counter 0020                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009            __end_of__doprnt 06F7    __size_of_Lcd_Set_Cursor 0058  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _dato1 0059            __end_of_dpowers 081A            __end_of_mensaje 1000  
                    _setup 0B0A                      _putch 0A64                      fpbase 002B  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0B0A           __end_of_Lcd_Init 07FA           __end_of_Lcd_Port 0800  
          __initialization 000F               __end_of_main 058E              main@centenas1 0052  
            main@centenas2 0055                     ??_main 004D         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E           ___awdiv@dividend 0075                     ?_setup 0070  
                   ?_putch 0073                     i1l2450 0B6B                     i1l2452 0B70  
                   i1l2444 0B58                     i1l2454 0B79                     i1l2446 0B5E  
                   i1l2456 0B7B                     i1l2448 0B67                     i1l2458 0B7F  
                   u237_20 0B5E                     u237_21 0B5D                     u238_20 0B67  
                   u238_21 0B66                     u239_20 0B79                     u239_21 0B78  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001D  
         __end_of__fptable 002F           __end_of___xxtofl 07B3          division2@decenas2 0029  
                ??___awdiv 0077                  ??___awmod 0077                  ??___flmul 0032  
                ??___fltol 0048                  ??___lwdiv 0077                  ??___lwmod 0078  
                   _buffer 00B4                  ??__doprnt 002B           ___awdiv@quotient 0022  
     __end_of_config_USART 0ACA            ___awmod@divisor 0073               __doprnt@flag 002F  
          ___awmod@counter 0020                     _printf 0A94               __doprnt@prec 0030  
                   fptable 0026                     fptotal 0002                  ??_mensaje 003B  
       __size_of__Umul8_16 0029                     saved_w 007E              main@unidades1 0054  
            main@unidades2 0057          division1@residuo1 002B                  ??_sprintf 0038  
          Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0024  
          Lcd_Set_Cursor@z 0023          division2@residuo2 002B               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073    __end_of__initialization 0022  
        division3@residuo3 002B          __end_of_Lcd_Clear 0A7A                 ___fltol@f1 0044  
           __pcstackCOMMON 0070              __end_of_setup 0B2F              __end_of_putch 0A6D  
           _Lcd_Set_Cursor 0D4E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __doprnt@ap 002A                 __doprnt@pb 0034         __size_of_division1 0055  
       __size_of_division2 0055         __size_of_division3 0055                    ??_setup 0076  
                  ??_putch 0074                 __pbssBANK0 0058                 __pbssBANK1 00A0  
        __end_of__Umul8_16 0B58                 __pmaintext 0390                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0DA6                    ?_printf 0035  
               _config_ADC 0E01                  ?___xxtofl 0073                 ??_Lcd_Init 0077  
               ??_Lcd_Port 0073                 __stringtab 0800             _Lcd_Write_Char 0ACA  
                  _Lcd_Cmd 0A7A      __size_of_config_USART 001C                    ___awdiv 0E66  
                  ___awmod 0DA6                    ___flmul 002F         division1@centenas1 0029  
                  ___fltol 0ECF          __end_of_division1 0CA4          __end_of_division2 0CF9  
        __end_of_division3 0D4E                    ___lwdiv 0C09                    ___lwmod 0B87  
                  __doprnt 058E            ?_Lcd_Set_Cursor 0077                    __ptext1 0AE7  
                  __ptext2 0B0A                    __ptext3 0AAE                    __ptext4 0E01  
                  __ptext5 0F4B                    __ptext6 0A94                    __ptext7 058E  
                  __ptext8 0A64                    __ptext9 0B87                    _buffer1 00A0  
                  _buffer2 0066                    _buffer3 0064                    _buffer4 0062  
                  _buffer5 0060                    _buffer6 005E                    _buffer7 005C  
          __size_of_printf 001A         division1@dividendo 002A                    _dpowers 0810  
             __size_of_isr 002F                    _mensaje 0F4B                 ??___xxtofl 0020  
         ___awmod@dividend 0075         division2@dividendo 002A                    _sprintf 0AE7  
                  clrloop0 0A5D     __end_of_Lcd_Write_Char 0AE7       end_of_initialization 0022  
             _config_USART 0AAE         division3@dividendo 002A                  _RCSTAbits 0018  
                  printf@f 0035                  Lcd_Port@a 0073                  _PORTEbits 0009  
              ?_config_ADC 0070              ___xxtofl@sign 0024                  _TRISAbits 0085  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020          Lcd_Write_String@i 0025  
              ___flmul@grs 0038         division3@unidades3 0029                  _TXSTAbits 0098  
                _Lcd_Clear 0A6D           _Lcd_Write_String 0BC3                _BAUDCTLbits 0187  
           __end_of_printf 0AAE        start_initialization 000F                __end_of_isr 0B87  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006        __size_of_config_ADC 0065  
               ?_Lcd_Clear 0070                  __Umul8_16 0B2F                __doprnt@val 0031  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077                   ??_printf 0037  
                ___flmul@a 002E                  ___flmul@b 002A                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020          __size_of__fptable 0009  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                  __doprnt@c 0033  
                __doprnt@f 0028           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0020  
                __pfunctab 0026                   ?___awdiv 0073                   ?___awmod 0073  
                 ?___flmul 002A                   ?___fltol 0044                 ?__Umul8_16 0073  
                 ?___lwdiv 0073                   ?___lwmod 0023                   ?__doprnt 0028  
                __pstrings 0800                  _division1 0C4F                  _division2 0CA4  
                _division3 0CF9                   ?_mensaje 0070           ___lwdiv@quotient 0021  
                 ?_sprintf 0035             __size_of_setup 0025             __size_of_putch 0009  
        interrupt_function 0004                  clear_ram0 0A5C                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
               ?_division1 0070                 ?_division2 0070                 ?_division3 0070  
             ??_config_ADC 0073           ??_Lcd_Write_Char 0074                  _voltaje_b 007A  
                _voltaje_c 0079                   _Lcd_Init 07B3                   _Lcd_Port 07FA  
 __end_of_Lcd_Write_String 0C09           __size_of_Lcd_Cmd 001A         __end_of_config_ADC 0E66  
              ??__Umul8_16 0075           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C           __size_of__doprnt 0169         __end_of__stringtab 0810  
                 __fptable 0026                   ___xxtofl 06F7           __size_of_mensaje 00B5  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 0C09  
                 __ptext11 0CF9                   __ptext20 0BC3                   __ptext12 0CA4  
                 __ptext21 0ACA                   __ptext13 0C4F                   __ptext22 0D4E  
                 __ptext14 0DA6                   __ptext23 07B3                   __ptext15 0E66  
                 __ptext24 0A6D                   __ptext16 06F7                   __ptext25 0A7A  
                 __ptext17 0ECF                   __ptext26 07FA                   __ptext18 002F  
                 __ptext27 0B58                   __ptext19 0B2F           __size_of_sprintf 0023  
            __size_of_main 01FE                   fp__putch 002C                   _voltaje1 005B  
                 _voltaje2 005A                ??_division1 0024                ??_division2 0024  
              ??_division3 0024                  putch@dato 0073                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0076                   intlevel1 0026                  sprintf@ap 0039  
                sprintf@pb 003B                  sprintf@wh 003A           ___lwmod@dividend 0025  
                stringcode 080A                 _OSCCONbits 008F                   printf@ap 0038  
                 printf@pb 0039         Lcd_Set_Cursor@temp 0025     __Umul8_16@multiplicand 0073  
                 sprintf@f 0035            ___lwmod@divisor 0023            ___lwmod@counter 0027  
                 stringdir 080A                   stringtab 0800              ?_config_USART 0070  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
