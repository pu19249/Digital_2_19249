

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 19:48:33 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	functab,global,class=ENTRY,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460                           
   461                           	psect	strings
   462  030C                     __pstrings:
   463  030C                     stringtab:
   464  030C                     __stringtab:
   465                           
   466                           ;	String table - string pointers are 1 byte each
   467  030C  1BFF               	btfsc	btemp+1,7
   468  030D  2B16               	ljmp	stringcode
   469  030E  1383               	bcf	3,7
   470  030F  187F               	btfsc	btemp+1,0
   471  0310  1783               	bsf	3,7
   472  0311  0800               	movf	0,w
   473  0312  0A84               	incf	4,f
   474  0313  1903               	skipnz
   475  0314  0AFF               	incf	btemp+1,f
   476  0315  0008               	return
   477  0316                     stringcode:
   478  0316                     stringdir:
   479  0316  3003               	movlw	high stringdir
   480  0317  008A               	movwf	10
   481  0318  0804               	movf	4,w
   482  0319  0A84               	incf	4,f
   483  031A  0782               	addwf	2,f
   484  031B                     __stringbase:
   485  031B  3400               	retlw	0
   486  031C                     __end_of__stringtab:
   487  031C                     _dpowers:
   488  031C  3401               	retlw	1
   489  031D  3400               	retlw	0
   490  031E  340A               	retlw	10
   491  031F  3400               	retlw	0
   492  0320  3464               	retlw	100
   493  0321  3400               	retlw	0
   494  0322  34E8               	retlw	232
   495  0323  3403               	retlw	3
   496  0324  3410               	retlw	16
   497  0325  3427               	retlw	39
   498  0326                     __end_of_dpowers:
   499  0009                     _PORTEbits	set	9
   500  0018                     _RCSTAbits	set	24
   501  0009                     _PORTE	set	9
   502  0008                     _PORTD	set	8
   503  0007                     _PORTC	set	7
   504  0006                     _PORTB	set	6
   505  0005                     _PORTA	set	5
   506  000B                     _INTCONbits	set	11
   507  000C                     _PIR1bits	set	12
   508  0019                     _TXREG	set	25
   509  001E                     _ADRESH	set	30
   510  001F                     _ADCON0bits	set	31
   511  0064                     _TXIF	set	100
   512  0066                     _ADIF	set	102
   513  0098                     _TXSTAbits	set	152
   514  009A                     _SPBRGH	set	154
   515  0099                     _SPBRG	set	153
   516  009F                     _ADCON1bits	set	159
   517  008C                     _PIE1bits	set	140
   518  008F                     _OSCCONbits	set	143
   519  0089                     _TRISE	set	137
   520  0088                     _TRISD	set	136
   521  0085                     _TRISAbits	set	133
   522  0187                     _BAUDCTLbits	set	391
   523  0188                     _ANSEL	set	392
   524  0326                     STR_1:
   525  0326  3453               	retlw	83	;'S'
   526  0327  345F               	retlw	95	;'_'
   527  0328  3431               	retlw	49	;'1'
   528  0329  343A               	retlw	58	;':'
   529  032A  3420               	retlw	32	;' '
   530  032B  3420               	retlw	32	;' '
   531  032C  3453               	retlw	83	;'S'
   532  032D  345F               	retlw	95	;'_'
   533  032E  3432               	retlw	50	;'2'
   534  032F  343A               	retlw	58	;':'
   535  0330  3420               	retlw	32	;' '
   536  0331  3420               	retlw	32	;' '
   537  0332  3453               	retlw	83	;'S'
   538  0333  345F               	retlw	95	;'_'
   539  0334  3433               	retlw	51	;'3'
   540  0335  343A               	retlw	58	;':'
   541  0336  3400               	retlw	0
   542  0337                     STR_7:
   543  0337  340D               	retlw	13
   544  0338  342D               	retlw	45	;'-'
   545  0339  342D               	retlw	45	;'-'
   546  033A  342D               	retlw	45	;'-'
   547  033B  342D               	retlw	45	;'-'
   548  033C  342D               	retlw	45	;'-'
   549  033D  342D               	retlw	45	;'-'
   550  033E  342D               	retlw	45	;'-'
   551  033F  342D               	retlw	45	;'-'
   552  0340  342D               	retlw	45	;'-'
   553  0341  342D               	retlw	45	;'-'
   554  0342  342D               	retlw	45	;'-'
   555  0343  3400               	retlw	0
   556  0344                     STR_4:
   557  0344  340D               	retlw	13
   558  0345  3456               	retlw	86	;'V'
   559  0346  346F               	retlw	111	;'o'
   560  0347  346C               	retlw	108	;'l'
   561  0348  3474               	retlw	116	;'t'
   562  0349  3461               	retlw	97	;'a'
   563  034A  346A               	retlw	106	;'j'
   564  034B  3465               	retlw	101	;'e'
   565  034C  3431               	retlw	49	;'1'
   566  034D  343A               	retlw	58	;':'
   567  034E  3420               	retlw	32	;' '
   568  034F  3400               	retlw	0
   569  0350                     STR_6:
   570  0350  3456               	retlw	86	;'V'
   571  0351  346F               	retlw	111	;'o'
   572  0352  346C               	retlw	108	;'l'
   573  0353  3474               	retlw	116	;'t'
   574  0354  3461               	retlw	97	;'a'
   575  0355  346A               	retlw	106	;'j'
   576  0356  3465               	retlw	101	;'e'
   577  0357  3432               	retlw	50	;'2'
   578  0358  343A               	retlw	58	;':'
   579  0359  3420               	retlw	32	;' '
   580  035A  3400               	retlw	0
   581  035B                     STR_2:
   582  035B  3425               	retlw	37	;'%'
   583  035C  3464               	retlw	100	;'d'
   584  035D  3420               	retlw	32	;' '
   585  035E  3420               	retlw	32	;' '
   586  035F  3420               	retlw	32	;' '
   587  0360  3400               	retlw	0
   588  0361                     STR_5:
   589  0361  340D               	retlw	13
   590  0362  340D               	retlw	13
   591  0363  3400               	retlw	0
   592  0364                     STR_3:
   593  0364  3425               	retlw	37	;'%'
   594  0365  3464               	retlw	100	;'d'
   595  0366  3400               	retlw	0
   596                           
   597                           	psect	cinit
   598  000F                     start_initialization:	
   599                           ; #config settings
   600                           
   601  000F                     __initialization:
   602                           
   603                           ; Clear objects allocated to COMMON
   604  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   605  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   606  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK0
   609  0012  1383               	bcf	3,7	;select IRP bank0
   610  0013  3020               	movlw	low __pbssBANK0
   611  0014  0084               	movwf	4
   612  0015  3050               	movlw	low (__pbssBANK0+48)
   613  0016  120A  118A  25CF  120A  118A  	fcall	clear_ram0
   614  001B                     end_of_initialization:	
   615                           ;End of C runtime variable initialization code
   616                           
   617  001B                     __end_of__initialization:
   618  001B  0183               	clrf	3
   619  001C  120A  118A  2991   	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssCOMMON
   622  0078                     __pbssCOMMON:
   623  0078                     _residuo:
   624  0078                     	ds	1
   625  0079                     _voltaje_c:
   626  0079                     	ds	1
   627  007A                     _voltaje_b:
   628  007A                     	ds	1
   629                           
   630                           	psect	bssBANK0
   631  0020                     __pbssBANK0:
   632  0020                     _dato:
   633  0020                     	ds	1
   634  0021                     _dato1:
   635  0021                     	ds	1
   636  0022                     _unidades:
   637  0022                     	ds	1
   638  0023                     _decenas:
   639  0023                     	ds	1
   640  0024                     _centenas:
   641  0024                     	ds	1
   642  0025                     _dividendo:
   643  0025                     	ds	1
   644  0026                     _voltaje2:
   645  0026                     	ds	1
   646  0027                     _voltaje1:
   647  0027                     	ds	1
   648  0028                     _buffer1:
   649  0028                     	ds	20
   650  003C                     _buffer:
   651  003C                     	ds	20
   652                           
   653                           	psect	clrtext
   654  05CF                     clear_ram0:	
   655                           ;	Called with FSR containing the base address, and
   656                           ;	W with the last address+1
   657                           
   658  05CF  0064               	clrwdt	;clear the watchdog before getting into this loop
   659  05D0                     clrloop0:
   660  05D0  0180               	clrf	0	;clear RAM location pointed to by FSR
   661  05D1  0A84               	incf	4,f	;increment pointer
   662  05D2  0604               	xorwf	4,w	;XOR with final address
   663  05D3  1903               	btfsc	3,2	;have we reached the end yet?
   664  05D4  3400               	retlw	0	;all done for this memory range, return
   665  05D5  0604               	xorwf	4,w	;XOR again to restore value
   666  05D6  2DD0               	goto	clrloop0	;do the next byte
   667                           
   668                           	psect	cstackBANK1
   669  00A0                     __pcstackBANK1:
   670  00A0                     ??_main:
   671                           
   672                           ; 1 bytes @ 0x0
   673  00A0                     	ds	3
   674                           
   675                           	psect	cstackCOMMON
   676  0070                     __pcstackCOMMON:
   677  0070                     ?_setup:
   678  0070                     ?_Lcd_Init:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Lcd_Clear:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_mensaje:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_config_USART:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_config_ADC:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_isr:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ??_isr:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_main:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Lcd_Port:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Lcd_Cmd:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Lcd_Write_Char:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0070                     	ds	3
   714  0073                     ??_config_USART:
   715  0073                     ??_config_ADC:	
   716                           ; 1 bytes @ 0x3
   717                           
   718  0073                     ?_putch:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0073                     ??_Lcd_Port:	
   722                           ; 1 bytes @ 0x3
   723                           
   724  0073                     ?___lwdiv:	
   725                           ; 1 bytes @ 0x3
   726                           
   727  0073                     putch@dato:	
   728                           ; 2 bytes @ 0x3
   729                           
   730  0073                     Lcd_Port@a:	
   731                           ; 1 bytes @ 0x3
   732                           
   733  0073                     ___lwdiv@divisor:	
   734                           ; 1 bytes @ 0x3
   735                           
   736                           
   737                           ; 2 bytes @ 0x3
   738  0073                     	ds	1
   739  0074                     ??_putch:
   740  0074                     ??_Lcd_Cmd:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ??_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 1 bytes @ 0x4
   748  0074                     	ds	1
   749  0075                     config_ADC@frec:
   750  0075                     Lcd_Write_Char@a:	
   751                           ; 1 bytes @ 0x5
   752                           
   753  0075                     ___lwdiv@dividend:	
   754                           ; 1 bytes @ 0x5
   755                           
   756                           
   757                           ; 2 bytes @ 0x5
   758  0075                     	ds	1
   759  0076                     ??_setup:
   760  0076                     Lcd_Cmd@a:	
   761                           ; 1 bytes @ 0x6
   762                           
   763  0076                     Lcd_Write_Char@temp:	
   764                           ; 1 bytes @ 0x6
   765                           
   766                           
   767                           ; 1 bytes @ 0x6
   768  0076                     	ds	1
   769  0077                     ??_Lcd_Clear:
   770  0077                     ?_Lcd_Set_Cursor:	
   771                           ; 1 bytes @ 0x7
   772                           
   773  0077                     ??___lwdiv:	
   774                           ; 1 bytes @ 0x7
   775                           
   776  0077                     Lcd_Set_Cursor@b:	
   777                           ; 1 bytes @ 0x7
   778                           
   779  0077                     Lcd_Write_Char@y:	
   780                           ; 1 bytes @ 0x7
   781                           
   782                           
   783                           ; 1 bytes @ 0x7
   784  0077                     	ds	1
   785                           
   786                           	psect	cstackBANK0
   787  0050                     __pcstackBANK0:
   788  0050                     ??_Lcd_Init:
   789  0050                     ??_Lcd_Set_Cursor:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0050                     ?_Lcd_Write_String:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0050                     ___lwdiv@counter:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0050                     Lcd_Write_String@a:	
   799                           ; 1 bytes @ 0x0
   800                           
   801                           
   802                           ; 2 bytes @ 0x0
   803  0050                     	ds	1
   804  0051                     ___lwdiv@quotient:
   805                           
   806                           ; 2 bytes @ 0x1
   807  0051                     	ds	1
   808  0052                     ??_Lcd_Write_String:
   809  0052                     Lcd_Set_Cursor@a:	
   810                           ; 1 bytes @ 0x2
   811                           
   812                           
   813                           ; 1 bytes @ 0x2
   814  0052                     	ds	1
   815  0053                     ?___lwmod:
   816  0053                     Lcd_Set_Cursor@z:	
   817                           ; 2 bytes @ 0x3
   818                           
   819  0053                     ___lwmod@divisor:	
   820                           ; 1 bytes @ 0x3
   821                           
   822                           
   823                           ; 2 bytes @ 0x3
   824  0053                     	ds	1
   825  0054                     Lcd_Set_Cursor@y:
   826                           
   827                           ; 1 bytes @ 0x4
   828  0054                     	ds	1
   829  0055                     Lcd_Set_Cursor@temp:
   830  0055                     Lcd_Write_String@i:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0055                     ___lwmod@dividend:	
   834                           ; 2 bytes @ 0x5
   835                           
   836                           
   837                           ; 2 bytes @ 0x5
   838  0055                     	ds	2
   839  0057                     ??___lwmod:
   840                           
   841                           ; 1 bytes @ 0x7
   842  0057                     	ds	1
   843  0058                     ___lwmod@counter:
   844                           
   845                           ; 1 bytes @ 0x8
   846  0058                     	ds	1
   847  0059                     ?__doprnt:
   848  0059                     __doprnt@f:	
   849                           ; 2 bytes @ 0x9
   850                           
   851                           
   852                           ; 2 bytes @ 0x9
   853  0059                     	ds	2
   854  005B                     __doprnt@ap:
   855                           
   856                           ; 1 bytes @ 0xB
   857  005B                     	ds	1
   858  005C                     ??__doprnt:
   859                           
   860                           ; 1 bytes @ 0xC
   861  005C                     	ds	4
   862  0060                     __doprnt@flag:
   863                           
   864                           ; 1 bytes @ 0x10
   865  0060                     	ds	1
   866  0061                     __doprnt@prec:
   867                           
   868                           ; 1 bytes @ 0x11
   869  0061                     	ds	1
   870  0062                     __doprnt@val:
   871                           
   872                           ; 2 bytes @ 0x12
   873  0062                     	ds	2
   874  0064                     __doprnt@c:
   875                           
   876                           ; 1 bytes @ 0x14
   877  0064                     	ds	1
   878  0065                     __doprnt@pb:
   879                           
   880                           ; 1 bytes @ 0x15
   881  0065                     	ds	1
   882  0066                     ?_sprintf:
   883  0066                     ?_printf:	
   884                           ; 2 bytes @ 0x16
   885                           
   886  0066                     sprintf@f:	
   887                           ; 2 bytes @ 0x16
   888                           
   889  0066                     printf@f:	
   890                           ; 1 bytes @ 0x16
   891                           
   892                           
   893                           ; 2 bytes @ 0x16
   894  0066                     	ds	2
   895  0068                     ??_printf:
   896                           
   897                           ; 1 bytes @ 0x18
   898  0068                     	ds	1
   899  0069                     ??_sprintf:
   900  0069                     printf@ap:	
   901                           ; 1 bytes @ 0x19
   902                           
   903                           
   904                           ; 1 bytes @ 0x19
   905  0069                     	ds	1
   906  006A                     sprintf@wh:
   907  006A                     printf@pb:	
   908                           ; 1 bytes @ 0x1A
   909                           
   910                           
   911                           ; 2 bytes @ 0x1A
   912  006A                     	ds	1
   913  006B                     sprintf@ap:
   914                           
   915                           ; 1 bytes @ 0x1B
   916  006B                     	ds	1
   917  006C                     ??_mensaje:
   918  006C                     sprintf@pb:	
   919                           ; 1 bytes @ 0x1C
   920                           
   921                           
   922                           ; 2 bytes @ 0x1C
   923  006C                     	ds	3
   924                           
   925                           	psect	maintext
   926  0191                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 110 in file "main_02.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : B00/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0
   948 ;;      Temps:          0       0       3       0       0
   949 ;;      Totals:         0       0       3       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels required when called:    5
   952 ;; This function calls:
   953 ;;		_Lcd_Clear
   954 ;;		_Lcd_Init
   955 ;;		_Lcd_Set_Cursor
   956 ;;		_Lcd_Write_String
   957 ;;		_mensaje
   958 ;;		_setup
   959 ;;		_sprintf
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  0191                     _main:
   968  0191                     l2067:	
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   971                           
   972                           
   973                           ;main_02.c: 111:     setup();
   974  0191  120A  118A  2504  120A  118A  	fcall	_setup
   975  0196                     l2069:
   976                           
   977                           ;main_02.c: 113:     Lcd_Init();
   978  0196  120A  118A  23BF  120A  118A  	fcall	_Lcd_Init
   979  019B                     l2071:
   980                           
   981                           ;main_02.c: 114:     Lcd_Clear();
   982  019B  120A  118A  25B9  120A  118A  	fcall	_Lcd_Clear
   983  01A0                     l2073:
   984                           
   985                           ;main_02.c: 119:     Lcd_Set_Cursor(1,1);
   986  01A0  01F7               	clrf	Lcd_Set_Cursor@b
   987  01A1  0AF7               	incf	Lcd_Set_Cursor@b,f
   988  01A2  3001               	movlw	1
   989  01A3  120A  118A  2367  120A  118A  	fcall	_Lcd_Set_Cursor
   990  01A8                     l2075:
   991                           
   992                           ;main_02.c: 120:     Lcd_Write_String("S_1:  S_2:  S_3:");
   993  01A8  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   994  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   995  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   996  01AB  00D0               	movwf	Lcd_Write_String@a
   997  01AC  3080               	movlw	128
   998  01AD  00D1               	movwf	Lcd_Write_String@a+1
   999  01AE  120A  118A  2453  120A  118A  	fcall	_Lcd_Write_String
  1000  01B3                     l2077:
  1001                           
  1002                           ;main_02.c: 123:     dato = voltaje1;
  1003  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1004  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1005  01B5  0827               	movf	_voltaje1,w
  1006  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1007  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1008  01B8  00A0               	movwf	??_main^(0+128)
  1009  01B9  0820               	movf	??_main^(0+128),w
  1010  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1011  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1012  01BC  00A0               	movwf	_dato
  1013  01BD                     l2079:
  1014                           
  1015                           ;main_02.c: 124:     dato1 = voltaje2;
  1016  01BD  0826               	movf	_voltaje2,w
  1017  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1018  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1019  01C0  00A0               	movwf	??_main^(0+128)
  1020  01C1  0820               	movf	??_main^(0+128),w
  1021  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1022  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1023  01C4  00A1               	movwf	_dato1
  1024  01C5                     l2081:
  1025                           
  1026                           ;main_02.c: 125:     sprintf(buffer, "%d   ", voltaje1);
  1027  01C5  3040               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1028  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1029  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1030  01C8  00A0               	movwf	??_main^(0+128)
  1031  01C9  0820               	movf	??_main^(0+128),w
  1032  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1033  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1034  01CC  00E6               	movwf	sprintf@f
  1035  01CD  0827               	movf	_voltaje1,w
  1036  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1037  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1038  01D0  00A1               	movwf	(??_main+1)^(0+128)
  1039  01D1  01A2               	clrf	((??_main+1)^(0+128)+1)
  1040  01D2  0821               	movf	(??_main+1)^(0+128),w
  1041  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1042  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1043  01D5  00E7               	movwf	?_sprintf+1
  1044  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1045  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1046  01D8  0822               	movf	(??_main+2)^(0+128),w
  1047  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1048  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1049  01DB  00E8               	movwf	?_sprintf+2
  1050  01DC  303C               	movlw	(low (_buffer| 0))& (0+255)
  1051  01DD  120A  118A  2529  120A  118A  	fcall	_sprintf
  1052  01E2                     l2083:
  1053                           
  1054                           ;main_02.c: 126:     sprintf(buffer1, "%d", voltaje2);
  1055  01E2  3049               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1056  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1057  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1058  01E5  00A0               	movwf	??_main^(0+128)
  1059  01E6  0820               	movf	??_main^(0+128),w
  1060  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1061  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1062  01E9  00E6               	movwf	sprintf@f
  1063  01EA  0826               	movf	_voltaje2,w
  1064  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1065  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1066  01ED  00A1               	movwf	(??_main+1)^(0+128)
  1067  01EE  01A2               	clrf	((??_main+1)^(0+128)+1)
  1068  01EF  0821               	movf	(??_main+1)^(0+128),w
  1069  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1070  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1071  01F2  00E7               	movwf	?_sprintf+1
  1072  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1073  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1074  01F5  0822               	movf	(??_main+2)^(0+128),w
  1075  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1076  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1077  01F8  00E8               	movwf	?_sprintf+2
  1078  01F9  3028               	movlw	(low (_buffer1| 0))& (0+255)
  1079  01FA  120A  118A  2529  120A  118A  	fcall	_sprintf
  1080  01FF                     l2085:
  1081                           
  1082                           ;main_02.c: 128:     Lcd_Set_Cursor(2,2);
  1083  01FF  3002               	movlw	2
  1084  0200  1683               	bsf	3,5	;RP0=1, select bank1
  1085  0201  1303               	bcf	3,6	;RP1=0, select bank1
  1086  0202  00A0               	movwf	??_main^(0+128)
  1087  0203  0820               	movf	??_main^(0+128),w
  1088  0204  00F7               	movwf	Lcd_Set_Cursor@b
  1089  0205  3002               	movlw	2
  1090  0206  120A  118A  2367  120A  118A  	fcall	_Lcd_Set_Cursor
  1091  020B                     l2087:
  1092                           
  1093                           ;main_02.c: 129:     Lcd_Write_String(buffer);
  1094  020B  303C               	movlw	(low (_buffer| 0))& (0+255)
  1095  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1096  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1097  020E  00D0               	movwf	Lcd_Write_String@a
  1098  020F  3000               	movlw	0
  1099  0210  00D1               	movwf	Lcd_Write_String@a+1
  1100  0211  120A  118A  2453  120A  118A  	fcall	_Lcd_Write_String
  1101  0216                     l2089:
  1102                           
  1103                           ;main_02.c: 131:     Lcd_Write_String(buffer1);
  1104  0216  3028               	movlw	(low (_buffer1| 0))& (0+255)
  1105  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0219  00D0               	movwf	Lcd_Write_String@a
  1108  021A  3000               	movlw	0
  1109  021B  00D1               	movwf	Lcd_Write_String@a+1
  1110  021C  120A  118A  2453  120A  118A  	fcall	_Lcd_Write_String
  1111  0221                     l2091:
  1112                           
  1113                           ;main_02.c: 135:     if (ADCON0bits.GO == 0){
  1114  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0223  189F               	btfsc	31,1	;volatile
  1117  0224  2A26               	goto	u1171
  1118  0225  2A27               	goto	u1170
  1119  0226                     u1171:
  1120  0226  2A31               	goto	l2097
  1121  0227                     u1170:
  1122  0227                     l2093:
  1123                           
  1124                           ;main_02.c: 136:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1125  0227  3020               	movlw	32
  1126  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1127  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1128  022A  00A0               	movwf	??_main^(0+128)
  1129  022B                     u1187:
  1130  022B  0BA0               	decfsz	??_main^(0+128),f
  1131  022C  2A2B               	goto	u1187
  1132  022D  0000               	nop
  1133  022E                     l2095:
  1134                           
  1135                           ;main_02.c: 137:             ADCON0bits.GO = 1;
  1136  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1137  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0230  149F               	bsf	31,1	;volatile
  1139  0231                     l2097:
  1140                           
  1141                           ;main_02.c: 139:     mensaje();
  1142  0231  120A  118A  223A  120A  118A  	fcall	_mensaje
  1143  0236  29B3               	goto	l2077
  1144  0237  120A  118A  280C   	ljmp	start
  1145  023A                     __end_of_main:
  1146                           
  1147                           	psect	text1
  1148  0529                     __ptext1:	
  1149 ;; *************** function _sprintf *****************
  1150 ;; Defined at:
  1151 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  wh              1    wreg     PTR unsigned char 
  1154 ;;		 -> buffer1(20), buffer(20), 
  1155 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1156 ;;		 -> STR_3(3), STR_2(6), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  wh              1   26[BANK0 ] PTR unsigned char 
  1159 ;;		 -> buffer1(20), buffer(20), 
  1160 ;;  pb              2   28[BANK0 ] struct __prbuf
  1161 ;;  ap              1   27[BANK0 ] PTR void [1]
  1162 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  2   22[BANK0 ] int 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       3       0       0       0
  1173 ;;      Locals:         0       4       0       0       0
  1174 ;;      Temps:          0       1       0       0       0
  1175 ;;      Totals:         0       8       0       0       0
  1176 ;;Total ram usage:        8 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    3
  1179 ;; This function calls:
  1180 ;;		__doprnt
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _sprintf
  1188  0529                     _sprintf:
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1192                           ;sprintf@wh stored from wreg
  1193  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1194  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1195  052B  00EA               	movwf	sprintf@wh
  1196  052C                     l2041:
  1197  052C  086A               	movf	sprintf@wh,w
  1198  052D  00E9               	movwf	??_sprintf
  1199  052E  0869               	movf	??_sprintf,w
  1200  052F  00EC               	movwf	sprintf@pb
  1201  0530                     l2043:
  1202  0530  01ED               	clrf	low ((sprintf@pb| 0+1))
  1203  0531                     l2045:
  1204  0531  3067               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1205  0532  00E9               	movwf	??_sprintf
  1206  0533  0869               	movf	??_sprintf,w
  1207  0534  00EB               	movwf	sprintf@ap
  1208  0535                     l2047:
  1209  0535  0866               	movf	sprintf@f,w
  1210  0536  00D9               	movwf	__doprnt@f
  1211  0537  3000               	movlw	0
  1212  0538  1D03               	btfss	3,2
  1213  0539  3080               	movlw	128
  1214  053A  00DA               	movwf	__doprnt@f+1
  1215  053B  306B               	movlw	(low (sprintf@ap| 0))& (0+255)
  1216  053C  00E9               	movwf	??_sprintf
  1217  053D  0869               	movf	??_sprintf,w
  1218  053E  00DB               	movwf	__doprnt@ap
  1219  053F  306C               	movlw	(low (sprintf@pb| 0))& (0+255)
  1220  0540  120A  118A  2028  120A  118A  	fcall	__doprnt
  1221  0545                     l2049:
  1222  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0547  086C               	movf	sprintf@pb,w
  1225  0548  0084               	movwf	4
  1226  0549  1383               	bcf	3,7	;select IRP bank0
  1227  054A  0180               	clrf	0
  1228  054B                     l783:
  1229  054B  0008               	return
  1230  054C                     __end_of_sprintf:
  1231                           
  1232                           	psect	text2
  1233  0504                     __ptext2:	
  1234 ;; *************** function _setup *****************
  1235 ;; Defined at:
  1236 ;;		line 180 in file "main_02.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    2
  1257 ;; This function calls:
  1258 ;;		_config_ADC
  1259 ;;		_config_USART
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _setup
  1267  0504                     _setup:
  1268  0504                     l1595:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1271                           
  1272                           
  1273                           ;main_02.c: 182:     ANSEL = 0b00000011;
  1274  0504  3003               	movlw	3
  1275  0505  1683               	bsf	3,5	;RP0=1, select bank3
  1276  0506  1703               	bsf	3,6	;RP1=1, select bank3
  1277  0507  0088               	movwf	8	;volatile
  1278  0508                     l1597:
  1279                           
  1280                           ;main_02.c: 183:     TRISAbits.TRISA0 = 1;
  1281  0508  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0509  1303               	bcf	3,6	;RP1=0, select bank1
  1283  050A  1405               	bsf	5,0	;volatile
  1284  050B                     l1599:
  1285                           
  1286                           ;main_02.c: 184:     TRISAbits.TRISA1 = 1;
  1287  050B  1485               	bsf	5,1	;volatile
  1288  050C                     l1601:
  1289                           
  1290                           ;main_02.c: 187:     TRISD = 0x00;
  1291  050C  0188               	clrf	8	;volatile
  1292  050D                     l1603:
  1293                           
  1294                           ;main_02.c: 188:     TRISE = 0x00;
  1295  050D  0189               	clrf	9	;volatile
  1296  050E                     l1605:
  1297                           
  1298                           ;main_02.c: 192:     OSCCONbits.IRCF0 = 0;
  1299  050E  120F               	bcf	15,4	;volatile
  1300  050F                     l1607:
  1301                           
  1302                           ;main_02.c: 193:     OSCCONbits.IRCF1 = 1;
  1303  050F  168F               	bsf	15,5	;volatile
  1304  0510                     l1609:
  1305                           
  1306                           ;main_02.c: 194:     OSCCONbits.IRCF2 = 1;
  1307  0510  170F               	bsf	15,6	;volatile
  1308  0511                     l1611:
  1309                           
  1310                           ;main_02.c: 195:     OSCCONbits.SCS = 1;
  1311  0511  140F               	bsf	15,0	;volatile
  1312  0512                     l1613:
  1313                           
  1314                           ;main_02.c: 198:     PIE1bits.ADIE = 1;
  1315  0512  170C               	bsf	12,6	;volatile
  1316  0513                     l1615:
  1317                           
  1318                           ;main_02.c: 199:     PIR1bits.ADIF = 0;
  1319  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0515  130C               	bcf	12,6	;volatile
  1322  0516                     l1617:
  1323                           
  1324                           ;main_02.c: 200:     INTCONbits.GIE = 1;
  1325  0516  178B               	bsf	11,7	;volatile
  1326  0517                     l1619:
  1327                           
  1328                           ;main_02.c: 201:     INTCONbits.PEIE = 1;
  1329  0517  170B               	bsf	11,6	;volatile
  1330  0518                     l1621:
  1331                           
  1332                           ;main_02.c: 204:     PORTA = 0x00;
  1333  0518  0185               	clrf	5	;volatile
  1334  0519                     l1623:
  1335                           
  1336                           ;main_02.c: 205:     PORTB = 0x00;
  1337  0519  0186               	clrf	6	;volatile
  1338  051A                     l1625:
  1339                           
  1340                           ;main_02.c: 206:     PORTC = 0x00;
  1341  051A  0187               	clrf	7	;volatile
  1342  051B                     l1627:
  1343                           
  1344                           ;main_02.c: 207:     PORTD = 0x00;
  1345  051B  0188               	clrf	8	;volatile
  1346  051C                     l1629:
  1347                           
  1348                           ;main_02.c: 208:     PORTE = 0x00;
  1349  051C  0189               	clrf	9	;volatile
  1350  051D                     l1631:
  1351                           
  1352                           ;main_02.c: 211:     config_USART();
  1353  051D  120A  118A  2569  120A  118A  	fcall	_config_USART
  1354  0522                     l1633:
  1355                           
  1356                           ;main_02.c: 213:     config_ADC(1);
  1357  0522  3001               	movlw	1
  1358  0523  120A  118A  22A7  120A  118A  	fcall	_config_ADC
  1359  0528                     l120:
  1360  0528  0008               	return
  1361  0529                     __end_of_setup:
  1362                           
  1363                           	psect	text3
  1364  0569                     __ptext3:	
  1365 ;; *************** function _config_USART *****************
  1366 ;; Defined at:
  1367 ;;		line 11 in file "config_USART.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0
  1384 ;;      Totals:         0       0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_setup
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _config_USART
  1397  0569                     _config_USART:
  1398  0569                     l1469:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _config_USART: [wreg+status,2]
  1401                           
  1402                           
  1403                           ;config_USART.c: 13:     SPBRG = 103;
  1404  0569  3067               	movlw	103
  1405  056A  1683               	bsf	3,5	;RP0=1, select bank1
  1406  056B  1303               	bcf	3,6	;RP1=0, select bank1
  1407  056C  0099               	movwf	25	;volatile
  1408  056D                     l1471:
  1409                           
  1410                           ;config_USART.c: 14:     SPBRGH = 0;
  1411  056D  019A               	clrf	26	;volatile
  1412  056E                     l1473:
  1413                           
  1414                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1415  056E  1683               	bsf	3,5	;RP0=1, select bank3
  1416  056F  1703               	bsf	3,6	;RP1=1, select bank3
  1417  0570  1587               	bsf	7,3	;volatile
  1418  0571                     l1475:
  1419                           
  1420                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1421  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0573  1518               	bsf	24,2	;volatile
  1424  0574                     l1477:
  1425                           
  1426                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1427  0574  1218               	bcf	24,4	;volatile
  1428  0575                     l1479:
  1429                           
  1430                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1431  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0577  1798               	bsf	24,7	;volatile
  1434  0578                     l1481:
  1435                           
  1436                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1437  0578  1618               	bsf	24,4	;volatile
  1438  0579                     l1483:
  1439                           
  1440                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1441  0579  1683               	bsf	3,5	;RP0=1, select bank1
  1442  057A  1303               	bcf	3,6	;RP1=0, select bank1
  1443  057B  1318               	bcf	24,6	;volatile
  1444  057C                     l1485:
  1445                           
  1446                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1447  057C  1698               	bsf	24,5	;volatile
  1448  057D                     l1487:
  1449                           
  1450                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1451  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1452  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1453  057F  1318               	bcf	24,6	;volatile
  1454  0580                     l1489:
  1455                           
  1456                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1457  0580  178B               	bsf	11,7	;volatile
  1458  0581                     l1491:
  1459                           
  1460                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1461  0581  170B               	bsf	11,6	;volatile
  1462  0582                     l1493:
  1463                           
  1464                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1465  0582  120C               	bcf	12,4	;volatile
  1466  0583                     l1495:
  1467                           
  1468                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1469  0583  128C               	bcf	12,5	;volatile
  1470  0584                     l152:
  1471  0584  0008               	return
  1472  0585                     __end_of_config_USART:
  1473                           
  1474                           	psect	text4
  1475  02A7                     __ptext4:	
  1476 ;; *************** function _config_ADC *****************
  1477 ;; Defined at:
  1478 ;;		line 15 in file "config_ADC.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  frec            1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  frec            1    5[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0
  1494 ;;      Temps:          2       0       0       0       0
  1495 ;;      Totals:         3       0       0       0       0
  1496 ;;Total ram usage:        3 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_setup
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _config_ADC
  1508  02A7                     _config_ADC:
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  1512                           ;config_ADC@frec stored from wreg
  1513  02A7  00F5               	movwf	config_ADC@frec
  1514  02A8                     l1499:
  1515                           
  1516                           ;config_ADC.c: 16:     switch(frec){
  1517  02A8  2AF5               	goto	l1567
  1518  02A9                     l1501:
  1519                           
  1520                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  1521  02A9  30C3               	movlw	-61
  1522  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1523  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1524  02AC  059F               	andwf	31,f	;volatile
  1525  02AD                     l1503:
  1526                           
  1527                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1528  02AD  3021               	movlw	33
  1529  02AE  00F3               	movwf	??_config_ADC
  1530  02AF                     u1197:
  1531  02AF  0BF3               	decfsz	??_config_ADC,f
  1532  02B0  2AAF               	goto	u1197
  1533  02B1                     l1505:
  1534                           
  1535                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1536  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1537  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1538  02B3  131F               	bcf	31,6	;volatile
  1539  02B4                     l1507:
  1540                           
  1541                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1542  02B4  139F               	bcf	31,7	;volatile
  1543  02B5                     l1509:
  1544                           
  1545                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1546  02B5  141F               	bsf	31,0	;volatile
  1547  02B6                     l1511:
  1548                           
  1549                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1550  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  1551  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  1552  02B8  139F               	bcf	31,7	;volatile
  1553  02B9                     l1513:
  1554                           
  1555                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1556  02B9  129F               	bcf	31,5	;volatile
  1557  02BA                     l1515:
  1558                           
  1559                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1560  02BA  121F               	bcf	31,4	;volatile
  1561                           
  1562                           ;config_ADC.c: 27:             break;
  1563  02BB  2B0B               	goto	l135
  1564  02BC                     l1517:
  1565                           
  1566                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1567  02BC  30C3               	movlw	-61
  1568  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1569  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1570  02BF  059F               	andwf	31,f	;volatile
  1571  02C0                     l1519:
  1572                           
  1573                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1574  02C0  3021               	movlw	33
  1575  02C1  00F3               	movwf	??_config_ADC
  1576  02C2                     u1207:
  1577  02C2  0BF3               	decfsz	??_config_ADC,f
  1578  02C3  2AC2               	goto	u1207
  1579  02C4                     l1521:
  1580                           
  1581                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1582  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1583  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1584  02C6  171F               	bsf	31,6	;volatile
  1585  02C7                     l1523:
  1586                           
  1587                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1588  02C7  139F               	bcf	31,7	;volatile
  1589  02C8                     l1525:
  1590                           
  1591                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1592  02C8  141F               	bsf	31,0	;volatile
  1593  02C9                     l1527:
  1594                           
  1595                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1596  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1597  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1598  02CB  139F               	bcf	31,7	;volatile
  1599  02CC                     l1529:
  1600                           
  1601                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1602  02CC  129F               	bcf	31,5	;volatile
  1603  02CD                     l1531:
  1604                           
  1605                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1606  02CD  121F               	bcf	31,4	;volatile
  1607                           
  1608                           ;config_ADC.c: 38:             break;
  1609  02CE  2B0B               	goto	l135
  1610  02CF                     l1533:
  1611                           
  1612                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  1613  02CF  30C3               	movlw	-61
  1614  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1615  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1616  02D2  059F               	andwf	31,f	;volatile
  1617  02D3                     l1535:
  1618                           
  1619                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1620  02D3  3021               	movlw	33
  1621  02D4  00F3               	movwf	??_config_ADC
  1622  02D5                     u1217:
  1623  02D5  0BF3               	decfsz	??_config_ADC,f
  1624  02D6  2AD5               	goto	u1217
  1625  02D7                     l1537:
  1626                           
  1627                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  1628  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1629  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1630  02D9  131F               	bcf	31,6	;volatile
  1631  02DA                     l1539:
  1632                           
  1633                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1634  02DA  179F               	bsf	31,7	;volatile
  1635  02DB                     l1541:
  1636                           
  1637                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1638  02DB  141F               	bsf	31,0	;volatile
  1639  02DC                     l1543:
  1640                           
  1641                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1642  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  1643  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  1644  02DE  139F               	bcf	31,7	;volatile
  1645  02DF                     l1545:
  1646                           
  1647                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1648  02DF  129F               	bcf	31,5	;volatile
  1649  02E0                     l1547:
  1650                           
  1651                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1652  02E0  121F               	bcf	31,4	;volatile
  1653                           
  1654                           ;config_ADC.c: 49:             break;
  1655  02E1  2B0B               	goto	l135
  1656  02E2                     l1549:
  1657                           
  1658                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1659  02E2  30C3               	movlw	-61
  1660  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1661  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1662  02E5  059F               	andwf	31,f	;volatile
  1663  02E6                     l1551:
  1664                           
  1665                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1666  02E6  3021               	movlw	33
  1667  02E7  00F3               	movwf	??_config_ADC
  1668  02E8                     u1227:
  1669  02E8  0BF3               	decfsz	??_config_ADC,f
  1670  02E9  2AE8               	goto	u1227
  1671  02EA                     l1553:
  1672                           
  1673                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1674  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1675  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1676  02EC  171F               	bsf	31,6	;volatile
  1677  02ED                     l1555:
  1678                           
  1679                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1680  02ED  179F               	bsf	31,7	;volatile
  1681  02EE                     l1557:
  1682                           
  1683                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1684  02EE  141F               	bsf	31,0	;volatile
  1685  02EF                     l1559:
  1686                           
  1687                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  1688  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  1689  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  1690  02F1  139F               	bcf	31,7	;volatile
  1691  02F2                     l1561:
  1692                           
  1693                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  1694  02F2  129F               	bcf	31,5	;volatile
  1695  02F3                     l1563:
  1696                           
  1697                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  1698  02F3  121F               	bcf	31,4	;volatile
  1699                           
  1700                           ;config_ADC.c: 60:             break;
  1701  02F4  2B0B               	goto	l135
  1702  02F5                     l1567:
  1703  02F5  0875               	movf	config_ADC@frec,w
  1704  02F6  00F3               	movwf	??_config_ADC
  1705  02F7  01F4               	clrf	??_config_ADC+1
  1706                           
  1707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1708                           ; Switch size 1, requested type "simple"
  1709                           ; Number of cases is 1, Range of values is 0 to 0
  1710                           ; switch strategies available:
  1711                           ; Name         Instructions Cycles
  1712                           ; simple_byte            4     3 (average)
  1713                           ; direct_byte           11     8 (fixed)
  1714                           ; jumptable            260     6 (fixed)
  1715                           ;	Chosen strategy is simple_byte
  1716  02F8  0874               	movf	??_config_ADC+1,w
  1717  02F9  3A00               	xorlw	0	; case 0
  1718  02FA  1903               	skipnz
  1719  02FB  2AFD               	goto	l2139
  1720  02FC  2B0B               	goto	l135
  1721  02FD                     l2139:
  1722                           
  1723                           ; Switch size 1, requested type "simple"
  1724                           ; Number of cases is 4, Range of values is 0 to 3
  1725                           ; switch strategies available:
  1726                           ; Name         Instructions Cycles
  1727                           ; simple_byte           13     7 (average)
  1728                           ; direct_byte           20     8 (fixed)
  1729                           ; jumptable            260     6 (fixed)
  1730                           ;	Chosen strategy is simple_byte
  1731  02FD  0873               	movf	??_config_ADC,w
  1732  02FE  3A00               	xorlw	0	; case 0
  1733  02FF  1903               	skipnz
  1734  0300  2AA9               	goto	l1501
  1735  0301  3A01               	xorlw	1	; case 1
  1736  0302  1903               	skipnz
  1737  0303  2ABC               	goto	l1517
  1738  0304  3A03               	xorlw	3	; case 2
  1739  0305  1903               	skipnz
  1740  0306  2ACF               	goto	l1533
  1741  0307  3A01               	xorlw	1	; case 3
  1742  0308  1903               	skipnz
  1743  0309  2AE2               	goto	l1549
  1744  030A  2B0B               	goto	l135
  1745  030B                     l135:
  1746  030B  0008               	return
  1747  030C                     __end_of_config_ADC:
  1748                           
  1749                           	psect	text5
  1750  023A                     __ptext5:	
  1751 ;; *************** function _mensaje *****************
  1752 ;; Defined at:
  1753 ;;		line 159 in file "main_02.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       0       0       0       0
  1768 ;;      Locals:         0       0       0       0       0
  1769 ;;      Temps:          0       3       0       0       0
  1770 ;;      Totals:         0       3       0       0       0
  1771 ;;Total ram usage:        3 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		_printf
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _mensaje
  1783  023A                     _mensaje:
  1784  023A                     l2053:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1787                           
  1788                           
  1789                           ;main_02.c: 160:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1790  023A  3003               	movlw	3
  1791  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1792  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1793  023D  00EE               	movwf	??_mensaje+2
  1794  023E  308A               	movlw	138
  1795  023F  00ED               	movwf	??_mensaje+1
  1796  0240  3055               	movlw	85
  1797  0241  00EC               	movwf	??_mensaje
  1798  0242                     u1237:
  1799  0242  0BEC               	decfsz	??_mensaje,f
  1800  0243  2A42               	goto	u1237
  1801  0244  0BED               	decfsz	??_mensaje+1,f
  1802  0245  2A42               	goto	u1237
  1803  0246  0BEE               	decfsz	??_mensaje+2,f
  1804  0247  2A42               	goto	u1237
  1805  0248                     l2055:
  1806                           
  1807                           ;main_02.c: 161:     printf("\rVoltaje1: ");
  1808  0248  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1809  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1810  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1811  024B  00E6               	movwf	printf@f
  1812  024C  3080               	movlw	128
  1813  024D  00E7               	movwf	printf@f+1
  1814  024E  120A  118A  2585  120A  118A  	fcall	_printf
  1815  0253                     l2057:
  1816                           
  1817                           ;main_02.c: 162:     printf(buffer);
  1818  0253  303C               	movlw	(low (_buffer| 0))& (0+255)
  1819  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0256  00E6               	movwf	printf@f
  1822  0257  3000               	movlw	0
  1823  0258  00E7               	movwf	printf@f+1
  1824  0259  120A  118A  2585  120A  118A  	fcall	_printf
  1825  025E                     l2059:
  1826                           
  1827                           ;main_02.c: 163:     printf("\r\r");
  1828  025E  3046               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1829  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0261  00E6               	movwf	printf@f
  1832  0262  3080               	movlw	128
  1833  0263  00E7               	movwf	printf@f+1
  1834  0264  120A  118A  2585  120A  118A  	fcall	_printf
  1835  0269                     l2061:
  1836                           
  1837                           ;main_02.c: 164:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1838  0269  3003               	movlw	3
  1839  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1840  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1841  026C  00EE               	movwf	??_mensaje+2
  1842  026D  308A               	movlw	138
  1843  026E  00ED               	movwf	??_mensaje+1
  1844  026F  3055               	movlw	85
  1845  0270  00EC               	movwf	??_mensaje
  1846  0271                     u1247:
  1847  0271  0BEC               	decfsz	??_mensaje,f
  1848  0272  2A71               	goto	u1247
  1849  0273  0BED               	decfsz	??_mensaje+1,f
  1850  0274  2A71               	goto	u1247
  1851  0275  0BEE               	decfsz	??_mensaje+2,f
  1852  0276  2A71               	goto	u1247
  1853                           
  1854                           ;main_02.c: 165:     printf("Voltaje2: ");
  1855  0277  3035               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1856  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1858  027A  00E6               	movwf	printf@f
  1859  027B  3080               	movlw	128
  1860  027C  00E7               	movwf	printf@f+1
  1861  027D  120A  118A  2585  120A  118A  	fcall	_printf
  1862                           
  1863                           ;main_02.c: 166:     printf(buffer1);
  1864  0282  3028               	movlw	(low (_buffer1| 0))& (0+255)
  1865  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0285  00E6               	movwf	printf@f
  1868  0286  3000               	movlw	0
  1869  0287  00E7               	movwf	printf@f+1
  1870  0288  120A  118A  2585  120A  118A  	fcall	_printf
  1871                           
  1872                           ;main_02.c: 167:     printf("\r-----------");
  1873  028D  301C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1874  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1875  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0290  00E6               	movwf	printf@f
  1877  0291  3080               	movlw	128
  1878  0292  00E7               	movwf	printf@f+1
  1879  0293  120A  118A  2585  120A  118A  	fcall	_printf
  1880  0298                     l2063:
  1881                           
  1882                           ;main_02.c: 168:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1883  0298  3003               	movlw	3
  1884  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1885  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1886  029B  00EE               	movwf	??_mensaje+2
  1887  029C  308A               	movlw	138
  1888  029D  00ED               	movwf	??_mensaje+1
  1889  029E  3055               	movlw	85
  1890  029F  00EC               	movwf	??_mensaje
  1891  02A0                     u1257:
  1892  02A0  0BEC               	decfsz	??_mensaje,f
  1893  02A1  2AA0               	goto	u1257
  1894  02A2  0BED               	decfsz	??_mensaje+1,f
  1895  02A3  2AA0               	goto	u1257
  1896  02A4  0BEE               	decfsz	??_mensaje+2,f
  1897  02A5  2AA0               	goto	u1257
  1898  02A6                     l111:
  1899  02A6  0008               	return
  1900  02A7                     __end_of_mensaje:
  1901                           
  1902                           	psect	text6
  1903  0585                     __ptext6:	
  1904 ;; *************** function _printf *****************
  1905 ;; Defined at:
  1906 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  1909 ;;		 -> STR_7(13), STR_6(11), STR_5(3), STR_4(12), 
  1910 ;;		 -> buffer1(20), buffer(20), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  pb              2   26[BANK0 ] struct __prbuf
  1913 ;;  ap              1   25[BANK0 ] PTR void [1]
  1914 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2   22[BANK0 ] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       2       0       0       0
  1925 ;;      Locals:         0       3       0       0       0
  1926 ;;      Temps:          0       1       0       0       0
  1927 ;;      Totals:         0       6       0       0       0
  1928 ;;Total ram usage:        6 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    3
  1931 ;; This function calls:
  1932 ;;		__doprnt
  1933 ;; This function is called by:
  1934 ;;		_mensaje
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _printf
  1940  0585                     _printf:
  1941  0585                     l1993:	
  1942                           ;incstack = 0
  1943                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1944                           
  1945  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0587  01EA               	clrf	printf@pb
  1948  0588                     l1995:
  1949  0588  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1950  0589  00E8               	movwf	??_printf
  1951  058A  0868               	movf	??_printf,w
  1952  058B  00EB               	movwf	low ((printf@pb| 0+1))
  1953  058C                     l1997:
  1954  058C  3068               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1955  058D  00E8               	movwf	??_printf
  1956  058E  0868               	movf	??_printf,w
  1957  058F  00E9               	movwf	printf@ap
  1958  0590                     l1999:
  1959                           
  1960                           ;	Return value of _printf is never used
  1961  0590  0866               	movf	printf@f,w
  1962  0591  00D9               	movwf	__doprnt@f
  1963  0592  0867               	movf	printf@f+1,w
  1964  0593  00DA               	movwf	__doprnt@f+1
  1965  0594  3069               	movlw	(low (printf@ap| 0))& (0+255)
  1966  0595  00E8               	movwf	??_printf
  1967  0596  0868               	movf	??_printf,w
  1968  0597  00DB               	movwf	__doprnt@ap
  1969  0598  306A               	movlw	(low (printf@pb| 0))& (0+255)
  1970  0599  120A  118A  2028  120A  118A  	fcall	__doprnt
  1971  059E                     l734:
  1972  059E  0008               	return
  1973  059F                     __end_of_printf:
  1974                           
  1975                           	psect	text7
  1976  0028                     __ptext7:	
  1977 ;; *************** function __doprnt *****************
  1978 ;; Defined at:
  1979 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  pb              1    wreg     PTR struct __prbuf
  1982 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1983 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  1984 ;;		 -> STR_7(13), STR_6(11), STR_5(3), STR_4(12), 
  1985 ;;		 -> STR_3(3), buffer1(20), STR_2(6), buffer(20), 
  1986 ;;  ap              1   11[BANK0 ] PTR PTR void 
  1987 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  pb              1   21[BANK0 ] PTR struct __prbuf
  1990 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1991 ;;  tmpval          4    0        struct .
  1992 ;;  val             2   18[BANK0 ] unsigned int 
  1993 ;;  cp              2    0        PTR const unsigned char 
  1994 ;;  len             2    0        unsigned int 
  1995 ;;  c               1   20[BANK0 ] unsigned char 
  1996 ;;  prec            1   17[BANK0 ] char 
  1997 ;;  flag            1   16[BANK0 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  2    9[BANK0 ] int 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       3       0       0       0
  2008 ;;      Locals:         0       6       0       0       0
  2009 ;;      Temps:          0       4       0       0       0
  2010 ;;      Totals:         0      13       0       0       0
  2011 ;;Total ram usage:       13 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    2
  2014 ;; This function calls:
  2015 ;;		Absolute function
  2016 ;;		___lwdiv
  2017 ;;		___lwmod
  2018 ;;		_putch
  2019 ;; This function is called by:
  2020 ;;		_printf
  2021 ;;		_sprintf
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function __doprnt
  2027  0028                     __doprnt:
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2031                           ;__doprnt@pb stored from wreg
  2032  0028  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0029  1303               	bcf	3,6	;RP1=0, select bank0
  2034  002A  00E5               	movwf	__doprnt@pb
  2035  002B                     l1913:
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2038  002B  2974               	goto	l1983
  2039  002C                     l1915:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2042  002C  3025               	movlw	37
  2043  002D  0664               	xorwf	__doprnt@c,w
  2044  002E  1903               	btfsc	3,2
  2045  002F  2831               	goto	u991
  2046  0030  2832               	goto	u990
  2047  0031                     u991:
  2048  0031  2858               	goto	l1925
  2049  0032                     u990:
  2050  0032                     l1917:
  2051  0032  0A65               	incf	__doprnt@pb,w
  2052  0033  0084               	movwf	4
  2053  0034  1383               	bcf	3,7	;select IRP bank0
  2054  0035  0800               	movf	0,w
  2055  0036  1903               	btfsc	3,2
  2056  0037  2839               	goto	u1001
  2057  0038  283A               	goto	u1000
  2058  0039                     u1001:
  2059  0039  2849               	goto	l1921
  2060  003A                     u1000:
  2061  003A                     l1919:
  2062  003A  0864               	movf	__doprnt@c,w
  2063  003B  00DC               	movwf	??__doprnt
  2064  003C  085C               	movf	??__doprnt,w
  2065  003D  00F3               	movwf	putch@dato
  2066  003E  0A65               	incf	__doprnt@pb,w
  2067  003F  0084               	movwf	4
  2068  0040  0800               	movf	0,w
  2069  0041  120A  118A  201F  120A  118A  	fcall	fptable
  2070  0046  1283               	bcf	3,5	;RP0=0, select bank0
  2071  0047  1303               	bcf	3,6	;RP1=0, select bank0
  2072  0048  282B               	goto	l1913
  2073  0049                     l1921:
  2074  0049  0864               	movf	__doprnt@c,w
  2075  004A  00DC               	movwf	??__doprnt
  2076  004B  0865               	movf	__doprnt@pb,w
  2077  004C  0084               	movwf	4
  2078  004D  0800               	movf	0,w
  2079  004E  0084               	movwf	4
  2080  004F  085C               	movf	??__doprnt,w
  2081  0050  0080               	movwf	0
  2082  0051                     l1923:
  2083  0051  3001               	movlw	1
  2084  0052  00DC               	movwf	??__doprnt
  2085  0053  0865               	movf	__doprnt@pb,w
  2086  0054  0084               	movwf	4
  2087  0055  085C               	movf	??__doprnt,w
  2088  0056  0780               	addwf	0,f
  2089  0057  282B               	goto	l1913
  2090  0058                     l1925:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2093  0058  01E0               	clrf	__doprnt@flag
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2096  0059  2880               	goto	l1937
  2097  005A                     l1927:
  2098  005A  0A65               	incf	__doprnt@pb,w
  2099  005B  0084               	movwf	4
  2100  005C  1383               	bcf	3,7	;select IRP bank0
  2101  005D  0800               	movf	0,w
  2102  005E  1903               	btfsc	3,2
  2103  005F  2861               	goto	u1011
  2104  0060  2862               	goto	u1010
  2105  0061                     u1011:
  2106  0061  2871               	goto	l1931
  2107  0062                     u1010:
  2108  0062                     l1929:
  2109  0062  0864               	movf	__doprnt@c,w
  2110  0063  00DC               	movwf	??__doprnt
  2111  0064  085C               	movf	??__doprnt,w
  2112  0065  00F3               	movwf	putch@dato
  2113  0066  0A65               	incf	__doprnt@pb,w
  2114  0067  0084               	movwf	4
  2115  0068  0800               	movf	0,w
  2116  0069  120A  118A  201F  120A  118A  	fcall	fptable
  2117  006E  1283               	bcf	3,5	;RP0=0, select bank0
  2118  006F  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0070  282B               	goto	l1913
  2120  0071                     l1931:
  2121  0071  0864               	movf	__doprnt@c,w
  2122  0072  00DC               	movwf	??__doprnt
  2123  0073  0865               	movf	__doprnt@pb,w
  2124  0074  0084               	movwf	4
  2125  0075  0800               	movf	0,w
  2126  0076  0084               	movwf	4
  2127  0077  085C               	movf	??__doprnt,w
  2128  0078  0080               	movwf	0
  2129  0079                     l1933:
  2130  0079  3001               	movlw	1
  2131  007A  00DC               	movwf	??__doprnt
  2132  007B  0865               	movf	__doprnt@pb,w
  2133  007C  0084               	movwf	4
  2134  007D  085C               	movf	??__doprnt,w
  2135  007E  0780               	addwf	0,f
  2136  007F  282B               	goto	l1913
  2137  0080                     l1937:
  2138  0080  085A               	movf	__doprnt@f+1,w
  2139  0081  00DD               	movwf	??__doprnt+1
  2140  0082  0859               	movf	__doprnt@f,w
  2141  0083  00DC               	movwf	??__doprnt
  2142  0084  0AD9               	incf	__doprnt@f,f
  2143  0085  1903               	skipnz
  2144  0086  0ADA               	incf	__doprnt@f+1,f
  2145  0087  085D               	movf	??__doprnt+1,w
  2146  0088  00FF               	movwf	btemp+1
  2147  0089  085C               	movf	??__doprnt,w
  2148  008A  0084               	movwf	4
  2149  008B  120A  118A  230C  120A  118A  	fcall	stringtab
  2150  0090  00E4               	movwf	__doprnt@c
  2151  0091  00DE               	movwf	??__doprnt+2
  2152  0092  01DF               	clrf	??__doprnt+3
  2153                           
  2154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 1, Range of values is 0 to 0
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte            4     3 (average)
  2160                           ; direct_byte           11     8 (fixed)
  2161                           ; jumptable            260     6 (fixed)
  2162                           ;	Chosen strategy is simple_byte
  2163  0093  085F               	movf	??__doprnt+3,w
  2164  0094  3A00               	xorlw	0	; case 0
  2165  0095  1903               	skipnz
  2166  0096  2898               	goto	l2141
  2167  0097  285A               	goto	l1927
  2168  0098                     l2141:
  2169                           
  2170                           ; Switch size 1, requested type "simple"
  2171                           ; Number of cases is 3, Range of values is 0 to 105
  2172                           ; switch strategies available:
  2173                           ; Name         Instructions Cycles
  2174                           ; simple_byte           10     6 (average)
  2175                           ; jumptable            260     6 (fixed)
  2176                           ;	Chosen strategy is simple_byte
  2177  0098  085E               	movf	??__doprnt+2,w
  2178  0099  3A00               	xorlw	0	; case 0
  2179  009A  1903               	skipnz
  2180  009B  298E               	goto	l1985
  2181  009C  3A64               	xorlw	100	; case 100
  2182  009D  1903               	skipnz
  2183  009E  28A3               	goto	l1939
  2184  009F  3A0D               	xorlw	13	; case 105
  2185  00A0  1903               	skipnz
  2186  00A1  28A3               	goto	l1939
  2187  00A2  285A               	goto	l1927
  2188  00A3                     l1939:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2191  00A3  085B               	movf	__doprnt@ap,w
  2192  00A4  0084               	movwf	4
  2193  00A5  1383               	bcf	3,7	;select IRP bank0
  2194  00A6  0800               	movf	0,w
  2195  00A7  00DC               	movwf	??__doprnt
  2196  00A8  3002               	movlw	2
  2197  00A9  0780               	addwf	0,f
  2198  00AA  085C               	movf	??__doprnt,w
  2199  00AB  0084               	movwf	4
  2200  00AC  0800               	movf	0,w
  2201  00AD  00E2               	movwf	__doprnt@val
  2202  00AE  0A84               	incf	4,f
  2203  00AF  0800               	movf	0,w
  2204  00B0  00E3               	movwf	__doprnt@val+1
  2205  00B1                     l1941:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2208  00B1  1FE3               	btfss	__doprnt@val+1,7
  2209  00B2  28B4               	goto	u1021
  2210  00B3  28B5               	goto	u1020
  2211  00B4                     u1021:
  2212  00B4  28BE               	goto	l1947
  2213  00B5                     u1020:
  2214  00B5                     l1943:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2217  00B5  3003               	movlw	3
  2218  00B6  00DC               	movwf	??__doprnt
  2219  00B7  085C               	movf	??__doprnt,w
  2220  00B8  04E0               	iorwf	__doprnt@flag,f
  2221  00B9                     l1945:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2224  00B9  09E2               	comf	__doprnt@val,f
  2225  00BA  09E3               	comf	__doprnt@val+1,f
  2226  00BB  0AE2               	incf	__doprnt@val,f
  2227  00BC  1903               	skipnz
  2228  00BD  0AE3               	incf	__doprnt@val+1,f
  2229  00BE                     l1947:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2232  00BE  01E4               	clrf	__doprnt@c
  2233  00BF  0AE4               	incf	__doprnt@c,f
  2234  00C0                     l1953:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2237  00C0  0864               	movf	__doprnt@c,w
  2238  00C1  00DC               	movwf	??__doprnt
  2239  00C2  075C               	addwf	??__doprnt,w
  2240  00C3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2241  00C4  0084               	movwf	4
  2242  00C5  120A  118A  2316  120A  118A  	fcall	stringdir
  2243  00CA  00DD               	movwf	??__doprnt+1
  2244  00CB  120A  118A  2316  120A  118A  	fcall	stringdir
  2245  00D0  00DE               	movwf	??__doprnt+2
  2246  00D1  085E               	movf	??__doprnt+2,w
  2247  00D2  0263               	subwf	__doprnt@val+1,w
  2248  00D3  1D03               	skipz
  2249  00D4  28D7               	goto	u1035
  2250  00D5  085D               	movf	??__doprnt+1,w
  2251  00D6  0262               	subwf	__doprnt@val,w
  2252  00D7                     u1035:
  2253  00D7  1803               	skipnc
  2254  00D8  28DA               	goto	u1031
  2255  00D9  28DB               	goto	u1030
  2256  00DA                     u1031:
  2257  00DA  28DC               	goto	l1957
  2258  00DB                     u1030:
  2259  00DB  28E6               	goto	l1959
  2260  00DC                     l1957:
  2261  00DC  3001               	movlw	1
  2262  00DD  00DC               	movwf	??__doprnt
  2263  00DE  085C               	movf	??__doprnt,w
  2264  00DF  07E4               	addwf	__doprnt@c,f
  2265  00E0  3005               	movlw	5
  2266  00E1  0664               	xorwf	__doprnt@c,w
  2267  00E2  1D03               	btfss	3,2
  2268  00E3  28E5               	goto	u1041
  2269  00E4  28E6               	goto	u1040
  2270  00E5                     u1041:
  2271  00E5  28C0               	goto	l1953
  2272  00E6                     u1040:
  2273  00E6                     l1959:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2276  00E6  0860               	movf	__doprnt@flag,w
  2277  00E7  3903               	andlw	3
  2278  00E8  1903               	btfsc	3,2
  2279  00E9  28EB               	goto	u1051
  2280  00EA  28EC               	goto	u1050
  2281  00EB                     u1051:
  2282  00EB  290F               	goto	l1969
  2283  00EC                     u1050:
  2284  00EC                     l1961:
  2285  00EC  0A65               	incf	__doprnt@pb,w
  2286  00ED  0084               	movwf	4
  2287  00EE  1383               	bcf	3,7	;select IRP bank0
  2288  00EF  0800               	movf	0,w
  2289  00F0  1903               	btfsc	3,2
  2290  00F1  28F3               	goto	u1061
  2291  00F2  28F4               	goto	u1060
  2292  00F3                     u1061:
  2293  00F3  2901               	goto	l1965
  2294  00F4                     u1060:
  2295  00F4                     l1963:
  2296  00F4  302D               	movlw	45
  2297  00F5  00DC               	movwf	??__doprnt
  2298  00F6  085C               	movf	??__doprnt,w
  2299  00F7  00F3               	movwf	putch@dato
  2300  00F8  0A65               	incf	__doprnt@pb,w
  2301  00F9  0084               	movwf	4
  2302  00FA  0800               	movf	0,w
  2303  00FB  120A  118A  201F  120A  118A  	fcall	fptable
  2304  0100  290F               	goto	l1969
  2305  0101                     l1965:
  2306  0101  302D               	movlw	45
  2307  0102  00DC               	movwf	??__doprnt
  2308  0103  0865               	movf	__doprnt@pb,w
  2309  0104  0084               	movwf	4
  2310  0105  0800               	movf	0,w
  2311  0106  0084               	movwf	4
  2312  0107  085C               	movf	??__doprnt,w
  2313  0108  0080               	movwf	0
  2314  0109                     l1967:
  2315  0109  3001               	movlw	1
  2316  010A  00DC               	movwf	??__doprnt
  2317  010B  0865               	movf	__doprnt@pb,w
  2318  010C  0084               	movwf	4
  2319  010D  085C               	movf	??__doprnt,w
  2320  010E  0780               	addwf	0,f
  2321  010F                     l1969:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2324  010F  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0110  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0111  0864               	movf	__doprnt@c,w
  2327  0112  00DC               	movwf	??__doprnt
  2328  0113  085C               	movf	??__doprnt,w
  2329  0114  00E1               	movwf	__doprnt@prec
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2332  0115  2969               	goto	l1981
  2333  0116                     l1971:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2336  0116  300A               	movlw	10
  2337  0117  00D3               	movwf	___lwmod@divisor
  2338  0118  3000               	movlw	0
  2339  0119  00D4               	movwf	___lwmod@divisor+1
  2340  011A  0861               	movf	__doprnt@prec,w
  2341  011B  00DC               	movwf	??__doprnt
  2342  011C  075C               	addwf	??__doprnt,w
  2343  011D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2344  011E  0084               	movwf	4
  2345  011F  120A  118A  2316  120A  118A  	fcall	stringdir
  2346  0124  00F3               	movwf	___lwdiv@divisor
  2347  0125  120A  118A  2316  120A  118A  	fcall	stringdir
  2348  012A  00F4               	movwf	___lwdiv@divisor+1
  2349  012B  0863               	movf	__doprnt@val+1,w
  2350  012C  00F6               	movwf	___lwdiv@dividend+1
  2351  012D  0862               	movf	__doprnt@val,w
  2352  012E  00F5               	movwf	___lwdiv@dividend
  2353  012F  120A  118A  240D  120A  118A  	fcall	___lwdiv
  2354  0134  0874               	movf	?___lwdiv+1,w
  2355  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0137  00D6               	movwf	___lwmod@dividend+1
  2358  0138  0873               	movf	?___lwdiv,w
  2359  0139  00D5               	movwf	___lwmod@dividend
  2360  013A  120A  118A  2499  120A  118A  	fcall	___lwmod
  2361  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0141  0853               	movf	?___lwmod,w
  2364  0142  3E30               	addlw	48
  2365  0143  00DD               	movwf	??__doprnt+1
  2366  0144  085D               	movf	??__doprnt+1,w
  2367  0145  00E4               	movwf	__doprnt@c
  2368  0146                     l1973:
  2369  0146  0A65               	incf	__doprnt@pb,w
  2370  0147  0084               	movwf	4
  2371  0148  1383               	bcf	3,7	;select IRP bank0
  2372  0149  0800               	movf	0,w
  2373  014A  1903               	btfsc	3,2
  2374  014B  294D               	goto	u1071
  2375  014C  294E               	goto	u1070
  2376  014D                     u1071:
  2377  014D  295B               	goto	l1977
  2378  014E                     u1070:
  2379  014E                     l1975:
  2380  014E  0864               	movf	__doprnt@c,w
  2381  014F  00DC               	movwf	??__doprnt
  2382  0150  085C               	movf	??__doprnt,w
  2383  0151  00F3               	movwf	putch@dato
  2384  0152  0A65               	incf	__doprnt@pb,w
  2385  0153  0084               	movwf	4
  2386  0154  0800               	movf	0,w
  2387  0155  120A  118A  201F  120A  118A  	fcall	fptable
  2388  015A  2969               	goto	l1981
  2389  015B                     l1977:
  2390  015B  0864               	movf	__doprnt@c,w
  2391  015C  00DC               	movwf	??__doprnt
  2392  015D  0865               	movf	__doprnt@pb,w
  2393  015E  0084               	movwf	4
  2394  015F  0800               	movf	0,w
  2395  0160  0084               	movwf	4
  2396  0161  085C               	movf	??__doprnt,w
  2397  0162  0080               	movwf	0
  2398  0163                     l1979:
  2399  0163  3001               	movlw	1
  2400  0164  00DC               	movwf	??__doprnt
  2401  0165  0865               	movf	__doprnt@pb,w
  2402  0166  0084               	movwf	4
  2403  0167  085C               	movf	??__doprnt,w
  2404  0168  0780               	addwf	0,f
  2405  0169                     l1981:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2408  0169  30FF               	movlw	255
  2409  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2410  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2411  016C  00DC               	movwf	??__doprnt
  2412  016D  085C               	movf	??__doprnt,w
  2413  016E  07E1               	addwf	__doprnt@prec,f
  2414  016F  0A61               	incf	__doprnt@prec,w
  2415  0170  1D03               	btfss	3,2
  2416  0171  2973               	goto	u1081
  2417  0172  2974               	goto	u1080
  2418  0173                     u1081:
  2419  0173  2916               	goto	l1971
  2420  0174                     u1080:
  2421  0174                     l1983:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2424  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0176  085A               	movf	__doprnt@f+1,w
  2427  0177  00DD               	movwf	??__doprnt+1
  2428  0178  0859               	movf	__doprnt@f,w
  2429  0179  00DC               	movwf	??__doprnt
  2430  017A  0AD9               	incf	__doprnt@f,f
  2431  017B  1903               	skipnz
  2432  017C  0ADA               	incf	__doprnt@f+1,f
  2433  017D  085D               	movf	??__doprnt+1,w
  2434  017E  00FF               	movwf	btemp+1
  2435  017F  085C               	movf	??__doprnt,w
  2436  0180  0084               	movwf	4
  2437  0181  120A  118A  230C  120A  118A  	fcall	stringtab
  2438  0186  00DE               	movwf	??__doprnt+2
  2439  0187  085E               	movf	??__doprnt+2,w
  2440  0188  00E4               	movwf	__doprnt@c
  2441  0189  0864               	movf	__doprnt@c,w
  2442  018A  1D03               	btfss	3,2
  2443  018B  298D               	goto	u1091
  2444  018C  298E               	goto	u1090
  2445  018D                     u1091:
  2446  018D  282C               	goto	l1915
  2447  018E                     u1090:
  2448  018E                     l1985:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2451  018E  01D9               	clrf	?__doprnt
  2452  018F  01DA               	clrf	?__doprnt+1
  2453  0190                     l776:
  2454  0190  0008               	return
  2455  0191                     __end_of__doprnt:
  2456                           
  2457                           	psect	text8
  2458  05C6                     __ptext8:	
  2459 ;; *************** function _putch *****************
  2460 ;; Defined at:
  2461 ;;		line 172 in file "main_02.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  dato            1    3[COMMON] unsigned char 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         1       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0
  2478 ;;      Totals:         1       0       0       0       0
  2479 ;;Total ram usage:        1 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_printf
  2486 ;;		__doprnt
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           
  2491                           ;psect for function _putch
  2492  05C6                     _putch:
  2493  05C6                     l1323:	
  2494                           ;incstack = 0
  2495                           ; Regs used in _putch: [wreg]
  2496                           
  2497  05C6                     l114:	
  2498                           ;main_02.c: 173:     while(TXIF == 0);
  2499                           
  2500  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2501  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2502  05C8  1E0C               	btfss	12,4	;volatile
  2503  05C9  2DCB               	goto	u371
  2504  05CA  2DCC               	goto	u370
  2505  05CB                     u371:
  2506  05CB  2DC6               	goto	l114
  2507  05CC                     u370:
  2508  05CC                     l1325:
  2509                           
  2510                           ;main_02.c: 174:     TXREG = dato;
  2511  05CC  0873               	movf	putch@dato,w
  2512  05CD  0099               	movwf	25	;volatile
  2513  05CE                     l117:
  2514  05CE  0008               	return
  2515  05CF                     __end_of_putch:
  2516                           
  2517                           	psect	text9
  2518  0499                     __ptext9:	
  2519 ;; *************** function ___lwmod *****************
  2520 ;; Defined at:
  2521 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  divisor         2    3[BANK0 ] unsigned int 
  2524 ;;  dividend        2    5[BANK0 ] unsigned int 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  counter         1    8[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2    3[BANK0 ] unsigned int 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       4       0       0       0
  2537 ;;      Locals:         0       1       0       0       0
  2538 ;;      Temps:          0       1       0       0       0
  2539 ;;      Totals:         0       6       0       0       0
  2540 ;;Total ram usage:        6 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		__doprnt
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function ___lwmod
  2552  0499                     ___lwmod:
  2553  0499                     l1355:	
  2554                           ;incstack = 0
  2555                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2556                           
  2557  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2558  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2559  049B  0853               	movf	___lwmod@divisor,w
  2560  049C  0454               	iorwf	___lwmod@divisor+1,w
  2561  049D  1903               	btfsc	3,2
  2562  049E  2CA0               	goto	u451
  2563  049F  2CA1               	goto	u450
  2564  04A0                     u451:
  2565  04A0  2CD0               	goto	l1373
  2566  04A1                     u450:
  2567  04A1                     l1357:
  2568  04A1  01D8               	clrf	___lwmod@counter
  2569  04A2  0AD8               	incf	___lwmod@counter,f
  2570  04A3  2CAF               	goto	l1363
  2571  04A4                     l1359:
  2572  04A4  3001               	movlw	1
  2573  04A5                     u465:
  2574  04A5  1003               	clrc
  2575  04A6  0DD3               	rlf	___lwmod@divisor,f
  2576  04A7  0DD4               	rlf	___lwmod@divisor+1,f
  2577  04A8  3EFF               	addlw	-1
  2578  04A9  1D03               	skipz
  2579  04AA  2CA5               	goto	u465
  2580  04AB                     l1361:
  2581  04AB  3001               	movlw	1
  2582  04AC  00D7               	movwf	??___lwmod
  2583  04AD  0857               	movf	??___lwmod,w
  2584  04AE  07D8               	addwf	___lwmod@counter,f
  2585  04AF                     l1363:
  2586  04AF  1FD4               	btfss	___lwmod@divisor+1,7
  2587  04B0  2CB2               	goto	u471
  2588  04B1  2CB3               	goto	u470
  2589  04B2                     u471:
  2590  04B2  2CA4               	goto	l1359
  2591  04B3                     u470:
  2592  04B3                     l1365:
  2593  04B3  0854               	movf	___lwmod@divisor+1,w
  2594  04B4  0256               	subwf	___lwmod@dividend+1,w
  2595  04B5  1D03               	skipz
  2596  04B6  2CB9               	goto	u485
  2597  04B7  0853               	movf	___lwmod@divisor,w
  2598  04B8  0255               	subwf	___lwmod@dividend,w
  2599  04B9                     u485:
  2600  04B9  1C03               	skipc
  2601  04BA  2CBC               	goto	u481
  2602  04BB  2CBD               	goto	u480
  2603  04BC                     u481:
  2604  04BC  2CC3               	goto	l1369
  2605  04BD                     u480:
  2606  04BD                     l1367:
  2607  04BD  0853               	movf	___lwmod@divisor,w
  2608  04BE  02D5               	subwf	___lwmod@dividend,f
  2609  04BF  0854               	movf	___lwmod@divisor+1,w
  2610  04C0  1C03               	skipc
  2611  04C1  03D6               	decf	___lwmod@dividend+1,f
  2612  04C2  02D6               	subwf	___lwmod@dividend+1,f
  2613  04C3                     l1369:
  2614  04C3  3001               	movlw	1
  2615  04C4                     u495:
  2616  04C4  1003               	clrc
  2617  04C5  0CD4               	rrf	___lwmod@divisor+1,f
  2618  04C6  0CD3               	rrf	___lwmod@divisor,f
  2619  04C7  3EFF               	addlw	-1
  2620  04C8  1D03               	skipz
  2621  04C9  2CC4               	goto	u495
  2622  04CA                     l1371:
  2623  04CA  3001               	movlw	1
  2624  04CB  02D8               	subwf	___lwmod@counter,f
  2625  04CC  1D03               	btfss	3,2
  2626  04CD  2CCF               	goto	u501
  2627  04CE  2CD0               	goto	u500
  2628  04CF                     u501:
  2629  04CF  2CB3               	goto	l1365
  2630  04D0                     u500:
  2631  04D0                     l1373:
  2632  04D0  0856               	movf	___lwmod@dividend+1,w
  2633  04D1  00D4               	movwf	?___lwmod+1
  2634  04D2  0855               	movf	___lwmod@dividend,w
  2635  04D3  00D3               	movwf	?___lwmod
  2636  04D4                     l559:
  2637  04D4  0008               	return
  2638  04D5                     __end_of___lwmod:
  2639                           
  2640                           	psect	text10
  2641  040D                     __ptext10:	
  2642 ;; *************** function ___lwdiv *****************
  2643 ;; Defined at:
  2644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  divisor         2    3[COMMON] unsigned int 
  2647 ;;  dividend        2    5[COMMON] unsigned int 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  quotient        2    1[BANK0 ] unsigned int 
  2650 ;;  counter         1    0[BANK0 ] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  2    3[COMMON] unsigned int 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         4       0       0       0       0
  2661 ;;      Locals:         0       3       0       0       0
  2662 ;;      Temps:          1       0       0       0       0
  2663 ;;      Totals:         5       3       0       0       0
  2664 ;;Total ram usage:        8 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		__doprnt
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function ___lwdiv
  2676  040D                     ___lwdiv:
  2677  040D                     l1887:	
  2678                           ;incstack = 0
  2679                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2680                           
  2681  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2682  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2683  040F  01D1               	clrf	___lwdiv@quotient
  2684  0410  01D2               	clrf	___lwdiv@quotient+1
  2685  0411                     l1889:
  2686  0411  0873               	movf	___lwdiv@divisor,w
  2687  0412  0474               	iorwf	___lwdiv@divisor+1,w
  2688  0413  1903               	btfsc	3,2
  2689  0414  2C16               	goto	u921
  2690  0415  2C17               	goto	u920
  2691  0416                     u921:
  2692  0416  2C4E               	goto	l1909
  2693  0417                     u920:
  2694  0417                     l1891:
  2695  0417  01D0               	clrf	___lwdiv@counter
  2696  0418  0AD0               	incf	___lwdiv@counter,f
  2697  0419  2C25               	goto	l1897
  2698  041A                     l1893:
  2699  041A  3001               	movlw	1
  2700  041B                     u935:
  2701  041B  1003               	clrc
  2702  041C  0DF3               	rlf	___lwdiv@divisor,f
  2703  041D  0DF4               	rlf	___lwdiv@divisor+1,f
  2704  041E  3EFF               	addlw	-1
  2705  041F  1D03               	skipz
  2706  0420  2C1B               	goto	u935
  2707  0421                     l1895:
  2708  0421  3001               	movlw	1
  2709  0422  00F7               	movwf	??___lwdiv
  2710  0423  0877               	movf	??___lwdiv,w
  2711  0424  07D0               	addwf	___lwdiv@counter,f
  2712  0425                     l1897:
  2713  0425  1FF4               	btfss	___lwdiv@divisor+1,7
  2714  0426  2C28               	goto	u941
  2715  0427  2C29               	goto	u940
  2716  0428                     u941:
  2717  0428  2C1A               	goto	l1893
  2718  0429                     u940:
  2719  0429                     l1899:
  2720  0429  3001               	movlw	1
  2721  042A                     u955:
  2722  042A  1003               	clrc
  2723  042B  0DD1               	rlf	___lwdiv@quotient,f
  2724  042C  0DD2               	rlf	___lwdiv@quotient+1,f
  2725  042D  3EFF               	addlw	-1
  2726  042E  1D03               	skipz
  2727  042F  2C2A               	goto	u955
  2728  0430  0874               	movf	___lwdiv@divisor+1,w
  2729  0431  0276               	subwf	___lwdiv@dividend+1,w
  2730  0432  1D03               	skipz
  2731  0433  2C36               	goto	u965
  2732  0434  0873               	movf	___lwdiv@divisor,w
  2733  0435  0275               	subwf	___lwdiv@dividend,w
  2734  0436                     u965:
  2735  0436  1C03               	skipc
  2736  0437  2C39               	goto	u961
  2737  0438  2C3A               	goto	u960
  2738  0439                     u961:
  2739  0439  2C41               	goto	l1905
  2740  043A                     u960:
  2741  043A                     l1901:
  2742  043A  0873               	movf	___lwdiv@divisor,w
  2743  043B  02F5               	subwf	___lwdiv@dividend,f
  2744  043C  0874               	movf	___lwdiv@divisor+1,w
  2745  043D  1C03               	skipc
  2746  043E  03F6               	decf	___lwdiv@dividend+1,f
  2747  043F  02F6               	subwf	___lwdiv@dividend+1,f
  2748  0440                     l1903:
  2749  0440  1451               	bsf	___lwdiv@quotient,0
  2750  0441                     l1905:
  2751  0441  3001               	movlw	1
  2752  0442                     u975:
  2753  0442  1003               	clrc
  2754  0443  0CF4               	rrf	___lwdiv@divisor+1,f
  2755  0444  0CF3               	rrf	___lwdiv@divisor,f
  2756  0445  3EFF               	addlw	-1
  2757  0446  1D03               	skipz
  2758  0447  2C42               	goto	u975
  2759  0448                     l1907:
  2760  0448  3001               	movlw	1
  2761  0449  02D0               	subwf	___lwdiv@counter,f
  2762  044A  1D03               	btfss	3,2
  2763  044B  2C4D               	goto	u981
  2764  044C  2C4E               	goto	u980
  2765  044D                     u981:
  2766  044D  2C29               	goto	l1899
  2767  044E                     u980:
  2768  044E                     l1909:
  2769  044E  0852               	movf	___lwdiv@quotient+1,w
  2770  044F  00F4               	movwf	?___lwdiv+1
  2771  0450  0851               	movf	___lwdiv@quotient,w
  2772  0451  00F3               	movwf	?___lwdiv
  2773  0452                     l549:
  2774  0452  0008               	return
  2775  0453                     __end_of___lwdiv:
  2776                           
  2777                           	psect	text11
  2778  0453                     __ptext11:	
  2779 ;; *************** function _Lcd_Write_String *****************
  2780 ;; Defined at:
  2781 ;;		line 94 in file "LCD_8b.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  a               2    0[BANK0 ] PTR unsigned char 
  2784 ;;		 -> buffer1(20), buffer(20), STR_1(17), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  i               2    5[BANK0 ] int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       2       0       0       0
  2797 ;;      Locals:         0       2       0       0       0
  2798 ;;      Temps:          0       3       0       0       0
  2799 ;;      Totals:         0       7       0       0       0
  2800 ;;Total ram usage:        7 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    3
  2803 ;; This function calls:
  2804 ;;		_Lcd_Write_Char
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _Lcd_Write_String
  2812  0453                     _Lcd_Write_String:
  2813  0453                     l2033:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2816                           
  2817                           
  2818                           ;LCD_8b.c: 95:     int i;;LCD_8b.c: 96:     for (i = 0; a[i] != '\0'; i++)
  2819  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0455  01D5               	clrf	Lcd_Write_String@i
  2822  0456  01D6               	clrf	Lcd_Write_String@i+1
  2823  0457  2C7C               	goto	l2039
  2824  0458                     l2035:
  2825                           
  2826                           ;LCD_8b.c: 97:         Lcd_Write_Char(a[i]);
  2827  0458  0855               	movf	Lcd_Write_String@i,w
  2828  0459  0750               	addwf	Lcd_Write_String@a,w
  2829  045A  00D3               	movwf	??_Lcd_Write_String+1
  2830  045B  0851               	movf	Lcd_Write_String@a+1,w
  2831  045C  00D2               	movwf	??_Lcd_Write_String
  2832  045D  1803               	skipnc
  2833  045E  0AD2               	incf	??_Lcd_Write_String,f
  2834  045F  1FD5               	btfss	Lcd_Write_String@i,7
  2835  0460  2C62               	goto	u1140
  2836  0461  03D2               	decf	??_Lcd_Write_String,f
  2837  0462                     u1140:
  2838  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0464  0852               	movf	??_Lcd_Write_String,w
  2841  0465  00D4               	movwf	??_Lcd_Write_String+2
  2842  0466  0854               	movf	??_Lcd_Write_String+2,w
  2843  0467  00FF               	movwf	btemp+1
  2844  0468  0853               	movf	??_Lcd_Write_String+1,w
  2845  0469  0084               	movwf	4
  2846  046A  120A  118A  230C  120A  118A  	fcall	stringtab
  2847  046F  120A  118A  254C  120A  118A  	fcall	_Lcd_Write_Char
  2848  0474                     l2037:
  2849  0474  3001               	movlw	1
  2850  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0477  07D5               	addwf	Lcd_Write_String@i,f
  2853  0478  1803               	skipnc
  2854  0479  0AD6               	incf	Lcd_Write_String@i+1,f
  2855  047A  3000               	movlw	0
  2856  047B  07D6               	addwf	Lcd_Write_String@i+1,f
  2857  047C                     l2039:
  2858  047C  0855               	movf	Lcd_Write_String@i,w
  2859  047D  0750               	addwf	Lcd_Write_String@a,w
  2860  047E  00D3               	movwf	??_Lcd_Write_String+1
  2861  047F  0851               	movf	Lcd_Write_String@a+1,w
  2862  0480  00D2               	movwf	??_Lcd_Write_String
  2863  0481  1803               	skipnc
  2864  0482  0AD2               	incf	??_Lcd_Write_String,f
  2865  0483  1FD5               	btfss	Lcd_Write_String@i,7
  2866  0484  2C86               	goto	u1150
  2867  0485  03D2               	decf	??_Lcd_Write_String,f
  2868  0486                     u1150:
  2869  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0488  0852               	movf	??_Lcd_Write_String,w
  2872  0489  00D4               	movwf	??_Lcd_Write_String+2
  2873  048A  0854               	movf	??_Lcd_Write_String+2,w
  2874  048B  00FF               	movwf	btemp+1
  2875  048C  0853               	movf	??_Lcd_Write_String+1,w
  2876  048D  0084               	movwf	4
  2877  048E  120A  118A  230C  120A  118A  	fcall	stringtab
  2878  0493  3A00               	xorlw	0
  2879  0494  1D03               	skipz
  2880  0495  2C97               	goto	u1161
  2881  0496  2C98               	goto	u1160
  2882  0497                     u1161:
  2883  0497  2C58               	goto	l2035
  2884  0498                     u1160:
  2885  0498                     l185:
  2886  0498  0008               	return
  2887  0499                     __end_of_Lcd_Write_String:
  2888                           
  2889                           	psect	text12
  2890  054C                     __ptext12:	
  2891 ;; *************** function _Lcd_Write_Char *****************
  2892 ;; Defined at:
  2893 ;;		line 79 in file "LCD_8b.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  a               1    wreg     unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  a               1    5[COMMON] unsigned char 
  2898 ;;  y               1    7[COMMON] unsigned char 
  2899 ;;  temp            1    6[COMMON] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         3       0       0       0       0
  2911 ;;      Temps:          1       0       0       0       0
  2912 ;;      Totals:         4       0       0       0       0
  2913 ;;Total ram usage:        4 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    2
  2916 ;; This function calls:
  2917 ;;		_Lcd_Port
  2918 ;; This function is called by:
  2919 ;;		_Lcd_Write_String
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _Lcd_Write_Char
  2925  054C                     _Lcd_Write_Char:
  2926                           
  2927                           ;incstack = 0
  2928                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2929                           ;Lcd_Write_Char@a stored from wreg
  2930  054C  00F5               	movwf	Lcd_Write_Char@a
  2931  054D                     l1583:
  2932                           
  2933                           ;LCD_8b.c: 80:     char temp, y;;LCD_8b.c: 81:     temp = a;
  2934  054D  0875               	movf	Lcd_Write_Char@a,w
  2935  054E  00F4               	movwf	??_Lcd_Write_Char
  2936  054F  0874               	movf	??_Lcd_Write_Char,w
  2937  0550  00F6               	movwf	Lcd_Write_Char@temp
  2938                           
  2939                           ;LCD_8b.c: 82:     y = temp;
  2940  0551  0876               	movf	Lcd_Write_Char@temp,w
  2941  0552  00F4               	movwf	??_Lcd_Write_Char
  2942  0553  0874               	movf	??_Lcd_Write_Char,w
  2943  0554  00F7               	movwf	Lcd_Write_Char@y
  2944  0555                     l1585:
  2945                           
  2946                           ;LCD_8b.c: 83:     PORTEbits.RE0 = 1;
  2947  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0557  1409               	bsf	9,0	;volatile
  2950  0558                     l1587:
  2951                           
  2952                           ;LCD_8b.c: 84:     Lcd_Port(y);
  2953  0558  0877               	movf	Lcd_Write_Char@y,w
  2954  0559  120A  118A  25D7  120A  118A  	fcall	_Lcd_Port
  2955  055E                     l1589:
  2956                           
  2957                           ;LCD_8b.c: 85:     PORTEbits.RE2 = 1;
  2958  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2959  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0560  1509               	bsf	9,2	;volatile
  2961  0561                     l1591:
  2962                           
  2963                           ;LCD_8b.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2964  0561  300D               	movlw	13
  2965  0562  00F4               	movwf	??_Lcd_Write_Char
  2966  0563                     u1267:
  2967  0563  0BF4               	decfsz	??_Lcd_Write_Char,f
  2968  0564  2D63               	goto	u1267
  2969  0565                     l1593:
  2970                           
  2971                           ;LCD_8b.c: 87:     PORTEbits.RE2 = 0;
  2972  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0567  1109               	bcf	9,2	;volatile
  2975  0568                     l179:
  2976  0568  0008               	return
  2977  0569                     __end_of_Lcd_Write_Char:
  2978                           
  2979                           	psect	text13
  2980  0367                     __ptext13:	
  2981 ;; *************** function _Lcd_Set_Cursor *****************
  2982 ;; Defined at:
  2983 ;;		line 43 in file "LCD_8b.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  a               1    wreg     unsigned char 
  2986 ;;  b               1    7[COMMON] unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  a               1    2[BANK0 ] unsigned char 
  2989 ;;  temp            1    5[BANK0 ] unsigned char 
  2990 ;;  y               1    4[BANK0 ] unsigned char 
  2991 ;;  z               1    3[BANK0 ] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0, pclath, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         1       0       0       0       0
  3002 ;;      Locals:         0       4       0       0       0
  3003 ;;      Temps:          0       2       0       0       0
  3004 ;;      Totals:         1       6       0       0       0
  3005 ;;Total ram usage:        7 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    3
  3008 ;; This function calls:
  3009 ;;		_Lcd_Cmd
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _Lcd_Set_Cursor
  3017  0367                     _Lcd_Set_Cursor:
  3018                           
  3019                           ;incstack = 0
  3020                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3021                           ;Lcd_Set_Cursor@a stored from wreg
  3022  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0368  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0369  00D2               	movwf	Lcd_Set_Cursor@a
  3025  036A                     l2013:
  3026                           
  3027                           ;LCD_8b.c: 44:     char temp, z, y;;LCD_8b.c: 45:     if (a == 1) {
  3028  036A  0352               	decf	Lcd_Set_Cursor@a,w
  3029  036B  1D03               	btfss	3,2
  3030  036C  2B6E               	goto	u1101
  3031  036D  2B6F               	goto	u1100
  3032  036E                     u1101:
  3033  036E  2B94               	goto	l2023
  3034  036F                     u1100:
  3035  036F                     l2015:
  3036                           
  3037                           ;LCD_8b.c: 46:         temp = 0x80 + b - 1;
  3038  036F  0877               	movf	Lcd_Set_Cursor@b,w
  3039  0370  3E7F               	addlw	127
  3040  0371  00D0               	movwf	??_Lcd_Set_Cursor
  3041  0372  0850               	movf	??_Lcd_Set_Cursor,w
  3042  0373  00D5               	movwf	Lcd_Set_Cursor@temp
  3043                           
  3044                           ;LCD_8b.c: 47:         z = temp >> 4;
  3045  0374  0855               	movf	Lcd_Set_Cursor@temp,w
  3046  0375  00D0               	movwf	??_Lcd_Set_Cursor
  3047  0376  3004               	movlw	4
  3048  0377                     u1115:
  3049  0377  1003               	clrc
  3050  0378  0CD0               	rrf	??_Lcd_Set_Cursor,f
  3051  0379  3EFF               	addlw	-1
  3052  037A  1D03               	skipz
  3053  037B  2B77               	goto	u1115
  3054  037C  0850               	movf	??_Lcd_Set_Cursor,w
  3055  037D  00D1               	movwf	??_Lcd_Set_Cursor+1
  3056  037E  0851               	movf	??_Lcd_Set_Cursor+1,w
  3057  037F  00D3               	movwf	Lcd_Set_Cursor@z
  3058  0380                     l2017:
  3059                           
  3060                           ;LCD_8b.c: 48:         y = temp & 0x0F;
  3061  0380  0855               	movf	Lcd_Set_Cursor@temp,w
  3062  0381  390F               	andlw	15
  3063  0382  00D0               	movwf	??_Lcd_Set_Cursor
  3064  0383  0850               	movf	??_Lcd_Set_Cursor,w
  3065  0384  00D4               	movwf	Lcd_Set_Cursor@y
  3066  0385                     l2019:
  3067                           
  3068                           ;LCD_8b.c: 49:         Lcd_Cmd(z);
  3069  0385  0853               	movf	Lcd_Set_Cursor@z,w
  3070  0386  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3071  038B                     l2021:
  3072                           
  3073                           ;LCD_8b.c: 51:         Lcd_Cmd(y);
  3074  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3075  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3076  038D  0854               	movf	Lcd_Set_Cursor@y,w
  3077  038E  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3078                           
  3079                           ;LCD_8b.c: 52:     } else if (a == 2) {
  3080  0393  2BBE               	goto	l173
  3081  0394                     l2023:
  3082  0394  3002               	movlw	2
  3083  0395  0652               	xorwf	Lcd_Set_Cursor@a,w
  3084  0396  1D03               	btfss	3,2
  3085  0397  2B99               	goto	u1121
  3086  0398  2B9A               	goto	u1120
  3087  0399                     u1121:
  3088  0399  2BBE               	goto	l173
  3089  039A                     u1120:
  3090  039A                     l2025:
  3091                           
  3092                           ;LCD_8b.c: 53:         temp = 0xC0 + b - 1;
  3093  039A  0877               	movf	Lcd_Set_Cursor@b,w
  3094  039B  3EBF               	addlw	191
  3095  039C  00D0               	movwf	??_Lcd_Set_Cursor
  3096  039D  0850               	movf	??_Lcd_Set_Cursor,w
  3097  039E  00D5               	movwf	Lcd_Set_Cursor@temp
  3098                           
  3099                           ;LCD_8b.c: 54:         z = temp >> 4;
  3100  039F  0855               	movf	Lcd_Set_Cursor@temp,w
  3101  03A0  00D0               	movwf	??_Lcd_Set_Cursor
  3102  03A1  3004               	movlw	4
  3103  03A2                     u1135:
  3104  03A2  1003               	clrc
  3105  03A3  0CD0               	rrf	??_Lcd_Set_Cursor,f
  3106  03A4  3EFF               	addlw	-1
  3107  03A5  1D03               	skipz
  3108  03A6  2BA2               	goto	u1135
  3109  03A7  0850               	movf	??_Lcd_Set_Cursor,w
  3110  03A8  00D1               	movwf	??_Lcd_Set_Cursor+1
  3111  03A9  0851               	movf	??_Lcd_Set_Cursor+1,w
  3112  03AA  00D3               	movwf	Lcd_Set_Cursor@z
  3113  03AB                     l2027:
  3114                           
  3115                           ;LCD_8b.c: 55:         y = temp & 0xF0;
  3116  03AB  0855               	movf	Lcd_Set_Cursor@temp,w
  3117  03AC  39F0               	andlw	240
  3118  03AD  00D0               	movwf	??_Lcd_Set_Cursor
  3119  03AE  0850               	movf	??_Lcd_Set_Cursor,w
  3120  03AF  00D4               	movwf	Lcd_Set_Cursor@y
  3121  03B0                     l2029:
  3122                           
  3123                           ;LCD_8b.c: 56:         Lcd_Cmd(z);
  3124  03B0  0853               	movf	Lcd_Set_Cursor@z,w
  3125  03B1  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3126  03B6                     l2031:
  3127                           
  3128                           ;LCD_8b.c: 57:         Lcd_Cmd(y);
  3129  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  3130  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  3131  03B8  0854               	movf	Lcd_Set_Cursor@y,w
  3132  03B9  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3133  03BE                     l173:
  3134  03BE  0008               	return
  3135  03BF                     __end_of_Lcd_Set_Cursor:
  3136                           
  3137                           	psect	text14
  3138  03BF                     __ptext14:	
  3139 ;; *************** function _Lcd_Init *****************
  3140 ;; Defined at:
  3141 ;;		line 61 in file "LCD_8b.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, pclath, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0
  3157 ;;      Temps:          0       2       0       0       0
  3158 ;;      Totals:         0       2       0       0       0
  3159 ;;Total ram usage:        2 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    3
  3162 ;; This function calls:
  3163 ;;		_Lcd_Cmd
  3164 ;;		_Lcd_Port
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           
  3171                           ;psect for function _Lcd_Init
  3172  03BF                     _Lcd_Init:
  3173  03BF                     l2003:	
  3174                           ;incstack = 0
  3175                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3176                           
  3177                           
  3178                           ;LCD_8b.c: 62:     Lcd_Port(0x00);
  3179  03BF  3000               	movlw	0
  3180  03C0  120A  118A  25D7  120A  118A  	fcall	_Lcd_Port
  3181  03C5                     l2005:
  3182                           
  3183                           ;LCD_8b.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3184  03C5  301A               	movlw	26
  3185  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3186  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3187  03C8  00D1               	movwf	??_Lcd_Init+1
  3188  03C9  30F7               	movlw	247
  3189  03CA  00D0               	movwf	??_Lcd_Init
  3190  03CB                     u1277:
  3191  03CB  0BD0               	decfsz	??_Lcd_Init,f
  3192  03CC  2BCB               	goto	u1277
  3193  03CD  0BD1               	decfsz	??_Lcd_Init+1,f
  3194  03CE  2BCB               	goto	u1277
  3195  03CF  2BD0               	nop2
  3196  03D0                     l2007:
  3197                           
  3198                           ;LCD_8b.c: 64:     Lcd_Cmd(0x30);
  3199  03D0  3030               	movlw	48
  3200  03D1  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3201                           
  3202                           ;LCD_8b.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3203  03D6  3007               	movlw	7
  3204  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3205  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3206  03D9  00D1               	movwf	??_Lcd_Init+1
  3207  03DA  307C               	movlw	124
  3208  03DB  00D0               	movwf	??_Lcd_Init
  3209  03DC                     u1287:
  3210  03DC  0BD0               	decfsz	??_Lcd_Init,f
  3211  03DD  2BDC               	goto	u1287
  3212  03DE  0BD1               	decfsz	??_Lcd_Init+1,f
  3213  03DF  2BDC               	goto	u1287
  3214  03E0  0000               	nop
  3215  03E1                     l2009:
  3216                           
  3217                           ;LCD_8b.c: 66:     Lcd_Cmd(0x30);
  3218  03E1  3030               	movlw	48
  3219  03E2  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3220  03E7                     l2011:
  3221                           
  3222                           ;LCD_8b.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  3223  03E7  3041               	movlw	65
  3224  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3225  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3226  03EA  00D0               	movwf	??_Lcd_Init
  3227  03EB                     u1297:
  3228  03EB  0BD0               	decfsz	??_Lcd_Init,f
  3229  03EC  2BEB               	goto	u1297
  3230  03ED  2BEE               	nop2
  3231                           
  3232                           ;LCD_8b.c: 68:     Lcd_Cmd(0x30);
  3233  03EE  3030               	movlw	48
  3234  03EF  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3235                           
  3236                           ;LCD_8b.c: 70:     Lcd_Cmd(0x3C);
  3237  03F4  303C               	movlw	60
  3238  03F5  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3239                           
  3240                           ;LCD_8b.c: 72:     Lcd_Cmd(0x08);
  3241  03FA  3008               	movlw	8
  3242  03FB  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3243                           
  3244                           ;LCD_8b.c: 74:     Lcd_Cmd(0x01);
  3245  0400  3001               	movlw	1
  3246  0401  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3247                           
  3248                           ;LCD_8b.c: 76:     Lcd_Cmd(0x06);
  3249  0406  3006               	movlw	6
  3250  0407  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3251  040C                     l176:
  3252  040C  0008               	return
  3253  040D                     __end_of_Lcd_Init:
  3254                           
  3255                           	psect	text15
  3256  05B9                     __ptext15:	
  3257 ;; *************** function _Lcd_Clear *****************
  3258 ;; Defined at:
  3259 ;;		line 25 in file "LCD_8b.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		_Lcd_Cmd
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _Lcd_Clear
  3289  05B9                     _Lcd_Clear:
  3290  05B9                     l1647:	
  3291                           ;incstack = 0
  3292                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3293                           
  3294                           
  3295                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  3296  05B9  3000               	movlw	0
  3297  05BA  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3298                           
  3299                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  3300  05BF  3001               	movlw	1
  3301  05C0  120A  118A  259F  120A  118A  	fcall	_Lcd_Cmd
  3302  05C5                     l167:
  3303  05C5  0008               	return
  3304  05C6                     __end_of_Lcd_Clear:
  3305                           
  3306                           	psect	text16
  3307  059F                     __ptext16:	
  3308 ;; *************** function _Lcd_Cmd *****************
  3309 ;; Defined at:
  3310 ;;		line 17 in file "LCD_8b.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  a               1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  a               1    6[COMMON] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, pclath, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         1       0       0       0       0
  3326 ;;      Temps:          2       0       0       0       0
  3327 ;;      Totals:         3       0       0       0       0
  3328 ;;Total ram usage:        3 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    2
  3331 ;; This function calls:
  3332 ;;		_Lcd_Port
  3333 ;; This function is called by:
  3334 ;;		_Lcd_Clear
  3335 ;;		_Lcd_Set_Cursor
  3336 ;;		_Lcd_Init
  3337 ;;		_Lcd_Shift_Right
  3338 ;;		_Lcd_Shift_Left
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _Lcd_Cmd
  3344  059F                     _Lcd_Cmd:
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3348                           ;Lcd_Cmd@a stored from wreg
  3349  059F  00F6               	movwf	Lcd_Cmd@a
  3350  05A0                     l1573:
  3351                           
  3352                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  3353  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3354  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3355  05A2  1009               	bcf	9,0	;volatile
  3356  05A3                     l1575:
  3357                           
  3358                           ;LCD_8b.c: 19:     Lcd_Port(a);
  3359  05A3  0876               	movf	Lcd_Cmd@a,w
  3360  05A4  120A  118A  25D7  120A  118A  	fcall	_Lcd_Port
  3361  05A9                     l1577:
  3362                           
  3363                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  3364  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3365  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3366  05AB  1509               	bsf	9,2	;volatile
  3367  05AC                     l1579:
  3368                           
  3369                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3370  05AC  3006               	movlw	6
  3371  05AD  00F5               	movwf	??_Lcd_Cmd+1
  3372  05AE  3030               	movlw	48
  3373  05AF  00F4               	movwf	??_Lcd_Cmd
  3374  05B0                     u1307:
  3375  05B0  0BF4               	decfsz	??_Lcd_Cmd,f
  3376  05B1  2DB0               	goto	u1307
  3377  05B2  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3378  05B3  2DB0               	goto	u1307
  3379  05B4  0000               	nop
  3380  05B5                     l1581:
  3381                           
  3382                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  3383  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3384  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3385  05B7  1109               	bcf	9,2	;volatile
  3386  05B8                     l164:
  3387  05B8  0008               	return
  3388  05B9                     __end_of_Lcd_Cmd:
  3389                           
  3390                           	psect	text17
  3391  05D7                     __ptext17:	
  3392 ;; *************** function _Lcd_Port *****************
  3393 ;; Defined at:
  3394 ;;		line 12 in file "LCD_8b.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  a               1    wreg     unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  a               1    3[COMMON] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         1       0       0       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_Lcd_Cmd
  3419 ;;		_Lcd_Init
  3420 ;;		_Lcd_Write_Char
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _Lcd_Port
  3426  05D7                     _Lcd_Port:
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _Lcd_Port: [wreg]
  3430                           ;Lcd_Port@a stored from wreg
  3431  05D7  00F3               	movwf	Lcd_Port@a
  3432  05D8                     l1377:
  3433                           
  3434                           ;LCD_8b.c: 13:     PORTD = a;
  3435  05D8  0873               	movf	Lcd_Port@a,w
  3436  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3437  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3438  05DB  0088               	movwf	8	;volatile
  3439  05DC                     l161:
  3440  05DC  0008               	return
  3441  05DD                     __end_of_Lcd_Port:
  3442                           
  3443                           	psect	text18
  3444  04D5                     __ptext18:	
  3445 ;; *************** function _isr *****************
  3446 ;; Defined at:
  3447 ;;		line 87 in file "main_02.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0
  3463 ;;      Temps:          3       0       0       0       0
  3464 ;;      Totals:         3       0       0       0       0
  3465 ;;Total ram usage:        3 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		Interrupt level 1
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _isr
  3476  04D5                     _isr:
  3477  04D5                     i1l1709:
  3478  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3479  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  3480  04D7  1F0C               	btfss	12,6	;volatile
  3481  04D8  2CDA               	goto	u69_21
  3482  04D9  2CDB               	goto	u69_20
  3483  04DA                     u69_21:
  3484  04DA  2CFC               	goto	i1l1723
  3485  04DB                     u69_20:
  3486  04DB                     i1l1711:
  3487  04DB  0C1F               	rrf	31,w	;volatile
  3488  04DC  00F0               	movwf	??_isr
  3489  04DD  0C70               	rrf	??_isr,w
  3490  04DE  390F               	andlw	15
  3491  04DF  3A00               	xorlw	0
  3492  04E0  1D03               	skipz
  3493  04E1  2CE3               	goto	u70_21
  3494  04E2  2CE4               	goto	u70_20
  3495  04E3                     u70_21:
  3496  04E3  2CED               	goto	i1l1717
  3497  04E4                     u70_20:
  3498  04E4                     i1l1713:
  3499  04E4  081F               	movf	31,w	;volatile
  3500  04E5  39C3               	andlw	-61
  3501  04E6  3804               	iorlw	4
  3502  04E7  009F               	movwf	31	;volatile
  3503  04E8                     i1l1715:
  3504  04E8  081E               	movf	30,w	;volatile
  3505  04E9  00F0               	movwf	??_isr
  3506  04EA  0870               	movf	??_isr,w
  3507  04EB  00A7               	movwf	_voltaje1
  3508  04EC  2CFC               	goto	i1l1723
  3509  04ED                     i1l1717:
  3510  04ED  0C1F               	rrf	31,w	;volatile
  3511  04EE  00F0               	movwf	??_isr
  3512  04EF  0C70               	rrf	??_isr,w
  3513  04F0  390F               	andlw	15
  3514  04F1  3A01               	xorlw	1
  3515  04F2  1D03               	skipz
  3516  04F3  2CF5               	goto	u71_21
  3517  04F4  2CF6               	goto	u71_20
  3518  04F5                     u71_21:
  3519  04F5  2CFC               	goto	i1l1723
  3520  04F6                     u71_20:
  3521  04F6                     i1l1719:
  3522  04F6  30C3               	movlw	-61
  3523  04F7  059F               	andwf	31,f	;volatile
  3524  04F8                     i1l1721:
  3525  04F8  081E               	movf	30,w	;volatile
  3526  04F9  00F0               	movwf	??_isr
  3527  04FA  0870               	movf	??_isr,w
  3528  04FB  00A6               	movwf	_voltaje2
  3529  04FC                     i1l1723:
  3530  04FC  130C               	bcf	12,6	;volatile
  3531  04FD                     i1l93:
  3532  04FD  0872               	movf	??_isr+2,w
  3533  04FE  008A               	movwf	10
  3534  04FF  0E71               	swapf	??_isr+1,w
  3535  0500  0083               	movwf	3
  3536  0501  0EFE               	swapf	btemp,f
  3537  0502  0E7E               	swapf	btemp,w
  3538  0503  0009               	retfie
  3539  0504                     __end_of_isr:
  3540  0002                     
  3541                           	psect	intentry
  3542  0004                     __pintentry:	
  3543                           ;incstack = 0
  3544                           ; Regs used in _isr: [wreg+status,2+status,0]
  3545                           
  3546  0004                     interrupt_function:
  3547  007E                     saved_w	set	btemp
  3548  0004  00FE               	movwf	btemp
  3549  0005  0E03               	swapf	3,w
  3550  0006  00F1               	movwf	??_isr+1
  3551  0007  080A               	movf	10,w
  3552  0008  00F2               	movwf	??_isr+2
  3553  0009  120A  118A  2CD5   	ljmp	_isr
  3554                           
  3555                           	psect	functab
  3556  001F                     __pfunctab:
  3557  001F                     __fptable:
  3558  001F                     fptable:
  3559  001F  00FF               	movwf	(btemp+1)& (0+127)
  3560  0020  3000               	movlw	high fptable
  3561  0021  008A               	movwf	10
  3562  0022  087F               	movf	(btemp+1)& (0+127),w
  3563  0023  0782               	addwf	2,f
  3564  0024                     fpbase:
  3565  0024  2824               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3566  0025                     fp__putch:
  3567  0025  120A  118A  2DC6   	ljmp	_putch
  3568  0028                     __end_of__fptable:
  3569  007E                     btemp	set	126	;btemp
  3570  007E                     wtemp0	set	126
  3571                           
  3572                           	psect	config
  3573                           
  3574                           ;Config register CONFIG1 @ 0x2007
  3575                           ;	Oscillator Selection bits
  3576                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3577                           ;	Watchdog Timer Enable bit
  3578                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3579                           ;	Power-up Timer Enable bit
  3580                           ;	PWRTE = OFF, PWRT disabled
  3581                           ;	RE3/MCLR pin function select bit
  3582                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3583                           ;	Code Protection bit
  3584                           ;	CP = OFF, Program memory code protection is disabled
  3585                           ;	Data Code Protection bit
  3586                           ;	CPD = OFF, Data memory code protection is disabled
  3587                           ;	Brown Out Reset Selection bits
  3588                           ;	BOREN = OFF, BOR disabled
  3589                           ;	Internal External Switchover bit
  3590                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3591                           ;	Fail-Safe Clock Monitor Enabled bit
  3592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3593                           ;	Low Voltage Programming Enable bit
  3594                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3595                           ;	In-Circuit Debugger Mode bit
  3596                           ;	DEBUG = 0x1, unprogrammed default
  3597  2007                     	org	8199
  3598  2007  20D4               	dw	8404
  3599                           
  3600                           ;Config register CONFIG2 @ 0x2008
  3601                           ;	Brown-out Reset Selection bit
  3602                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3603                           ;	Flash Program Memory Self Write Enable bits
  3604                           ;	WRT = OFF, Write protection off
  3605  2008                     	org	8200
  3606  2008  3FFF               	dw	16383

Data Sizes:
    Strings     65
    Constant    10
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     31      79
    BANK1            80      3       3
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[3]), STR_2(CODE[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> buffer1(BANK0[20]), buffer(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer1(BANK0[20]), buffer(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> STR_3(CODE[3]), buffer1(BANK0[20]), STR_2(CODE[6]), buffer(BANK0[20]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer1(BANK0[20]), buffer(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[3]), STR_4(CODE[12]), 
		 -> buffer1(BANK0[20]), buffer(BANK0[20]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1013__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1013__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer1(BANK0[20]), buffer(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), buffer1(BANK0[20]), buffer(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK0[20]), buffer(BANK0[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_config_ADC
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_mensaje
    _sprintf->__doprnt
    _mensaje->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7658
                                              0 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _mensaje
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              8     5      3    3105
                                             22 BANK0      8     5      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              3     3      0    3317
                                             28 BANK0      3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    3317
                                             22 BANK0      6     4      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             21    18      3    2575
                                              9 BANK0     13    10      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     234
                                              3 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     490
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _mensaje
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _config_ADC
     _config_USART
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      3       3       7        3.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 19:48:33 2021

                        pc 0002                         fsr 0004                        l111 02A6  
                      l120 0528                        l114 05C6                        l117 05CE  
                      l135 030B                        l152 0584                        l161 05DC  
                      l164 05B8                        l173 03BE                        l167 05C5  
                      l176 040C                        l185 0498                        l179 0568  
                      l549 0452                        l734 059E                        l559 04D4  
                      l783 054B                        l776 0190                        u500 04D0  
                      u501 04CF                        u450 04A1                        u370 05CC  
                      u451 04A0                        u371 05CB                        u470 04B3  
                      u471 04B2                        u480 04BD                        u481 04BC  
                      u465 04A5                        u485 04B9                        u495 04C4  
                      u920 0417                        u921 0416                        u940 0429  
                      u941 0428                        u935 041B                        u960 043A  
                      u961 0439                        u955 042A                        u980 044E  
                      u981 044D                        u965 0436                        u990 0032  
                      u975 0442                        u991 0031                        _isr 04D5  
                      fsr0 0004                        indf 0000                       l2011 03E7  
                     l2003 03BF                       l2005 03C5                       l2021 038B  
                     l2013 036A                       l2007 03D0                       l2031 03B6  
                     l2015 036F                       l2023 0394                       l2009 03E1  
                     l2025 039A                       l2017 0380                       l2033 0453  
                     l2041 052C                       l2027 03AB                       l2019 0385  
                     l2035 0458                       l1323 05C6                       l2043 0530  
                     l2029 03B0                       l2037 0474                       l1325 05CC  
                     l2141 0098                       l2061 0269                       l2053 023A  
                     l1501 02A9                       l2045 0531                       l2039 047C  
                     l2063 0298                       l2055 0248                       l1511 02B6  
                     l1503 02AD                       l2047 0535                       l2071 019B  
                     l1361 04AB                       l2057 0253                       l1521 02C4  
                     l1513 02B9                       l1505 02B1                       l1601 050C  
                     l2049 0545                       l2081 01C5                       l2073 01A0  
                     l1371 04CA                       l1363 04AF                       l1355 0499  
                     l2059 025E                       l2139 02FD                       l1531 02CD  
                     l1523 02C7                       l1515 02BA                       l1507 02B4  
                     l1611 0511                       l1603 050D                       l2091 0221  
                     l2083 01E2                       l2075 01A8                       l2067 0191  
                     l1365 04B3                       l1357 04A1                       l1373 04D0  
                     l1541 02DB                       l1533 02CF                       l1525 02C8  
                     l1517 02BC                       l1509 02B5                       l1621 0518  
                     l1613 0512                       l1605 050E                       l2093 0227  
                     l2085 01FF                       l2077 01B3                       l2069 0196  
                     l1367 04BD                       l1359 04A4                       l1551 02E6  
                     l1543 02DC                       l1535 02D3                       l1527 02C9  
                     l1519 02C0                       l1471 056D                       l1631 051D  
                     l1623 0519                       l1615 0513                       l1607 050F  
                     l2095 022E                       l2087 020B                       l2079 01BD  
                     l1377 05D8                       l1369 04C3                       l1561 02F2  
                     l1553 02EA                       l1545 02DF                       l1537 02D7  
                     l1529 02CC                       l1481 0578                       l1473 056E  
                     l1633 0522                       l1625 051A                       l1617 0516  
                     l1609 0510                       l2097 0231                       l2089 0216  
                     l1563 02F3                       l1555 02ED                       l1547 02E0  
                     l1539 02DA                       l1491 0581                       l1483 0579  
                     l1475 0571                       l1627 051B                       l1619 0517  
                     l1581 05B5                       l1573 05A0                       l1901 043A  
                     l1557 02EE                       l1549 02E2                       l1493 0582  
                     l1485 057C                       l1477 0574                       l1469 0569  
                     l1629 051C                       l1575 05A3                       l1647 05B9  
                     l1591 0561                       l1583 054D                       l1903 0440  
                     l1559 02EF                       l1567 02F5                       l1495 0583  
                     l1487 057D                       l1479 0575                       l1577 05A9  
                     l1593 0565                       l1585 0555                       l1905 0441  
                     l1921 0049                       l1913 002B                       l1489 0580  
                     l1579 05AC                       l1587 0558                       l1907 0448  
                     l1931 0071                       l1923 0051                       l1915 002C  
                     l1499 02A8                       l1595 0504                       l1589 055E  
                     l1909 044E                       l1941 00B1                       l1933 0079  
                     l1917 0032                       l1925 0058                       l1597 0508  
                     l1943 00B5                       l1927 005A                       l1919 003A  
                     l1599 050B                       l1961 00EC                       l1953 00C0  
                     l1945 00B9                       l1929 0062                       l1937 0080  
                     l1891 0417                       l1971 0116                       l1963 00F4  
                     l1947 00BE                       l1939 00A3                       l1893 041A  
                     l1973 0146                       l1981 0169                       l1965 0101  
                     l1957 00DC                       l1895 0421                       l1887 040D  
                     l1975 014E                       l1967 0109                       l1959 00E6  
                     l1983 0174                       l1897 0425                       l1889 0411  
                     l1977 015B                       l1969 010F                       l1985 018E  
                     l1993 0585                       l1899 0429                       l1979 0163  
                     l1995 0588                       l1997 058C                       l1999 0590  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0326  
                     STR_2 035B                       STR_3 0364                       STR_4 0344  
                     STR_5 0361                       STR_6 0350                       STR_7 0337  
                     u1000 003A                       u1001 0039                       u1010 0062  
                     u1011 0061                       u1100 036F                       u1020 00B5  
                     u1101 036E                       u1021 00B4                       u1030 00DB  
                     u1031 00DA                       u1120 039A                       u1040 00E6  
                     u1121 0399                       u1041 00E5                       u1050 00EC  
                     u1115 0377                       u1051 00EB                       u1035 00D7  
                     u1140 0462                       u1060 00F4                       u1061 00F3  
                     u1150 0486                       u1070 014E                       u1135 03A2  
                     u1071 014D                       u1207 02C2                       u1160 0498  
                     u1080 0174                       u1161 0497                       u1081 0173  
                     u1217 02D5                       u1090 018E                       u1170 0227  
                     u1307 05B0                       u1091 018D                       u1227 02E8  
                     u1171 0226                       u1237 0242                       u1247 0271  
                     u1257 02A0                       u1267 0563                       u1187 022B  
                     u1277 03CB                       u1197 02AF                       u1287 03DC  
                     u1297 03EB             ??_config_USART 0073                       i1l93 04FD  
                     _TXIF 0064          ?_Lcd_Write_String 0050                       _dato 0020  
                     _main 0191                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0052            __end_of_Lcd_Cmd 05B9                      ??_isr 0070  
                    ?_main 0070             config_ADC@frec 0075                      _ANSEL 0188  
          __end_of___lwdiv 0453            __end_of___lwmod 04D5                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u70_20 04E4  
                    u70_21 04E3                      u71_20 04F6                      u71_21 04F5  
          __end_of__doprnt 0191    __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088  
                    _TRISE 0089                      u69_20 04DB                      u69_21 04DA  
                    _TXREG 0019                      _dato1 0021            __end_of_dpowers 0326  
          __end_of_mensaje 02A7                      _setup 0504                      _putch 05C6  
                    fpbase 0024                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 054C           __end_of_Lcd_Init 040D  
         __end_of_Lcd_Port 05DD            __initialization 000F               __end_of_main 023A  
                   ??_main 00A0         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
                   ?_setup 0070                     ?_putch 0073                     i1l1711 04DB  
                   i1l1721 04F8                     i1l1713 04E4                     i1l1715 04E8  
                   i1l1723 04FC                     i1l1717 04ED                     i1l1709 04D5  
                   i1l1719 04F6                  ??_Lcd_Cmd 0074                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 001D           __end_of__fptable 0028                  ??___lwdiv 0077  
                ??___lwmod 0057                     _buffer 003C                  ??__doprnt 005C  
     __end_of_config_USART 0585               __doprnt@flag 0060                     _printf 0585  
             __doprnt@prec 0061                     fptable 001F                     fptotal 0002  
                ??_mensaje 006C                     saved_w 007E                  ??_sprintf 0069  
          Lcd_Set_Cursor@a 0052            Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0054  
          Lcd_Set_Cursor@z 0053    __end_of__initialization 001B          __end_of_Lcd_Clear 05C6  
           __pcstackCOMMON 0070              __end_of_setup 0529              __end_of_putch 05CF  
           _Lcd_Set_Cursor 0367                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __doprnt@ap 005B                 __doprnt@pb 0065                    ??_setup 0076  
                  ??_putch 0074                 __pbssBANK0 0020                 __pmaintext 0191  
               __pintentry 0004  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 03BF  
                  ?_printf 0066                 _config_ADC 02A7                 ??_Lcd_Init 0050  
               ??_Lcd_Port 0073                 __stringtab 030C             _Lcd_Write_Char 054C  
                  _Lcd_Cmd 059F      __size_of_config_USART 001C                    ___lwdiv 040D  
                  ___lwmod 0499                    __doprnt 0028                    _decenas 0023  
          ?_Lcd_Set_Cursor 0077                    __ptext1 0529                    __ptext2 0504  
                  __ptext3 0569                    __ptext4 02A7                    __ptext5 023A  
                  __ptext6 0585                    __ptext7 0028                    __ptext8 05C6  
                  __ptext9 0499                    _buffer1 0028            __size_of_printf 001A  
                  _dpowers 031C               __size_of_isr 002F                    _mensaje 023A  
                  _residuo 0078                    _sprintf 0529                    clrloop0 05D0  
   __end_of_Lcd_Write_Char 0569       end_of_initialization 001B               _config_USART 0569  
                _RCSTAbits 0018                    printf@f 0066                  Lcd_Port@a 0073  
                _PORTEbits 0009                ?_config_ADC 0070                  _TRISAbits 0085  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0050          Lcd_Write_String@i 0055  
                _TXSTAbits 0098                  _Lcd_Clear 05B9           _Lcd_Write_String 0453  
              _BAUDCTLbits 0187             __end_of_printf 059F        start_initialization 000F  
              __end_of_isr 0504          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
      __size_of_config_ADC 0065                 ?_Lcd_Clear 0070                __doprnt@val 0062  
          Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077                   ??_printf 0068  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0050  
            __pcstackBANK1 00A0          __size_of__fptable 0009                   ?_Lcd_Cmd 0070  
                __doprnt@c 0064                  __doprnt@f 0059           ___lwdiv@dividend 0075  
         ??_Lcd_Set_Cursor 0050                  __pfunctab 001F                   ?___lwdiv 0073  
                 ?___lwmod 0053                   ?__doprnt 0059                  _dividendo 0025  
                __pstrings 030C                   ?_mensaje 0070           ___lwdiv@quotient 0051  
                 ?_sprintf 0066             __size_of_setup 0025             __size_of_putch 0009  
        interrupt_function 0004                  clear_ram0 05CF                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 031B                 _ADCON1bits 009F  
             ??_config_ADC 0073           ??_Lcd_Write_Char 0074                  _voltaje_b 007A  
                _voltaje_c 0079                   _Lcd_Init 03BF                   _Lcd_Port 05D7  
 __end_of_Lcd_Write_String 0499           __size_of_Lcd_Cmd 001A         __end_of_config_ADC 030C  
         __size_of___lwdiv 0046           __size_of___lwmod 003C           __size_of__doprnt 0169  
       __end_of__stringtab 031C                   __fptable 001F           __size_of_mensaje 006D  
          ___lwdiv@divisor 0073                   _centenas 0024            ___lwdiv@counter 0050  
                 __ptext10 040D                   __ptext11 0453                   __ptext12 054C  
                 __ptext13 0367                   __ptext14 03BF                   __ptext15 05B9  
                 __ptext16 059F                   __ptext17 05D7                   __ptext18 04D5  
         __size_of_sprintf 0023              __size_of_main 00A9                   _unidades 0022  
                 fp__putch 0025                   _voltaje1 0027                   _voltaje2 0026  
                putch@dato 0073                 _INTCONbits 000B         Lcd_Write_Char@temp 0076  
                 intlevel1 001F                  sprintf@ap 006B                  sprintf@pb 006C  
                sprintf@wh 006A           ___lwmod@dividend 0055                  stringcode 0316  
               _OSCCONbits 008F                   printf@ap 0069                   printf@pb 006A  
       Lcd_Set_Cursor@temp 0055                   sprintf@f 0066            ___lwmod@divisor 0053  
          ___lwmod@counter 0058                   stringdir 0316                   stringtab 030C  
            ?_config_USART 0070  
