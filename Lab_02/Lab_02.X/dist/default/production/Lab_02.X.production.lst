

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 11:11:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  036C                     __pstrings:
   456  036C                     stringtab:
   457  036C                     __stringtab:
   458  036C                     stringcode:	
   459                           ;	String table - string pointers are 1 byte each
   460                           
   461  036C                     stringdir:
   462  036C  3003               	movlw	high stringdir
   463  036D  008A               	movwf	10
   464  036E  0804               	movf	4,w
   465  036F  0A84               	incf	4,f
   466  0370  0782               	addwf	2,f
   467  0371                     __stringbase:
   468  0371  3400               	retlw	0
   469  0372                     __end_of__stringtab:
   470  0372                     _dpowers:
   471  0372  3401               	retlw	1
   472  0373  3400               	retlw	0
   473  0374  340A               	retlw	10
   474  0375  3400               	retlw	0
   475  0376  3464               	retlw	100
   476  0377  3400               	retlw	0
   477  0378  34E8               	retlw	232
   478  0379  3403               	retlw	3
   479  037A  3410               	retlw	16
   480  037B  3427               	retlw	39
   481  037C                     __end_of_dpowers:
   482  0009                     _PORTEbits	set	9
   483  0018                     _RCSTAbits	set	24
   484  0009                     _PORTE	set	9
   485  0008                     _PORTD	set	8
   486  0007                     _PORTC	set	7
   487  0006                     _PORTB	set	6
   488  0005                     _PORTA	set	5
   489  000B                     _INTCONbits	set	11
   490  000C                     _PIR1bits	set	12
   491  001E                     _ADRESH	set	30
   492  001F                     _ADCON0bits	set	31
   493  0066                     _ADIF	set	102
   494  0098                     _TXSTAbits	set	152
   495  009A                     _SPBRGH	set	154
   496  0099                     _SPBRG	set	153
   497  009F                     _ADCON1bits	set	159
   498  008C                     _PIE1bits	set	140
   499  008F                     _OSCCONbits	set	143
   500  0089                     _TRISE	set	137
   501  0088                     _TRISD	set	136
   502  0085                     _TRISAbits	set	133
   503  0187                     _BAUDCTLbits	set	391
   504  0188                     _ANSEL	set	392
   505  037C                     STR_2:
   506  037C  3453               	retlw	83	;'S'
   507  037D  345F               	retlw	95	;'_'
   508  037E  3431               	retlw	49	;'1'
   509  037F  343A               	retlw	58	;':'
   510  0380  3420               	retlw	32	;' '
   511  0381  3420               	retlw	32	;' '
   512  0382  3453               	retlw	83	;'S'
   513  0383  345F               	retlw	95	;'_'
   514  0384  3432               	retlw	50	;'2'
   515  0385  343A               	retlw	58	;':'
   516  0386  3420               	retlw	32	;' '
   517  0387  3420               	retlw	32	;' '
   518  0388  3453               	retlw	83	;'S'
   519  0389  345F               	retlw	95	;'_'
   520  038A  3433               	retlw	51	;'3'
   521  038B  343A               	retlw	58	;':'
   522  038C  3400               	retlw	0
   523  038D                     STR_1:
   524  038D  3425               	retlw	37	;'%'
   525  038E  3464               	retlw	100	;'d'
   526  038F  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529  000F                     start_initialization:	
   530                           ; #config settings
   531                           
   532  000F                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   536  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   537  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   538                           
   539                           ; Clear objects allocated to BANK0
   540  0012  1283               	bcf	3,5	;RP0=0, select bank0
   541  0013  1303               	bcf	3,6	;RP1=0, select bank0
   542  0014  01CD               	clrf	__pbssBANK0& (0+127)
   543  0015  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   544  0016  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   545  0017  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   546  0018  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   547  0019  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   548  001A                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  001A                     __end_of__initialization:
   552  001A  0183               	clrf	3
   553  001B  120A  118A  296D   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssCOMMON
   556  0078                     __pbssCOMMON:
   557  0078                     _residuo:
   558  0078                     	ds	1
   559  0079                     _voltaje_b:
   560  0079                     	ds	1
   561  007A                     _voltaje2:
   562  007A                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565  004D                     __pbssBANK0:
   566  004D                     _unidades:
   567  004D                     	ds	1
   568  004E                     _decenas:
   569  004E                     	ds	1
   570  004F                     _centenas:
   571  004F                     	ds	1
   572  0050                     _dividendo:
   573  0050                     	ds	1
   574  0051                     _voltaje_c:
   575  0051                     	ds	1
   576  0052                     _voltaje1:
   577  0052                     	ds	1
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:
   581  0070                     ?_setup:
   582  0070                     ?_Lcd_Init:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_Lcd_Clear:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_Lcd_Write_String:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_Lcd_Write_Char:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_config_USART:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_config_ADC:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_isr:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ??_isr:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_main:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Port:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_Lcd_Cmd:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 1 bytes @ 0x0
   617  0070                     	ds	3
   618  0073                     ??_config_USART:
   619  0073                     ??_config_ADC:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     ??_Lcd_Port:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0073                     ?___lwdiv:	
   626                           ; 1 bytes @ 0x3
   627                           
   628  0073                     Lcd_Port@a:	
   629                           ; 2 bytes @ 0x3
   630                           
   631  0073                     ___lwdiv@divisor:	
   632                           ; 1 bytes @ 0x3
   633                           
   634                           
   635                           ; 2 bytes @ 0x3
   636  0073                     	ds	1
   637  0074                     ??_Lcd_Write_Char:
   638  0074                     ??_Lcd_Cmd:	
   639                           ; 1 bytes @ 0x4
   640                           
   641                           
   642                           ; 1 bytes @ 0x4
   643  0074                     	ds	1
   644  0075                     config_ADC@frec:
   645  0075                     Lcd_Write_Char@a:	
   646                           ; 1 bytes @ 0x5
   647                           
   648  0075                     ___lwdiv@dividend:	
   649                           ; 1 bytes @ 0x5
   650                           
   651                           
   652                           ; 2 bytes @ 0x5
   653  0075                     	ds	1
   654  0076                     ??_setup:
   655  0076                     Lcd_Cmd@a:	
   656                           ; 1 bytes @ 0x6
   657                           
   658  0076                     Lcd_Write_Char@temp:	
   659                           ; 1 bytes @ 0x6
   660                           
   661                           
   662                           ; 1 bytes @ 0x6
   663  0076                     	ds	1
   664  0077                     ??_Lcd_Clear:
   665  0077                     ?_Lcd_Set_Cursor:	
   666                           ; 1 bytes @ 0x7
   667                           
   668  0077                     ??___lwdiv:	
   669                           ; 1 bytes @ 0x7
   670                           
   671  0077                     Lcd_Set_Cursor@b:	
   672                           ; 1 bytes @ 0x7
   673                           
   674  0077                     Lcd_Write_Char@y:	
   675                           ; 1 bytes @ 0x7
   676                           
   677                           
   678                           ; 1 bytes @ 0x7
   679  0077                     	ds	1
   680  0078                     ??_Lcd_Write_String:
   681                           
   682                           	psect	cstackBANK0
   683  0020                     __pcstackBANK0:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0020                     ??_Lcd_Init:
   687  0020                     ??_Lcd_Set_Cursor:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     Lcd_Write_String@a:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0020                     ___lwdiv@counter:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 1 bytes @ 0x0
   698  0020                     	ds	1
   699  0021                     Lcd_Write_String@i:
   700  0021                     ___lwdiv@quotient:	
   701                           ; 2 bytes @ 0x1
   702                           
   703                           
   704                           ; 2 bytes @ 0x1
   705  0021                     	ds	1
   706  0022                     Lcd_Set_Cursor@a:
   707                           
   708                           ; 1 bytes @ 0x2
   709  0022                     	ds	1
   710  0023                     ?___lwmod:
   711  0023                     Lcd_Set_Cursor@z:	
   712                           ; 2 bytes @ 0x3
   713                           
   714  0023                     ___lwmod@divisor:	
   715                           ; 1 bytes @ 0x3
   716                           
   717                           
   718                           ; 2 bytes @ 0x3
   719  0023                     	ds	1
   720  0024                     Lcd_Set_Cursor@y:
   721                           
   722                           ; 1 bytes @ 0x4
   723  0024                     	ds	1
   724  0025                     Lcd_Set_Cursor@temp:
   725  0025                     ___lwmod@dividend:	
   726                           ; 1 bytes @ 0x5
   727                           
   728                           
   729                           ; 2 bytes @ 0x5
   730  0025                     	ds	2
   731  0027                     ??___lwmod:
   732                           
   733                           ; 1 bytes @ 0x7
   734  0027                     	ds	1
   735  0028                     ___lwmod@counter:
   736                           
   737                           ; 1 bytes @ 0x8
   738  0028                     	ds	1
   739  0029                     ?_sprintf:
   740  0029                     sprintf@f:	
   741                           ; 2 bytes @ 0x9
   742                           
   743                           
   744                           ; 1 bytes @ 0x9
   745  0029                     	ds	3
   746  002C                     ??_sprintf:
   747                           
   748                           ; 1 bytes @ 0xC
   749  002C                     	ds	3
   750  002F                     sprintf@ap:
   751                           
   752                           ; 1 bytes @ 0xF
   753  002F                     	ds	1
   754  0030                     sprintf@flag:
   755                           
   756                           ; 1 bytes @ 0x10
   757  0030                     	ds	1
   758  0031                     sprintf@prec:
   759                           
   760                           ; 1 bytes @ 0x11
   761  0031                     	ds	1
   762  0032                     sprintf@val:
   763                           
   764                           ; 2 bytes @ 0x12
   765  0032                     	ds	2
   766  0034                     sprintf@sp:
   767                           
   768                           ; 1 bytes @ 0x14
   769  0034                     	ds	1
   770  0035                     sprintf@c:
   771                           
   772                           ; 1 bytes @ 0x15
   773  0035                     	ds	1
   774  0036                     ??_main:
   775                           
   776                           ; 1 bytes @ 0x16
   777  0036                     	ds	3
   778  0039                     main@buffer:
   779                           
   780                           ; 20 bytes @ 0x19
   781  0039                     	ds	20
   782                           
   783                           	psect	maintext
   784  016D                     __pmaintext:	
   785 ;;
   786 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   787 ;;
   788 ;; *************** function _main *****************
   789 ;; Defined at:
   790 ;;		line 102 in file "main_02.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  buffer         20   25[BANK0 ] unsigned char [20]
   795 ;;  dato            1    0        unsigned char 
   796 ;;  a               1    0        unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : B00/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0      21       0       0       0
   808 ;;      Temps:          0       3       0       0       0
   809 ;;      Totals:         0      24       0       0       0
   810 ;;Total ram usage:       24 bytes
   811 ;; Hardware stack levels required when called:    4
   812 ;; This function calls:
   813 ;;		_Lcd_Clear
   814 ;;		_Lcd_Init
   815 ;;		_Lcd_Set_Cursor
   816 ;;		_Lcd_Write_Char
   817 ;;		_Lcd_Write_String
   818 ;;		_setup
   819 ;;		_sprintf
   820 ;; This function is called by:
   821 ;;		Startup code after reset
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _main
   827  016D                     _main:
   828  016D                     l1849:	
   829                           ;incstack = 0
   830                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   831                           
   832                           
   833                           ;main_02.c: 103:     setup();
   834  016D  120A  118A  2347  120A  118A  	fcall	_setup
   835  0172                     l1851:
   836                           
   837                           ;main_02.c: 104:     char a;;main_02.c: 105:     Lcd_Init();
   838  0172  120A  118A  221F  120A  118A  	fcall	_Lcd_Init
   839  0177                     l1853:
   840                           
   841                           ;main_02.c: 106:     Lcd_Clear();
   842  0177  120A  118A  23E3  120A  118A  	fcall	_Lcd_Clear
   843  017C                     l1855:
   844  017C                     l1857:
   845                           
   846                           ;main_02.c: 112:     sprintf(buffer, "%d", voltaje1);
   847  017C  301C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   848  017D  1283               	bcf	3,5	;RP0=0, select bank0
   849  017E  1303               	bcf	3,6	;RP1=0, select bank0
   850  017F  00B6               	movwf	??_main
   851  0180  0836               	movf	??_main,w
   852  0181  00A9               	movwf	sprintf@f
   853  0182  0852               	movf	_voltaje1,w
   854  0183  00B7               	movwf	??_main+1
   855  0184  01B8               	clrf	??_main+2
   856  0185  0837               	movf	??_main+1,w
   857  0186  00AA               	movwf	?_sprintf+1
   858  0187  0838               	movf	??_main+2,w
   859  0188  00AB               	movwf	?_sprintf+2
   860  0189  3039               	movlw	(low (main@buffer| 0))& (0+255)
   861  018A  120A  118A  201E  120A  118A  	fcall	_sprintf
   862  018F                     l1859:
   863                           
   864                           ;main_02.c: 114:     Lcd_Set_Cursor(1,1);
   865  018F  01F7               	clrf	Lcd_Set_Cursor@b
   866  0190  0AF7               	incf	Lcd_Set_Cursor@b,f
   867  0191  3001               	movlw	1
   868  0192  120A  118A  21C7  120A  118A  	fcall	_Lcd_Set_Cursor
   869  0197                     l1861:
   870                           
   871                           ;main_02.c: 115:     Lcd_Write_String("S_1:  S_2:  S_3:");
   872  0197  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   873  0198  120A  118A  231E  120A  118A  	fcall	_Lcd_Write_String
   874  019D                     l1863:
   875                           
   876                           ;main_02.c: 116:     Lcd_Set_Cursor(2,1);
   877  019D  01F7               	clrf	Lcd_Set_Cursor@b
   878  019E  0AF7               	incf	Lcd_Set_Cursor@b,f
   879  019F  3002               	movlw	2
   880  01A0  120A  118A  21C7  120A  118A  	fcall	_Lcd_Set_Cursor
   881  01A5                     l1865:
   882                           
   883                           ;main_02.c: 117:     Lcd_Write_Char(buffer);
   884  01A5  3039               	movlw	(low main@buffer)& (0+255)
   885  01A6  120A  118A  2390  120A  118A  	fcall	_Lcd_Write_Char
   886  01AB                     l1867:
   887                           
   888                           ;main_02.c: 118:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   889  01AB  300B               	movlw	11
   890  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   891  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   892  01AE  00B8               	movwf	??_main+2
   893  01AF  3026               	movlw	38
   894  01B0  00B7               	movwf	??_main+1
   895  01B1  305D               	movlw	93
   896  01B2  00B6               	movwf	??_main
   897  01B3                     u957:
   898  01B3  0BB6               	decfsz	??_main,f
   899  01B4  29B3               	goto	u957
   900  01B5  0BB7               	decfsz	??_main+1,f
   901  01B6  29B3               	goto	u957
   902  01B7  0BB8               	decfsz	??_main+2,f
   903  01B8  29B3               	goto	u957
   904  01B9                     l1869:
   905                           
   906                           ;main_02.c: 121:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   907  01B9  3020               	movlw	32
   908  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   909  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   910  01BC  00B6               	movwf	??_main
   911  01BD                     u967:
   912  01BD  0BB6               	decfsz	??_main,f
   913  01BE  29BD               	goto	u967
   914  01BF  0000               	nop
   915  01C0                     l1871:
   916                           
   917                           ;main_02.c: 122:             ADCON0bits.GO = 1;
   918  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   919  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   920  01C2  149F               	bsf	31,1	;volatile
   921  01C3  297C               	goto	l1855
   922  01C4  120A  118A  280C   	ljmp	start
   923  01C7                     __end_of_main:
   924                           
   925                           	psect	text1
   926  001E                     __ptext1:	
   927 ;; *************** function _sprintf *****************
   928 ;; Defined at:
   929 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  sp              1    wreg     PTR unsigned char 
   932 ;;		 -> main@buffer(20), 
   933 ;;  f               1    9[BANK0 ] PTR const unsigned char 
   934 ;;		 -> STR_1(3), 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  sp              1   20[BANK0 ] PTR unsigned char 
   937 ;;		 -> main@buffer(20), 
   938 ;;  tmpval          4    0        struct .
   939 ;;  val             2   18[BANK0 ] unsigned int 
   940 ;;  cp              2    0        PTR const unsigned char 
   941 ;;  len             2    0        unsigned int 
   942 ;;  c               1   21[BANK0 ] unsigned char 
   943 ;;  prec            1   17[BANK0 ] char 
   944 ;;  flag            1   16[BANK0 ] unsigned char 
   945 ;;  ap              1   15[BANK0 ] PTR void [1]
   946 ;;		 -> ?_sprintf(2), 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2    9[BANK0 ] int 
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       3       0       0       0
   957 ;;      Locals:         0       7       0       0       0
   958 ;;      Temps:          0       3       0       0       0
   959 ;;      Totals:         0      13       0       0       0
   960 ;;Total ram usage:       13 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    2
   963 ;; This function calls:
   964 ;;		___lwdiv
   965 ;;		___lwmod
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           
   972                           ;psect for function _sprintf
   973  001E                     _sprintf:
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   977                           ;sprintf@sp stored from wreg
   978  001E  1283               	bcf	3,5	;RP0=0, select bank0
   979  001F  1303               	bcf	3,6	;RP1=0, select bank0
   980  0020  00B4               	movwf	sprintf@sp
   981  0021                     l1759:
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   984  0021  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   985  0022  00AC               	movwf	??_sprintf
   986  0023  082C               	movf	??_sprintf,w
   987  0024  00AF               	movwf	sprintf@ap
   988                           
   989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   990  0025  28F1               	goto	l1811
   991  0026                     l1761:
   992                           
   993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   994  0026  3025               	movlw	37
   995  0027  0635               	xorwf	sprintf@c,w
   996  0028  1903               	btfsc	3,2
   997  0029  282B               	goto	u831
   998  002A  282C               	goto	u830
   999  002B                     u831:
  1000  002B  2838               	goto	l1767
  1001  002C                     u830:
  1002  002C                     l1763:
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1005  002C  0835               	movf	sprintf@c,w
  1006  002D  00AC               	movwf	??_sprintf
  1007  002E  0834               	movf	sprintf@sp,w
  1008  002F  0084               	movwf	4
  1009  0030  082C               	movf	??_sprintf,w
  1010  0031  1383               	bcf	3,7	;select IRP bank0
  1011  0032  0080               	movwf	0
  1012  0033                     l1765:
  1013  0033  3001               	movlw	1
  1014  0034  00AC               	movwf	??_sprintf
  1015  0035  082C               	movf	??_sprintf,w
  1016  0036  07B4               	addwf	sprintf@sp,f
  1017                           
  1018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1019  0037  28F1               	goto	l1811
  1020  0038                     l1767:
  1021                           
  1022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1023  0038  01B0               	clrf	sprintf@flag
  1024  0039                     l1771:	
  1025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1026                           
  1027  0039  3001               	movlw	1
  1028  003A  07A9               	addwf	sprintf@f,f
  1029  003B  30FF               	movlw	-1
  1030  003C  0729               	addwf	sprintf@f,w
  1031  003D  0084               	movwf	4
  1032  003E  120A  118A  236C  120A  118A  	fcall	stringdir
  1033  0043  00B5               	movwf	sprintf@c
  1034  0044  00AC               	movwf	??_sprintf
  1035  0045  01AD               	clrf	??_sprintf+1
  1036                           
  1037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 1, Range of values is 0 to 0
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            4     3 (average)
  1043                           ; direct_byte           11     8 (fixed)
  1044                           ; jumptable            260     6 (fixed)
  1045                           ;	Chosen strategy is simple_byte
  1046  0046  082D               	movf	??_sprintf+1,w
  1047  0047  3A00               	xorlw	0	; case 0
  1048  0048  1903               	skipnz
  1049  0049  284B               	goto	l1917
  1050  004A  28F1               	goto	l1811
  1051  004B                     l1917:
  1052                           
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 3, Range of values is 0 to 105
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte           10     6 (average)
  1058                           ; jumptable            260     6 (fixed)
  1059                           ;	Chosen strategy is simple_byte
  1060  004B  082C               	movf	??_sprintf,w
  1061  004C  3A00               	xorlw	0	; case 0
  1062  004D  1903               	skipnz
  1063  004E  2903               	goto	l1813
  1064  004F  3A64               	xorlw	100	; case 100
  1065  0050  1903               	skipnz
  1066  0051  2856               	goto	l1773
  1067  0052  3A0D               	xorlw	13	; case 105
  1068  0053  1903               	skipnz
  1069  0054  2856               	goto	l1773
  1070  0055  28F1               	goto	l1811
  1071  0056                     l1773:
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1074  0056  082F               	movf	sprintf@ap,w
  1075  0057  0084               	movwf	4
  1076  0058  1383               	bcf	3,7	;select IRP bank0
  1077  0059  0800               	movf	0,w
  1078  005A  00B2               	movwf	sprintf@val
  1079  005B  0A84               	incf	4,f
  1080  005C  0800               	movf	0,w
  1081  005D  00B3               	movwf	sprintf@val+1
  1082  005E                     l1775:
  1083  005E  3002               	movlw	2
  1084  005F  00AC               	movwf	??_sprintf
  1085  0060  082C               	movf	??_sprintf,w
  1086  0061  07AF               	addwf	sprintf@ap,f
  1087  0062                     l1777:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1090  0062  1FB3               	btfss	sprintf@val+1,7
  1091  0063  2865               	goto	u841
  1092  0064  2866               	goto	u840
  1093  0065                     u841:
  1094  0065  286F               	goto	l1783
  1095  0066                     u840:
  1096  0066                     l1779:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1099  0066  3003               	movlw	3
  1100  0067  00AC               	movwf	??_sprintf
  1101  0068  082C               	movf	??_sprintf,w
  1102  0069  04B0               	iorwf	sprintf@flag,f
  1103  006A                     l1781:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1106  006A  09B2               	comf	sprintf@val,f
  1107  006B  09B3               	comf	sprintf@val+1,f
  1108  006C  0AB2               	incf	sprintf@val,f
  1109  006D  1903               	skipnz
  1110  006E  0AB3               	incf	sprintf@val+1,f
  1111  006F                     l1783:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1114  006F  01B5               	clrf	sprintf@c
  1115  0070  0AB5               	incf	sprintf@c,f
  1116  0071                     l1789:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1119  0071  0835               	movf	sprintf@c,w
  1120  0072  00AC               	movwf	??_sprintf
  1121  0073  072C               	addwf	??_sprintf,w
  1122  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1123  0075  0084               	movwf	4
  1124  0076  120A  118A  236C  120A  118A  	fcall	stringdir
  1125  007B  00AD               	movwf	??_sprintf+1
  1126  007C  120A  118A  236C  120A  118A  	fcall	stringdir
  1127  0081  00AE               	movwf	??_sprintf+2
  1128  0082  082E               	movf	??_sprintf+2,w
  1129  0083  0233               	subwf	sprintf@val+1,w
  1130  0084  1D03               	skipz
  1131  0085  2888               	goto	u855
  1132  0086  082D               	movf	??_sprintf+1,w
  1133  0087  0232               	subwf	sprintf@val,w
  1134  0088                     u855:
  1135  0088  1803               	skipnc
  1136  0089  288B               	goto	u851
  1137  008A  288C               	goto	u850
  1138  008B                     u851:
  1139  008B  288D               	goto	l1793
  1140  008C                     u850:
  1141  008C  2897               	goto	l1795
  1142  008D                     l1793:
  1143  008D  3001               	movlw	1
  1144  008E  00AC               	movwf	??_sprintf
  1145  008F  082C               	movf	??_sprintf,w
  1146  0090  07B5               	addwf	sprintf@c,f
  1147  0091  3005               	movlw	5
  1148  0092  0635               	xorwf	sprintf@c,w
  1149  0093  1D03               	btfss	3,2
  1150  0094  2896               	goto	u861
  1151  0095  2897               	goto	u860
  1152  0096                     u861:
  1153  0096  2871               	goto	l1789
  1154  0097                     u860:
  1155  0097                     l1795:
  1156                           
  1157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1158  0097  0830               	movf	sprintf@flag,w
  1159  0098  3903               	andlw	3
  1160  0099  1903               	btfsc	3,2
  1161  009A  289C               	goto	u871
  1162  009B  289D               	goto	u870
  1163  009C                     u871:
  1164  009C  28A8               	goto	l1801
  1165  009D                     u870:
  1166  009D                     l1797:
  1167                           
  1168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1169  009D  302D               	movlw	45
  1170  009E  00AC               	movwf	??_sprintf
  1171  009F  0834               	movf	sprintf@sp,w
  1172  00A0  0084               	movwf	4
  1173  00A1  082C               	movf	??_sprintf,w
  1174  00A2  1383               	bcf	3,7	;select IRP bank0
  1175  00A3  0080               	movwf	0
  1176  00A4                     l1799:
  1177  00A4  3001               	movlw	1
  1178  00A5  00AC               	movwf	??_sprintf
  1179  00A6  082C               	movf	??_sprintf,w
  1180  00A7  07B4               	addwf	sprintf@sp,f
  1181  00A8                     l1801:
  1182                           
  1183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1184  00A8  0835               	movf	sprintf@c,w
  1185  00A9  00AC               	movwf	??_sprintf
  1186  00AA  082C               	movf	??_sprintf,w
  1187  00AB  00B1               	movwf	sprintf@prec
  1188                           
  1189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1190  00AC  28E8               	goto	l1809
  1191  00AD                     l1803:
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1194  00AD  300A               	movlw	10
  1195  00AE  00A3               	movwf	___lwmod@divisor
  1196  00AF  3000               	movlw	0
  1197  00B0  00A4               	movwf	___lwmod@divisor+1
  1198  00B1  0831               	movf	sprintf@prec,w
  1199  00B2  00AC               	movwf	??_sprintf
  1200  00B3  072C               	addwf	??_sprintf,w
  1201  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1202  00B5  0084               	movwf	4
  1203  00B6  120A  118A  236C  120A  118A  	fcall	stringdir
  1204  00BB  00F3               	movwf	___lwdiv@divisor
  1205  00BC  120A  118A  236C  120A  118A  	fcall	stringdir
  1206  00C1  00F4               	movwf	___lwdiv@divisor+1
  1207  00C2  0833               	movf	sprintf@val+1,w
  1208  00C3  00F6               	movwf	___lwdiv@dividend+1
  1209  00C4  0832               	movf	sprintf@val,w
  1210  00C5  00F5               	movwf	___lwdiv@dividend
  1211  00C6  120A  118A  226D  120A  118A  	fcall	___lwdiv
  1212  00CB  0874               	movf	?___lwdiv+1,w
  1213  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1214  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1215  00CE  00A6               	movwf	___lwmod@dividend+1
  1216  00CF  0873               	movf	?___lwdiv,w
  1217  00D0  00A5               	movwf	___lwmod@dividend
  1218  00D1  120A  118A  22B3  120A  118A  	fcall	___lwmod
  1219  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1220  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1221  00D8  0823               	movf	?___lwmod,w
  1222  00D9  3E30               	addlw	48
  1223  00DA  00AD               	movwf	??_sprintf+1
  1224  00DB  082D               	movf	??_sprintf+1,w
  1225  00DC  00B5               	movwf	sprintf@c
  1226  00DD                     l1805:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1229  00DD  0835               	movf	sprintf@c,w
  1230  00DE  00AC               	movwf	??_sprintf
  1231  00DF  0834               	movf	sprintf@sp,w
  1232  00E0  0084               	movwf	4
  1233  00E1  082C               	movf	??_sprintf,w
  1234  00E2  1383               	bcf	3,7	;select IRP bank0
  1235  00E3  0080               	movwf	0
  1236  00E4                     l1807:
  1237  00E4  3001               	movlw	1
  1238  00E5  00AC               	movwf	??_sprintf
  1239  00E6  082C               	movf	??_sprintf,w
  1240  00E7  07B4               	addwf	sprintf@sp,f
  1241  00E8                     l1809:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1244  00E8  30FF               	movlw	255
  1245  00E9  00AC               	movwf	??_sprintf
  1246  00EA  082C               	movf	??_sprintf,w
  1247  00EB  07B1               	addwf	sprintf@prec,f
  1248  00EC  0A31               	incf	sprintf@prec,w
  1249  00ED  1D03               	btfss	3,2
  1250  00EE  28F0               	goto	u881
  1251  00EF  28F1               	goto	u880
  1252  00F0                     u881:
  1253  00F0  28AD               	goto	l1803
  1254  00F1                     u880:
  1255  00F1                     l1811:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1258  00F1  3001               	movlw	1
  1259  00F2  07A9               	addwf	sprintf@f,f
  1260  00F3  30FF               	movlw	-1
  1261  00F4  0729               	addwf	sprintf@f,w
  1262  00F5  0084               	movwf	4
  1263  00F6  120A  118A  236C  120A  118A  	fcall	stringdir
  1264  00FB  00AC               	movwf	??_sprintf
  1265  00FC  082C               	movf	??_sprintf,w
  1266  00FD  00B5               	movwf	sprintf@c
  1267  00FE  0835               	movf	sprintf@c,w
  1268  00FF  1D03               	btfss	3,2
  1269  0100  2902               	goto	u891
  1270  0101  2903               	goto	u890
  1271  0102                     u891:
  1272  0102  2826               	goto	l1761
  1273  0103                     u890:
  1274  0103                     l1813:
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1277  0103  0834               	movf	sprintf@sp,w
  1278  0104  0084               	movwf	4
  1279  0105  1383               	bcf	3,7	;select IRP bank0
  1280  0106  0180               	clrf	0
  1281  0107                     l277:
  1282  0107  0008               	return
  1283  0108                     __end_of_sprintf:
  1284                           
  1285                           	psect	text2
  1286  02B3                     __ptext2:	
  1287 ;; *************** function ___lwmod *****************
  1288 ;; Defined at:
  1289 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  divisor         2    3[BANK0 ] unsigned int 
  1292 ;;  dividend        2    5[BANK0 ] unsigned int 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  counter         1    8[BANK0 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2    3[BANK0 ] unsigned int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       4       0       0       0
  1305 ;;      Locals:         0       1       0       0       0
  1306 ;;      Temps:          0       1       0       0       0
  1307 ;;      Totals:         0       6       0       0       0
  1308 ;;Total ram usage:        6 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_sprintf
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function ___lwmod
  1320  02B3                     ___lwmod:
  1321  02B3                     l1355:	
  1322                           ;incstack = 0
  1323                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1324                           
  1325  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1326  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1327  02B5  0823               	movf	___lwmod@divisor,w
  1328  02B6  0424               	iorwf	___lwmod@divisor+1,w
  1329  02B7  1903               	btfsc	3,2
  1330  02B8  2ABA               	goto	u361
  1331  02B9  2ABB               	goto	u360
  1332  02BA                     u361:
  1333  02BA  2AEA               	goto	l1373
  1334  02BB                     u360:
  1335  02BB                     l1357:
  1336  02BB  01A8               	clrf	___lwmod@counter
  1337  02BC  0AA8               	incf	___lwmod@counter,f
  1338  02BD  2AC9               	goto	l1363
  1339  02BE                     l1359:
  1340  02BE  3001               	movlw	1
  1341  02BF                     u375:
  1342  02BF  1003               	clrc
  1343  02C0  0DA3               	rlf	___lwmod@divisor,f
  1344  02C1  0DA4               	rlf	___lwmod@divisor+1,f
  1345  02C2  3EFF               	addlw	-1
  1346  02C3  1D03               	skipz
  1347  02C4  2ABF               	goto	u375
  1348  02C5                     l1361:
  1349  02C5  3001               	movlw	1
  1350  02C6  00A7               	movwf	??___lwmod
  1351  02C7  0827               	movf	??___lwmod,w
  1352  02C8  07A8               	addwf	___lwmod@counter,f
  1353  02C9                     l1363:
  1354  02C9  1FA4               	btfss	___lwmod@divisor+1,7
  1355  02CA  2ACC               	goto	u381
  1356  02CB  2ACD               	goto	u380
  1357  02CC                     u381:
  1358  02CC  2ABE               	goto	l1359
  1359  02CD                     u380:
  1360  02CD                     l1365:
  1361  02CD  0824               	movf	___lwmod@divisor+1,w
  1362  02CE  0226               	subwf	___lwmod@dividend+1,w
  1363  02CF  1D03               	skipz
  1364  02D0  2AD3               	goto	u395
  1365  02D1  0823               	movf	___lwmod@divisor,w
  1366  02D2  0225               	subwf	___lwmod@dividend,w
  1367  02D3                     u395:
  1368  02D3  1C03               	skipc
  1369  02D4  2AD6               	goto	u391
  1370  02D5  2AD7               	goto	u390
  1371  02D6                     u391:
  1372  02D6  2ADD               	goto	l1369
  1373  02D7                     u390:
  1374  02D7                     l1367:
  1375  02D7  0823               	movf	___lwmod@divisor,w
  1376  02D8  02A5               	subwf	___lwmod@dividend,f
  1377  02D9  0824               	movf	___lwmod@divisor+1,w
  1378  02DA  1C03               	skipc
  1379  02DB  03A6               	decf	___lwmod@dividend+1,f
  1380  02DC  02A6               	subwf	___lwmod@dividend+1,f
  1381  02DD                     l1369:
  1382  02DD  3001               	movlw	1
  1383  02DE                     u405:
  1384  02DE  1003               	clrc
  1385  02DF  0CA4               	rrf	___lwmod@divisor+1,f
  1386  02E0  0CA3               	rrf	___lwmod@divisor,f
  1387  02E1  3EFF               	addlw	-1
  1388  02E2  1D03               	skipz
  1389  02E3  2ADE               	goto	u405
  1390  02E4                     l1371:
  1391  02E4  3001               	movlw	1
  1392  02E5  02A8               	subwf	___lwmod@counter,f
  1393  02E6  1D03               	btfss	3,2
  1394  02E7  2AE9               	goto	u411
  1395  02E8  2AEA               	goto	u410
  1396  02E9                     u411:
  1397  02E9  2ACD               	goto	l1365
  1398  02EA                     u410:
  1399  02EA                     l1373:
  1400  02EA  0826               	movf	___lwmod@dividend+1,w
  1401  02EB  00A4               	movwf	?___lwmod+1
  1402  02EC  0825               	movf	___lwmod@dividend,w
  1403  02ED  00A3               	movwf	?___lwmod
  1404  02EE                     l563:
  1405  02EE  0008               	return
  1406  02EF                     __end_of___lwmod:
  1407                           
  1408                           	psect	text3
  1409  026D                     __ptext3:	
  1410 ;; *************** function ___lwdiv *****************
  1411 ;; Defined at:
  1412 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  divisor         2    3[COMMON] unsigned int 
  1415 ;;  dividend        2    5[COMMON] unsigned int 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  quotient        2    1[BANK0 ] unsigned int 
  1418 ;;  counter         1    0[BANK0 ] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    3[COMMON] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         4       0       0       0       0
  1429 ;;      Locals:         0       3       0       0       0
  1430 ;;      Temps:          1       0       0       0       0
  1431 ;;      Totals:         5       3       0       0       0
  1432 ;;Total ram usage:        8 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_sprintf
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function ___lwdiv
  1444  026D                     ___lwdiv:
  1445  026D                     l1721:	
  1446                           ;incstack = 0
  1447                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1448                           
  1449  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1450  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1451  026F  01A1               	clrf	___lwdiv@quotient
  1452  0270  01A2               	clrf	___lwdiv@quotient+1
  1453  0271                     l1723:
  1454  0271  0873               	movf	___lwdiv@divisor,w
  1455  0272  0474               	iorwf	___lwdiv@divisor+1,w
  1456  0273  1903               	btfsc	3,2
  1457  0274  2A76               	goto	u761
  1458  0275  2A77               	goto	u760
  1459  0276                     u761:
  1460  0276  2AAE               	goto	l1743
  1461  0277                     u760:
  1462  0277                     l1725:
  1463  0277  01A0               	clrf	___lwdiv@counter
  1464  0278  0AA0               	incf	___lwdiv@counter,f
  1465  0279  2A85               	goto	l1731
  1466  027A                     l1727:
  1467  027A  3001               	movlw	1
  1468  027B                     u775:
  1469  027B  1003               	clrc
  1470  027C  0DF3               	rlf	___lwdiv@divisor,f
  1471  027D  0DF4               	rlf	___lwdiv@divisor+1,f
  1472  027E  3EFF               	addlw	-1
  1473  027F  1D03               	skipz
  1474  0280  2A7B               	goto	u775
  1475  0281                     l1729:
  1476  0281  3001               	movlw	1
  1477  0282  00F7               	movwf	??___lwdiv
  1478  0283  0877               	movf	??___lwdiv,w
  1479  0284  07A0               	addwf	___lwdiv@counter,f
  1480  0285                     l1731:
  1481  0285  1FF4               	btfss	___lwdiv@divisor+1,7
  1482  0286  2A88               	goto	u781
  1483  0287  2A89               	goto	u780
  1484  0288                     u781:
  1485  0288  2A7A               	goto	l1727
  1486  0289                     u780:
  1487  0289                     l1733:
  1488  0289  3001               	movlw	1
  1489  028A                     u795:
  1490  028A  1003               	clrc
  1491  028B  0DA1               	rlf	___lwdiv@quotient,f
  1492  028C  0DA2               	rlf	___lwdiv@quotient+1,f
  1493  028D  3EFF               	addlw	-1
  1494  028E  1D03               	skipz
  1495  028F  2A8A               	goto	u795
  1496  0290  0874               	movf	___lwdiv@divisor+1,w
  1497  0291  0276               	subwf	___lwdiv@dividend+1,w
  1498  0292  1D03               	skipz
  1499  0293  2A96               	goto	u805
  1500  0294  0873               	movf	___lwdiv@divisor,w
  1501  0295  0275               	subwf	___lwdiv@dividend,w
  1502  0296                     u805:
  1503  0296  1C03               	skipc
  1504  0297  2A99               	goto	u801
  1505  0298  2A9A               	goto	u800
  1506  0299                     u801:
  1507  0299  2AA1               	goto	l1739
  1508  029A                     u800:
  1509  029A                     l1735:
  1510  029A  0873               	movf	___lwdiv@divisor,w
  1511  029B  02F5               	subwf	___lwdiv@dividend,f
  1512  029C  0874               	movf	___lwdiv@divisor+1,w
  1513  029D  1C03               	skipc
  1514  029E  03F6               	decf	___lwdiv@dividend+1,f
  1515  029F  02F6               	subwf	___lwdiv@dividend+1,f
  1516  02A0                     l1737:
  1517  02A0  1421               	bsf	___lwdiv@quotient,0
  1518  02A1                     l1739:
  1519  02A1  3001               	movlw	1
  1520  02A2                     u815:
  1521  02A2  1003               	clrc
  1522  02A3  0CF4               	rrf	___lwdiv@divisor+1,f
  1523  02A4  0CF3               	rrf	___lwdiv@divisor,f
  1524  02A5  3EFF               	addlw	-1
  1525  02A6  1D03               	skipz
  1526  02A7  2AA2               	goto	u815
  1527  02A8                     l1741:
  1528  02A8  3001               	movlw	1
  1529  02A9  02A0               	subwf	___lwdiv@counter,f
  1530  02AA  1D03               	btfss	3,2
  1531  02AB  2AAD               	goto	u821
  1532  02AC  2AAE               	goto	u820
  1533  02AD                     u821:
  1534  02AD  2A89               	goto	l1733
  1535  02AE                     u820:
  1536  02AE                     l1743:
  1537  02AE  0822               	movf	___lwdiv@quotient+1,w
  1538  02AF  00F4               	movwf	?___lwdiv+1
  1539  02B0  0821               	movf	___lwdiv@quotient,w
  1540  02B1  00F3               	movwf	?___lwdiv
  1541  02B2                     l553:
  1542  02B2  0008               	return
  1543  02B3                     __end_of___lwdiv:
  1544                           
  1545                           	psect	text4
  1546  0347                     __ptext4:	
  1547 ;; *************** function _setup *****************
  1548 ;; Defined at:
  1549 ;;		line 147 in file "main_02.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;		None
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0
  1566 ;;      Totals:         0       0       0       0       0
  1567 ;;Total ram usage:        0 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    2
  1570 ;; This function calls:
  1571 ;;		_config_ADC
  1572 ;;		_config_USART
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _setup
  1580  0347                     _setup:
  1581  0347                     l1377:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1584                           
  1585                           
  1586                           ;main_02.c: 149:     ANSEL = 0b00000011;
  1587  0347  3003               	movlw	3
  1588  0348  1683               	bsf	3,5	;RP0=1, select bank3
  1589  0349  1703               	bsf	3,6	;RP1=1, select bank3
  1590  034A  0088               	movwf	8	;volatile
  1591  034B                     l1379:
  1592                           
  1593                           ;main_02.c: 150:     TRISAbits.TRISA0 = 1;
  1594  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1595  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1596  034D  1405               	bsf	5,0	;volatile
  1597  034E                     l1381:
  1598                           
  1599                           ;main_02.c: 151:     TRISAbits.TRISA1 = 1;
  1600  034E  1485               	bsf	5,1	;volatile
  1601  034F                     l1383:
  1602                           
  1603                           ;main_02.c: 154:     TRISD = 0x00;
  1604  034F  0188               	clrf	8	;volatile
  1605  0350                     l1385:
  1606                           
  1607                           ;main_02.c: 155:     TRISE = 0x00;
  1608  0350  0189               	clrf	9	;volatile
  1609  0351                     l1387:
  1610                           
  1611                           ;main_02.c: 159:     OSCCONbits.IRCF0 = 0;
  1612  0351  120F               	bcf	15,4	;volatile
  1613  0352                     l1389:
  1614                           
  1615                           ;main_02.c: 160:     OSCCONbits.IRCF1 = 1;
  1616  0352  168F               	bsf	15,5	;volatile
  1617  0353                     l1391:
  1618                           
  1619                           ;main_02.c: 161:     OSCCONbits.IRCF2 = 1;
  1620  0353  170F               	bsf	15,6	;volatile
  1621  0354                     l1393:
  1622                           
  1623                           ;main_02.c: 162:     OSCCONbits.SCS = 1;
  1624  0354  140F               	bsf	15,0	;volatile
  1625  0355                     l1395:
  1626                           
  1627                           ;main_02.c: 165:     PIE1bits.ADIE = 1;
  1628  0355  170C               	bsf	12,6	;volatile
  1629  0356                     l1397:
  1630                           
  1631                           ;main_02.c: 166:     PIR1bits.ADIF = 0;
  1632  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0358  130C               	bcf	12,6	;volatile
  1635  0359                     l1399:
  1636                           
  1637                           ;main_02.c: 167:     INTCONbits.GIE = 1;
  1638  0359  178B               	bsf	11,7	;volatile
  1639  035A                     l1401:
  1640                           
  1641                           ;main_02.c: 168:     INTCONbits.PEIE = 1;
  1642  035A  170B               	bsf	11,6	;volatile
  1643  035B                     l1403:
  1644                           
  1645                           ;main_02.c: 171:     PORTA = 0x00;
  1646  035B  0185               	clrf	5	;volatile
  1647  035C                     l1405:
  1648                           
  1649                           ;main_02.c: 172:     PORTB = 0x00;
  1650  035C  0186               	clrf	6	;volatile
  1651  035D                     l1407:
  1652                           
  1653                           ;main_02.c: 173:     PORTC = 0x00;
  1654  035D  0187               	clrf	7	;volatile
  1655  035E                     l1409:
  1656                           
  1657                           ;main_02.c: 174:     PORTD = 0x00;
  1658  035E  0188               	clrf	8	;volatile
  1659  035F                     l1411:
  1660                           
  1661                           ;main_02.c: 175:     PORTE = 0x00;
  1662  035F  0189               	clrf	9	;volatile
  1663  0360                     l1413:
  1664                           
  1665                           ;main_02.c: 178:     config_USART();
  1666  0360  120A  118A  23AD  120A  118A  	fcall	_config_USART
  1667  0365                     l1415:
  1668                           
  1669                           ;main_02.c: 180:     config_ADC(1);
  1670  0365  3001               	movlw	1
  1671  0366  120A  118A  2108  120A  118A  	fcall	_config_ADC
  1672  036B                     l96:
  1673  036B  0008               	return
  1674  036C                     __end_of_setup:
  1675                           
  1676                           	psect	text5
  1677  03AD                     __ptext5:	
  1678 ;; *************** function _config_USART *****************
  1679 ;; Defined at:
  1680 ;;		line 11 in file "config_USART.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_setup
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _config_USART
  1710  03AD                     _config_USART:
  1711  03AD                     l1215:	
  1712                           ;incstack = 0
  1713                           ; Regs used in _config_USART: [wreg+status,2]
  1714                           
  1715                           
  1716                           ;config_USART.c: 13:     SPBRG = 103;
  1717  03AD  3067               	movlw	103
  1718  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1719  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1720  03B0  0099               	movwf	25	;volatile
  1721  03B1                     l1217:
  1722                           
  1723                           ;config_USART.c: 14:     SPBRGH = 0;
  1724  03B1  019A               	clrf	26	;volatile
  1725  03B2                     l1219:
  1726                           
  1727                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1728  03B2  1683               	bsf	3,5	;RP0=1, select bank3
  1729  03B3  1703               	bsf	3,6	;RP1=1, select bank3
  1730  03B4  1587               	bsf	7,3	;volatile
  1731  03B5                     l1221:
  1732                           
  1733                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1734  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  1735  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  1736  03B7  1518               	bsf	24,2	;volatile
  1737  03B8                     l1223:
  1738                           
  1739                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1740  03B8  1218               	bcf	24,4	;volatile
  1741  03B9                     l1225:
  1742                           
  1743                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1744  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1745  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1746  03BB  1798               	bsf	24,7	;volatile
  1747  03BC                     l1227:
  1748                           
  1749                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1750  03BC  1618               	bsf	24,4	;volatile
  1751  03BD                     l1229:
  1752                           
  1753                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1754  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  1755  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  1756  03BF  1318               	bcf	24,6	;volatile
  1757  03C0                     l1231:
  1758                           
  1759                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1760  03C0  1698               	bsf	24,5	;volatile
  1761  03C1                     l1233:
  1762                           
  1763                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1764  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1765  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1766  03C3  1318               	bcf	24,6	;volatile
  1767  03C4                     l1235:
  1768                           
  1769                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1770  03C4  178B               	bsf	11,7	;volatile
  1771  03C5                     l1237:
  1772                           
  1773                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1774  03C5  170B               	bsf	11,6	;volatile
  1775  03C6                     l1239:
  1776                           
  1777                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1778  03C6  120C               	bcf	12,4	;volatile
  1779  03C7                     l1241:
  1780                           
  1781                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1782  03C7  128C               	bcf	12,5	;volatile
  1783  03C8                     l128:
  1784  03C8  0008               	return
  1785  03C9                     __end_of_config_USART:
  1786                           
  1787                           	psect	text6
  1788  0108                     __ptext6:	
  1789 ;; *************** function _config_ADC *****************
  1790 ;; Defined at:
  1791 ;;		line 15 in file "config_ADC.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  frec            1    wreg     unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  frec            1    5[COMMON] unsigned char 
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1805 ;;      Params:         0       0       0       0       0
  1806 ;;      Locals:         1       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0
  1808 ;;      Totals:         3       0       0       0       0
  1809 ;;Total ram usage:        3 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_setup
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _config_ADC
  1821  0108                     _config_ADC:
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  1825                           ;config_ADC@frec stored from wreg
  1826  0108  00F5               	movwf	config_ADC@frec
  1827  0109                     l1245:
  1828                           
  1829                           ;config_ADC.c: 16:     switch(frec){
  1830  0109  2956               	goto	l1313
  1831  010A                     l1247:
  1832                           
  1833                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  1834  010A  30C3               	movlw	-61
  1835  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1836  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1837  010D  059F               	andwf	31,f	;volatile
  1838  010E                     l1249:
  1839                           
  1840                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1841  010E  3021               	movlw	33
  1842  010F  00F3               	movwf	??_config_ADC
  1843  0110                     u977:
  1844  0110  0BF3               	decfsz	??_config_ADC,f
  1845  0111  2910               	goto	u977
  1846  0112                     l1251:
  1847                           
  1848                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1849  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0114  131F               	bcf	31,6	;volatile
  1852  0115                     l1253:
  1853                           
  1854                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1855  0115  139F               	bcf	31,7	;volatile
  1856  0116                     l1255:
  1857                           
  1858                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1859  0116  141F               	bsf	31,0	;volatile
  1860  0117                     l1257:
  1861                           
  1862                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1863  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0119  139F               	bcf	31,7	;volatile
  1866  011A                     l1259:
  1867                           
  1868                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1869  011A  129F               	bcf	31,5	;volatile
  1870  011B                     l1261:
  1871                           
  1872                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1873  011B  121F               	bcf	31,4	;volatile
  1874                           
  1875                           ;config_ADC.c: 27:             break;
  1876  011C  296C               	goto	l111
  1877  011D                     l1263:
  1878                           
  1879                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1880  011D  30C3               	movlw	-61
  1881  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1882  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0120  059F               	andwf	31,f	;volatile
  1884  0121                     l1265:
  1885                           
  1886                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1887  0121  3021               	movlw	33
  1888  0122  00F3               	movwf	??_config_ADC
  1889  0123                     u987:
  1890  0123  0BF3               	decfsz	??_config_ADC,f
  1891  0124  2923               	goto	u987
  1892  0125                     l1267:
  1893                           
  1894                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1895  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0127  171F               	bsf	31,6	;volatile
  1898  0128                     l1269:
  1899                           
  1900                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1901  0128  139F               	bcf	31,7	;volatile
  1902  0129                     l1271:
  1903                           
  1904                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1905  0129  141F               	bsf	31,0	;volatile
  1906  012A                     l1273:
  1907                           
  1908                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1909  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1910  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1911  012C  139F               	bcf	31,7	;volatile
  1912  012D                     l1275:
  1913                           
  1914                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1915  012D  129F               	bcf	31,5	;volatile
  1916  012E                     l1277:
  1917                           
  1918                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1919  012E  121F               	bcf	31,4	;volatile
  1920                           
  1921                           ;config_ADC.c: 38:             break;
  1922  012F  296C               	goto	l111
  1923  0130                     l1279:
  1924                           
  1925                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  1926  0130  30C3               	movlw	-61
  1927  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0133  059F               	andwf	31,f	;volatile
  1930  0134                     l1281:
  1931                           
  1932                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1933  0134  3021               	movlw	33
  1934  0135  00F3               	movwf	??_config_ADC
  1935  0136                     u997:
  1936  0136  0BF3               	decfsz	??_config_ADC,f
  1937  0137  2936               	goto	u997
  1938  0138                     l1283:
  1939                           
  1940                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  1941  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1943  013A  131F               	bcf	31,6	;volatile
  1944  013B                     l1285:
  1945                           
  1946                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1947  013B  179F               	bsf	31,7	;volatile
  1948  013C                     l1287:
  1949                           
  1950                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1951  013C  141F               	bsf	31,0	;volatile
  1952  013D                     l1289:
  1953                           
  1954                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1955  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1956  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1957  013F  139F               	bcf	31,7	;volatile
  1958  0140                     l1291:
  1959                           
  1960                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1961  0140  129F               	bcf	31,5	;volatile
  1962  0141                     l1293:
  1963                           
  1964                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1965  0141  121F               	bcf	31,4	;volatile
  1966                           
  1967                           ;config_ADC.c: 49:             break;
  1968  0142  296C               	goto	l111
  1969  0143                     l1295:
  1970                           
  1971                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1972  0143  30C3               	movlw	-61
  1973  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0146  059F               	andwf	31,f	;volatile
  1976  0147                     l1297:
  1977                           
  1978                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1979  0147  3021               	movlw	33
  1980  0148  00F3               	movwf	??_config_ADC
  1981  0149                     u1007:
  1982  0149  0BF3               	decfsz	??_config_ADC,f
  1983  014A  2949               	goto	u1007
  1984  014B                     l1299:
  1985                           
  1986                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1987  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1988  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1989  014D  171F               	bsf	31,6	;volatile
  1990  014E                     l1301:
  1991                           
  1992                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1993  014E  179F               	bsf	31,7	;volatile
  1994  014F                     l1303:
  1995                           
  1996                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1997  014F  141F               	bsf	31,0	;volatile
  1998  0150                     l1305:
  1999                           
  2000                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  2001  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0151  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0152  139F               	bcf	31,7	;volatile
  2004  0153                     l1307:
  2005                           
  2006                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  2007  0153  129F               	bcf	31,5	;volatile
  2008  0154                     l1309:
  2009                           
  2010                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  2011  0154  121F               	bcf	31,4	;volatile
  2012                           
  2013                           ;config_ADC.c: 60:             break;
  2014  0155  296C               	goto	l111
  2015  0156                     l1313:
  2016  0156  0875               	movf	config_ADC@frec,w
  2017  0157  00F3               	movwf	??_config_ADC
  2018  0158  01F4               	clrf	??_config_ADC+1
  2019                           
  2020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2021                           ; Switch size 1, requested type "simple"
  2022                           ; Number of cases is 1, Range of values is 0 to 0
  2023                           ; switch strategies available:
  2024                           ; Name         Instructions Cycles
  2025                           ; simple_byte            4     3 (average)
  2026                           ; direct_byte           11     8 (fixed)
  2027                           ; jumptable            260     6 (fixed)
  2028                           ;	Chosen strategy is simple_byte
  2029  0159  0874               	movf	??_config_ADC+1,w
  2030  015A  3A00               	xorlw	0	; case 0
  2031  015B  1903               	skipnz
  2032  015C  295E               	goto	l1919
  2033  015D  296C               	goto	l111
  2034  015E                     l1919:
  2035                           
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 4, Range of values is 0 to 3
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte           13     7 (average)
  2041                           ; direct_byte           20     8 (fixed)
  2042                           ; jumptable            260     6 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044  015E  0873               	movf	??_config_ADC,w
  2045  015F  3A00               	xorlw	0	; case 0
  2046  0160  1903               	skipnz
  2047  0161  290A               	goto	l1247
  2048  0162  3A01               	xorlw	1	; case 1
  2049  0163  1903               	skipnz
  2050  0164  291D               	goto	l1263
  2051  0165  3A03               	xorlw	3	; case 2
  2052  0166  1903               	skipnz
  2053  0167  2930               	goto	l1279
  2054  0168  3A01               	xorlw	1	; case 3
  2055  0169  1903               	skipnz
  2056  016A  2943               	goto	l1295
  2057  016B  296C               	goto	l111
  2058  016C                     l111:
  2059  016C  0008               	return
  2060  016D                     __end_of_config_ADC:
  2061                           
  2062                           	psect	text7
  2063  031E                     __ptext7:	
  2064 ;; *************** function _Lcd_Write_String *****************
  2065 ;; Defined at:
  2066 ;;		line 81 in file "LCD_8b.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  a               1    wreg     PTR unsigned char 
  2069 ;;		 -> STR_2(17), 
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;  a               1    0[BANK0 ] PTR unsigned char 
  2072 ;;		 -> STR_2(17), 
  2073 ;;  i               2    1[BANK0 ] int 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       3       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         0       3       0       0       0
  2087 ;;Total ram usage:        3 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:    3
  2090 ;; This function calls:
  2091 ;;		_Lcd_Write_Char
  2092 ;; This function is called by:
  2093 ;;		_main
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _Lcd_Write_String
  2099  031E                     _Lcd_Write_String:
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2103                           ;Lcd_Write_String@a stored from wreg
  2104  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2105  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0320  00A0               	movwf	Lcd_Write_String@a
  2107  0321                     l1841:
  2108                           
  2109                           ;LCD_8b.c: 82:     int i;;LCD_8b.c: 83:     for (i = 0; a[i] != '\0'; i++)
  2110  0321  01A1               	clrf	Lcd_Write_String@i
  2111  0322  01A2               	clrf	Lcd_Write_String@i+1
  2112  0323  2B39               	goto	l1847
  2113  0324                     l1843:
  2114                           
  2115                           ;LCD_8b.c: 84:         Lcd_Write_Char(a[i]);
  2116  0324  0821               	movf	Lcd_Write_String@i,w
  2117  0325  0720               	addwf	Lcd_Write_String@a,w
  2118  0326  0084               	movwf	4
  2119  0327  120A  118A  236C  120A  118A  	fcall	stringdir
  2120  032C  120A  118A  2390  120A  118A  	fcall	_Lcd_Write_Char
  2121  0331                     l1845:
  2122  0331  3001               	movlw	1
  2123  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0334  07A1               	addwf	Lcd_Write_String@i,f
  2126  0335  1803               	skipnc
  2127  0336  0AA2               	incf	Lcd_Write_String@i+1,f
  2128  0337  3000               	movlw	0
  2129  0338  07A2               	addwf	Lcd_Write_String@i+1,f
  2130  0339                     l1847:
  2131  0339  0821               	movf	Lcd_Write_String@i,w
  2132  033A  0720               	addwf	Lcd_Write_String@a,w
  2133  033B  0084               	movwf	4
  2134  033C  120A  118A  236C  120A  118A  	fcall	stringdir
  2135  0341  3A00               	xorlw	0
  2136  0342  1D03               	skipz
  2137  0343  2B45               	goto	u941
  2138  0344  2B46               	goto	u940
  2139  0345                     u941:
  2140  0345  2B24               	goto	l1843
  2141  0346                     u940:
  2142  0346                     l161:
  2143  0346  0008               	return
  2144  0347                     __end_of_Lcd_Write_String:
  2145                           
  2146                           	psect	text8
  2147  0390                     __ptext8:	
  2148 ;; *************** function _Lcd_Write_Char *****************
  2149 ;; Defined at:
  2150 ;;		line 66 in file "LCD_8b.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  a               1    wreg     unsigned char 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  a               1    5[COMMON] unsigned char 
  2155 ;;  y               1    7[COMMON] unsigned char 
  2156 ;;  temp            1    6[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         3       0       0       0       0
  2168 ;;      Temps:          1       0       0       0       0
  2169 ;;      Totals:         4       0       0       0       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    2
  2173 ;; This function calls:
  2174 ;;		_Lcd_Port
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;;		_Lcd_Write_String
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function _Lcd_Write_Char
  2183  0390                     _Lcd_Write_Char:
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2187                           ;Lcd_Write_Char@a stored from wreg
  2188  0390  00F5               	movwf	Lcd_Write_Char@a
  2189  0391                     l1699:
  2190                           
  2191                           ;LCD_8b.c: 67:     char temp, y;;LCD_8b.c: 68:     temp = a;
  2192  0391  0875               	movf	Lcd_Write_Char@a,w
  2193  0392  00F4               	movwf	??_Lcd_Write_Char
  2194  0393  0874               	movf	??_Lcd_Write_Char,w
  2195  0394  00F6               	movwf	Lcd_Write_Char@temp
  2196                           
  2197                           ;LCD_8b.c: 69:     y = temp;
  2198  0395  0876               	movf	Lcd_Write_Char@temp,w
  2199  0396  00F4               	movwf	??_Lcd_Write_Char
  2200  0397  0874               	movf	??_Lcd_Write_Char,w
  2201  0398  00F7               	movwf	Lcd_Write_Char@y
  2202  0399                     l1701:
  2203                           
  2204                           ;LCD_8b.c: 70:     PORTEbits.RE0 = 1;
  2205  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2206  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2207  039B  1409               	bsf	9,0	;volatile
  2208  039C                     l1703:
  2209                           
  2210                           ;LCD_8b.c: 71:     Lcd_Port(y);
  2211  039C  0877               	movf	Lcd_Write_Char@y,w
  2212  039D  120A  118A  23F0  120A  118A  	fcall	_Lcd_Port
  2213  03A2                     l1705:
  2214                           
  2215                           ;LCD_8b.c: 72:     PORTEbits.RE2 = 1;
  2216  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2217  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2218  03A4  1509               	bsf	9,2	;volatile
  2219  03A5                     l1707:
  2220                           
  2221                           ;LCD_8b.c: 73:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2222  03A5  300D               	movlw	13
  2223  03A6  00F4               	movwf	??_Lcd_Write_Char
  2224  03A7                     u1017:
  2225  03A7  0BF4               	decfsz	??_Lcd_Write_Char,f
  2226  03A8  2BA7               	goto	u1017
  2227  03A9                     l1709:
  2228                           
  2229                           ;LCD_8b.c: 74:     PORTEbits.RE2 = 0;
  2230  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2231  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2232  03AB  1109               	bcf	9,2	;volatile
  2233  03AC                     l155:
  2234  03AC  0008               	return
  2235  03AD                     __end_of_Lcd_Write_Char:
  2236                           
  2237                           	psect	text9
  2238  01C7                     __ptext9:	
  2239 ;; *************** function _Lcd_Set_Cursor *****************
  2240 ;; Defined at:
  2241 ;;		line 30 in file "LCD_8b.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  a               1    wreg     unsigned char 
  2244 ;;  b               1    7[COMMON] unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  a               1    2[BANK0 ] unsigned char 
  2247 ;;  temp            1    5[BANK0 ] unsigned char 
  2248 ;;  y               1    4[BANK0 ] unsigned char 
  2249 ;;  z               1    3[BANK0 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         1       0       0       0       0
  2260 ;;      Locals:         0       4       0       0       0
  2261 ;;      Temps:          0       2       0       0       0
  2262 ;;      Totals:         1       6       0       0       0
  2263 ;;Total ram usage:        7 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    3
  2266 ;; This function calls:
  2267 ;;		_Lcd_Cmd
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _Lcd_Set_Cursor
  2275  01C7                     _Lcd_Set_Cursor:
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2279                           ;Lcd_Set_Cursor@a stored from wreg
  2280  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2281  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2282  01C9  00A2               	movwf	Lcd_Set_Cursor@a
  2283  01CA                     l1821:
  2284                           
  2285                           ;LCD_8b.c: 31:     char temp, z, y;;LCD_8b.c: 32:     if (a == 1) {
  2286  01CA  0322               	decf	Lcd_Set_Cursor@a,w
  2287  01CB  1D03               	btfss	3,2
  2288  01CC  29CE               	goto	u901
  2289  01CD  29CF               	goto	u900
  2290  01CE                     u901:
  2291  01CE  29F4               	goto	l1831
  2292  01CF                     u900:
  2293  01CF                     l1823:
  2294                           
  2295                           ;LCD_8b.c: 33:         temp = 0x80 + b - 1;
  2296  01CF  0877               	movf	Lcd_Set_Cursor@b,w
  2297  01D0  3E7F               	addlw	127
  2298  01D1  00A0               	movwf	??_Lcd_Set_Cursor
  2299  01D2  0820               	movf	??_Lcd_Set_Cursor,w
  2300  01D3  00A5               	movwf	Lcd_Set_Cursor@temp
  2301                           
  2302                           ;LCD_8b.c: 34:         z = temp >> 4;
  2303  01D4  0825               	movf	Lcd_Set_Cursor@temp,w
  2304  01D5  00A0               	movwf	??_Lcd_Set_Cursor
  2305  01D6  3004               	movlw	4
  2306  01D7                     u915:
  2307  01D7  1003               	clrc
  2308  01D8  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2309  01D9  3EFF               	addlw	-1
  2310  01DA  1D03               	skipz
  2311  01DB  29D7               	goto	u915
  2312  01DC  0820               	movf	??_Lcd_Set_Cursor,w
  2313  01DD  00A1               	movwf	??_Lcd_Set_Cursor+1
  2314  01DE  0821               	movf	??_Lcd_Set_Cursor+1,w
  2315  01DF  00A3               	movwf	Lcd_Set_Cursor@z
  2316  01E0                     l1825:
  2317                           
  2318                           ;LCD_8b.c: 35:         y = temp & 0x0F;
  2319  01E0  0825               	movf	Lcd_Set_Cursor@temp,w
  2320  01E1  390F               	andlw	15
  2321  01E2  00A0               	movwf	??_Lcd_Set_Cursor
  2322  01E3  0820               	movf	??_Lcd_Set_Cursor,w
  2323  01E4  00A4               	movwf	Lcd_Set_Cursor@y
  2324  01E5                     l1827:
  2325                           
  2326                           ;LCD_8b.c: 36:         Lcd_Cmd(z);
  2327  01E5  0823               	movf	Lcd_Set_Cursor@z,w
  2328  01E6  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2329  01EB                     l1829:
  2330                           
  2331                           ;LCD_8b.c: 38:         Lcd_Cmd(y);
  2332  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2333  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2334  01ED  0824               	movf	Lcd_Set_Cursor@y,w
  2335  01EE  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2336                           
  2337                           ;LCD_8b.c: 39:     } else if (a == 2) {
  2338  01F3  2A1E               	goto	l149
  2339  01F4                     l1831:
  2340  01F4  3002               	movlw	2
  2341  01F5  0622               	xorwf	Lcd_Set_Cursor@a,w
  2342  01F6  1D03               	btfss	3,2
  2343  01F7  29F9               	goto	u921
  2344  01F8  29FA               	goto	u920
  2345  01F9                     u921:
  2346  01F9  2A1E               	goto	l149
  2347  01FA                     u920:
  2348  01FA                     l1833:
  2349                           
  2350                           ;LCD_8b.c: 40:         temp = 0xC0 + b - 1;
  2351  01FA  0877               	movf	Lcd_Set_Cursor@b,w
  2352  01FB  3EBF               	addlw	191
  2353  01FC  00A0               	movwf	??_Lcd_Set_Cursor
  2354  01FD  0820               	movf	??_Lcd_Set_Cursor,w
  2355  01FE  00A5               	movwf	Lcd_Set_Cursor@temp
  2356                           
  2357                           ;LCD_8b.c: 41:         z = temp >> 4;
  2358  01FF  0825               	movf	Lcd_Set_Cursor@temp,w
  2359  0200  00A0               	movwf	??_Lcd_Set_Cursor
  2360  0201  3004               	movlw	4
  2361  0202                     u935:
  2362  0202  1003               	clrc
  2363  0203  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2364  0204  3EFF               	addlw	-1
  2365  0205  1D03               	skipz
  2366  0206  2A02               	goto	u935
  2367  0207  0820               	movf	??_Lcd_Set_Cursor,w
  2368  0208  00A1               	movwf	??_Lcd_Set_Cursor+1
  2369  0209  0821               	movf	??_Lcd_Set_Cursor+1,w
  2370  020A  00A3               	movwf	Lcd_Set_Cursor@z
  2371  020B                     l1835:
  2372                           
  2373                           ;LCD_8b.c: 42:         y = temp & 0xF0;
  2374  020B  0825               	movf	Lcd_Set_Cursor@temp,w
  2375  020C  39F0               	andlw	240
  2376  020D  00A0               	movwf	??_Lcd_Set_Cursor
  2377  020E  0820               	movf	??_Lcd_Set_Cursor,w
  2378  020F  00A4               	movwf	Lcd_Set_Cursor@y
  2379  0210                     l1837:
  2380                           
  2381                           ;LCD_8b.c: 43:         Lcd_Cmd(z);
  2382  0210  0823               	movf	Lcd_Set_Cursor@z,w
  2383  0211  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2384  0216                     l1839:
  2385                           
  2386                           ;LCD_8b.c: 44:         Lcd_Cmd(y);
  2387  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0218  0824               	movf	Lcd_Set_Cursor@y,w
  2390  0219  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2391  021E                     l149:
  2392  021E  0008               	return
  2393  021F                     __end_of_Lcd_Set_Cursor:
  2394                           
  2395                           	psect	text10
  2396  021F                     __ptext10:	
  2397 ;; *************** function _Lcd_Init *****************
  2398 ;; Defined at:
  2399 ;;		line 48 in file "LCD_8b.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          0       2       0       0       0
  2416 ;;      Totals:         0       2       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		_Lcd_Cmd
  2422 ;;		_Lcd_Port
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _Lcd_Init
  2430  021F                     _Lcd_Init:
  2431  021F                     l1747:	
  2432                           ;incstack = 0
  2433                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2434                           
  2435                           
  2436                           ;LCD_8b.c: 49:     Lcd_Port(0x00);
  2437  021F  3000               	movlw	0
  2438  0220  120A  118A  23F0  120A  118A  	fcall	_Lcd_Port
  2439  0225                     l1749:
  2440                           
  2441                           ;LCD_8b.c: 50:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2442  0225  301A               	movlw	26
  2443  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2444  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2445  0228  00A1               	movwf	??_Lcd_Init+1
  2446  0229  30F7               	movlw	247
  2447  022A  00A0               	movwf	??_Lcd_Init
  2448  022B                     u1027:
  2449  022B  0BA0               	decfsz	??_Lcd_Init,f
  2450  022C  2A2B               	goto	u1027
  2451  022D  0BA1               	decfsz	??_Lcd_Init+1,f
  2452  022E  2A2B               	goto	u1027
  2453  022F  2A30               	nop2
  2454  0230                     l1751:
  2455                           
  2456                           ;LCD_8b.c: 51:     Lcd_Cmd(0x30);
  2457  0230  3030               	movlw	48
  2458  0231  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2459                           
  2460                           ;LCD_8b.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2461  0236  3007               	movlw	7
  2462  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0239  00A1               	movwf	??_Lcd_Init+1
  2465  023A  307C               	movlw	124
  2466  023B  00A0               	movwf	??_Lcd_Init
  2467  023C                     u1037:
  2468  023C  0BA0               	decfsz	??_Lcd_Init,f
  2469  023D  2A3C               	goto	u1037
  2470  023E  0BA1               	decfsz	??_Lcd_Init+1,f
  2471  023F  2A3C               	goto	u1037
  2472  0240  0000               	nop
  2473  0241                     l1753:
  2474                           
  2475                           ;LCD_8b.c: 53:     Lcd_Cmd(0x30);
  2476  0241  3030               	movlw	48
  2477  0242  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2478  0247                     l1755:
  2479                           
  2480                           ;LCD_8b.c: 54:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2481  0247  3041               	movlw	65
  2482  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2484  024A  00A0               	movwf	??_Lcd_Init
  2485  024B                     u1047:
  2486  024B  0BA0               	decfsz	??_Lcd_Init,f
  2487  024C  2A4B               	goto	u1047
  2488  024D  2A4E               	nop2
  2489                           
  2490                           ;LCD_8b.c: 55:     Lcd_Cmd(0x30);
  2491  024E  3030               	movlw	48
  2492  024F  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2493                           
  2494                           ;LCD_8b.c: 57:     Lcd_Cmd(0x3C);
  2495  0254  303C               	movlw	60
  2496  0255  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2497                           
  2498                           ;LCD_8b.c: 59:     Lcd_Cmd(0x08);
  2499  025A  3008               	movlw	8
  2500  025B  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2501                           
  2502                           ;LCD_8b.c: 61:     Lcd_Cmd(0x01);
  2503  0260  3001               	movlw	1
  2504  0261  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2505                           
  2506                           ;LCD_8b.c: 63:     Lcd_Cmd(0x06);
  2507  0266  3006               	movlw	6
  2508  0267  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2509  026C                     l152:
  2510  026C  0008               	return
  2511  026D                     __end_of_Lcd_Init:
  2512                           
  2513                           	psect	text11
  2514  03E3                     __ptext11:	
  2515 ;; *************** function _Lcd_Clear *****************
  2516 ;; Defined at:
  2517 ;;		line 25 in file "LCD_8b.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		_Lcd_Cmd
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _Lcd_Clear
  2547  03E3                     _Lcd_Clear:
  2548  03E3                     l1757:	
  2549                           ;incstack = 0
  2550                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2551                           
  2552                           
  2553                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  2554  03E3  3000               	movlw	0
  2555  03E4  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2556                           
  2557                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  2558  03E9  3001               	movlw	1
  2559  03EA  120A  118A  23C9  120A  118A  	fcall	_Lcd_Cmd
  2560  03EF                     l143:
  2561  03EF  0008               	return
  2562  03F0                     __end_of_Lcd_Clear:
  2563                           
  2564                           	psect	text12
  2565  03C9                     __ptext12:	
  2566 ;; *************** function _Lcd_Cmd *****************
  2567 ;; Defined at:
  2568 ;;		line 17 in file "LCD_8b.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  a               1    wreg     unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  a               1    6[COMMON] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2582 ;;      Params:         0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0
  2584 ;;      Temps:          2       0       0       0       0
  2585 ;;      Totals:         3       0       0       0       0
  2586 ;;Total ram usage:        3 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    2
  2589 ;; This function calls:
  2590 ;;		_Lcd_Port
  2591 ;; This function is called by:
  2592 ;;		_Lcd_Clear
  2593 ;;		_Lcd_Set_Cursor
  2594 ;;		_Lcd_Init
  2595 ;;		_Lcd_Shift_Right
  2596 ;;		_Lcd_Shift_Left
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _Lcd_Cmd
  2602  03C9                     _Lcd_Cmd:
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2606                           ;Lcd_Cmd@a stored from wreg
  2607  03C9  00F6               	movwf	Lcd_Cmd@a
  2608  03CA                     l1711:
  2609                           
  2610                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  2611  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2612  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2613  03CC  1009               	bcf	9,0	;volatile
  2614  03CD                     l1713:
  2615                           
  2616                           ;LCD_8b.c: 19:     Lcd_Port(a);
  2617  03CD  0876               	movf	Lcd_Cmd@a,w
  2618  03CE  120A  118A  23F0  120A  118A  	fcall	_Lcd_Port
  2619  03D3                     l1715:
  2620                           
  2621                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  2622  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2623  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2624  03D5  1509               	bsf	9,2	;volatile
  2625  03D6                     l1717:
  2626                           
  2627                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2628  03D6  3006               	movlw	6
  2629  03D7  00F5               	movwf	??_Lcd_Cmd+1
  2630  03D8  3030               	movlw	48
  2631  03D9  00F4               	movwf	??_Lcd_Cmd
  2632  03DA                     u1057:
  2633  03DA  0BF4               	decfsz	??_Lcd_Cmd,f
  2634  03DB  2BDA               	goto	u1057
  2635  03DC  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2636  03DD  2BDA               	goto	u1057
  2637  03DE  0000               	nop
  2638  03DF                     l1719:
  2639                           
  2640                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  2641  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2642  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2643  03E1  1109               	bcf	9,2	;volatile
  2644  03E2                     l140:
  2645  03E2  0008               	return
  2646  03E3                     __end_of_Lcd_Cmd:
  2647                           
  2648                           	psect	text13
  2649  03F0                     __ptext13:	
  2650 ;; *************** function _Lcd_Port *****************
  2651 ;; Defined at:
  2652 ;;		line 12 in file "LCD_8b.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  a               1    wreg     unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  a               1    3[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         1       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0
  2669 ;;      Totals:         1       0       0       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_Lcd_Cmd
  2677 ;;		_Lcd_Init
  2678 ;;		_Lcd_Write_Char
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _Lcd_Port
  2684  03F0                     _Lcd_Port:
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _Lcd_Port: [wreg]
  2688                           ;Lcd_Port@a stored from wreg
  2689  03F0  00F3               	movwf	Lcd_Port@a
  2690  03F1                     l1697:
  2691                           
  2692                           ;LCD_8b.c: 13:     PORTD = a;
  2693  03F1  0873               	movf	Lcd_Port@a,w
  2694  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2695  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2696  03F4  0088               	movwf	8	;volatile
  2697  03F5                     l137:
  2698  03F5  0008               	return
  2699  03F6                     __end_of_Lcd_Port:
  2700                           
  2701                           	psect	text14
  2702  02EF                     __ptext14:	
  2703 ;; *************** function _isr *****************
  2704 ;; Defined at:
  2705 ;;		line 79 in file "main_02.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0
  2721 ;;      Temps:          3       0       0       0       0
  2722 ;;      Totals:         3       0       0       0       0
  2723 ;;Total ram usage:        3 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		Interrupt level 1
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _isr
  2734  02EF                     _isr:
  2735  02EF                     i1l1527:
  2736  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2737  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2738  02F1  1F0C               	btfss	12,6	;volatile
  2739  02F2  2AF4               	goto	u54_21
  2740  02F3  2AF5               	goto	u54_20
  2741  02F4                     u54_21:
  2742  02F4  2B16               	goto	i1l1541
  2743  02F5                     u54_20:
  2744  02F5                     i1l1529:
  2745  02F5  0C1F               	rrf	31,w	;volatile
  2746  02F6  00F0               	movwf	??_isr
  2747  02F7  0C70               	rrf	??_isr,w
  2748  02F8  390F               	andlw	15
  2749  02F9  3A00               	xorlw	0
  2750  02FA  1D03               	skipz
  2751  02FB  2AFD               	goto	u55_21
  2752  02FC  2AFE               	goto	u55_20
  2753  02FD                     u55_21:
  2754  02FD  2B07               	goto	i1l1535
  2755  02FE                     u55_20:
  2756  02FE                     i1l1531:
  2757  02FE  081F               	movf	31,w	;volatile
  2758  02FF  39C3               	andlw	-61
  2759  0300  3804               	iorlw	4
  2760  0301  009F               	movwf	31	;volatile
  2761  0302                     i1l1533:
  2762  0302  081E               	movf	30,w	;volatile
  2763  0303  00F0               	movwf	??_isr
  2764  0304  0870               	movf	??_isr,w
  2765  0305  00D2               	movwf	_voltaje1
  2766  0306  2B16               	goto	i1l1541
  2767  0307                     i1l1535:
  2768  0307  0C1F               	rrf	31,w	;volatile
  2769  0308  00F0               	movwf	??_isr
  2770  0309  0C70               	rrf	??_isr,w
  2771  030A  390F               	andlw	15
  2772  030B  3A01               	xorlw	1
  2773  030C  1D03               	skipz
  2774  030D  2B0F               	goto	u56_21
  2775  030E  2B10               	goto	u56_20
  2776  030F                     u56_21:
  2777  030F  2B16               	goto	i1l1541
  2778  0310                     u56_20:
  2779  0310                     i1l1537:
  2780  0310  30C3               	movlw	-61
  2781  0311  059F               	andwf	31,f	;volatile
  2782  0312                     i1l1539:
  2783  0312  081E               	movf	30,w	;volatile
  2784  0313  00F0               	movwf	??_isr
  2785  0314  0870               	movf	??_isr,w
  2786  0315  00FA               	movwf	_voltaje2
  2787  0316                     i1l1541:
  2788  0316  130C               	bcf	12,6	;volatile
  2789  0317                     i1l79:
  2790  0317  0872               	movf	??_isr+2,w
  2791  0318  008A               	movwf	10
  2792  0319  0E71               	swapf	??_isr+1,w
  2793  031A  0083               	movwf	3
  2794  031B  0EFE               	swapf	btemp,f
  2795  031C  0E7E               	swapf	btemp,w
  2796  031D  0009               	retfie
  2797  031E                     __end_of_isr:
  2798  007E                     btemp	set	126	;btemp
  2799  007E                     wtemp0	set	126
  2800                           
  2801                           	psect	intentry
  2802  0004                     __pintentry:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _isr: [wreg+status,2+status,0]
  2805                           
  2806  0004                     interrupt_function:
  2807  007E                     saved_w	set	btemp
  2808  0004  00FE               	movwf	btemp
  2809  0005  0E03               	swapf	3,w
  2810  0006  00F1               	movwf	??_isr+1
  2811  0007  080A               	movf	10,w
  2812  0008  00F2               	movwf	??_isr+2
  2813  0009  120A  118A  2AEF   	ljmp	_isr
  2814                           
  2815                           	psect	config
  2816                           
  2817                           ;Config register CONFIG1 @ 0x2007
  2818                           ;	Oscillator Selection bits
  2819                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2820                           ;	Watchdog Timer Enable bit
  2821                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2822                           ;	Power-up Timer Enable bit
  2823                           ;	PWRTE = OFF, PWRT disabled
  2824                           ;	RE3/MCLR pin function select bit
  2825                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2826                           ;	Code Protection bit
  2827                           ;	CP = OFF, Program memory code protection is disabled
  2828                           ;	Data Code Protection bit
  2829                           ;	CPD = OFF, Data memory code protection is disabled
  2830                           ;	Brown Out Reset Selection bits
  2831                           ;	BOREN = OFF, BOR disabled
  2832                           ;	Internal External Switchover bit
  2833                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2834                           ;	Fail-Safe Clock Monitor Enabled bit
  2835                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2836                           ;	Low Voltage Programming Enable bit
  2837                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2838                           ;	In-Circuit Debugger Mode bit
  2839                           ;	DEBUG = 0x1, unprogrammed default
  2840  2007                     	org	8199
  2841  2007  20D4               	dw	8404
  2842                           
  2843                           ;Config register CONFIG2 @ 0x2008
  2844                           ;	Brown-out Reset Selection bit
  2845                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2846                           ;	Flash Program Memory Self Write Enable bits
  2847                           ;	WRT = OFF, Write protection off
  2848  2008                     	org	8200
  2849  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    10
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     46      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_config_ADC
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    2878
                                             22 BANK0     24    24      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1554
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     296
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _config_ADC
     _config_USART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      34       5       65.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 11:11:52 2021

                        pc 0002                         l96 036B                         fsr 0004  
                      l111 016C                        l140 03E2                        l143 03EF  
                      l152 026C                        l128 03C8                        l137 03F5  
                      l161 0346                        l155 03AC                        l149 021E  
                      l277 0107                        l553 02B2                        l563 02EE  
                      u410 02EA                        u411 02E9                        u405 02DE  
                      u360 02BB                        u361 02BA                        u380 02CD  
                      u381 02CC                        u390 02D7                        u391 02D6  
                      u375 02BF                        u800 029A                        u801 0299  
                      u395 02D3                        u900 01CF                        u820 02AE  
                      u901 01CE                        u821 02AD                        u805 0296  
                      u830 002C                        u815 02A2                        u831 002B  
                      u920 01FA                        u760 0277                        u840 0066  
                      u921 01F9                        u761 0276                        u841 0065  
                      u850 008C                        u915 01D7                        u851 008B  
                      u940 0346                        u780 0289                        u860 0097  
                      u941 0345                        u781 0288                        u861 0096  
                      u870 009D                        u935 0202                        u775 027B  
                      u871 009C                        u855 0088                        u880 00F1  
                      u881 00F0                        u890 0103                        u795 028A  
                      u891 0102                        u957 01B3                        u967 01BD  
                      u977 0110                        u987 0123                        u997 0136  
                      _isr 02EF                        fsr0 0004                        indf 0000  
                     l1301 014E                       l1221 03B5                       l1303 014F  
                     l1231 03C0                       l1223 03B8                       l1215 03AD  
                     l1305 0150                       l1313 0156                       l1241 03C7  
                     l1233 03C1                       l1225 03B9                       l1217 03B1  
                     l1401 035A                       l1307 0153                       l1251 0112  
                     l1235 03C4                       l1227 03BC                       l1219 03B2  
                     l1411 035F                       l1403 035B                       l1309 0154  
                     l1261 011B                       l1253 0115                       l1245 0109  
                     l1237 03C5                       l1229 03BD                       l1413 0360  
                     l1405 035C                       l1271 0129                       l1263 011D  
                     l1255 0116                       l1247 010A                       l1239 03C6  
                     l1415 0365                       l1407 035D                       l1281 0134  
                     l1273 012A                       l1265 0121                       l1257 0117  
                     l1249 010E                       l1409 035E                       l1361 02C5  
                     l1291 0140                       l1283 0138                       l1275 012D  
                     l1267 0125                       l1259 011A                       l1371 02E4  
                     l1363 02C9                       l1355 02B3                       l1701 0399  
                     l1293 0141                       l1285 013B                       l1277 012E  
                     l1269 0128                       l1381 034E                       l1365 02CD  
                     l1357 02BB                       l1373 02EA                       l1711 03CA  
                     l1703 039C                       l1295 0143                       l1287 013C  
                     l1279 0130                       l1391 0353                       l1383 034F  
                     l1367 02D7                       l1359 02BE                       l1713 03CD  
                     l1705 03A2                       l1297 0147                       l1289 013D  
                     l1393 0354                       l1385 0350                       l1377 0347  
                     l1721 026D                       l1369 02DD                       l1801 00A8  
                     l1715 03D3                       l1707 03A5                       l1299 014B  
                     l1395 0355                       l1387 0351                       l1379 034B  
                     l1731 0285                       l1723 0271                       l1803 00AD  
                     l1811 00F1                       l1717 03D6                       l1821 01CA  
                     l1709 03A9                       l1397 0356                       l1389 0352  
                     l1741 02A8                       l1733 0289                       l1725 0277  
                     l1805 00DD                       l1813 0103                       l1719 03DF  
                     l1751 0230                       l1823 01CF                       l1831 01F4  
                     l1399 0359                       l1735 029A                       l1727 027A  
                     l1743 02AE                       l1807 00E4                       l1753 0241  
                     l1833 01FA                       l1825 01E0                       l1841 0321  
                     l1737 02A0                       l1729 0281                       l1809 00E8  
                     l1761 0026                       l1755 0247                       l1747 021F  
                     l1835 020B                       l1827 01E5                       l1843 0324  
                     l1739 02A1                       l1771 0039                       l1763 002C  
                     l1851 0172                       l1757 03E3                       l1749 0225  
                     l1837 0210                       l1829 01EB                       l1845 0331  
                     l1781 006A                       l1773 0056                       l1917 004B  
                     l1765 0033                       l1861 0197                       l1853 0177  
                     l1839 0216                       l1847 0339                       l1919 015E  
                     l1783 006F                       l1775 005E                       l1767 0038  
                     l1759 0021                       l1871 01C0                       l1863 019D  
                     l1855 017C                       l1697 03F1                       l1793 008D  
                     l1777 0062                       l1865 01A5                       l1857 017C  
                     l1849 016D                       l1699 0391                       l1795 0097  
                     l1779 0066                       l1867 01AB                       l1859 018F  
                     l1797 009D                       l1789 0071                       l1869 01B9  
                     l1799 00A4                       _ADIF 0066                       ?_isr 0070  
                     STR_1 038D                       STR_2 037C                       u1007 0149  
                     u1017 03A7                       u1027 022B                       u1037 023C  
                     u1047 024B                       u1057 03DA             ??_config_USART 0073  
                     i1l79 0317          ?_Lcd_Write_String 0070                       _main 016D  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
          __end_of_Lcd_Cmd 03E3                      ??_isr 0070                      ?_main 0070  
           config_ADC@frec 0075                      _ANSEL 0188            __end_of___lwdiv 02B3  
          __end_of___lwmod 02EF                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u54_20 02F5                      u54_21 02F4  
                    u55_20 02FE                      u55_21 02FD                      u56_20 0310  
                    u56_21 030F    __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088  
                    _TRISE 0089            __end_of_dpowers 037C                      _setup 0347  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0108           __end_of_Lcd_Init 026D           __end_of_Lcd_Port 03F6  
          __initialization 000F               __end_of_main 01C7                     ??_main 0036  
       __size_of_Lcd_Clear 000D                     _ADRESH 001E                     ?_setup 0070  
                   i1l1531 02FE                     i1l1533 0302                     i1l1541 0316  
                   i1l1535 0307                     i1l1527 02EF                     i1l1537 0310  
                   i1l1529 02F5                     i1l1539 0312                  ??_Lcd_Cmd 0074  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 001D                  ??___lwdiv 0077  
                ??___lwmod 0027       __end_of_config_USART 03C9                     saved_w 007E  
                ??_sprintf 002C            Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0077  
          Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023    __end_of__initialization 001A  
        __end_of_Lcd_Clear 03F0             __pcstackCOMMON 0070              __end_of_setup 036C  
           _Lcd_Set_Cursor 01C7                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0076                 __pbssBANK0 004D                 __pmaintext 016D  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 021F  
               _config_ADC 0108                 ??_Lcd_Init 0020                 ??_Lcd_Port 0073  
               __stringtab 036C             _Lcd_Write_Char 0390                    _Lcd_Cmd 03C9  
    __size_of_config_USART 001C                    ___lwdiv 026D                    ___lwmod 02B3  
                  _decenas 004E            ?_Lcd_Set_Cursor 0077                    __ptext1 001E  
                  __ptext2 02B3                    __ptext3 026D                    __ptext4 0347  
                  __ptext5 03AD                    __ptext6 0108                    __ptext7 031E  
                  __ptext8 0390                    __ptext9 01C7                    _dpowers 0372  
             __size_of_isr 002F                    _residuo 0078                    _sprintf 001E  
   __end_of_Lcd_Write_Char 03AD       end_of_initialization 001A               _config_USART 03AD  
                _RCSTAbits 0018                  Lcd_Port@a 0073                  _PORTEbits 0009  
              ?_config_ADC 0070                  _TRISAbits 0085            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0020          Lcd_Write_String@i 0021                 main@buffer 0039  
                _TXSTAbits 0098                  _Lcd_Clear 03E3           _Lcd_Write_String 031E  
              _BAUDCTLbits 0187        start_initialization 000F                __end_of_isr 031E  
        __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006        __size_of_config_ADC 0065  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0075            Lcd_Write_Char@y 0077  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070                sprintf@flag 0030                sprintf@prec 0031  
         ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0020                   ?___lwdiv 0073  
                 ?___lwmod 0023                  _dividendo 0050                  __pstrings 036C  
         ___lwdiv@quotient 0021                   ?_sprintf 0029             __size_of_setup 0025  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 0371                 _ADCON1bits 009F               ??_config_ADC 0073  
         ??_Lcd_Write_Char 0074                  _voltaje_b 0079                  _voltaje_c 0051  
                 _Lcd_Init 021F                   _Lcd_Port 03F0   __end_of_Lcd_Write_String 0347  
         __size_of_Lcd_Cmd 001A         __end_of_config_ADC 016D           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0372                 sprintf@val 0032  
          ___lwdiv@divisor 0073                   _centenas 004F            ___lwdiv@counter 0020  
                 __ptext10 021F                   __ptext11 03E3                   __ptext12 03C9  
                 __ptext13 03F0                   __ptext14 02EF           __size_of_sprintf 00EA  
            __size_of_main 005A                   _unidades 004D                   _voltaje1 0052  
                 _voltaje2 007A                 _INTCONbits 000B         Lcd_Write_Char@temp 0076  
                 intlevel1 0000                  sprintf@ap 002F                  sprintf@sp 0034  
         ___lwmod@dividend 0025                  stringcode 036C                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0025                   sprintf@c 0035                   sprintf@f 0029  
          ___lwmod@divisor 0023            ___lwmod@counter 0028                   stringdir 036C  
                 stringtab 036C              ?_config_USART 0070  
