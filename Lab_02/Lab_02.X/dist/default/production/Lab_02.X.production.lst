

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 18:44:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454                           	psect	strings
   455  0367                     __pstrings:
   456  0367                     stringtab:
   457  0367                     __stringtab:
   458                           
   459                           ;	String table - string pointers are 1 byte each
   460  0367  1BFF               	btfsc	btemp+1,7
   461  0368  2B71               	ljmp	stringcode
   462  0369  1383               	bcf	3,7
   463  036A  187F               	btfsc	btemp+1,0
   464  036B  1783               	bsf	3,7
   465  036C  0800               	movf	0,w
   466  036D  0A84               	incf	4,f
   467  036E  1903               	skipnz
   468  036F  0AFF               	incf	btemp+1,f
   469  0370  0008               	return
   470  0371                     stringcode:
   471  0371                     stringdir:
   472  0371  3003               	movlw	high stringdir
   473  0372  008A               	movwf	10
   474  0373  0804               	movf	4,w
   475  0374  0A84               	incf	4,f
   476  0375  0782               	addwf	2,f
   477  0376                     __stringbase:
   478  0376  3400               	retlw	0
   479  0377                     __end_of__stringtab:
   480  0377                     _dpowers:
   481  0377  3401               	retlw	1
   482  0378  3400               	retlw	0
   483  0379  340A               	retlw	10
   484  037A  3400               	retlw	0
   485  037B  3464               	retlw	100
   486  037C  3400               	retlw	0
   487  037D  34E8               	retlw	232
   488  037E  3403               	retlw	3
   489  037F  3410               	retlw	16
   490  0380  3427               	retlw	39
   491  0381                     __end_of_dpowers:
   492  0009                     _PORTEbits	set	9
   493  0018                     _RCSTAbits	set	24
   494  0009                     _PORTE	set	9
   495  0008                     _PORTD	set	8
   496  0007                     _PORTC	set	7
   497  0006                     _PORTB	set	6
   498  0005                     _PORTA	set	5
   499  000B                     _INTCONbits	set	11
   500  000C                     _PIR1bits	set	12
   501  001E                     _ADRESH	set	30
   502  001F                     _ADCON0bits	set	31
   503  0066                     _ADIF	set	102
   504  0098                     _TXSTAbits	set	152
   505  009A                     _SPBRGH	set	154
   506  0099                     _SPBRG	set	153
   507  009F                     _ADCON1bits	set	159
   508  008C                     _PIE1bits	set	140
   509  008F                     _OSCCONbits	set	143
   510  0089                     _TRISE	set	137
   511  0088                     _TRISD	set	136
   512  0085                     _TRISAbits	set	133
   513  0187                     _BAUDCTLbits	set	391
   514  0188                     _ANSEL	set	392
   515  0381                     STR_1:
   516  0381  3453               	retlw	83	;'S'
   517  0382  345F               	retlw	95	;'_'
   518  0383  3431               	retlw	49	;'1'
   519  0384  343A               	retlw	58	;':'
   520  0385  3420               	retlw	32	;' '
   521  0386  3420               	retlw	32	;' '
   522  0387  3453               	retlw	83	;'S'
   523  0388  345F               	retlw	95	;'_'
   524  0389  3432               	retlw	50	;'2'
   525  038A  343A               	retlw	58	;':'
   526  038B  3420               	retlw	32	;' '
   527  038C  3420               	retlw	32	;' '
   528  038D  3453               	retlw	83	;'S'
   529  038E  345F               	retlw	95	;'_'
   530  038F  3433               	retlw	51	;'3'
   531  0390  343A               	retlw	58	;':'
   532  0391  3400               	retlw	0
   533  0392                     STR_2:
   534  0392  3425               	retlw	37	;'%'
   535  0393  3464               	retlw	100	;'d'
   536  0394  3420               	retlw	32	;' '
   537  0395  3420               	retlw	32	;' '
   538  0396  3420               	retlw	32	;' '
   539  0397  3400               	retlw	0
   540  0398                     STR_3:
   541  0398  3425               	retlw	37	;'%'
   542  0399  3464               	retlw	100	;'d'
   543  039A  3400               	retlw	0
   544                           
   545                           	psect	cinit
   546  000F                     start_initialization:	
   547                           ; #config settings
   548                           
   549  000F                     __initialization:
   550                           
   551                           ; Clear objects allocated to COMMON
   552  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   553  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   554  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   555                           
   556                           ; Clear objects allocated to BANK0
   557  0012  1283               	bcf	3,5	;RP0=0, select bank0
   558  0013  1303               	bcf	3,6	;RP1=0, select bank0
   559  0014  01E1               	clrf	__pbssBANK0& (0+127)
   560  0015  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   561  0016  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   562  0017  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   563  0018  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   564  0019  01E6               	clrf	(__pbssBANK0+5)& (0+127)
   565  001A                     end_of_initialization:	
   566                           ;End of C runtime variable initialization code
   567                           
   568  001A                     __end_of__initialization:
   569  001A  0183               	clrf	3
   570  001B  120A  118A  2908   	ljmp	_main	;jump to C main() function
   571                           
   572                           	psect	bssCOMMON
   573  0078                     __pbssCOMMON:
   574  0078                     _residuo:
   575  0078                     	ds	1
   576  0079                     _voltaje_c:
   577  0079                     	ds	1
   578  007A                     _voltaje_b:
   579  007A                     	ds	1
   580                           
   581                           	psect	bssBANK0
   582  0061                     __pbssBANK0:
   583  0061                     _unidades:
   584  0061                     	ds	1
   585  0062                     _decenas:
   586  0062                     	ds	1
   587  0063                     _centenas:
   588  0063                     	ds	1
   589  0064                     _dividendo:
   590  0064                     	ds	1
   591  0065                     _voltaje2:
   592  0065                     	ds	1
   593  0066                     _voltaje1:
   594  0066                     	ds	1
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:
   598  0070                     ?_setup:
   599  0070                     ?_Lcd_Init:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Clear:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_config_USART:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_config_ADC:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ??_isr:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_main:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_Lcd_Port:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_Lcd_Cmd:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_Lcd_Write_Char:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 1 bytes @ 0x0
   631  0070                     	ds	3
   632  0073                     ??_config_USART:
   633  0073                     ??_config_ADC:	
   634                           ; 1 bytes @ 0x3
   635                           
   636  0073                     ??_Lcd_Port:	
   637                           ; 1 bytes @ 0x3
   638                           
   639  0073                     ?___lwdiv:	
   640                           ; 1 bytes @ 0x3
   641                           
   642  0073                     Lcd_Port@a:	
   643                           ; 2 bytes @ 0x3
   644                           
   645  0073                     ___lwdiv@divisor:	
   646                           ; 1 bytes @ 0x3
   647                           
   648                           
   649                           ; 2 bytes @ 0x3
   650  0073                     	ds	1
   651  0074                     ??_Lcd_Cmd:
   652  0074                     ??_Lcd_Write_Char:	
   653                           ; 1 bytes @ 0x4
   654                           
   655                           
   656                           ; 1 bytes @ 0x4
   657  0074                     	ds	1
   658  0075                     config_ADC@frec:
   659  0075                     Lcd_Write_Char@a:	
   660                           ; 1 bytes @ 0x5
   661                           
   662  0075                     ___lwdiv@dividend:	
   663                           ; 1 bytes @ 0x5
   664                           
   665                           
   666                           ; 2 bytes @ 0x5
   667  0075                     	ds	1
   668  0076                     ??_setup:
   669  0076                     Lcd_Cmd@a:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     Lcd_Write_Char@temp:	
   673                           ; 1 bytes @ 0x6
   674                           
   675                           
   676                           ; 1 bytes @ 0x6
   677  0076                     	ds	1
   678  0077                     ??_Lcd_Clear:
   679  0077                     ?_Lcd_Set_Cursor:	
   680                           ; 1 bytes @ 0x7
   681                           
   682  0077                     ??___lwdiv:	
   683                           ; 1 bytes @ 0x7
   684                           
   685  0077                     Lcd_Set_Cursor@b:	
   686                           ; 1 bytes @ 0x7
   687                           
   688  0077                     Lcd_Write_Char@y:	
   689                           ; 1 bytes @ 0x7
   690                           
   691                           
   692                           ; 1 bytes @ 0x7
   693  0077                     	ds	1
   694                           
   695                           	psect	cstackBANK0
   696  0020                     __pcstackBANK0:
   697  0020                     ??_Lcd_Init:
   698  0020                     ??_Lcd_Set_Cursor:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0020                     ?_Lcd_Write_String:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ___lwdiv@counter:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     Lcd_Write_String@a:	
   708                           ; 1 bytes @ 0x0
   709                           
   710                           
   711                           ; 2 bytes @ 0x0
   712  0020                     	ds	1
   713  0021                     ___lwdiv@quotient:
   714                           
   715                           ; 2 bytes @ 0x1
   716  0021                     	ds	1
   717  0022                     ??_Lcd_Write_String:
   718  0022                     Lcd_Set_Cursor@a:	
   719                           ; 1 bytes @ 0x2
   720                           
   721                           
   722                           ; 1 bytes @ 0x2
   723  0022                     	ds	1
   724  0023                     ?___lwmod:
   725  0023                     Lcd_Set_Cursor@z:	
   726                           ; 2 bytes @ 0x3
   727                           
   728  0023                     ___lwmod@divisor:	
   729                           ; 1 bytes @ 0x3
   730                           
   731                           
   732                           ; 2 bytes @ 0x3
   733  0023                     	ds	1
   734  0024                     Lcd_Set_Cursor@y:
   735                           
   736                           ; 1 bytes @ 0x4
   737  0024                     	ds	1
   738  0025                     Lcd_Set_Cursor@temp:
   739  0025                     Lcd_Write_String@i:	
   740                           ; 1 bytes @ 0x5
   741                           
   742  0025                     ___lwmod@dividend:	
   743                           ; 2 bytes @ 0x5
   744                           
   745                           
   746                           ; 2 bytes @ 0x5
   747  0025                     	ds	2
   748  0027                     ??___lwmod:
   749                           
   750                           ; 1 bytes @ 0x7
   751  0027                     	ds	1
   752  0028                     ___lwmod@counter:
   753                           
   754                           ; 1 bytes @ 0x8
   755  0028                     	ds	1
   756  0029                     ?_sprintf:
   757  0029                     sprintf@f:	
   758                           ; 2 bytes @ 0x9
   759                           
   760                           
   761                           ; 1 bytes @ 0x9
   762  0029                     	ds	3
   763  002C                     ??_sprintf:
   764                           
   765                           ; 1 bytes @ 0xC
   766  002C                     	ds	3
   767  002F                     sprintf@ap:
   768                           
   769                           ; 1 bytes @ 0xF
   770  002F                     	ds	1
   771  0030                     sprintf@flag:
   772                           
   773                           ; 1 bytes @ 0x10
   774  0030                     	ds	1
   775  0031                     sprintf@prec:
   776                           
   777                           ; 1 bytes @ 0x11
   778  0031                     	ds	1
   779  0032                     sprintf@val:
   780                           
   781                           ; 2 bytes @ 0x12
   782  0032                     	ds	2
   783  0034                     sprintf@sp:
   784                           
   785                           ; 1 bytes @ 0x14
   786  0034                     	ds	1
   787  0035                     sprintf@c:
   788                           
   789                           ; 1 bytes @ 0x15
   790  0035                     	ds	1
   791  0036                     ??_main:
   792                           
   793                           ; 1 bytes @ 0x16
   794  0036                     	ds	3
   795  0039                     main@buffer:
   796                           
   797                           ; 20 bytes @ 0x19
   798  0039                     	ds	20
   799  004D                     main@buffer1:
   800                           
   801                           ; 20 bytes @ 0x2D
   802  004D                     	ds	20
   803                           
   804                           	psect	maintext
   805  0108                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 102 in file "main_02.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  buffer1        20   45[BANK0 ] unsigned char [20]
   816 ;;  buffer         20   25[BANK0 ] unsigned char [20]
   817 ;;  dato            1    0        unsigned char 
   818 ;;  dato1           1    0        unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B00/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0      42       0       0       0
   830 ;;      Temps:          0       3       0       0       0
   831 ;;      Totals:         0      45       0       0       0
   832 ;;Total ram usage:       45 bytes
   833 ;; Hardware stack levels required when called:    4
   834 ;; This function calls:
   835 ;;		_Lcd_Clear
   836 ;;		_Lcd_Init
   837 ;;		_Lcd_Set_Cursor
   838 ;;		_Lcd_Write_String
   839 ;;		_setup
   840 ;;		_sprintf
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _main
   848  0108                     _main:
   849  0108                     l1838:	
   850                           ;incstack = 0
   851                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   852                           
   853                           
   854                           ;main_02.c: 103:     setup();
   855  0108  120A  118A  23CA  120A  118A  	fcall	_setup
   856  010D                     l1840:
   857                           
   858                           ;main_02.c: 105:     Lcd_Init();
   859  010D  120A  118A  2251  120A  118A  	fcall	_Lcd_Init
   860  0112                     l1842:
   861                           
   862                           ;main_02.c: 106:     Lcd_Clear();
   863  0112  120A  118A  2442  120A  118A  	fcall	_Lcd_Clear
   864  0117                     l1844:
   865                           
   866                           ;main_02.c: 107:     char buffer[20];;main_02.c: 108:     char buffer1[20];;main_02.c: 1
      +                          09:     char dato1;;main_02.c: 110:     char dato;;main_02.c: 111:     Lcd_Set_Cursor(1,
      +                          1);
   867  0117  01F7               	clrf	Lcd_Set_Cursor@b
   868  0118  0AF7               	incf	Lcd_Set_Cursor@b,f
   869  0119  3001               	movlw	1
   870  011A  120A  118A  21F9  120A  118A  	fcall	_Lcd_Set_Cursor
   871  011F                     l1846:
   872                           
   873                           ;main_02.c: 112:     Lcd_Write_String("S_1:  S_2:  S_3:");
   874  011F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   875  0120  1283               	bcf	3,5	;RP0=0, select bank0
   876  0121  1303               	bcf	3,6	;RP1=0, select bank0
   877  0122  00A0               	movwf	Lcd_Write_String@a
   878  0123  3080               	movlw	128
   879  0124  00A1               	movwf	Lcd_Write_String@a+1
   880  0125  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
   881  012A                     l1848:
   882  012A                     l1850:
   883  012A                     l1852:
   884                           
   885                           ;main_02.c: 117:     sprintf(buffer, "%d   ", voltaje1);
   886  012A  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   887  012B  1283               	bcf	3,5	;RP0=0, select bank0
   888  012C  1303               	bcf	3,6	;RP1=0, select bank0
   889  012D  00B6               	movwf	??_main
   890  012E  0836               	movf	??_main,w
   891  012F  00A9               	movwf	sprintf@f
   892  0130  0866               	movf	_voltaje1,w
   893  0131  00B7               	movwf	??_main+1
   894  0132  01B8               	clrf	??_main+2
   895  0133  0837               	movf	??_main+1,w
   896  0134  00AA               	movwf	?_sprintf+1
   897  0135  0838               	movf	??_main+2,w
   898  0136  00AB               	movwf	?_sprintf+2
   899  0137  3039               	movlw	(low (main@buffer| 0))& (0+255)
   900  0138  120A  118A  201E  120A  118A  	fcall	_sprintf
   901  013D                     l1854:
   902                           
   903                           ;main_02.c: 118:     sprintf(buffer1, "%d", voltaje2);
   904  013D  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   905  013E  1283               	bcf	3,5	;RP0=0, select bank0
   906  013F  1303               	bcf	3,6	;RP1=0, select bank0
   907  0140  00B6               	movwf	??_main
   908  0141  0836               	movf	??_main,w
   909  0142  00A9               	movwf	sprintf@f
   910  0143  0865               	movf	_voltaje2,w
   911  0144  00B7               	movwf	??_main+1
   912  0145  01B8               	clrf	??_main+2
   913  0146  0837               	movf	??_main+1,w
   914  0147  00AA               	movwf	?_sprintf+1
   915  0148  0838               	movf	??_main+2,w
   916  0149  00AB               	movwf	?_sprintf+2
   917  014A  304D               	movlw	(low (main@buffer1| 0))& (0+255)
   918  014B  120A  118A  201E  120A  118A  	fcall	_sprintf
   919  0150                     l1856:
   920                           
   921                           ;main_02.c: 123:     Lcd_Set_Cursor(2,2);
   922  0150  3002               	movlw	2
   923  0151  1283               	bcf	3,5	;RP0=0, select bank0
   924  0152  1303               	bcf	3,6	;RP1=0, select bank0
   925  0153  00B6               	movwf	??_main
   926  0154  0836               	movf	??_main,w
   927  0155  00F7               	movwf	Lcd_Set_Cursor@b
   928  0156  3002               	movlw	2
   929  0157  120A  118A  21F9  120A  118A  	fcall	_Lcd_Set_Cursor
   930  015C                     l1858:
   931                           
   932                           ;main_02.c: 124:     Lcd_Write_String(buffer);
   933  015C  3039               	movlw	(low (main@buffer| 0))& (0+255)
   934  015D  1283               	bcf	3,5	;RP0=0, select bank0
   935  015E  1303               	bcf	3,6	;RP1=0, select bank0
   936  015F  00A0               	movwf	Lcd_Write_String@a
   937  0160  3000               	movlw	0
   938  0161  00A1               	movwf	Lcd_Write_String@a+1
   939  0162  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
   940  0167                     l1860:
   941                           
   942                           ;main_02.c: 126:     Lcd_Write_String(buffer1);
   943  0167  304D               	movlw	(low (main@buffer1| 0))& (0+255)
   944  0168  1283               	bcf	3,5	;RP0=0, select bank0
   945  0169  1303               	bcf	3,6	;RP1=0, select bank0
   946  016A  00A0               	movwf	Lcd_Write_String@a
   947  016B  3000               	movlw	0
   948  016C  00A1               	movwf	Lcd_Write_String@a+1
   949  016D  120A  118A  22E5  120A  118A  	fcall	_Lcd_Write_String
   950  0172                     l1862:
   951                           
   952                           ;main_02.c: 128:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   953  0172  3006               	movlw	6
   954  0173  1283               	bcf	3,5	;RP0=0, select bank0
   955  0174  1303               	bcf	3,6	;RP1=0, select bank0
   956  0175  00B8               	movwf	??_main+2
   957  0176  3013               	movlw	19
   958  0177  00B7               	movwf	??_main+1
   959  0178  30AD               	movlw	173
   960  0179  00B6               	movwf	??_main
   961  017A                     u1047:
   962  017A  0BB6               	decfsz	??_main,f
   963  017B  297A               	goto	u1047
   964  017C  0BB7               	decfsz	??_main+1,f
   965  017D  297A               	goto	u1047
   966  017E  0BB8               	decfsz	??_main+2,f
   967  017F  297A               	goto	u1047
   968  0180                     l1864:
   969                           
   970                           ;main_02.c: 130:     if (ADCON0bits.GO == 0){
   971  0180  1283               	bcf	3,5	;RP0=0, select bank0
   972  0181  1303               	bcf	3,6	;RP1=0, select bank0
   973  0182  189F               	btfsc	31,1	;volatile
   974  0183  2985               	goto	u1031
   975  0184  2986               	goto	u1030
   976  0185                     u1031:
   977  0185  292A               	goto	l1848
   978  0186                     u1030:
   979  0186                     l1866:
   980                           
   981                           ;main_02.c: 131:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   982  0186  3020               	movlw	32
   983  0187  1283               	bcf	3,5	;RP0=0, select bank0
   984  0188  1303               	bcf	3,6	;RP1=0, select bank0
   985  0189  00B6               	movwf	??_main
   986  018A                     u1057:
   987  018A  0BB6               	decfsz	??_main,f
   988  018B  298A               	goto	u1057
   989  018C  0000               	nop
   990  018D                     l1868:
   991                           
   992                           ;main_02.c: 132:             ADCON0bits.GO = 1;
   993  018D  1283               	bcf	3,5	;RP0=0, select bank0
   994  018E  1303               	bcf	3,6	;RP1=0, select bank0
   995  018F  149F               	bsf	31,1	;volatile
   996  0190  292A               	goto	l1848
   997  0191  120A  118A  280C   	ljmp	start
   998  0194                     __end_of_main:
   999                           
  1000                           	psect	text1
  1001  001E                     __ptext1:	
  1002 ;; *************** function _sprintf *****************
  1003 ;; Defined at:
  1004 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  sp              1    wreg     PTR unsigned char 
  1007 ;;		 -> main@buffer1(20), main@buffer(20), 
  1008 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1009 ;;		 -> STR_3(3), STR_2(6), 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1012 ;;		 -> main@buffer1(20), main@buffer(20), 
  1013 ;;  tmpval          4    0        struct .
  1014 ;;  val             2   18[BANK0 ] unsigned int 
  1015 ;;  cp              2    0        PTR const unsigned char 
  1016 ;;  len             2    0        unsigned int 
  1017 ;;  c               1   21[BANK0 ] unsigned char 
  1018 ;;  prec            1   17[BANK0 ] char 
  1019 ;;  flag            1   16[BANK0 ] unsigned char 
  1020 ;;  ap              1   15[BANK0 ] PTR void [1]
  1021 ;;		 -> ?_sprintf(2), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2    9[BANK0 ] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         0       3       0       0       0
  1032 ;;      Locals:         0       7       0       0       0
  1033 ;;      Temps:          0       3       0       0       0
  1034 ;;      Totals:         0      13       0       0       0
  1035 ;;Total ram usage:       13 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    2
  1038 ;; This function calls:
  1039 ;;		___lwdiv
  1040 ;;		___lwmod
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _sprintf
  1048  001E                     _sprintf:
  1049                           
  1050                           ;incstack = 0
  1051                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1052                           ;sprintf@sp stored from wreg
  1053  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1054  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0020  00B4               	movwf	sprintf@sp
  1056  0021                     l1776:
  1057                           
  1058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1059  0021  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1060  0022  00AC               	movwf	??_sprintf
  1061  0023  082C               	movf	??_sprintf,w
  1062  0024  00AF               	movwf	sprintf@ap
  1063                           
  1064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1065  0025  28F1               	goto	l1828
  1066  0026                     l1778:
  1067                           
  1068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1069  0026  3025               	movlw	37
  1070  0027  0635               	xorwf	sprintf@c,w
  1071  0028  1903               	btfsc	3,2
  1072  0029  282B               	goto	u961
  1073  002A  282C               	goto	u960
  1074  002B                     u961:
  1075  002B  2838               	goto	l1784
  1076  002C                     u960:
  1077  002C                     l1780:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1080  002C  0835               	movf	sprintf@c,w
  1081  002D  00AC               	movwf	??_sprintf
  1082  002E  0834               	movf	sprintf@sp,w
  1083  002F  0084               	movwf	4
  1084  0030  082C               	movf	??_sprintf,w
  1085  0031  1383               	bcf	3,7	;select IRP bank0
  1086  0032  0080               	movwf	0
  1087  0033                     l1782:
  1088  0033  3001               	movlw	1
  1089  0034  00AC               	movwf	??_sprintf
  1090  0035  082C               	movf	??_sprintf,w
  1091  0036  07B4               	addwf	sprintf@sp,f
  1092                           
  1093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1094  0037  28F1               	goto	l1828
  1095  0038                     l1784:
  1096                           
  1097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1098  0038  01B0               	clrf	sprintf@flag
  1099  0039                     l1788:	
  1100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1101                           
  1102  0039  3001               	movlw	1
  1103  003A  07A9               	addwf	sprintf@f,f
  1104  003B  30FF               	movlw	-1
  1105  003C  0729               	addwf	sprintf@f,w
  1106  003D  0084               	movwf	4
  1107  003E  120A  118A  2371  120A  118A  	fcall	stringdir
  1108  0043  00B5               	movwf	sprintf@c
  1109  0044  00AC               	movwf	??_sprintf
  1110  0045  01AD               	clrf	??_sprintf+1
  1111                           
  1112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1113                           ; Switch size 1, requested type "simple"
  1114                           ; Number of cases is 1, Range of values is 0 to 0
  1115                           ; switch strategies available:
  1116                           ; Name         Instructions Cycles
  1117                           ; simple_byte            4     3 (average)
  1118                           ; direct_byte           11     8 (fixed)
  1119                           ; jumptable            260     6 (fixed)
  1120                           ;	Chosen strategy is simple_byte
  1121  0046  082D               	movf	??_sprintf+1,w
  1122  0047  3A00               	xorlw	0	; case 0
  1123  0048  1903               	skipnz
  1124  0049  284B               	goto	l1910
  1125  004A  28F1               	goto	l1828
  1126  004B                     l1910:
  1127                           
  1128                           ; Switch size 1, requested type "simple"
  1129                           ; Number of cases is 3, Range of values is 0 to 105
  1130                           ; switch strategies available:
  1131                           ; Name         Instructions Cycles
  1132                           ; simple_byte           10     6 (average)
  1133                           ; jumptable            260     6 (fixed)
  1134                           ;	Chosen strategy is simple_byte
  1135  004B  082C               	movf	??_sprintf,w
  1136  004C  3A00               	xorlw	0	; case 0
  1137  004D  1903               	skipnz
  1138  004E  2903               	goto	l1830
  1139  004F  3A64               	xorlw	100	; case 100
  1140  0050  1903               	skipnz
  1141  0051  2856               	goto	l1790
  1142  0052  3A0D               	xorlw	13	; case 105
  1143  0053  1903               	skipnz
  1144  0054  2856               	goto	l1790
  1145  0055  28F1               	goto	l1828
  1146  0056                     l1790:
  1147                           
  1148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1149  0056  082F               	movf	sprintf@ap,w
  1150  0057  0084               	movwf	4
  1151  0058  1383               	bcf	3,7	;select IRP bank0
  1152  0059  0800               	movf	0,w
  1153  005A  00B2               	movwf	sprintf@val
  1154  005B  0A84               	incf	4,f
  1155  005C  0800               	movf	0,w
  1156  005D  00B3               	movwf	sprintf@val+1
  1157  005E                     l1792:
  1158  005E  3002               	movlw	2
  1159  005F  00AC               	movwf	??_sprintf
  1160  0060  082C               	movf	??_sprintf,w
  1161  0061  07AF               	addwf	sprintf@ap,f
  1162  0062                     l1794:
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1165  0062  1FB3               	btfss	sprintf@val+1,7
  1166  0063  2865               	goto	u971
  1167  0064  2866               	goto	u970
  1168  0065                     u971:
  1169  0065  286F               	goto	l1800
  1170  0066                     u970:
  1171  0066                     l1796:
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1174  0066  3003               	movlw	3
  1175  0067  00AC               	movwf	??_sprintf
  1176  0068  082C               	movf	??_sprintf,w
  1177  0069  04B0               	iorwf	sprintf@flag,f
  1178  006A                     l1798:
  1179                           
  1180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1181  006A  09B2               	comf	sprintf@val,f
  1182  006B  09B3               	comf	sprintf@val+1,f
  1183  006C  0AB2               	incf	sprintf@val,f
  1184  006D  1903               	skipnz
  1185  006E  0AB3               	incf	sprintf@val+1,f
  1186  006F                     l1800:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1189  006F  01B5               	clrf	sprintf@c
  1190  0070  0AB5               	incf	sprintf@c,f
  1191  0071                     l1806:
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1194  0071  0835               	movf	sprintf@c,w
  1195  0072  00AC               	movwf	??_sprintf
  1196  0073  072C               	addwf	??_sprintf,w
  1197  0074  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1198  0075  0084               	movwf	4
  1199  0076  120A  118A  2371  120A  118A  	fcall	stringdir
  1200  007B  00AD               	movwf	??_sprintf+1
  1201  007C  120A  118A  2371  120A  118A  	fcall	stringdir
  1202  0081  00AE               	movwf	??_sprintf+2
  1203  0082  082E               	movf	??_sprintf+2,w
  1204  0083  0233               	subwf	sprintf@val+1,w
  1205  0084  1D03               	skipz
  1206  0085  2888               	goto	u985
  1207  0086  082D               	movf	??_sprintf+1,w
  1208  0087  0232               	subwf	sprintf@val,w
  1209  0088                     u985:
  1210  0088  1803               	skipnc
  1211  0089  288B               	goto	u981
  1212  008A  288C               	goto	u980
  1213  008B                     u981:
  1214  008B  288D               	goto	l1810
  1215  008C                     u980:
  1216  008C  2897               	goto	l1812
  1217  008D                     l1810:
  1218  008D  3001               	movlw	1
  1219  008E  00AC               	movwf	??_sprintf
  1220  008F  082C               	movf	??_sprintf,w
  1221  0090  07B5               	addwf	sprintf@c,f
  1222  0091  3005               	movlw	5
  1223  0092  0635               	xorwf	sprintf@c,w
  1224  0093  1D03               	btfss	3,2
  1225  0094  2896               	goto	u991
  1226  0095  2897               	goto	u990
  1227  0096                     u991:
  1228  0096  2871               	goto	l1806
  1229  0097                     u990:
  1230  0097                     l1812:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1233  0097  0830               	movf	sprintf@flag,w
  1234  0098  3903               	andlw	3
  1235  0099  1903               	btfsc	3,2
  1236  009A  289C               	goto	u1001
  1237  009B  289D               	goto	u1000
  1238  009C                     u1001:
  1239  009C  28A8               	goto	l1818
  1240  009D                     u1000:
  1241  009D                     l1814:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1244  009D  302D               	movlw	45
  1245  009E  00AC               	movwf	??_sprintf
  1246  009F  0834               	movf	sprintf@sp,w
  1247  00A0  0084               	movwf	4
  1248  00A1  082C               	movf	??_sprintf,w
  1249  00A2  1383               	bcf	3,7	;select IRP bank0
  1250  00A3  0080               	movwf	0
  1251  00A4                     l1816:
  1252  00A4  3001               	movlw	1
  1253  00A5  00AC               	movwf	??_sprintf
  1254  00A6  082C               	movf	??_sprintf,w
  1255  00A7  07B4               	addwf	sprintf@sp,f
  1256  00A8                     l1818:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1259  00A8  0835               	movf	sprintf@c,w
  1260  00A9  00AC               	movwf	??_sprintf
  1261  00AA  082C               	movf	??_sprintf,w
  1262  00AB  00B1               	movwf	sprintf@prec
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1265  00AC  28E8               	goto	l1826
  1266  00AD                     l1820:
  1267                           
  1268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1269  00AD  300A               	movlw	10
  1270  00AE  00A3               	movwf	___lwmod@divisor
  1271  00AF  3000               	movlw	0
  1272  00B0  00A4               	movwf	___lwmod@divisor+1
  1273  00B1  0831               	movf	sprintf@prec,w
  1274  00B2  00AC               	movwf	??_sprintf
  1275  00B3  072C               	addwf	??_sprintf,w
  1276  00B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1277  00B5  0084               	movwf	4
  1278  00B6  120A  118A  2371  120A  118A  	fcall	stringdir
  1279  00BB  00F3               	movwf	___lwdiv@divisor
  1280  00BC  120A  118A  2371  120A  118A  	fcall	stringdir
  1281  00C1  00F4               	movwf	___lwdiv@divisor+1
  1282  00C2  0833               	movf	sprintf@val+1,w
  1283  00C3  00F6               	movwf	___lwdiv@dividend+1
  1284  00C4  0832               	movf	sprintf@val,w
  1285  00C5  00F5               	movwf	___lwdiv@dividend
  1286  00C6  120A  118A  229F  120A  118A  	fcall	___lwdiv
  1287  00CB  0874               	movf	?___lwdiv+1,w
  1288  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1289  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1290  00CE  00A6               	movwf	___lwmod@dividend+1
  1291  00CF  0873               	movf	?___lwdiv,w
  1292  00D0  00A5               	movwf	___lwmod@dividend
  1293  00D1  120A  118A  232B  120A  118A  	fcall	___lwmod
  1294  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1295  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1296  00D8  0823               	movf	?___lwmod,w
  1297  00D9  3E30               	addlw	48
  1298  00DA  00AD               	movwf	??_sprintf+1
  1299  00DB  082D               	movf	??_sprintf+1,w
  1300  00DC  00B5               	movwf	sprintf@c
  1301  00DD                     l1822:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1304  00DD  0835               	movf	sprintf@c,w
  1305  00DE  00AC               	movwf	??_sprintf
  1306  00DF  0834               	movf	sprintf@sp,w
  1307  00E0  0084               	movwf	4
  1308  00E1  082C               	movf	??_sprintf,w
  1309  00E2  1383               	bcf	3,7	;select IRP bank0
  1310  00E3  0080               	movwf	0
  1311  00E4                     l1824:
  1312  00E4  3001               	movlw	1
  1313  00E5  00AC               	movwf	??_sprintf
  1314  00E6  082C               	movf	??_sprintf,w
  1315  00E7  07B4               	addwf	sprintf@sp,f
  1316  00E8                     l1826:
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1319  00E8  30FF               	movlw	255
  1320  00E9  00AC               	movwf	??_sprintf
  1321  00EA  082C               	movf	??_sprintf,w
  1322  00EB  07B1               	addwf	sprintf@prec,f
  1323  00EC  0A31               	incf	sprintf@prec,w
  1324  00ED  1D03               	btfss	3,2
  1325  00EE  28F0               	goto	u1011
  1326  00EF  28F1               	goto	u1010
  1327  00F0                     u1011:
  1328  00F0  28AD               	goto	l1820
  1329  00F1                     u1010:
  1330  00F1                     l1828:
  1331                           
  1332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1333  00F1  3001               	movlw	1
  1334  00F2  07A9               	addwf	sprintf@f,f
  1335  00F3  30FF               	movlw	-1
  1336  00F4  0729               	addwf	sprintf@f,w
  1337  00F5  0084               	movwf	4
  1338  00F6  120A  118A  2371  120A  118A  	fcall	stringdir
  1339  00FB  00AC               	movwf	??_sprintf
  1340  00FC  082C               	movf	??_sprintf,w
  1341  00FD  00B5               	movwf	sprintf@c
  1342  00FE  0835               	movf	sprintf@c,w
  1343  00FF  1D03               	btfss	3,2
  1344  0100  2902               	goto	u1021
  1345  0101  2903               	goto	u1020
  1346  0102                     u1021:
  1347  0102  2826               	goto	l1778
  1348  0103                     u1020:
  1349  0103                     l1830:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1352  0103  0834               	movf	sprintf@sp,w
  1353  0104  0084               	movwf	4
  1354  0105  1383               	bcf	3,7	;select IRP bank0
  1355  0106  0180               	clrf	0
  1356  0107                     l276:
  1357  0107  0008               	return
  1358  0108                     __end_of_sprintf:
  1359                           
  1360                           	psect	text2
  1361  032B                     __ptext2:	
  1362 ;; *************** function ___lwmod *****************
  1363 ;; Defined at:
  1364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  divisor         2    3[BANK0 ] unsigned int 
  1367 ;;  dividend        2    5[BANK0 ] unsigned int 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  counter         1    8[BANK0 ] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  2    3[BANK0 ] unsigned int 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       4       0       0       0
  1380 ;;      Locals:         0       1       0       0       0
  1381 ;;      Temps:          0       1       0       0       0
  1382 ;;      Totals:         0       6       0       0       0
  1383 ;;Total ram usage:        6 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_sprintf
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           
  1394                           ;psect for function ___lwmod
  1395  032B                     ___lwmod:
  1396  032B                     l1362:	
  1397                           ;incstack = 0
  1398                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1399                           
  1400  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1401  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1402  032D  0823               	movf	___lwmod@divisor,w
  1403  032E  0424               	iorwf	___lwmod@divisor+1,w
  1404  032F  1903               	btfsc	3,2
  1405  0330  2B32               	goto	u391
  1406  0331  2B33               	goto	u390
  1407  0332                     u391:
  1408  0332  2B62               	goto	l1380
  1409  0333                     u390:
  1410  0333                     l1364:
  1411  0333  01A8               	clrf	___lwmod@counter
  1412  0334  0AA8               	incf	___lwmod@counter,f
  1413  0335  2B41               	goto	l1370
  1414  0336                     l1366:
  1415  0336  3001               	movlw	1
  1416  0337                     u405:
  1417  0337  1003               	clrc
  1418  0338  0DA3               	rlf	___lwmod@divisor,f
  1419  0339  0DA4               	rlf	___lwmod@divisor+1,f
  1420  033A  3EFF               	addlw	-1
  1421  033B  1D03               	skipz
  1422  033C  2B37               	goto	u405
  1423  033D                     l1368:
  1424  033D  3001               	movlw	1
  1425  033E  00A7               	movwf	??___lwmod
  1426  033F  0827               	movf	??___lwmod,w
  1427  0340  07A8               	addwf	___lwmod@counter,f
  1428  0341                     l1370:
  1429  0341  1FA4               	btfss	___lwmod@divisor+1,7
  1430  0342  2B44               	goto	u411
  1431  0343  2B45               	goto	u410
  1432  0344                     u411:
  1433  0344  2B36               	goto	l1366
  1434  0345                     u410:
  1435  0345                     l1372:
  1436  0345  0824               	movf	___lwmod@divisor+1,w
  1437  0346  0226               	subwf	___lwmod@dividend+1,w
  1438  0347  1D03               	skipz
  1439  0348  2B4B               	goto	u425
  1440  0349  0823               	movf	___lwmod@divisor,w
  1441  034A  0225               	subwf	___lwmod@dividend,w
  1442  034B                     u425:
  1443  034B  1C03               	skipc
  1444  034C  2B4E               	goto	u421
  1445  034D  2B4F               	goto	u420
  1446  034E                     u421:
  1447  034E  2B55               	goto	l1376
  1448  034F                     u420:
  1449  034F                     l1374:
  1450  034F  0823               	movf	___lwmod@divisor,w
  1451  0350  02A5               	subwf	___lwmod@dividend,f
  1452  0351  0824               	movf	___lwmod@divisor+1,w
  1453  0352  1C03               	skipc
  1454  0353  03A6               	decf	___lwmod@dividend+1,f
  1455  0354  02A6               	subwf	___lwmod@dividend+1,f
  1456  0355                     l1376:
  1457  0355  3001               	movlw	1
  1458  0356                     u435:
  1459  0356  1003               	clrc
  1460  0357  0CA4               	rrf	___lwmod@divisor+1,f
  1461  0358  0CA3               	rrf	___lwmod@divisor,f
  1462  0359  3EFF               	addlw	-1
  1463  035A  1D03               	skipz
  1464  035B  2B56               	goto	u435
  1465  035C                     l1378:
  1466  035C  3001               	movlw	1
  1467  035D  02A8               	subwf	___lwmod@counter,f
  1468  035E  1D03               	btfss	3,2
  1469  035F  2B61               	goto	u441
  1470  0360  2B62               	goto	u440
  1471  0361                     u441:
  1472  0361  2B45               	goto	l1372
  1473  0362                     u440:
  1474  0362                     l1380:
  1475  0362  0826               	movf	___lwmod@dividend+1,w
  1476  0363  00A4               	movwf	?___lwmod+1
  1477  0364  0825               	movf	___lwmod@dividend,w
  1478  0365  00A3               	movwf	?___lwmod
  1479  0366                     l562:
  1480  0366  0008               	return
  1481  0367                     __end_of___lwmod:
  1482                           
  1483                           	psect	text3
  1484  029F                     __ptext3:	
  1485 ;; *************** function ___lwdiv *****************
  1486 ;; Defined at:
  1487 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  divisor         2    3[COMMON] unsigned int 
  1490 ;;  dividend        2    5[COMMON] unsigned int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  quotient        2    1[BANK0 ] unsigned int 
  1493 ;;  counter         1    0[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2    3[COMMON] unsigned int 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1503 ;;      Params:         4       0       0       0       0
  1504 ;;      Locals:         0       3       0       0       0
  1505 ;;      Temps:          1       0       0       0       0
  1506 ;;      Totals:         5       3       0       0       0
  1507 ;;Total ram usage:        8 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:    1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_sprintf
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           
  1518                           ;psect for function ___lwdiv
  1519  029F                     ___lwdiv:
  1520  029F                     l1712:	
  1521                           ;incstack = 0
  1522                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1523                           
  1524  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1525  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1526  02A1  01A1               	clrf	___lwdiv@quotient
  1527  02A2  01A2               	clrf	___lwdiv@quotient+1
  1528  02A3                     l1714:
  1529  02A3  0873               	movf	___lwdiv@divisor,w
  1530  02A4  0474               	iorwf	___lwdiv@divisor+1,w
  1531  02A5  1903               	btfsc	3,2
  1532  02A6  2AA8               	goto	u821
  1533  02A7  2AA9               	goto	u820
  1534  02A8                     u821:
  1535  02A8  2AE0               	goto	l1734
  1536  02A9                     u820:
  1537  02A9                     l1716:
  1538  02A9  01A0               	clrf	___lwdiv@counter
  1539  02AA  0AA0               	incf	___lwdiv@counter,f
  1540  02AB  2AB7               	goto	l1722
  1541  02AC                     l1718:
  1542  02AC  3001               	movlw	1
  1543  02AD                     u835:
  1544  02AD  1003               	clrc
  1545  02AE  0DF3               	rlf	___lwdiv@divisor,f
  1546  02AF  0DF4               	rlf	___lwdiv@divisor+1,f
  1547  02B0  3EFF               	addlw	-1
  1548  02B1  1D03               	skipz
  1549  02B2  2AAD               	goto	u835
  1550  02B3                     l1720:
  1551  02B3  3001               	movlw	1
  1552  02B4  00F7               	movwf	??___lwdiv
  1553  02B5  0877               	movf	??___lwdiv,w
  1554  02B6  07A0               	addwf	___lwdiv@counter,f
  1555  02B7                     l1722:
  1556  02B7  1FF4               	btfss	___lwdiv@divisor+1,7
  1557  02B8  2ABA               	goto	u841
  1558  02B9  2ABB               	goto	u840
  1559  02BA                     u841:
  1560  02BA  2AAC               	goto	l1718
  1561  02BB                     u840:
  1562  02BB                     l1724:
  1563  02BB  3001               	movlw	1
  1564  02BC                     u855:
  1565  02BC  1003               	clrc
  1566  02BD  0DA1               	rlf	___lwdiv@quotient,f
  1567  02BE  0DA2               	rlf	___lwdiv@quotient+1,f
  1568  02BF  3EFF               	addlw	-1
  1569  02C0  1D03               	skipz
  1570  02C1  2ABC               	goto	u855
  1571  02C2  0874               	movf	___lwdiv@divisor+1,w
  1572  02C3  0276               	subwf	___lwdiv@dividend+1,w
  1573  02C4  1D03               	skipz
  1574  02C5  2AC8               	goto	u865
  1575  02C6  0873               	movf	___lwdiv@divisor,w
  1576  02C7  0275               	subwf	___lwdiv@dividend,w
  1577  02C8                     u865:
  1578  02C8  1C03               	skipc
  1579  02C9  2ACB               	goto	u861
  1580  02CA  2ACC               	goto	u860
  1581  02CB                     u861:
  1582  02CB  2AD3               	goto	l1730
  1583  02CC                     u860:
  1584  02CC                     l1726:
  1585  02CC  0873               	movf	___lwdiv@divisor,w
  1586  02CD  02F5               	subwf	___lwdiv@dividend,f
  1587  02CE  0874               	movf	___lwdiv@divisor+1,w
  1588  02CF  1C03               	skipc
  1589  02D0  03F6               	decf	___lwdiv@dividend+1,f
  1590  02D1  02F6               	subwf	___lwdiv@dividend+1,f
  1591  02D2                     l1728:
  1592  02D2  1421               	bsf	___lwdiv@quotient,0
  1593  02D3                     l1730:
  1594  02D3  3001               	movlw	1
  1595  02D4                     u875:
  1596  02D4  1003               	clrc
  1597  02D5  0CF4               	rrf	___lwdiv@divisor+1,f
  1598  02D6  0CF3               	rrf	___lwdiv@divisor,f
  1599  02D7  3EFF               	addlw	-1
  1600  02D8  1D03               	skipz
  1601  02D9  2AD4               	goto	u875
  1602  02DA                     l1732:
  1603  02DA  3001               	movlw	1
  1604  02DB  02A0               	subwf	___lwdiv@counter,f
  1605  02DC  1D03               	btfss	3,2
  1606  02DD  2ADF               	goto	u881
  1607  02DE  2AE0               	goto	u880
  1608  02DF                     u881:
  1609  02DF  2ABB               	goto	l1724
  1610  02E0                     u880:
  1611  02E0                     l1734:
  1612  02E0  0822               	movf	___lwdiv@quotient+1,w
  1613  02E1  00F4               	movwf	?___lwdiv+1
  1614  02E2  0821               	movf	___lwdiv@quotient,w
  1615  02E3  00F3               	movwf	?___lwdiv
  1616  02E4                     l552:
  1617  02E4  0008               	return
  1618  02E5                     __end_of___lwdiv:
  1619                           
  1620                           	psect	text4
  1621  03CA                     __ptext4:	
  1622 ;; *************** function _setup *****************
  1623 ;; Defined at:
  1624 ;;		line 156 in file "main_02.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    2
  1645 ;; This function calls:
  1646 ;;		_config_ADC
  1647 ;;		_config_USART
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _setup
  1655  03CA                     _setup:
  1656  03CA                     l1384:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1659                           
  1660                           
  1661                           ;main_02.c: 158:     ANSEL = 0b00000011;
  1662  03CA  3003               	movlw	3
  1663  03CB  1683               	bsf	3,5	;RP0=1, select bank3
  1664  03CC  1703               	bsf	3,6	;RP1=1, select bank3
  1665  03CD  0088               	movwf	8	;volatile
  1666  03CE                     l1386:
  1667                           
  1668                           ;main_02.c: 159:     TRISAbits.TRISA0 = 1;
  1669  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  1670  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  1671  03D0  1405               	bsf	5,0	;volatile
  1672  03D1                     l1388:
  1673                           
  1674                           ;main_02.c: 160:     TRISAbits.TRISA1 = 1;
  1675  03D1  1485               	bsf	5,1	;volatile
  1676  03D2                     l1390:
  1677                           
  1678                           ;main_02.c: 163:     TRISD = 0x00;
  1679  03D2  0188               	clrf	8	;volatile
  1680  03D3                     l1392:
  1681                           
  1682                           ;main_02.c: 164:     TRISE = 0x00;
  1683  03D3  0189               	clrf	9	;volatile
  1684  03D4                     l1394:
  1685                           
  1686                           ;main_02.c: 168:     OSCCONbits.IRCF0 = 0;
  1687  03D4  120F               	bcf	15,4	;volatile
  1688  03D5                     l1396:
  1689                           
  1690                           ;main_02.c: 169:     OSCCONbits.IRCF1 = 1;
  1691  03D5  168F               	bsf	15,5	;volatile
  1692  03D6                     l1398:
  1693                           
  1694                           ;main_02.c: 170:     OSCCONbits.IRCF2 = 1;
  1695  03D6  170F               	bsf	15,6	;volatile
  1696  03D7                     l1400:
  1697                           
  1698                           ;main_02.c: 171:     OSCCONbits.SCS = 1;
  1699  03D7  140F               	bsf	15,0	;volatile
  1700  03D8                     l1402:
  1701                           
  1702                           ;main_02.c: 174:     PIE1bits.ADIE = 1;
  1703  03D8  170C               	bsf	12,6	;volatile
  1704  03D9                     l1404:
  1705                           
  1706                           ;main_02.c: 175:     PIR1bits.ADIF = 0;
  1707  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1708  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1709  03DB  130C               	bcf	12,6	;volatile
  1710  03DC                     l1406:
  1711                           
  1712                           ;main_02.c: 176:     INTCONbits.GIE = 1;
  1713  03DC  178B               	bsf	11,7	;volatile
  1714  03DD                     l1408:
  1715                           
  1716                           ;main_02.c: 177:     INTCONbits.PEIE = 1;
  1717  03DD  170B               	bsf	11,6	;volatile
  1718  03DE                     l1410:
  1719                           
  1720                           ;main_02.c: 180:     PORTA = 0x00;
  1721  03DE  0185               	clrf	5	;volatile
  1722  03DF                     l1412:
  1723                           
  1724                           ;main_02.c: 181:     PORTB = 0x00;
  1725  03DF  0186               	clrf	6	;volatile
  1726  03E0                     l1414:
  1727                           
  1728                           ;main_02.c: 182:     PORTC = 0x00;
  1729  03E0  0187               	clrf	7	;volatile
  1730  03E1                     l1416:
  1731                           
  1732                           ;main_02.c: 183:     PORTD = 0x00;
  1733  03E1  0188               	clrf	8	;volatile
  1734  03E2                     l1418:
  1735                           
  1736                           ;main_02.c: 184:     PORTE = 0x00;
  1737  03E2  0189               	clrf	9	;volatile
  1738  03E3                     l1420:
  1739                           
  1740                           ;main_02.c: 187:     config_USART();
  1741  03E3  120A  118A  240C  120A  118A  	fcall	_config_USART
  1742  03E8                     l1422:
  1743                           
  1744                           ;main_02.c: 189:     config_ADC(1);
  1745  03E8  3001               	movlw	1
  1746  03E9  120A  118A  2194  120A  118A  	fcall	_config_ADC
  1747  03EE                     l95:
  1748  03EE  0008               	return
  1749  03EF                     __end_of_setup:
  1750                           
  1751                           	psect	text5
  1752  040C                     __ptext5:	
  1753 ;; *************** function _config_USART *****************
  1754 ;; Defined at:
  1755 ;;		line 11 in file "config_USART.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_setup
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _config_USART
  1785  040C                     _config_USART:
  1786  040C                     l1210:	
  1787                           ;incstack = 0
  1788                           ; Regs used in _config_USART: [wreg+status,2]
  1789                           
  1790                           
  1791                           ;config_USART.c: 13:     SPBRG = 103;
  1792  040C  3067               	movlw	103
  1793  040D  1683               	bsf	3,5	;RP0=1, select bank1
  1794  040E  1303               	bcf	3,6	;RP1=0, select bank1
  1795  040F  0099               	movwf	25	;volatile
  1796  0410                     l1212:
  1797                           
  1798                           ;config_USART.c: 14:     SPBRGH = 0;
  1799  0410  019A               	clrf	26	;volatile
  1800  0411                     l1214:
  1801                           
  1802                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1803  0411  1683               	bsf	3,5	;RP0=1, select bank3
  1804  0412  1703               	bsf	3,6	;RP1=1, select bank3
  1805  0413  1587               	bsf	7,3	;volatile
  1806  0414                     l1216:
  1807                           
  1808                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1809  0414  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0415  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0416  1518               	bsf	24,2	;volatile
  1812  0417                     l1218:
  1813                           
  1814                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1815  0417  1218               	bcf	24,4	;volatile
  1816  0418                     l1220:
  1817                           
  1818                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1819  0418  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0419  1303               	bcf	3,6	;RP1=0, select bank0
  1821  041A  1798               	bsf	24,7	;volatile
  1822  041B                     l1222:
  1823                           
  1824                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1825  041B  1618               	bsf	24,4	;volatile
  1826  041C                     l1224:
  1827                           
  1828                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1829  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1830  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1831  041E  1318               	bcf	24,6	;volatile
  1832  041F                     l1226:
  1833                           
  1834                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1835  041F  1698               	bsf	24,5	;volatile
  1836  0420                     l1228:
  1837                           
  1838                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1839  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0422  1318               	bcf	24,6	;volatile
  1842  0423                     l1230:
  1843                           
  1844                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1845  0423  178B               	bsf	11,7	;volatile
  1846  0424                     l1232:
  1847                           
  1848                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1849  0424  170B               	bsf	11,6	;volatile
  1850  0425                     l1234:
  1851                           
  1852                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1853  0425  120C               	bcf	12,4	;volatile
  1854  0426                     l1236:
  1855                           
  1856                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1857  0426  128C               	bcf	12,5	;volatile
  1858  0427                     l127:
  1859  0427  0008               	return
  1860  0428                     __end_of_config_USART:
  1861                           
  1862                           	psect	text6
  1863  0194                     __ptext6:	
  1864 ;; *************** function _config_ADC *****************
  1865 ;; Defined at:
  1866 ;;		line 15 in file "config_ADC.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  frec            1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  frec            1    5[COMMON] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  1    wreg      void 
  1873 ;; Registers used:
  1874 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       0       0       0       0
  1881 ;;      Locals:         1       0       0       0       0
  1882 ;;      Temps:          2       0       0       0       0
  1883 ;;      Totals:         3       0       0       0       0
  1884 ;;Total ram usage:        3 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_setup
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _config_ADC
  1896  0194                     _config_ADC:
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  1900                           ;config_ADC@frec stored from wreg
  1901  0194  00F5               	movwf	config_ADC@frec
  1902  0195                     l1240:
  1903                           
  1904                           ;config_ADC.c: 16:     switch(frec){
  1905  0195  29E2               	goto	l1308
  1906  0196                     l1242:
  1907                           
  1908                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
  1909  0196  30C3               	movlw	-61
  1910  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0199  059F               	andwf	31,f	;volatile
  1913  019A                     l1244:
  1914                           
  1915                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1916  019A  3021               	movlw	33
  1917  019B  00F3               	movwf	??_config_ADC
  1918  019C                     u1067:
  1919  019C  0BF3               	decfsz	??_config_ADC,f
  1920  019D  299C               	goto	u1067
  1921  019E                     l1246:
  1922                           
  1923                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1924  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1925  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1926  01A0  131F               	bcf	31,6	;volatile
  1927  01A1                     l1248:
  1928                           
  1929                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1930  01A1  139F               	bcf	31,7	;volatile
  1931  01A2                     l1250:
  1932                           
  1933                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1934  01A2  141F               	bsf	31,0	;volatile
  1935  01A3                     l1252:
  1936                           
  1937                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1938  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  1939  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  1940  01A5  139F               	bcf	31,7	;volatile
  1941  01A6                     l1254:
  1942                           
  1943                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1944  01A6  129F               	bcf	31,5	;volatile
  1945  01A7                     l1256:
  1946                           
  1947                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1948  01A7  121F               	bcf	31,4	;volatile
  1949                           
  1950                           ;config_ADC.c: 27:             break;
  1951  01A8  29F8               	goto	l110
  1952  01A9                     l1258:
  1953                           
  1954                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1955  01A9  30C3               	movlw	-61
  1956  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1957  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1958  01AC  059F               	andwf	31,f	;volatile
  1959  01AD                     l1260:
  1960                           
  1961                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1962  01AD  3021               	movlw	33
  1963  01AE  00F3               	movwf	??_config_ADC
  1964  01AF                     u1077:
  1965  01AF  0BF3               	decfsz	??_config_ADC,f
  1966  01B0  29AF               	goto	u1077
  1967  01B1                     l1262:
  1968                           
  1969                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1970  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1971  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1972  01B3  171F               	bsf	31,6	;volatile
  1973  01B4                     l1264:
  1974                           
  1975                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1976  01B4  139F               	bcf	31,7	;volatile
  1977  01B5                     l1266:
  1978                           
  1979                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1980  01B5  141F               	bsf	31,0	;volatile
  1981  01B6                     l1268:
  1982                           
  1983                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1984  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1985  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1986  01B8  139F               	bcf	31,7	;volatile
  1987  01B9                     l1270:
  1988                           
  1989                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1990  01B9  129F               	bcf	31,5	;volatile
  1991  01BA                     l1272:
  1992                           
  1993                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1994  01BA  121F               	bcf	31,4	;volatile
  1995                           
  1996                           ;config_ADC.c: 38:             break;
  1997  01BB  29F8               	goto	l110
  1998  01BC                     l1274:
  1999                           
  2000                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  2001  01BC  30C3               	movlw	-61
  2002  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2003  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2004  01BF  059F               	andwf	31,f	;volatile
  2005  01C0                     l1276:
  2006                           
  2007                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2008  01C0  3021               	movlw	33
  2009  01C1  00F3               	movwf	??_config_ADC
  2010  01C2                     u1087:
  2011  01C2  0BF3               	decfsz	??_config_ADC,f
  2012  01C3  29C2               	goto	u1087
  2013  01C4                     l1278:
  2014                           
  2015                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  2016  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2017  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2018  01C6  131F               	bcf	31,6	;volatile
  2019  01C7                     l1280:
  2020                           
  2021                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  2022  01C7  179F               	bsf	31,7	;volatile
  2023  01C8                     l1282:
  2024                           
  2025                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  2026  01C8  141F               	bsf	31,0	;volatile
  2027  01C9                     l1284:
  2028                           
  2029                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  2030  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  2031  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  2032  01CB  139F               	bcf	31,7	;volatile
  2033  01CC                     l1286:
  2034                           
  2035                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  2036  01CC  129F               	bcf	31,5	;volatile
  2037  01CD                     l1288:
  2038                           
  2039                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  2040  01CD  121F               	bcf	31,4	;volatile
  2041                           
  2042                           ;config_ADC.c: 49:             break;
  2043  01CE  29F8               	goto	l110
  2044  01CF                     l1290:
  2045                           
  2046                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  2047  01CF  30C3               	movlw	-61
  2048  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2049  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2050  01D2  059F               	andwf	31,f	;volatile
  2051  01D3                     l1292:
  2052                           
  2053                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2054  01D3  3021               	movlw	33
  2055  01D4  00F3               	movwf	??_config_ADC
  2056  01D5                     u1097:
  2057  01D5  0BF3               	decfsz	??_config_ADC,f
  2058  01D6  29D5               	goto	u1097
  2059  01D7                     l1294:
  2060                           
  2061                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  2062  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2063  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2064  01D9  171F               	bsf	31,6	;volatile
  2065  01DA                     l1296:
  2066                           
  2067                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  2068  01DA  179F               	bsf	31,7	;volatile
  2069  01DB                     l1298:
  2070                           
  2071                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  2072  01DB  141F               	bsf	31,0	;volatile
  2073  01DC                     l1300:
  2074                           
  2075                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  2076  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  2077  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  2078  01DE  139F               	bcf	31,7	;volatile
  2079  01DF                     l1302:
  2080                           
  2081                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  2082  01DF  129F               	bcf	31,5	;volatile
  2083  01E0                     l1304:
  2084                           
  2085                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  2086  01E0  121F               	bcf	31,4	;volatile
  2087                           
  2088                           ;config_ADC.c: 60:             break;
  2089  01E1  29F8               	goto	l110
  2090  01E2                     l1308:
  2091  01E2  0875               	movf	config_ADC@frec,w
  2092  01E3  00F3               	movwf	??_config_ADC
  2093  01E4  01F4               	clrf	??_config_ADC+1
  2094                           
  2095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2096                           ; Switch size 1, requested type "simple"
  2097                           ; Number of cases is 1, Range of values is 0 to 0
  2098                           ; switch strategies available:
  2099                           ; Name         Instructions Cycles
  2100                           ; simple_byte            4     3 (average)
  2101                           ; direct_byte           11     8 (fixed)
  2102                           ; jumptable            260     6 (fixed)
  2103                           ;	Chosen strategy is simple_byte
  2104  01E5  0874               	movf	??_config_ADC+1,w
  2105  01E6  3A00               	xorlw	0	; case 0
  2106  01E7  1903               	skipnz
  2107  01E8  29EA               	goto	l1912
  2108  01E9  29F8               	goto	l110
  2109  01EA                     l1912:
  2110                           
  2111                           ; Switch size 1, requested type "simple"
  2112                           ; Number of cases is 4, Range of values is 0 to 3
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; simple_byte           13     7 (average)
  2116                           ; direct_byte           20     8 (fixed)
  2117                           ; jumptable            260     6 (fixed)
  2118                           ;	Chosen strategy is simple_byte
  2119  01EA  0873               	movf	??_config_ADC,w
  2120  01EB  3A00               	xorlw	0	; case 0
  2121  01EC  1903               	skipnz
  2122  01ED  2996               	goto	l1242
  2123  01EE  3A01               	xorlw	1	; case 1
  2124  01EF  1903               	skipnz
  2125  01F0  29A9               	goto	l1258
  2126  01F1  3A03               	xorlw	3	; case 2
  2127  01F2  1903               	skipnz
  2128  01F3  29BC               	goto	l1274
  2129  01F4  3A01               	xorlw	1	; case 3
  2130  01F5  1903               	skipnz
  2131  01F6  29CF               	goto	l1290
  2132  01F7  29F8               	goto	l110
  2133  01F8                     l110:
  2134  01F8  0008               	return
  2135  01F9                     __end_of_config_ADC:
  2136                           
  2137                           	psect	text7
  2138  02E5                     __ptext7:	
  2139 ;; *************** function _Lcd_Write_String *****************
  2140 ;; Defined at:
  2141 ;;		line 94 in file "LCD_8b.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  a               2    0[BANK0 ] PTR unsigned char 
  2144 ;;		 -> main@buffer1(20), main@buffer(20), STR_1(17), 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  i               2    5[BANK0 ] int 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       2       0       0       0
  2157 ;;      Locals:         0       2       0       0       0
  2158 ;;      Temps:          0       3       0       0       0
  2159 ;;      Totals:         0       7       0       0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    3
  2163 ;; This function calls:
  2164 ;;		_Lcd_Write_Char
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _Lcd_Write_String
  2172  02E5                     _Lcd_Write_String:
  2173  02E5                     l1768:	
  2174                           ;incstack = 0
  2175                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2176                           
  2177                           
  2178                           ;LCD_8b.c: 95:     int i;;LCD_8b.c: 96:     for (i = 0; a[i] != '\0'; i++)
  2179  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2180  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2181  02E7  01A5               	clrf	Lcd_Write_String@i
  2182  02E8  01A6               	clrf	Lcd_Write_String@i+1
  2183  02E9  2B0E               	goto	l1774
  2184  02EA                     l1770:
  2185                           
  2186                           ;LCD_8b.c: 97:         Lcd_Write_Char(a[i]);
  2187  02EA  0825               	movf	Lcd_Write_String@i,w
  2188  02EB  0720               	addwf	Lcd_Write_String@a,w
  2189  02EC  00A3               	movwf	??_Lcd_Write_String+1
  2190  02ED  0821               	movf	Lcd_Write_String@a+1,w
  2191  02EE  00A2               	movwf	??_Lcd_Write_String
  2192  02EF  1803               	skipnc
  2193  02F0  0AA2               	incf	??_Lcd_Write_String,f
  2194  02F1  1FA5               	btfss	Lcd_Write_String@i,7
  2195  02F2  2AF4               	goto	u930
  2196  02F3  03A2               	decf	??_Lcd_Write_String,f
  2197  02F4                     u930:
  2198  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2199  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2200  02F6  0822               	movf	??_Lcd_Write_String,w
  2201  02F7  00A4               	movwf	??_Lcd_Write_String+2
  2202  02F8  0824               	movf	??_Lcd_Write_String+2,w
  2203  02F9  00FF               	movwf	btemp+1
  2204  02FA  0823               	movf	??_Lcd_Write_String+1,w
  2205  02FB  0084               	movwf	4
  2206  02FC  120A  118A  2367  120A  118A  	fcall	stringtab
  2207  0301  120A  118A  23EF  120A  118A  	fcall	_Lcd_Write_Char
  2208  0306                     l1772:
  2209  0306  3001               	movlw	1
  2210  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0309  07A5               	addwf	Lcd_Write_String@i,f
  2213  030A  1803               	skipnc
  2214  030B  0AA6               	incf	Lcd_Write_String@i+1,f
  2215  030C  3000               	movlw	0
  2216  030D  07A6               	addwf	Lcd_Write_String@i+1,f
  2217  030E                     l1774:
  2218  030E  0825               	movf	Lcd_Write_String@i,w
  2219  030F  0720               	addwf	Lcd_Write_String@a,w
  2220  0310  00A3               	movwf	??_Lcd_Write_String+1
  2221  0311  0821               	movf	Lcd_Write_String@a+1,w
  2222  0312  00A2               	movwf	??_Lcd_Write_String
  2223  0313  1803               	skipnc
  2224  0314  0AA2               	incf	??_Lcd_Write_String,f
  2225  0315  1FA5               	btfss	Lcd_Write_String@i,7
  2226  0316  2B18               	goto	u940
  2227  0317  03A2               	decf	??_Lcd_Write_String,f
  2228  0318                     u940:
  2229  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2231  031A  0822               	movf	??_Lcd_Write_String,w
  2232  031B  00A4               	movwf	??_Lcd_Write_String+2
  2233  031C  0824               	movf	??_Lcd_Write_String+2,w
  2234  031D  00FF               	movwf	btemp+1
  2235  031E  0823               	movf	??_Lcd_Write_String+1,w
  2236  031F  0084               	movwf	4
  2237  0320  120A  118A  2367  120A  118A  	fcall	stringtab
  2238  0325  3A00               	xorlw	0
  2239  0326  1D03               	skipz
  2240  0327  2B29               	goto	u951
  2241  0328  2B2A               	goto	u950
  2242  0329                     u951:
  2243  0329  2AEA               	goto	l1770
  2244  032A                     u950:
  2245  032A                     l160:
  2246  032A  0008               	return
  2247  032B                     __end_of_Lcd_Write_String:
  2248                           
  2249                           	psect	text8
  2250  03EF                     __ptext8:	
  2251 ;; *************** function _Lcd_Write_Char *****************
  2252 ;; Defined at:
  2253 ;;		line 79 in file "LCD_8b.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  a               1    wreg     unsigned char 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  a               1    5[COMMON] unsigned char 
  2258 ;;  y               1    7[COMMON] unsigned char 
  2259 ;;  temp            1    6[COMMON] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       0       0       0
  2270 ;;      Locals:         3       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0
  2272 ;;      Totals:         4       0       0       0       0
  2273 ;;Total ram usage:        4 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    2
  2276 ;; This function calls:
  2277 ;;		_Lcd_Port
  2278 ;; This function is called by:
  2279 ;;		_Lcd_Write_String
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _Lcd_Write_Char
  2285  03EF                     _Lcd_Write_Char:
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2289                           ;Lcd_Write_Char@a stored from wreg
  2290  03EF  00F5               	movwf	Lcd_Write_Char@a
  2291  03F0                     l1324:
  2292                           
  2293                           ;LCD_8b.c: 80:     char temp, y;;LCD_8b.c: 81:     temp = a;
  2294  03F0  0875               	movf	Lcd_Write_Char@a,w
  2295  03F1  00F4               	movwf	??_Lcd_Write_Char
  2296  03F2  0874               	movf	??_Lcd_Write_Char,w
  2297  03F3  00F6               	movwf	Lcd_Write_Char@temp
  2298                           
  2299                           ;LCD_8b.c: 82:     y = temp;
  2300  03F4  0876               	movf	Lcd_Write_Char@temp,w
  2301  03F5  00F4               	movwf	??_Lcd_Write_Char
  2302  03F6  0874               	movf	??_Lcd_Write_Char,w
  2303  03F7  00F7               	movwf	Lcd_Write_Char@y
  2304  03F8                     l1326:
  2305                           
  2306                           ;LCD_8b.c: 83:     PORTEbits.RE0 = 1;
  2307  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2308  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2309  03FA  1409               	bsf	9,0	;volatile
  2310  03FB                     l1328:
  2311                           
  2312                           ;LCD_8b.c: 84:     Lcd_Port(y);
  2313  03FB  0877               	movf	Lcd_Write_Char@y,w
  2314  03FC  120A  118A  244F  120A  118A  	fcall	_Lcd_Port
  2315  0401                     l1330:
  2316                           
  2317                           ;LCD_8b.c: 85:     PORTEbits.RE2 = 1;
  2318  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0403  1509               	bsf	9,2	;volatile
  2321  0404                     l1332:
  2322                           
  2323                           ;LCD_8b.c: 86:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2324  0404  300D               	movlw	13
  2325  0405  00F4               	movwf	??_Lcd_Write_Char
  2326  0406                     u1107:
  2327  0406  0BF4               	decfsz	??_Lcd_Write_Char,f
  2328  0407  2C06               	goto	u1107
  2329  0408                     l1334:
  2330                           
  2331                           ;LCD_8b.c: 87:     PORTEbits.RE2 = 0;
  2332  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2334  040A  1109               	bcf	9,2	;volatile
  2335  040B                     l154:
  2336  040B  0008               	return
  2337  040C                     __end_of_Lcd_Write_Char:
  2338                           
  2339                           	psect	text9
  2340  01F9                     __ptext9:	
  2341 ;; *************** function _Lcd_Set_Cursor *****************
  2342 ;; Defined at:
  2343 ;;		line 43 in file "LCD_8b.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  a               1    wreg     unsigned char 
  2346 ;;  b               1    7[COMMON] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  a               1    2[BANK0 ] unsigned char 
  2349 ;;  temp            1    5[BANK0 ] unsigned char 
  2350 ;;  y               1    4[BANK0 ] unsigned char 
  2351 ;;  z               1    3[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      void 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, pclath, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         1       0       0       0       0
  2362 ;;      Locals:         0       4       0       0       0
  2363 ;;      Temps:          0       2       0       0       0
  2364 ;;      Totals:         1       6       0       0       0
  2365 ;;Total ram usage:        7 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    3
  2368 ;; This function calls:
  2369 ;;		_Lcd_Cmd
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _Lcd_Set_Cursor
  2377  01F9                     _Lcd_Set_Cursor:
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2381                           ;Lcd_Set_Cursor@a stored from wreg
  2382  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2383  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2384  01FB  00A2               	movwf	Lcd_Set_Cursor@a
  2385  01FC                     l1748:
  2386                           
  2387                           ;LCD_8b.c: 44:     char temp, z, y;;LCD_8b.c: 45:     if (a == 1) {
  2388  01FC  0322               	decf	Lcd_Set_Cursor@a,w
  2389  01FD  1D03               	btfss	3,2
  2390  01FE  2A00               	goto	u891
  2391  01FF  2A01               	goto	u890
  2392  0200                     u891:
  2393  0200  2A26               	goto	l1758
  2394  0201                     u890:
  2395  0201                     l1750:
  2396                           
  2397                           ;LCD_8b.c: 46:         temp = 0x80 + b - 1;
  2398  0201  0877               	movf	Lcd_Set_Cursor@b,w
  2399  0202  3E7F               	addlw	127
  2400  0203  00A0               	movwf	??_Lcd_Set_Cursor
  2401  0204  0820               	movf	??_Lcd_Set_Cursor,w
  2402  0205  00A5               	movwf	Lcd_Set_Cursor@temp
  2403                           
  2404                           ;LCD_8b.c: 47:         z = temp >> 4;
  2405  0206  0825               	movf	Lcd_Set_Cursor@temp,w
  2406  0207  00A0               	movwf	??_Lcd_Set_Cursor
  2407  0208  3004               	movlw	4
  2408  0209                     u905:
  2409  0209  1003               	clrc
  2410  020A  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2411  020B  3EFF               	addlw	-1
  2412  020C  1D03               	skipz
  2413  020D  2A09               	goto	u905
  2414  020E  0820               	movf	??_Lcd_Set_Cursor,w
  2415  020F  00A1               	movwf	??_Lcd_Set_Cursor+1
  2416  0210  0821               	movf	??_Lcd_Set_Cursor+1,w
  2417  0211  00A3               	movwf	Lcd_Set_Cursor@z
  2418  0212                     l1752:
  2419                           
  2420                           ;LCD_8b.c: 48:         y = temp & 0x0F;
  2421  0212  0825               	movf	Lcd_Set_Cursor@temp,w
  2422  0213  390F               	andlw	15
  2423  0214  00A0               	movwf	??_Lcd_Set_Cursor
  2424  0215  0820               	movf	??_Lcd_Set_Cursor,w
  2425  0216  00A4               	movwf	Lcd_Set_Cursor@y
  2426  0217                     l1754:
  2427                           
  2428                           ;LCD_8b.c: 49:         Lcd_Cmd(z);
  2429  0217  0823               	movf	Lcd_Set_Cursor@z,w
  2430  0218  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2431  021D                     l1756:
  2432                           
  2433                           ;LCD_8b.c: 51:         Lcd_Cmd(y);
  2434  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2435  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2436  021F  0824               	movf	Lcd_Set_Cursor@y,w
  2437  0220  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2438                           
  2439                           ;LCD_8b.c: 52:     } else if (a == 2) {
  2440  0225  2A50               	goto	l148
  2441  0226                     l1758:
  2442  0226  3002               	movlw	2
  2443  0227  0622               	xorwf	Lcd_Set_Cursor@a,w
  2444  0228  1D03               	btfss	3,2
  2445  0229  2A2B               	goto	u911
  2446  022A  2A2C               	goto	u910
  2447  022B                     u911:
  2448  022B  2A50               	goto	l148
  2449  022C                     u910:
  2450  022C                     l1760:
  2451                           
  2452                           ;LCD_8b.c: 53:         temp = 0xC0 + b - 1;
  2453  022C  0877               	movf	Lcd_Set_Cursor@b,w
  2454  022D  3EBF               	addlw	191
  2455  022E  00A0               	movwf	??_Lcd_Set_Cursor
  2456  022F  0820               	movf	??_Lcd_Set_Cursor,w
  2457  0230  00A5               	movwf	Lcd_Set_Cursor@temp
  2458                           
  2459                           ;LCD_8b.c: 54:         z = temp >> 4;
  2460  0231  0825               	movf	Lcd_Set_Cursor@temp,w
  2461  0232  00A0               	movwf	??_Lcd_Set_Cursor
  2462  0233  3004               	movlw	4
  2463  0234                     u925:
  2464  0234  1003               	clrc
  2465  0235  0CA0               	rrf	??_Lcd_Set_Cursor,f
  2466  0236  3EFF               	addlw	-1
  2467  0237  1D03               	skipz
  2468  0238  2A34               	goto	u925
  2469  0239  0820               	movf	??_Lcd_Set_Cursor,w
  2470  023A  00A1               	movwf	??_Lcd_Set_Cursor+1
  2471  023B  0821               	movf	??_Lcd_Set_Cursor+1,w
  2472  023C  00A3               	movwf	Lcd_Set_Cursor@z
  2473  023D                     l1762:
  2474                           
  2475                           ;LCD_8b.c: 55:         y = temp & 0xF0;
  2476  023D  0825               	movf	Lcd_Set_Cursor@temp,w
  2477  023E  39F0               	andlw	240
  2478  023F  00A0               	movwf	??_Lcd_Set_Cursor
  2479  0240  0820               	movf	??_Lcd_Set_Cursor,w
  2480  0241  00A4               	movwf	Lcd_Set_Cursor@y
  2481  0242                     l1764:
  2482                           
  2483                           ;LCD_8b.c: 56:         Lcd_Cmd(z);
  2484  0242  0823               	movf	Lcd_Set_Cursor@z,w
  2485  0243  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2486  0248                     l1766:
  2487                           
  2488                           ;LCD_8b.c: 57:         Lcd_Cmd(y);
  2489  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2491  024A  0824               	movf	Lcd_Set_Cursor@y,w
  2492  024B  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2493  0250                     l148:
  2494  0250  0008               	return
  2495  0251                     __end_of_Lcd_Set_Cursor:
  2496                           
  2497                           	psect	text10
  2498  0251                     __ptext10:	
  2499 ;; *************** function _Lcd_Init *****************
  2500 ;; Defined at:
  2501 ;;		line 61 in file "LCD_8b.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0
  2517 ;;      Temps:          0       2       0       0       0
  2518 ;;      Totals:         0       2       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    3
  2522 ;; This function calls:
  2523 ;;		_Lcd_Cmd
  2524 ;;		_Lcd_Port
  2525 ;; This function is called by:
  2526 ;;		_main
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _Lcd_Init
  2532  0251                     _Lcd_Init:
  2533  0251                     l1738:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2536                           
  2537                           
  2538                           ;LCD_8b.c: 62:     Lcd_Port(0x00);
  2539  0251  3000               	movlw	0
  2540  0252  120A  118A  244F  120A  118A  	fcall	_Lcd_Port
  2541  0257                     l1740:
  2542                           
  2543                           ;LCD_8b.c: 63:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2544  0257  301A               	movlw	26
  2545  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2547  025A  00A1               	movwf	??_Lcd_Init+1
  2548  025B  30F7               	movlw	247
  2549  025C  00A0               	movwf	??_Lcd_Init
  2550  025D                     u1117:
  2551  025D  0BA0               	decfsz	??_Lcd_Init,f
  2552  025E  2A5D               	goto	u1117
  2553  025F  0BA1               	decfsz	??_Lcd_Init+1,f
  2554  0260  2A5D               	goto	u1117
  2555  0261  2A62               	nop2
  2556  0262                     l1742:
  2557                           
  2558                           ;LCD_8b.c: 64:     Lcd_Cmd(0x30);
  2559  0262  3030               	movlw	48
  2560  0263  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2561                           
  2562                           ;LCD_8b.c: 65:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2563  0268  3007               	movlw	7
  2564  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2565  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2566  026B  00A1               	movwf	??_Lcd_Init+1
  2567  026C  307C               	movlw	124
  2568  026D  00A0               	movwf	??_Lcd_Init
  2569  026E                     u1127:
  2570  026E  0BA0               	decfsz	??_Lcd_Init,f
  2571  026F  2A6E               	goto	u1127
  2572  0270  0BA1               	decfsz	??_Lcd_Init+1,f
  2573  0271  2A6E               	goto	u1127
  2574  0272  0000               	nop
  2575  0273                     l1744:
  2576                           
  2577                           ;LCD_8b.c: 66:     Lcd_Cmd(0x30);
  2578  0273  3030               	movlw	48
  2579  0274  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2580  0279                     l1746:
  2581                           
  2582                           ;LCD_8b.c: 67:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2583  0279  3041               	movlw	65
  2584  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2585  027B  1303               	bcf	3,6	;RP1=0, select bank0
  2586  027C  00A0               	movwf	??_Lcd_Init
  2587  027D                     u1137:
  2588  027D  0BA0               	decfsz	??_Lcd_Init,f
  2589  027E  2A7D               	goto	u1137
  2590  027F  2A80               	nop2
  2591                           
  2592                           ;LCD_8b.c: 68:     Lcd_Cmd(0x30);
  2593  0280  3030               	movlw	48
  2594  0281  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2595                           
  2596                           ;LCD_8b.c: 70:     Lcd_Cmd(0x3C);
  2597  0286  303C               	movlw	60
  2598  0287  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2599                           
  2600                           ;LCD_8b.c: 72:     Lcd_Cmd(0x08);
  2601  028C  3008               	movlw	8
  2602  028D  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2603                           
  2604                           ;LCD_8b.c: 74:     Lcd_Cmd(0x01);
  2605  0292  3001               	movlw	1
  2606  0293  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2607                           
  2608                           ;LCD_8b.c: 76:     Lcd_Cmd(0x06);
  2609  0298  3006               	movlw	6
  2610  0299  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2611  029E                     l151:
  2612  029E  0008               	return
  2613  029F                     __end_of_Lcd_Init:
  2614                           
  2615                           	psect	text11
  2616  0442                     __ptext11:	
  2617 ;; *************** function _Lcd_Clear *****************
  2618 ;; Defined at:
  2619 ;;		line 25 in file "LCD_8b.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    3
  2640 ;; This function calls:
  2641 ;;		_Lcd_Cmd
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _Lcd_Clear
  2649  0442                     _Lcd_Clear:
  2650  0442                     l1436:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2653                           
  2654                           
  2655                           ;LCD_8b.c: 26:     Lcd_Cmd(0);
  2656  0442  3000               	movlw	0
  2657  0443  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2658                           
  2659                           ;LCD_8b.c: 27:     Lcd_Cmd(1);
  2660  0448  3001               	movlw	1
  2661  0449  120A  118A  2428  120A  118A  	fcall	_Lcd_Cmd
  2662  044E                     l142:
  2663  044E  0008               	return
  2664  044F                     __end_of_Lcd_Clear:
  2665                           
  2666                           	psect	text12
  2667  0428                     __ptext12:	
  2668 ;; *************** function _Lcd_Cmd *****************
  2669 ;; Defined at:
  2670 ;;		line 17 in file "LCD_8b.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  a               1    wreg     unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  a               1    6[COMMON] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0
  2686 ;;      Temps:          2       0       0       0       0
  2687 ;;      Totals:         3       0       0       0       0
  2688 ;;Total ram usage:        3 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    2
  2691 ;; This function calls:
  2692 ;;		_Lcd_Port
  2693 ;; This function is called by:
  2694 ;;		_Lcd_Clear
  2695 ;;		_Lcd_Set_Cursor
  2696 ;;		_Lcd_Init
  2697 ;;		_Lcd_Shift_Right
  2698 ;;		_Lcd_Shift_Left
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _Lcd_Cmd
  2704  0428                     _Lcd_Cmd:
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2708                           ;Lcd_Cmd@a stored from wreg
  2709  0428  00F6               	movwf	Lcd_Cmd@a
  2710  0429                     l1314:
  2711                           
  2712                           ;LCD_8b.c: 18:     PORTEbits.RE0 = 0;
  2713  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2714  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2715  042B  1009               	bcf	9,0	;volatile
  2716  042C                     l1316:
  2717                           
  2718                           ;LCD_8b.c: 19:     Lcd_Port(a);
  2719  042C  0876               	movf	Lcd_Cmd@a,w
  2720  042D  120A  118A  244F  120A  118A  	fcall	_Lcd_Port
  2721  0432                     l1318:
  2722                           
  2723                           ;LCD_8b.c: 20:     PORTEbits.RE2 = 1;
  2724  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0434  1509               	bsf	9,2	;volatile
  2727  0435                     l1320:
  2728                           
  2729                           ;LCD_8b.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2730  0435  3006               	movlw	6
  2731  0436  00F5               	movwf	??_Lcd_Cmd+1
  2732  0437  3030               	movlw	48
  2733  0438  00F4               	movwf	??_Lcd_Cmd
  2734  0439                     u1147:
  2735  0439  0BF4               	decfsz	??_Lcd_Cmd,f
  2736  043A  2C39               	goto	u1147
  2737  043B  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2738  043C  2C39               	goto	u1147
  2739  043D  0000               	nop
  2740  043E                     l1322:
  2741                           
  2742                           ;LCD_8b.c: 22:     PORTEbits.RE2 = 0;
  2743  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2744  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0440  1109               	bcf	9,2	;volatile
  2746  0441                     l139:
  2747  0441  0008               	return
  2748  0442                     __end_of_Lcd_Cmd:
  2749                           
  2750                           	psect	text13
  2751  044F                     __ptext13:	
  2752 ;; *************** function _Lcd_Port *****************
  2753 ;; Defined at:
  2754 ;;		line 12 in file "LCD_8b.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;  a               1    wreg     unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  a               1    3[COMMON] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         1       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         1       0       0       0       0
  2772 ;;Total ram usage:        1 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_Lcd_Cmd
  2779 ;;		_Lcd_Init
  2780 ;;		_Lcd_Write_Char
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _Lcd_Port
  2786  044F                     _Lcd_Port:
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _Lcd_Port: [wreg]
  2790                           ;Lcd_Port@a stored from wreg
  2791  044F  00F3               	movwf	Lcd_Port@a
  2792  0450                     l1208:
  2793                           
  2794                           ;LCD_8b.c: 13:     PORTD = a;
  2795  0450  0873               	movf	Lcd_Port@a,w
  2796  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0453  0088               	movwf	8	;volatile
  2799  0454                     l136:
  2800  0454  0008               	return
  2801  0455                     __end_of_Lcd_Port:
  2802                           
  2803                           	psect	text14
  2804  039B                     __ptext14:	
  2805 ;; *************** function _isr *****************
  2806 ;; Defined at:
  2807 ;;		line 79 in file "main_02.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          3       0       0       0       0
  2824 ;;      Totals:         3       0       0       0       0
  2825 ;;Total ram usage:        3 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		Interrupt level 1
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           
  2835                           ;psect for function _isr
  2836  039B                     _isr:
  2837  039B                     i1l1534:
  2838  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2839  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2840  039D  1F0C               	btfss	12,6	;volatile
  2841  039E  2BA0               	goto	u59_21
  2842  039F  2BA1               	goto	u59_20
  2843  03A0                     u59_21:
  2844  03A0  2BC2               	goto	i1l1548
  2845  03A1                     u59_20:
  2846  03A1                     i1l1536:
  2847  03A1  0C1F               	rrf	31,w	;volatile
  2848  03A2  00F0               	movwf	??_isr
  2849  03A3  0C70               	rrf	??_isr,w
  2850  03A4  390F               	andlw	15
  2851  03A5  3A00               	xorlw	0
  2852  03A6  1D03               	skipz
  2853  03A7  2BA9               	goto	u60_21
  2854  03A8  2BAA               	goto	u60_20
  2855  03A9                     u60_21:
  2856  03A9  2BB3               	goto	i1l1542
  2857  03AA                     u60_20:
  2858  03AA                     i1l1538:
  2859  03AA  081F               	movf	31,w	;volatile
  2860  03AB  39C3               	andlw	-61
  2861  03AC  3804               	iorlw	4
  2862  03AD  009F               	movwf	31	;volatile
  2863  03AE                     i1l1540:
  2864  03AE  081E               	movf	30,w	;volatile
  2865  03AF  00F0               	movwf	??_isr
  2866  03B0  0870               	movf	??_isr,w
  2867  03B1  00E6               	movwf	_voltaje1
  2868  03B2  2BC2               	goto	i1l1548
  2869  03B3                     i1l1542:
  2870  03B3  0C1F               	rrf	31,w	;volatile
  2871  03B4  00F0               	movwf	??_isr
  2872  03B5  0C70               	rrf	??_isr,w
  2873  03B6  390F               	andlw	15
  2874  03B7  3A01               	xorlw	1
  2875  03B8  1D03               	skipz
  2876  03B9  2BBB               	goto	u61_21
  2877  03BA  2BBC               	goto	u61_20
  2878  03BB                     u61_21:
  2879  03BB  2BC2               	goto	i1l1548
  2880  03BC                     u61_20:
  2881  03BC                     i1l1544:
  2882  03BC  30C3               	movlw	-61
  2883  03BD  059F               	andwf	31,f	;volatile
  2884  03BE                     i1l1546:
  2885  03BE  081E               	movf	30,w	;volatile
  2886  03BF  00F0               	movwf	??_isr
  2887  03C0  0870               	movf	??_isr,w
  2888  03C1  00E5               	movwf	_voltaje2
  2889  03C2                     i1l1548:
  2890  03C2  130C               	bcf	12,6	;volatile
  2891  03C3                     i1l77:
  2892  03C3  0872               	movf	??_isr+2,w
  2893  03C4  008A               	movwf	10
  2894  03C5  0E71               	swapf	??_isr+1,w
  2895  03C6  0083               	movwf	3
  2896  03C7  0EFE               	swapf	btemp,f
  2897  03C8  0E7E               	swapf	btemp,w
  2898  03C9  0009               	retfie
  2899  03CA                     __end_of_isr:
  2900  007E                     btemp	set	126	;btemp
  2901  007E                     wtemp0	set	126
  2902                           
  2903                           	psect	intentry
  2904  0004                     __pintentry:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _isr: [wreg+status,2+status,0]
  2907                           
  2908  0004                     interrupt_function:
  2909  007E                     saved_w	set	btemp
  2910  0004  00FE               	movwf	btemp
  2911  0005  0E03               	swapf	3,w
  2912  0006  00F1               	movwf	??_isr+1
  2913  0007  080A               	movf	10,w
  2914  0008  00F2               	movwf	??_isr+2
  2915  0009  120A  118A  2B9B   	ljmp	_isr
  2916                           
  2917                           	psect	config
  2918                           
  2919                           ;Config register CONFIG1 @ 0x2007
  2920                           ;	Oscillator Selection bits
  2921                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2922                           ;	Watchdog Timer Enable bit
  2923                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2924                           ;	Power-up Timer Enable bit
  2925                           ;	PWRTE = OFF, PWRT disabled
  2926                           ;	RE3/MCLR pin function select bit
  2927                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2928                           ;	Code Protection bit
  2929                           ;	CP = OFF, Program memory code protection is disabled
  2930                           ;	Data Code Protection bit
  2931                           ;	CPD = OFF, Data memory code protection is disabled
  2932                           ;	Brown Out Reset Selection bits
  2933                           ;	BOREN = OFF, BOR disabled
  2934                           ;	Internal External Switchover bit
  2935                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2936                           ;	Fail-Safe Clock Monitor Enabled bit
  2937                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2938                           ;	Low Voltage Programming Enable bit
  2939                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2940                           ;	In-Circuit Debugger Mode bit
  2941                           ;	DEBUG = 0x1, unprogrammed default
  2942  2007                     	org	8199
  2943  2007  20D4               	dw	8404
  2944                           
  2945                           ;Config register CONFIG2 @ 0x2008
  2946                           ;	Brown-out Reset Selection bit
  2947                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2948                           ;	Flash Program Memory Self Write Enable bits
  2949                           ;	WRT = OFF, Write protection off
  2950  2008                     	org	8200
  2951  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     67      73
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[3]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer1(BANK0[20]), main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer1(BANK0[20]), main@buffer(BANK0[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_config_ADC
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    3106
                                             22 BANK0     45    45      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1680
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
                       _config_USART
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     490
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _config_ADC
     _config_USART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      54       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     43      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      54      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 18:44:20 2021

                        pc 0002                         l95 03EE                         fsr 0004  
                      l110 01F8                        l142 044E                        l151 029E  
                      l127 0427                        l136 0454                        l160 032A  
                      l154 040B                        l139 0441                        l148 0250  
                      l276 0107                        l552 02E4                        l562 0366  
                      u410 0345                        u411 0344                        u420 034F  
                      u421 034E                        u405 0337                        u440 0362  
                      u441 0361                        u425 034B                        u435 0356  
                      u390 0333                        u391 0332                        u820 02A9  
                      u821 02A8                        u910 022C                        u911 022B  
                      u840 02BB                        u905 0209                        u841 02BA  
                      u930 02F4                        u835 02AD                        u940 0318  
                      u860 02CC                        u925 0234                        u861 02CB  
                      u950 032A                        u951 0329                        u855 02BC  
                      u880 02E0                        u960 002C                        u881 02DF  
                      u865 02C8                        u961 002B                        u890 0201  
                      u970 0066                        u891 0200                        u875 02D4  
                      u971 0065                        u980 008C                        u981 008B  
                      u990 0097                        u991 0096                        u985 0088  
                      _isr 039B                        fsr0 0004                        indf 0000  
              main@buffer1 004D                       l1210 040C                       l1300 01DC  
                     l1220 0418                       l1212 0410                       l1302 01DF  
                     l1230 0423                       l1222 041B                       l1214 0411  
                     l1208 0450                       l1320 0435                       l1304 01E0  
                     l1240 0195                       l1232 0424                       l1224 041C  
                     l1216 0414                       l1400 03D7                       l1322 043E  
                     l1314 0429                       l1330 0401                       l1250 01A2  
                     l1242 0196                       l1234 0425                       l1226 041F  
                     l1218 0417                       l1410 03DE                       l1402 03D8  
                     l1316 042C                       l1332 0404                       l1324 03F0  
                     l1260 01AD                       l1252 01A3                       l1244 019A  
                     l1308 01E2                       l1236 0426                       l1228 0420  
                     l1420 03E3                       l1412 03DF                       l1404 03D9  
                     l1318 0432                       l1334 0408                       l1326 03F8  
                     l1270 01B9                       l1262 01B1                       l1254 01A6  
                     l1246 019E                       l1422 03E8                       l1414 03E0  
                     l1406 03DC                       l1328 03FB                       l1280 01C7  
                     l1272 01BA                       l1264 01B4                       l1256 01A7  
                     l1248 01A1                       l1416 03E1                       l1408 03DD  
                     l1290 01CF                       l1282 01C8                       l1274 01BC  
                     l1266 01B5                       l1258 01A9                       l1418 03E2  
                     l1370 0341                       l1362 032B                       l1436 0442  
                     l1292 01D3                       l1284 01C9                       l1276 01C0  
                     l1268 01B6                       l1372 0345                       l1364 0333  
                     l1380 0362                       l1294 01D7                       l1286 01CC  
                     l1278 01C4                       l1390 03D2                       l1374 034F  
                     l1366 0336                       l1296 01DA                       l1288 01CD  
                     l1392 03D3                       l1384 03CA                       l1720 02B3  
                     l1712 029F                       l1376 0355                       l1368 033D  
                     l1800 006F                       l1298 01DB                       l1394 03D4  
                     l1386 03CE                       l1730 02D3                       l1722 02B7  
                     l1714 02A3                       l1378 035C                       l1810 008D  
                     l1740 0257                       l1396 03D5                       l1388 03D1  
                     l1732 02DA                       l1724 02BB                       l1716 02A9  
                     l1820 00AD                       l1812 0097                       l1742 0262  
                     l1750 0201                       l1398 03D6                       l1726 02CC  
                     l1718 02AC                       l1734 02E0                       l1822 00DD  
                     l1814 009D                       l1806 0071                       l1830 0103  
                     l1910 004B                       l1744 0273                       l1760 022C  
                     l1752 0212                       l1912 01EA                       l1728 02D2  
                     l1824 00E4                       l1816 00A4                       l1840 010D  
                     l1746 0279                       l1738 0251                       l1762 023D  
                     l1754 0217                       l1770 02EA                       l1826 00E8  
                     l1818 00A8                       l1850 012A                       l1842 0112  
                     l1764 0242                       l1756 021D                       l1748 01FC  
                     l1772 0306                       l1780 002C                       l1828 00F1  
                     l1860 0167                       l1852 012A                       l1844 0117  
                     l1766 0248                       l1758 0226                       l1774 030E  
                     l1790 0056                       l1782 0033                       l1862 0172  
                     l1854 013D                       l1846 011F                       l1838 0108  
                     l1768 02E5                       l1792 005E                       l1784 0038  
                     l1776 0021                       l1864 0180                       l1856 0150  
                     l1848 012A                       l1794 0062                       l1778 0026  
                     l1866 0186                       l1858 015C                       l1796 0066  
                     l1788 0039                       l1868 018D                       l1798 006A  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0381  
                     STR_2 0392                       STR_3 0398                       u1000 009D  
                     u1001 009C                       u1010 00F1                       u1011 00F0  
                     u1020 0103                       u1021 0102                       u1030 0186  
                     u1031 0185                       u1107 0406                       u1117 025D  
                     u1127 026E                       u1047 017A                       u1137 027D  
                     u1057 018A                       u1147 0439                       u1067 019C  
                     u1077 01AF                       u1087 01C2                       u1097 01D5  
           ??_config_USART 0073                       i1l77 03C3          ?_Lcd_Write_String 0020  
                     _main 0108                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0022            __end_of_Lcd_Cmd 0442                      ??_isr 0070  
                    ?_main 0070             config_ADC@frec 0075                      _ANSEL 0188  
          __end_of___lwdiv 02E5            __end_of___lwmod 0367                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u60_20 03AA  
                    u60_21 03A9                      u61_20 03BC                      u61_21 03BB  
  __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088                      _TRISE 0089  
                    u59_20 03A1                      u59_21 03A0            __end_of_dpowers 0381  
                    _setup 03CA                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0108           __end_of_Lcd_Init 029F  
         __end_of_Lcd_Port 0455            __initialization 000F               __end_of_main 0194  
                   ??_main 0036         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
                   ?_setup 0070                     i1l1540 03AE                     i1l1542 03B3  
                   i1l1534 039B                     i1l1544 03BC                     i1l1536 03A1  
                   i1l1546 03BE                     i1l1538 03AA                     i1l1548 03C2  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001D  
                ??___lwdiv 0077                  ??___lwmod 0027       __end_of_config_USART 0428  
                   saved_w 007E                  ??_sprintf 002C            Lcd_Set_Cursor@a 0022  
          Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023  
  __end_of__initialization 001A          __end_of_Lcd_Clear 044F             __pcstackCOMMON 0070  
            __end_of_setup 03EF             _Lcd_Set_Cursor 01F9                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0076                 __pbssBANK0 0061  
               __pmaintext 0108                 __pintentry 0004  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 0251                 _config_ADC 0194                 ??_Lcd_Init 0020  
               ??_Lcd_Port 0073                 __stringtab 0367             _Lcd_Write_Char 03EF  
                  _Lcd_Cmd 0428      __size_of_config_USART 001C                    ___lwdiv 029F  
                  ___lwmod 032B                    _decenas 0062            ?_Lcd_Set_Cursor 0077  
                  __ptext1 001E                    __ptext2 032B                    __ptext3 029F  
                  __ptext4 03CA                    __ptext5 040C                    __ptext6 0194  
                  __ptext7 02E5                    __ptext8 03EF                    __ptext9 01F9  
                  _dpowers 0377               __size_of_isr 002F                    _residuo 0078  
                  _sprintf 001E     __end_of_Lcd_Write_Char 040C       end_of_initialization 001A  
             _config_USART 040C                  _RCSTAbits 0018                  Lcd_Port@a 0073  
                _PORTEbits 0009                ?_config_ADC 0070                  _TRISAbits 0085  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020          Lcd_Write_String@i 0025  
               main@buffer 0039                  _TXSTAbits 0098                  _Lcd_Clear 0442  
         _Lcd_Write_String 02E5                _BAUDCTLbits 0187        start_initialization 000F  
              __end_of_isr 03CA          __size_of_Lcd_Init 004E          __size_of_Lcd_Port 0006  
      __size_of_config_ADC 0065                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0075  
          Lcd_Write_Char@y 0077                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070                sprintf@flag 0030  
              sprintf@prec 0031           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0020  
                 ?___lwdiv 0073                   ?___lwmod 0023                  _dividendo 0064  
                __pstrings 0367           ___lwdiv@quotient 0021                   ?_sprintf 0029  
           __size_of_setup 0025          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 0376                 _ADCON1bits 009F  
             ??_config_ADC 0073           ??_Lcd_Write_Char 0074                  _voltaje_b 007A  
                _voltaje_c 0079                   _Lcd_Init 0251                   _Lcd_Port 044F  
 __end_of_Lcd_Write_String 032B           __size_of_Lcd_Cmd 001A         __end_of_config_ADC 01F9  
         __size_of___lwdiv 0046           __size_of___lwmod 003C         __end_of__stringtab 0377  
               sprintf@val 0032            ___lwdiv@divisor 0073                   _centenas 0063  
          ___lwdiv@counter 0020                   __ptext10 0251                   __ptext11 0442  
                 __ptext12 0428                   __ptext13 044F                   __ptext14 039B  
         __size_of_sprintf 00EA              __size_of_main 008C                   _unidades 0061  
                 _voltaje1 0066                   _voltaje2 0065                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0076                   intlevel1 0000                  sprintf@ap 002F  
                sprintf@sp 0034           ___lwmod@dividend 0025                  stringcode 0371  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0025                   sprintf@c 0035  
                 sprintf@f 0029            ___lwmod@divisor 0023            ___lwmod@counter 0028  
                 stringdir 0371                   stringtab 0367              ?_config_USART 0070  
