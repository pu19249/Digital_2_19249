Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Lab_02.X.production.sym \
  --cmf=dist/default/production\Lab_02.X.production.cmf -z -Q16F887 \
  -oC:\Users\jpu20\AppData\Local\Temp\s1k4.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Lab_02.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\jpu20\AppData\Local\Temp\s1k4.o \
  dist/default/production\Lab_02.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jpu20\AppData\Local\Temp\s1k4.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Lab_02.X.production.o
                cinit                                 F        F       10        8       0
                functab                              1F       1F        9       3E       0
                intentry                              4        4        8        8       0
                config                             2007     2007        2        0       4
                text18                              4D5      4D5       2F      6CE       0
                text17                              5D7      5D7        6      6CE       0
                text16                              59F      59F       1A      6CE       0
                text15                              5B9      5B9        D      6CE       0
                text14                              3BF      3BF       4E      6CE       0
                text13                              367      367       58      6CE       0
                text12                              54C      54C       1D      6CE       0
                text11                              453      453       46      6CE       0
                text10                              40D      40D       46      6CE       0
                text9                               499      499       3C      6CE       0
                text8                               5C6      5C6        9      6CE       0
                text7                                28       28      169       50       0
                text6                               585      585       1A      6CE       0
                text5                               23A      23A       6D       50       0
                text4                               2A7      2A7       65       50       0
                text3                               569      569       1C      6CE       0
                text2                               504      504       25      6CE       0
                text1                               529      529       23      6CE       0
                maintext                            191      191       A9       50       0
                cstackBANK0                          50       50       1F       20       1
                cstackCOMMON                         70       70        8       70       1
                cstackBANK1                          A0       A0        3       A0       1
                clrtext                             5CF      5CF        8      6CE       0
                bssBANK0                             20       20       30       20       1
                bssCOMMON                            78       78        3       70       1
                strings                             30C      30C       5B      618       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       10         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text18                              4D5      4D5       2F         0
                text17                              5D7      5D7        6         0
                text16                              59F      59F       1A         0
                text15                              5B9      5B9        D         0
                text14                              3BF      3BF       4E         0
                text13                              367      367       58         0
                text12                              54C      54C       1D         0
                text11                              453      453       46         0
                text10                              40D      40D       46         0
                text9                               499      499       3C         0
                text8                               5C6      5C6        9         0
                text7                                28       28      169         0
                text6                               585      585       1A         0
                text5                               23A      23A       6D         0
                text4                               2A7      2A7       65         0
                text3                               569      569       1C         0
                text2                               504      504       25         0
                text1                               529      529       23         0
                maintext                            191      191       A9         0
                clrtext                             5CF      5CF        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             30C      30C       5B         0

        CLASS   CONST          

        CLASS   ENTRY          
                functab                              1F       1F        9         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        8         1
                bssCOMMON                            78       78        3         1

        CLASS   BANK0          
                cstackBANK0                          50       50       1F         1
                bssBANK0                             20       20       30         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0        3         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00001B  00001F         8       0  CODE        2
                bssBANK0                       000020  00004F  00006F        20       1  BANK0       1
                functab                        00001F  000009  000028        3E       0  ENTRY       2
                text7                          000028  0002E4  00030C        50       0  CODE        2
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                cstackBANK1                    0000A0  000003  0000A3        A0       1  BANK1       1
                strings                        00030C  00005B  000367       618       0  STRING      2
                text13                         000367  000276  0005DD       6CE       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00A3-00EF             4D           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         05DD-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         05DD-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         05DD-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00A3-00EF             4D
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         05DD-1FFF           1A23
        STRING           0003-0003              1           2
                         05DD-1FFF            100

                                  Symbol Table

?___lwdiv                  cstackCOMMON 0073
?___lwmod                  cstackBANK0  0053
?__doprnt                  cstackBANK0  0059
?_printf                   cstackBANK0  0066
?_sprintf                  cstackBANK0  0066
Lcd_Cmd@a                  cstackCOMMON 0076
Lcd_Port@a                 cstackCOMMON 0073
Lcd_Set_Cursor@a           cstackBANK0  0052
Lcd_Set_Cursor@b           cstackCOMMON 0077
Lcd_Set_Cursor@temp        cstackBANK0  0055
Lcd_Set_Cursor@y           cstackBANK0  0054
Lcd_Set_Cursor@z           cstackBANK0  0053
Lcd_Write_Char@a           cstackCOMMON 0075
Lcd_Write_Char@temp        cstackCOMMON 0076
Lcd_Write_Char@y           cstackCOMMON 0077
Lcd_Write_String@a         cstackBANK0  0050
Lcd_Write_String@i         cstackBANK0  0055
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADIF                      (abs)        0066
_ADRESH                    (abs)        001E
_ANSEL                     (abs)        0188
_BAUDCTLbits               (abs)        0187
_INTCONbits                (abs)        000B
_Lcd_Clear                 text15       05B9
_Lcd_Cmd                   text16       059F
_Lcd_Init                  text14       03BF
_Lcd_Port                  text17       05D7
_Lcd_Set_Cursor            text13       0367
_Lcd_Write_Char            text12       054C
_Lcd_Write_String          text11       0453
_OSCCONbits                (abs)        008F
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTC                     (abs)        0007
_PORTD                     (abs)        0008
_PORTE                     (abs)        0009
_PORTEbits                 (abs)        0009
_RCSTAbits                 (abs)        0018
_SPBRG                     (abs)        0099
_SPBRGH                    (abs)        009A
_TRISAbits                 (abs)        0085
_TRISD                     (abs)        0088
_TRISE                     (abs)        0089
_TXIF                      (abs)        0064
_TXREG                     (abs)        0019
_TXSTAbits                 (abs)        0098
__Habs1                    abs1         0050
__Hbank0                   bank0        0050
__Hbank1                   bank1        0050
__Hbank2                   bank2        0050
__Hbank3                   bank3        0050
__HbssBANK0                bssBANK0     0050
__HbssCOMMON               bssCOMMON    0050
__Hcinit                   cinit        001F
__Hclrtext                 clrtext      0050
__Hcode                    code         0050
__Hcommon                  common       0050
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0050
__HcstackBANK1             cstackBANK1  0050
__HcstackCOMMON            cstackCOMMON 0050
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     000F
__Hfunctab                 functab      0028
__Hinit                    init         000C
__Hintentry                intentry     000C
__Hmaintext                maintext     0050
__Hpowerup                 powerup      0000
__Hram                     ram          0050
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0050
__Hsfr1                    sfr1         0050
__Hsfr2                    sfr2         0050
__Hsfr3                    sfr3         0050
__Hspace_0                 (abs)        05DD
__Hspace_1                 (abs)        00A3
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0050
__Htext                    text         0050
__Labs1                    abs1         0050
__Lbank0                   bank0        0050
__Lbank1                   bank1        0050
__Lbank2                   bank2        0050
__Lbank3                   bank3        0050
__LbssBANK0                bssBANK0     0050
__LbssCOMMON               bssCOMMON    0050
__Lcinit                   cinit        000F
__Lclrtext                 clrtext      0050
__Lcode                    code         0050
__Lcommon                  common       0050
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0050
__LcstackBANK1             cstackBANK1  0050
__LcstackCOMMON            cstackCOMMON 0050
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000C
__Lfunctab                 functab      001F
__Linit                    init         000C
__Lintentry                intentry     0004
__Lmaintext                maintext     0050
__Lpowerup                 powerup      0000
__Lram                     ram          0050
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0050
__Lsfr1                    sfr1         0050
__Lsfr2                    sfr2         0050
__Lsfr3                    sfr3         0050
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0050
__Ltext                    text         0050
__S0                       (abs)        05DD
__S1                       (abs)        00A3
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text10       040D
___lwdiv@counter           cstackBANK0  0050
___lwdiv@dividend          cstackCOMMON 0075
___lwdiv@divisor           cstackCOMMON 0073
___lwdiv@quotient          cstackBANK0  0051
___lwmod                   text9        0499
___lwmod@counter           cstackBANK0  0058
___lwmod@dividend          cstackBANK0  0055
___lwmod@divisor           cstackBANK0  0053
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
__doprnt                   text7        0028
__doprnt@ap                cstackBANK0  005B
__doprnt@c                 cstackBANK0  0064
__doprnt@f                 cstackBANK0  0059
__doprnt@flag              cstackBANK0  0060
__doprnt@pb                cstackBANK0  0065
__doprnt@prec              cstackBANK0  0061
__doprnt@val               cstackBANK0  0062
__end_of_Lcd_Clear         text15       05C6
__end_of_Lcd_Cmd           text16       05B9
__end_of_Lcd_Init          text14       040D
__end_of_Lcd_Port          text17       05DD
__end_of_Lcd_Set_Cursor    text13       03BF
__end_of_Lcd_Write_Char    text12       0569
__end_of_Lcd_Write_String  text11       0499
__end_of___lwdiv           text10       0453
__end_of___lwmod           text9        04D5
__end_of__doprnt           text7        0191
__end_of__fptable          functab      0028
__end_of__initialization   cinit        001B
__end_of__stringtab        strings      031C
__end_of_config_ADC        text4        030C
__end_of_config_USART      text3        0585
__end_of_dpowers           strings      0326
__end_of_isr               text18       0504
__end_of_main              maintext     023A
__end_of_mensaje           text5        02A7
__end_of_printf            text6        059F
__end_of_putch             text8        05CF
__end_of_setup             text2        0529
__end_of_sprintf           text1        054C
__fptable                  functab      001F
__initialization           cinit        000F
__pbssBANK0                bssBANK0     0020
__pbssCOMMON               bssCOMMON    0078
__pcstackBANK0             cstackBANK0  0050
__pcstackBANK1             cstackBANK1  00A0
__pcstackCOMMON            cstackCOMMON 0070
__pfunctab                 functab      001F
__pintentry                intentry     0004
__pmaintext                maintext     0191
__pstrings                 strings      030C
__ptext1                   text1        0529
__ptext10                  text10       040D
__ptext11                  text11       0453
__ptext12                  text12       054C
__ptext13                  text13       0367
__ptext14                  text14       03BF
__ptext15                  text15       05B9
__ptext16                  text16       059F
__ptext17                  text17       05D7
__ptext18                  text18       04D5
__ptext2                   text2        0504
__ptext3                   text3        0569
__ptext4                   text4        02A7
__ptext5                   text5        023A
__ptext6                   text6        0585
__ptext7                   text7        0028
__ptext8                   text8        05C6
__ptext9                   text9        0499
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of__doprnt          (abs)        0000
__size_of__fptable         (abs)        0000
__size_of_config_ADC       (abs)        0000
__size_of_config_USART     (abs)        0000
__size_of_isr              (abs)        0000
__size_of_main             (abs)        0000
__size_of_mensaje          (abs)        0000
__size_of_printf           (abs)        0000
__size_of_putch            (abs)        0000
__size_of_setup            (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      031B
__stringtab                strings      030C
_buffer                    bssBANK0     003C
_buffer1                   bssBANK0     0028
_centenas                  bssBANK0     0024
_config_ADC                text4        02A7
_config_USART              text3        0569
_dato                      bssBANK0     0020
_dato1                     bssBANK0     0021
_decenas                   bssBANK0     0023
_dpowers                   strings      031C
_isr                       text18       04D5
_main                      maintext     0191
_mensaje                   text5        023A
_printf                    text6        0585
_putch                     text8        05C6
_residuo                   bssCOMMON    0078
_setup                     text2        0504
_sprintf                   text1        0529
_unidades                  bssBANK0     0022
_voltaje1                  bssBANK0     0027
_voltaje2                  bssBANK0     0026
btemp                      (abs)        007E
clear_ram0                 clrtext      05CF
config_ADC@frec            cstackCOMMON 0075
end_of_initialization      cinit        001B
fpbase                     functab      0024
fptable                    functab      001F
fptotal                    (abs)        0002
interrupt_function         intentry     0004
intlevel0                  functab      001F
intlevel1                  functab      001F
intlevel2                  functab      001F
intlevel3                  functab      001F
intlevel4                  functab      001F
intlevel5                  functab      001F
printf@ap                  cstackBANK0  0069
printf@f                   cstackBANK0  0066
printf@pb                  cstackBANK0  006A
putch@dato                 cstackCOMMON 0073
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  006B
sprintf@f                  cstackBANK0  0066
sprintf@pb                 cstackBANK0  006C
sprintf@wh                 cstackBANK0  006A
start                      init         000C
start_initialization       cinit        000F
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 110 in file "main_02.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_mensaje
		_setup
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
 Parameters:    Size  Location     Type
  wh              1    wreg     PTR unsigned char 
		 -> buffer1(20), buffer(20), 
  f               1   22[BANK0 ] PTR const unsigned char 
		 -> STR_3(3), STR_2(6), 
 Auto vars:     Size  Location     Type
  wh              1   26[BANK0 ] PTR unsigned char 
		 -> buffer1(20), buffer(20), 
  pb              2   28[BANK0 ] struct __prbuf
  ap              1   27[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), ?_printf(2), 
 Return value:  Size  Location     Type
                  2   22[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__doprnt
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 180 in file "main_02.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_config_ADC
		_config_USART
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _config_USART *****************
 Defined at:
		line 11 in file "config_USART.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _config_ADC *****************
 Defined at:
		line 15 in file "config_ADC.c"
 Parameters:    Size  Location     Type
  frec            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  frec            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _mensaje *****************
 Defined at:
		line 159 in file "main_02.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_printf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
 Parameters:    Size  Location     Type
  f               2   22[BANK0 ] PTR const unsigned char 
		 -> STR_7(13), STR_6(11), STR_5(3), STR_4(12), 
		 -> buffer1(20), buffer(20), 
 Auto vars:     Size  Location     Type
  pb              2   26[BANK0 ] struct __prbuf
  ap              1   25[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), ?_printf(2), 
 Return value:  Size  Location     Type
                  2   22[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		__doprnt
 This function is called by:
		_mensaje
 This function uses a non-reentrant model


 *************** function __doprnt *****************
 Defined at:
		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  pb              1    wreg     PTR struct __prbuf
		 -> sprintf@pb(2), printf@pb(2), 
  f               2    9[BANK0 ] PTR const unsigned char 
		 -> STR_7(13), STR_6(11), STR_5(3), STR_4(12), 
		 -> STR_3(3), buffer1(20), STR_2(6), buffer(20), 
  ap              1   11[BANK0 ] PTR PTR void 
		 -> sprintf@ap(1), printf@ap(1), 
 Auto vars:     Size  Location     Type
  pb              1   21[BANK0 ] PTR struct __prbuf
		 -> sprintf@pb(2), printf@pb(2), 
  tmpval          4    0        struct .
  val             2   18[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   20[BANK0 ] unsigned char 
  prec            1   17[BANK0 ] char 
  flag            1   16[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    9[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Absolute function
		___lwdiv
		___lwmod
		_putch
 This function is called by:
		_printf
		_sprintf
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 172 in file "main_02.c"
 Parameters:    Size  Location     Type
  dato            1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
		__doprnt
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    3[BANK0 ] unsigned int 
  dividend        2    5[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		__doprnt
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    3[COMMON] unsigned int 
  dividend        2    5[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    1[BANK0 ] unsigned int 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       3       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		__doprnt
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 94 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
  a               2    0[BANK0 ] PTR unsigned char 
		 -> buffer1(20), buffer(20), STR_1(17), 
 Auto vars:     Size  Location     Type
  i               2    5[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 79 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    5[COMMON] unsigned char 
  y               1    7[COMMON] unsigned char 
  temp            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 43 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    7[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] unsigned char 
  temp            1    5[BANK0 ] unsigned char 
  y               1    4[BANK0 ] unsigned char 
  z               1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         1       6       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 61 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 25 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 17 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 12 in file "LCD_8b.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 87 in file "main_02.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c
		__doprnt       		CODE           	0028	0000	361

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c estimated size: 361

config_USART.c
		_config_USART  		CODE           	0569	0000	28

config_USART.c estimated size: 28

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	0499	0000	60

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c estimated size: 60

config_ADC.c
		_config_ADC    		CODE           	02A7	0000	101

config_ADC.c estimated size: 101

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c
		_sprintf       		CODE           	0529	0000	35

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c estimated size: 35

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	040D	0000	70

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c estimated size: 70

shared
		__stringtab    		STRING         	030C	0000	16
		_dpowers       		STRING         	031C	0000	10
		__initialization		CODE           	000F	0000	12
		__fptable      		ENTRY          	001F	0000	9

shared estimated size: 47

main_02.c
		_putch         		CODE           	05C6	0000	9
		_main          		CODE           	0191	0000	169
		_isr           		CODE           	04D5	0000	47
		_mensaje       		CODE           	023A	0000	109
		_setup         		CODE           	0504	0000	37

main_02.c estimated size: 371

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c
		_printf        		CODE           	0585	0000	26

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c estimated size: 26

LCD_8b.c
		_Lcd_Write_String		CODE           	0453	0000	70
		_Lcd_Init      		CODE           	03BF	0000	78
		_Lcd_Write_Char		CODE           	054C	0000	29
		_Lcd_Cmd       		CODE           	059F	0000	26
		_Lcd_Set_Cursor		CODE           	0367	0000	88
		_Lcd_Clear     		CODE           	05B9	0000	13
		_Lcd_Port      		CODE           	05D7	0000	6

LCD_8b.c estimated size: 310

