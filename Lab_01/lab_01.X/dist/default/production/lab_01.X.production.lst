

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 21:19:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	idataBANK0
   369  0191                     __pidataBANK0:
   370                           
   371                           ;initializer for _tabla_7seg
   372  0191  343F               	retlw	63
   373  0192  3406               	retlw	6
   374  0193  345B               	retlw	91
   375  0194  344F               	retlw	79
   376  0195  3466               	retlw	102
   377  0196  346D               	retlw	109
   378  0197  347D               	retlw	125
   379  0198  3407               	retlw	7
   380  0199  347F               	retlw	127
   381  019A  346F               	retlw	111
   382  019B  3477               	retlw	119
   383  019C  347C               	retlw	124
   384  019D  3439               	retlw	57
   385  019E  345E               	retlw	94
   386  019F  3479               	retlw	121
   387  01A0  3471               	retlw	113
   388  000C                     _PIR1bits	set	12
   389  0009                     _PORTE	set	9
   390  0006                     _PORTB	set	6
   391  0005                     _PORTA	set	5
   392  0006                     _PORTBbits	set	6
   393  000B                     _INTCONbits	set	11
   394  0008                     _PORTD	set	8
   395  0001                     _TMR0	set	1
   396  001E                     _ADRESH	set	30
   397  001F                     _ADCON0bits	set	31
   398  0007                     _PORTC	set	7
   399  0037                     _RB7	set	55
   400  0049                     _RE1	set	73
   401  004A                     _RE2	set	74
   402  0048                     _RE0	set	72
   403  005A                     _T0IF	set	90
   404  0066                     _ADIF	set	102
   405  0031                     _RB1	set	49
   406  0030                     _RB0	set	48
   407  0058                     _RBIF	set	88
   408  009F                     _ADCON1bits	set	159
   409  0096                     _IOCBbits	set	150
   410  008C                     _PIE1bits	set	140
   411  008F                     _OSCCONbits	set	143
   412  0095                     _WPUBbits	set	149
   413  0081                     _OPTION_REGbits	set	129
   414  0089                     _TRISEbits	set	137
   415  0088                     _TRISD	set	136
   416  0087                     _TRISC	set	135
   417  0437                     _TRISB7	set	1079
   418  0428                     _TRISA0	set	1064
   419  0431                     _TRISB1	set	1073
   420  0430                     _TRISB0	set	1072
   421  0188                     _ANSELbits	set	392
   422  0189                     _ANSELH	set	393
   423                           
   424                           	psect	cinit
   425  0011                     start_initialization:	
   426                           ; #config settings
   427                           
   428  0011                     __initialization:
   429                           
   430                           ; Initialize objects allocated to BANK0
   431  0011  1383               	bcf	3,7	;select IRP bank0
   432  0012  3030               	movlw	low (__pdataBANK0+16)
   433  0013  00FD               	movwf	btemp+-1
   434  0014  3001               	movlw	high __pidataBANK0
   435  0015  00FE               	movwf	btemp
   436  0016  3091               	movlw	low __pidataBANK0
   437  0017  00FF               	movwf	btemp+1
   438  0018  3020               	movlw	low __pdataBANK0
   439  0019  0084               	movwf	4
   440  001A  120A  118A  2182  120A  118A  	fcall	init_ram0
   441                           
   442                           ; Clear objects allocated to COMMON
   443  001F  01F7               	clrf	__pbssCOMMON& (0+127)
   444  0020  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   445  0021  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   446  0022  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   447  0023  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   448  0024                     end_of_initialization:	
   449                           ;End of C runtime variable initialization code
   450                           
   451  0024                     __end_of__initialization:
   452  0024  0183               	clrf	3
   453  0025  120A  118A  2930   	ljmp	_main	;jump to C main() function
   454                           
   455                           	psect	bssCOMMON
   456  0077                     __pbssCOMMON:
   457  0077                     _transistores:
   458  0077                     	ds	1
   459  0078                     _contador:
   460  0078                     	ds	1
   461  0079                     _pot3:
   462  0079                     	ds	1
   463  007A                     _pot2:
   464  007A                     	ds	1
   465  007B                     _pot1:
   466  007B                     	ds	1
   467                           
   468                           	psect	dataBANK0
   469  0020                     __pdataBANK0:
   470  0020                     _tabla_7seg:
   471  0020                     	ds	16
   472                           
   473                           	psect	inittext
   474  017E                     init_fetch0:	
   475                           ;	Called with low address in FSR and high address in W
   476                           
   477  017E  087E               	movf	btemp,w
   478  017F  008A               	movwf	10
   479  0180  087F               	movf	btemp+1,w
   480  0181  0082               	movwf	2
   481  0182                     init_ram0:	
   482                           ;Called with:
   483                           ;	high address of idata address in btemp 
   484                           ;	low address of idata address in btemp+1 
   485                           ;	low address of data in FSR
   486                           ;	high address + 1 of data in btemp-1
   487                           
   488  0182  120A  118A  217E  120A  118A  	fcall	init_fetch0
   489  0187  0080               	movwf	0
   490  0188  0A84               	incf	4,f
   491  0189  0804               	movf	4,w
   492  018A  067D               	xorwf	btemp+-1,w
   493  018B  1903               	btfsc	3,2
   494  018C  3400               	retlw	0
   495  018D  0AFF               	incf	btemp+1,f
   496  018E  1903               	btfsc	3,2
   497  018F  0AFE               	incf	btemp,f
   498  0190  2982               	goto	init_ram0
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:
   502  0070                     ?_traducir:
   503  0070                     ??_traducir:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_setup:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_swap:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_config_ADC:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_main:	
   519                           ; 1 bytes @ 0x0
   520                           
   521                           
   522                           ; 1 bytes @ 0x0
   523  0070                     	ds	1
   524  0071                     traducir@variable:
   525                           
   526                           ; 1 bytes @ 0x1
   527  0071                     	ds	1
   528  0072                     traducir@traduccion:
   529                           
   530                           ; 1 bytes @ 0x2
   531  0072                     	ds	1
   532  0073                     ??_isr:
   533                           
   534                           ; 1 bytes @ 0x3
   535  0073                     	ds	4
   536                           
   537                           	psect	cstackBANK0
   538  0030                     __pcstackBANK0:
   539  0030                     ??_swap:
   540  0030                     ??_config_ADC:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 1 bytes @ 0x0
   545  0030                     	ds	2
   546  0032                     config_ADC@frec:
   547                           
   548                           ; 1 bytes @ 0x2
   549  0032                     	ds	1
   550  0033                     ??_setup:
   551  0033                     swap@variable:	
   552                           ; 1 bytes @ 0x3
   553                           
   554                           
   555                           ; 1 bytes @ 0x3
   556  0033                     	ds	1
   557  0034                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x4
   560  0034                     	ds	1
   561                           
   562                           	psect	maintext
   563  0130                     __pmaintext:	
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 119 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : B00/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0
   585 ;;      Temps:          0       1       0       0       0
   586 ;;      Totals:         0       1       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels required when called:    4
   589 ;; This function calls:
   590 ;;		_setup
   591 ;;		_swap
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _main
   599  0130                     _main:
   600  0130                     l1216:	
   601                           ;incstack = 0
   602                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   603                           
   604  0130  120A  118A  20EF  120A  118A  	fcall	_setup
   605  0135                     l1218:
   606  0135  087B               	movf	_pot1,w
   607  0136  390F               	andlw	15
   608  0137  1283               	bcf	3,5	;RP0=0, select bank0
   609  0138  1303               	bcf	3,6	;RP1=0, select bank0
   610  0139  00B4               	movwf	??_main
   611  013A  0834               	movf	??_main,w
   612  013B  00FA               	movwf	_pot2
   613  013C                     l1220:
   614  013C  087B               	movf	_pot1,w
   615  013D  120A  118A  2163  120A  118A  	fcall	_swap
   616  0142  390F               	andlw	15
   617  0143  1283               	bcf	3,5	;RP0=0, select bank0
   618  0144  1303               	bcf	3,6	;RP1=0, select bank0
   619  0145  00B4               	movwf	??_main
   620  0146  0834               	movf	??_main,w
   621  0147  00F9               	movwf	_pot3
   622  0148                     l1222:
   623  0148  189F               	btfsc	31,1	;volatile
   624  0149  294B               	goto	u161
   625  014A  294C               	goto	u160
   626  014B                     u161:
   627  014B  2956               	goto	l107
   628  014C                     u160:
   629  014C                     l1224:
   630  014C  3020               	movlw	32
   631  014D  1283               	bcf	3,5	;RP0=0, select bank0
   632  014E  1303               	bcf	3,6	;RP1=0, select bank0
   633  014F  00B4               	movwf	??_main
   634  0150                     u187:
   635  0150  0BB4               	decfsz	??_main,f
   636  0151  2950               	goto	u187
   637  0152  0000               	nop
   638  0153                     l1226:
   639  0153  1283               	bcf	3,5	;RP0=0, select bank0
   640  0154  1303               	bcf	3,6	;RP1=0, select bank0
   641  0155  149F               	bsf	31,1	;volatile
   642  0156                     l107:
   643  0156  087B               	movf	_pot1,w
   644  0157  0207               	subwf	7,w	;volatile
   645  0158  1803               	skipnc
   646  0159  295B               	goto	u171
   647  015A  295C               	goto	u170
   648  015B                     u171:
   649  015B  295E               	goto	l108
   650  015C                     u170:
   651  015C                     l1228:
   652  015C  1786               	bsf	6,7	;volatile
   653  015D  2935               	goto	l1218
   654  015E                     l108:
   655  015E  1386               	bcf	6,7	;volatile
   656  015F  2935               	goto	l1218
   657  0160  120A  118A  280E   	ljmp	start
   658  0163                     __end_of_main:
   659                           
   660                           	psect	text1
   661  0163                     __ptext1:	
   662 ;; *************** function _swap *****************
   663 ;; Defined at:
   664 ;;		line 170 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  variable        1    wreg     unsigned char 
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  variable        1    3[BANK0 ] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      unsigned char 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       1       0       0       0
   680 ;;      Temps:          0       3       0       0       0
   681 ;;      Totals:         0       4       0       0       0
   682 ;;Total ram usage:        4 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    2
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _swap
   694  0163                     _swap:
   695                           
   696                           ;incstack = 0
   697                           ; Regs used in _swap: [wreg+status,2+status,0]
   698                           ;swap@variable stored from wreg
   699  0163  1283               	bcf	3,5	;RP0=0, select bank0
   700  0164  1303               	bcf	3,6	;RP1=0, select bank0
   701  0165  00B3               	movwf	swap@variable
   702  0166                     l1104:
   703                           
   704                           ;main.c: 171:     return ((variable & 0x0F)<<4 | (variable & 0xF0)>>4);
   705  0166  0833               	movf	swap@variable,w
   706  0167  00B0               	movwf	??_swap
   707  0168  3004               	movlw	4
   708  0169                     u125:
   709  0169  1003               	clrc
   710  016A  0CB0               	rrf	??_swap,f
   711  016B  3EFF               	addlw	-1
   712  016C  1D03               	skipz
   713  016D  2969               	goto	u125
   714  016E  300F               	movlw	15
   715  016F  0530               	andwf	??_swap,w
   716  0170  00B1               	movwf	??_swap+1
   717  0171  0833               	movf	swap@variable,w
   718  0172  390F               	andlw	15
   719  0173  00B2               	movwf	??_swap+2
   720  0174  3003               	movlw	3
   721  0175                     u135:
   722  0175  1003               	clrc
   723  0176  0DB2               	rlf	??_swap+2,f
   724  0177  3EFF               	addlw	-1
   725  0178  1D03               	skipz
   726  0179  2975               	goto	u135
   727  017A  1003               	clrc
   728  017B  0D32               	rlf	??_swap+2,w
   729  017C  0431               	iorwf	??_swap+1,w
   730  017D                     l115:
   731  017D  0008               	return
   732  017E                     __end_of_swap:
   733                           
   734                           	psect	text2
   735  00EF                     __ptext2:	
   736 ;; *************** function _setup *****************
   737 ;; Defined at:
   738 ;;		line 180 in file "main.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    3
   759 ;; This function calls:
   760 ;;		_config_ADC
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _setup
   768  00EF                     _setup:
   769  00EF                     l1152:	
   770                           ;incstack = 0
   771                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   772                           
   773                           
   774                           ;main.c: 182:     TRISB0 = 1;
   775  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   776  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   777  00F1  1406               	bsf	6,0	;volatile
   778                           
   779                           ;main.c: 183:     TRISB1 = 1;
   780  00F2  1486               	bsf	6,1	;volatile
   781  00F3                     l1154:
   782                           
   783                           ;main.c: 184:     ANSELH = 0;
   784  00F3  1683               	bsf	3,5	;RP0=1, select bank3
   785  00F4  1703               	bsf	3,6	;RP1=1, select bank3
   786  00F5  0189               	clrf	9	;volatile
   787  00F6                     l1156:
   788                           
   789                           ;main.c: 186:     ANSELbits.ANS0 = 1;
   790  00F6  1408               	bsf	8,0	;volatile
   791  00F7                     l1158:
   792                           
   793                           ;main.c: 187:     TRISA0 = 1;
   794  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   795  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   796  00F9  1405               	bsf	5,0	;volatile
   797  00FA                     l1160:
   798                           
   799                           ;main.c: 189:     TRISB7 = 0;
   800  00FA  1386               	bcf	6,7	;volatile
   801                           
   802                           ;main.c: 190:     TRISC = 0x00;
   803  00FB  0187               	clrf	7	;volatile
   804                           
   805                           ;main.c: 191:     TRISD = 0x00;
   806  00FC  0188               	clrf	8	;volatile
   807  00FD                     l1162:
   808                           
   809                           ;main.c: 192:     TRISEbits.TRISE2 = 0;
   810  00FD  1109               	bcf	9,2	;volatile
   811  00FE                     l1164:
   812                           
   813                           ;main.c: 193:     TRISEbits.TRISE1 = 0;
   814  00FE  1089               	bcf	9,1	;volatile
   815                           
   816                           ;main.c: 195:     PORTA = 0x00;
   817  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   818  0100  1303               	bcf	3,6	;RP1=0, select bank0
   819  0101  0185               	clrf	5	;volatile
   820                           
   821                           ;main.c: 196:     PORTB = 0x00;
   822  0102  0186               	clrf	6	;volatile
   823                           
   824                           ;main.c: 197:     PORTC = 0x00;
   825  0103  0187               	clrf	7	;volatile
   826                           
   827                           ;main.c: 198:     PORTD = 0x00;
   828  0104  0188               	clrf	8	;volatile
   829                           
   830                           ;main.c: 199:     PORTE = 0x00;
   831  0105  0189               	clrf	9	;volatile
   832  0106                     l1166:
   833                           
   834                           ;main.c: 202:     OPTION_REGbits.nRBPU = 0;
   835  0106  1683               	bsf	3,5	;RP0=1, select bank1
   836  0107  1303               	bcf	3,6	;RP1=0, select bank1
   837  0108  1381               	bcf	1,7	;volatile
   838  0109                     l1168:
   839                           
   840                           ;main.c: 203:     WPUBbits.WPUB = 0b00000011;
   841  0109  3003               	movlw	3
   842  010A  0095               	movwf	21	;volatile
   843  010B                     l1170:
   844                           
   845                           ;main.c: 206:     OSCCONbits.IRCF0 = 0;
   846  010B  120F               	bcf	15,4	;volatile
   847  010C                     l1172:
   848                           
   849                           ;main.c: 207:     OSCCONbits.IRCF1 = 1;
   850  010C  168F               	bsf	15,5	;volatile
   851  010D                     l1174:
   852                           
   853                           ;main.c: 208:     OSCCONbits.IRCF2 = 1;
   854  010D  170F               	bsf	15,6	;volatile
   855  010E                     l1176:
   856                           
   857                           ;main.c: 209:     OSCCONbits.SCS = 1;
   858  010E  140F               	bsf	15,0	;volatile
   859  010F                     l1178:
   860                           
   861                           ;main.c: 212:     OPTION_REGbits.T0CS = 0;
   862  010F  1281               	bcf	1,5	;volatile
   863  0110                     l1180:
   864                           
   865                           ;main.c: 213:     OPTION_REGbits.PSA = 0;
   866  0110  1181               	bcf	1,3	;volatile
   867  0111                     l1182:
   868                           
   869                           ;main.c: 214:     OPTION_REGbits.PS0 = 1;
   870  0111  1401               	bsf	1,0	;volatile
   871  0112                     l1184:
   872                           
   873                           ;main.c: 215:     OPTION_REGbits.PS1 = 1;
   874  0112  1481               	bsf	1,1	;volatile
   875  0113                     l1186:
   876                           
   877                           ;main.c: 216:     OPTION_REGbits.PS2 = 1;
   878  0113  1501               	bsf	1,2	;volatile
   879  0114                     l1188:
   880                           
   881                           ;main.c: 217:     TMR0 = 56;
   882  0114  3038               	movlw	56
   883  0115  1283               	bcf	3,5	;RP0=0, select bank0
   884  0116  1303               	bcf	3,6	;RP1=0, select bank0
   885  0117  0081               	movwf	1	;volatile
   886  0118                     l1190:
   887                           
   888                           ;main.c: 220:     PIE1bits.ADIE = 1;
   889  0118  1683               	bsf	3,5	;RP0=1, select bank1
   890  0119  1303               	bcf	3,6	;RP1=0, select bank1
   891  011A  170C               	bsf	12,6	;volatile
   892  011B                     l1192:
   893                           
   894                           ;main.c: 221:     PIR1bits.ADIF = 0;
   895  011B  1283               	bcf	3,5	;RP0=0, select bank0
   896  011C  1303               	bcf	3,6	;RP1=0, select bank0
   897  011D  130C               	bcf	12,6	;volatile
   898  011E                     l1194:
   899                           
   900                           ;main.c: 222:     INTCONbits.GIE = 1;
   901  011E  178B               	bsf	11,7	;volatile
   902  011F                     l1196:
   903                           
   904                           ;main.c: 223:     INTCONbits.PEIE = 1;
   905  011F  170B               	bsf	11,6	;volatile
   906  0120                     l1198:
   907                           
   908                           ;main.c: 225:     INTCONbits.T0IE = 1;
   909  0120  168B               	bsf	11,5	;volatile
   910  0121                     l1200:
   911                           
   912                           ;main.c: 226:     INTCONbits.T0IF = 0;
   913  0121  110B               	bcf	11,2	;volatile
   914  0122                     l1202:
   915                           
   916                           ;main.c: 228:     IOCBbits.IOCB0 = 1;
   917  0122  1683               	bsf	3,5	;RP0=1, select bank1
   918  0123  1303               	bcf	3,6	;RP1=0, select bank1
   919  0124  1416               	bsf	22,0	;volatile
   920  0125                     l1204:
   921                           
   922                           ;main.c: 229:     IOCBbits.IOCB1 = 1;
   923  0125  1496               	bsf	22,1	;volatile
   924  0126                     l1206:
   925                           
   926                           ;main.c: 230:     INTCONbits.RBIE = 1;
   927  0126  158B               	bsf	11,3	;volatile
   928  0127                     l1208:
   929                           
   930                           ;main.c: 231:     INTCONbits.RBIF = 0;
   931  0127  100B               	bcf	11,0	;volatile
   932  0128                     l1210:
   933                           
   934                           ;main.c: 234:     config_ADC(1);
   935  0128  3001               	movlw	1
   936  0129  120A  118A  2028  120A  118A  	fcall	_config_ADC
   937  012E                     l1212:
   938                           
   939                           ;main.c: 235:     transistores = 0;
   940  012E  01F7               	clrf	_transistores
   941  012F                     l118:
   942  012F  0008               	return
   943  0130                     __end_of_setup:
   944                           
   945                           	psect	text3
   946  0028                     __ptext3:	
   947 ;; *************** function _config_ADC *****************
   948 ;; Defined at:
   949 ;;		line 15 in file "config_ADC.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  frec            1    wreg     unsigned char 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  frec            1    2[BANK0 ] unsigned char 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       1       0       0       0
   965 ;;      Temps:          0       2       0       0       0
   966 ;;      Totals:         0       3       0       0       0
   967 ;;Total ram usage:        3 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_setup
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _config_ADC
   979  0028                     _config_ADC:
   980                           
   981                           ;incstack = 0
   982                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
   983                           ;config_ADC@frec stored from wreg
   984  0028  1283               	bcf	3,5	;RP0=0, select bank0
   985  0029  1303               	bcf	3,6	;RP1=0, select bank0
   986  002A  00B2               	movwf	config_ADC@frec
   987  002B                     l964:
   988                           
   989                           ;config_ADC.c: 16:     switch(frec){
   990  002B  287C               	goto	l1032
   991  002C                     l966:
   992                           
   993                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
   994  002C  30C3               	movlw	-61
   995  002D  059F               	andwf	31,f	;volatile
   996  002E                     l968:
   997                           
   998                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   999  002E  3020               	movlw	32
  1000  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0031  00B0               	movwf	??_config_ADC
  1003  0032                     u197:
  1004  0032  0BB0               	decfsz	??_config_ADC,f
  1005  0033  2832               	goto	u197
  1006  0034  0000               	nop
  1007  0035                     l970:
  1008                           
  1009                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
  1010  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0037  131F               	bcf	31,6	;volatile
  1013  0038                     l972:
  1014                           
  1015                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
  1016  0038  139F               	bcf	31,7	;volatile
  1017  0039                     l974:
  1018                           
  1019                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
  1020  0039  141F               	bsf	31,0	;volatile
  1021  003A                     l976:
  1022                           
  1023                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
  1024  003A  1683               	bsf	3,5	;RP0=1, select bank1
  1025  003B  1303               	bcf	3,6	;RP1=0, select bank1
  1026  003C  139F               	bcf	31,7	;volatile
  1027  003D                     l978:
  1028                           
  1029                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
  1030  003D  129F               	bcf	31,5	;volatile
  1031  003E                     l980:
  1032                           
  1033                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
  1034  003E  121F               	bcf	31,4	;volatile
  1035                           
  1036                           ;config_ADC.c: 27:             break;
  1037  003F  2892               	goto	l133
  1038  0040                     l982:
  1039                           
  1040                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
  1041  0040  30C3               	movlw	-61
  1042  0041  059F               	andwf	31,f	;volatile
  1043  0042                     l984:
  1044                           
  1045                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1046  0042  3020               	movlw	32
  1047  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1049  0045  00B0               	movwf	??_config_ADC
  1050  0046                     u207:
  1051  0046  0BB0               	decfsz	??_config_ADC,f
  1052  0047  2846               	goto	u207
  1053  0048  0000               	nop
  1054  0049                     l986:
  1055                           
  1056                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
  1057  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1058  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1059  004B  171F               	bsf	31,6	;volatile
  1060  004C                     l988:
  1061                           
  1062                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
  1063  004C  139F               	bcf	31,7	;volatile
  1064  004D                     l990:
  1065                           
  1066                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
  1067  004D  141F               	bsf	31,0	;volatile
  1068  004E                     l992:
  1069                           
  1070                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
  1071  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1072  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0050  139F               	bcf	31,7	;volatile
  1074  0051                     l994:
  1075                           
  1076                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
  1077  0051  129F               	bcf	31,5	;volatile
  1078  0052                     l996:
  1079                           
  1080                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
  1081  0052  121F               	bcf	31,4	;volatile
  1082                           
  1083                           ;config_ADC.c: 38:             break;
  1084  0053  2892               	goto	l133
  1085  0054                     l998:
  1086                           
  1087                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
  1088  0054  30C3               	movlw	-61
  1089  0055  059F               	andwf	31,f	;volatile
  1090  0056                     l1000:
  1091                           
  1092                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1093  0056  3020               	movlw	32
  1094  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0059  00B0               	movwf	??_config_ADC
  1097  005A                     u217:
  1098  005A  0BB0               	decfsz	??_config_ADC,f
  1099  005B  285A               	goto	u217
  1100  005C  0000               	nop
  1101  005D                     l1002:
  1102                           
  1103                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
  1104  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1105  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1106  005F  131F               	bcf	31,6	;volatile
  1107  0060                     l1004:
  1108                           
  1109                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1110  0060  179F               	bsf	31,7	;volatile
  1111  0061                     l1006:
  1112                           
  1113                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1114  0061  141F               	bsf	31,0	;volatile
  1115  0062                     l1008:
  1116                           
  1117                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1118  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0064  139F               	bcf	31,7	;volatile
  1121  0065                     l1010:
  1122                           
  1123                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1124  0065  129F               	bcf	31,5	;volatile
  1125  0066                     l1012:
  1126                           
  1127                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1128  0066  121F               	bcf	31,4	;volatile
  1129                           
  1130                           ;config_ADC.c: 49:             break;
  1131  0067  2892               	goto	l133
  1132  0068                     l1014:
  1133                           
  1134                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1135  0068  30C3               	movlw	-61
  1136  0069  059F               	andwf	31,f	;volatile
  1137  006A                     l1016:
  1138                           
  1139                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1140  006A  3020               	movlw	32
  1141  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1142  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1143  006D  00B0               	movwf	??_config_ADC
  1144  006E                     u227:
  1145  006E  0BB0               	decfsz	??_config_ADC,f
  1146  006F  286E               	goto	u227
  1147  0070  0000               	nop
  1148  0071                     l1018:
  1149                           
  1150                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1151  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0073  171F               	bsf	31,6	;volatile
  1154  0074                     l1020:
  1155                           
  1156                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1157  0074  179F               	bsf	31,7	;volatile
  1158  0075                     l1022:
  1159                           
  1160                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1161  0075  141F               	bsf	31,0	;volatile
  1162  0076                     l1024:
  1163                           
  1164                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  1165  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0078  139F               	bcf	31,7	;volatile
  1168  0079                     l1026:
  1169                           
  1170                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  1171  0079  129F               	bcf	31,5	;volatile
  1172  007A                     l1028:
  1173                           
  1174                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  1175  007A  121F               	bcf	31,4	;volatile
  1176                           
  1177                           ;config_ADC.c: 60:             break;
  1178  007B  2892               	goto	l133
  1179  007C                     l1032:
  1180  007C  0832               	movf	config_ADC@frec,w
  1181  007D  00B0               	movwf	??_config_ADC
  1182  007E  01B1               	clrf	??_config_ADC+1
  1183                           
  1184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1185                           ; Switch size 1, requested type "simple"
  1186                           ; Number of cases is 1, Range of values is 0 to 0
  1187                           ; switch strategies available:
  1188                           ; Name         Instructions Cycles
  1189                           ; simple_byte            4     3 (average)
  1190                           ; direct_byte           11     8 (fixed)
  1191                           ; jumptable            260     6 (fixed)
  1192                           ;	Chosen strategy is simple_byte
  1193  007F  0831               	movf	??_config_ADC+1,w
  1194  0080  3A00               	xorlw	0	; case 0
  1195  0081  1903               	skipnz
  1196  0082  2884               	goto	l1260
  1197  0083  2892               	goto	l133
  1198  0084                     l1260:
  1199                           
  1200                           ; Switch size 1, requested type "simple"
  1201                           ; Number of cases is 4, Range of values is 0 to 3
  1202                           ; switch strategies available:
  1203                           ; Name         Instructions Cycles
  1204                           ; simple_byte           13     7 (average)
  1205                           ; direct_byte           20     8 (fixed)
  1206                           ; jumptable            260     6 (fixed)
  1207                           ;	Chosen strategy is simple_byte
  1208  0084  0830               	movf	??_config_ADC,w
  1209  0085  3A00               	xorlw	0	; case 0
  1210  0086  1903               	skipnz
  1211  0087  282C               	goto	l966
  1212  0088  3A01               	xorlw	1	; case 1
  1213  0089  1903               	skipnz
  1214  008A  2840               	goto	l982
  1215  008B  3A03               	xorlw	3	; case 2
  1216  008C  1903               	skipnz
  1217  008D  2854               	goto	l998
  1218  008E  3A01               	xorlw	1	; case 3
  1219  008F  1903               	skipnz
  1220  0090  2868               	goto	l1014
  1221  0091  2892               	goto	l133
  1222  0092                     l133:
  1223  0092  0008               	return
  1224  0093                     __end_of_config_ADC:
  1225                           
  1226                           	psect	text4
  1227  0093                     __ptext4:	
  1228 ;; *************** function _isr *****************
  1229 ;; Defined at:
  1230 ;;		line 64 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          4       0       0       0       0
  1247 ;;      Totals:         4       0       0       0       0
  1248 ;;Total ram usage:        4 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		_traducir
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _isr
  1260  0093                     _isr:
  1261  0093                     i1l878:
  1262                           
  1263                           ;main.c: 66:         INTCONbits.T0IF = 0;
  1264  0093  1C0B               	btfss	11,0	;volatile
  1265  0094  2896               	goto	u3_21
  1266  0095  2897               	goto	u3_20
  1267  0096                     u3_21:
  1268  0096  28A8               	goto	i1l890
  1269  0097                     u3_20:
  1270  0097                     i1l880:
  1271                           
  1272                           ;main.c: 67:     }
  1273  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0099  1806               	btfsc	6,0	;volatile
  1276  009A  289C               	goto	u4_21
  1277  009B  289D               	goto	u4_20
  1278  009C                     u4_21:
  1279  009C  28A1               	goto	i1l884
  1280  009D                     u4_20:
  1281  009D                     i1l882:
  1282                           
  1283                           ;main.c: 68: }
  1284  009D  3001               	movlw	1
  1285  009E  00F3               	movwf	??_isr
  1286  009F  0873               	movf	??_isr,w
  1287  00A0  0787               	addwf	7,f	;volatile
  1288  00A1                     i1l884:
  1289                           
  1290                           ;main.c: 71: 
  1291  00A1  1886               	btfsc	6,1	;volatile
  1292  00A2  28A4               	goto	u5_21
  1293  00A3  28A5               	goto	u5_20
  1294  00A4                     u5_21:
  1295  00A4  28A7               	goto	i1l888
  1296  00A5                     u5_20:
  1297  00A5                     i1l886:
  1298                           
  1299                           ;main.c: 72: 
  1300  00A5  3001               	movlw	1
  1301  00A6  0287               	subwf	7,f	;volatile
  1302  00A7                     i1l888:
  1303                           
  1304                           ;main.c: 75:     while(1){
  1305  00A7  100B               	bcf	11,0	;volatile
  1306  00A8                     i1l890:
  1307                           
  1308                           ;main.c: 78:         if (ADCON0bits.GO == 0){
  1309  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1310  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1311  00AA  1F0C               	btfss	12,6	;volatile
  1312  00AB  28AD               	goto	u6_21
  1313  00AC  28AE               	goto	u6_20
  1314  00AD                     u6_21:
  1315  00AD  28BC               	goto	i1l898
  1316  00AE                     u6_20:
  1317  00AE                     i1l892:
  1318                           
  1319                           ;main.c: 79:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1320  00AE  0C1F               	rrf	31,w	;volatile
  1321  00AF  00F3               	movwf	??_isr
  1322  00B0  0C73               	rrf	??_isr,w
  1323  00B1  390F               	andlw	15
  1324  00B2  3A00               	xorlw	0
  1325  00B3  1D03               	skipz
  1326  00B4  28B6               	goto	u7_21
  1327  00B5  28B7               	goto	u7_20
  1328  00B6                     u7_21:
  1329  00B6  28BB               	goto	i1l896
  1330  00B7                     u7_20:
  1331  00B7                     i1l894:
  1332                           
  1333                           ;main.c: 80:             ADCON0bits.GO = 1;
  1334  00B7  081E               	movf	30,w	;volatile
  1335  00B8  00F3               	movwf	??_isr
  1336  00B9  0873               	movf	??_isr,w
  1337  00BA  00FB               	movwf	_pot1
  1338  00BB                     i1l896:
  1339                           
  1340                           ;main.c: 83:             PORTBbits.RB7 = 1;}
  1341  00BB  130C               	bcf	12,6	;volatile
  1342  00BC                     i1l898:
  1343                           
  1344                           ;main.c: 87:     }
  1345  00BC  1D0B               	btfss	11,2	;volatile
  1346  00BD  28BF               	goto	u8_21
  1347  00BE  28C0               	goto	u8_20
  1348  00BF                     u8_21:
  1349  00BF  28E6               	goto	i1l101
  1350  00C0                     u8_20:
  1351  00C0                     i1l900:
  1352  00C0  110B               	bcf	11,2	;volatile
  1353  00C1                     i1l902:
  1354  00C1  3038               	movlw	56
  1355  00C2  0081               	movwf	1	;volatile
  1356  00C3                     i1l904:
  1357  00C3  1009               	bcf	9,0	;volatile
  1358  00C4                     i1l906:
  1359  00C4  1109               	bcf	9,2	;volatile
  1360  00C5                     i1l908:
  1361  00C5  0877               	movf	_transistores,w
  1362  00C6  1D03               	btfss	3,2
  1363  00C7  28C9               	goto	u9_21
  1364  00C8  28CA               	goto	u9_20
  1365  00C9                     u9_21:
  1366  00C9  28D9               	goto	i1l920
  1367  00CA                     u9_20:
  1368  00CA                     i1l910:
  1369  00CA  0188               	clrf	8	;volatile
  1370  00CB                     i1l912:
  1371  00CB  1109               	bcf	9,2	;volatile
  1372  00CC                     i1l914:
  1373  00CC  1489               	bsf	9,1	;volatile
  1374  00CD                     i1l916:
  1375  00CD  087A               	movf	_pot2,w
  1376  00CE  120A  118A  21A1  120A  118A  	fcall	_traducir
  1377  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1378  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1379  00D5  0088               	movwf	8	;volatile
  1380  00D6                     i1l918:
  1381  00D6  01F7               	clrf	_transistores
  1382  00D7  0AF7               	incf	_transistores,f
  1383  00D8  28E5               	goto	i1l928
  1384  00D9                     i1l920:
  1385  00D9  0188               	clrf	8	;volatile
  1386  00DA                     i1l922:
  1387  00DA  1509               	bsf	9,2	;volatile
  1388  00DB                     i1l924:
  1389  00DB  0879               	movf	_pot3,w
  1390  00DC  120A  118A  21A1  120A  118A  	fcall	_traducir
  1391  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1392  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1393  00E3  0088               	movwf	8	;volatile
  1394  00E4                     i1l926:
  1395  00E4  01F7               	clrf	_transistores
  1396  00E5                     i1l928:
  1397  00E5  110B               	bcf	11,2	;volatile
  1398  00E6                     i1l101:
  1399  00E6  0876               	movf	??_isr+3,w
  1400  00E7  008A               	movwf	10
  1401  00E8  0875               	movf	??_isr+2,w
  1402  00E9  0084               	movwf	4
  1403  00EA  0E74               	swapf	??_isr+1,w
  1404  00EB  0083               	movwf	3
  1405  00EC  0EFE               	swapf	btemp,f
  1406  00ED  0E7E               	swapf	btemp,w
  1407  00EE  0009               	retfie
  1408  00EF                     __end_of_isr:
  1409                           
  1410                           	psect	intentry
  1411  0004                     __pintentry:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1414                           
  1415  0004                     interrupt_function:
  1416  007E                     saved_w	set	btemp
  1417  0004  00FE               	movwf	btemp
  1418  0005  0E03               	swapf	3,w
  1419  0006  00F4               	movwf	??_isr+1
  1420  0007  0804               	movf	4,w
  1421  0008  00F5               	movwf	??_isr+2
  1422  0009  080A               	movf	10,w
  1423  000A  00F6               	movwf	??_isr+3
  1424  000B  120A  118A  2893   	ljmp	_isr
  1425                           
  1426                           	psect	text5
  1427  01A1                     __ptext5:	
  1428 ;; *************** function _traducir *****************
  1429 ;; Defined at:
  1430 ;;		line 19 in file "tabla.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  variable        1    wreg     unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  variable        1    1[COMMON] unsigned char 
  1435 ;;  traduccion      1    2[COMMON] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      unsigned char 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1445 ;;      Params:         0       0       0       0       0
  1446 ;;      Locals:         2       0       0       0       0
  1447 ;;      Temps:          1       0       0       0       0
  1448 ;;      Totals:         3       0       0       0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_isr
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _traducir
  1460  01A1                     _traducir:
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _traducir: [wreg-fsr0h+status,2+status,0]
  1464                           ;traducir@variable stored from wreg
  1465  01A1  00F1               	movwf	traducir@variable
  1466  01A2                     i1l804:
  1467                           
  1468                           ;tabla.c: 21:     char traduccion = tabla_7seg[variable];
  1469  01A2  0871               	movf	traducir@variable,w
  1470  01A3  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1471  01A4  0084               	movwf	4
  1472  01A5  1383               	bcf	3,7	;select IRP bank0
  1473  01A6  0800               	movf	0,w
  1474  01A7  00F0               	movwf	??_traducir
  1475  01A8  0870               	movf	??_traducir,w
  1476  01A9  00F2               	movwf	traducir@traduccion
  1477  01AA                     i1l806:
  1478                           
  1479                           ;tabla.c: 22:     return traduccion;
  1480  01AA  0872               	movf	traducir@traduccion,w
  1481  01AB                     i1l138:
  1482  01AB  0008               	return
  1483  01AC                     __end_of_traducir:
  1484  007E                     btemp	set	126	;btemp
  1485  007E                     wtemp0	set	126
  1486                           
  1487                           	psect	config
  1488                           
  1489                           ;Config register CONFIG1 @ 0x2007
  1490                           ;	Oscillator Selection bits
  1491                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1492                           ;	Watchdog Timer Enable bit
  1493                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1494                           ;	Power-up Timer Enable bit
  1495                           ;	PWRTE = OFF, PWRT disabled
  1496                           ;	RE3/MCLR pin function select bit
  1497                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1498                           ;	Code Protection bit
  1499                           ;	CP = OFF, Program memory code protection is disabled
  1500                           ;	Data Code Protection bit
  1501                           ;	CPD = OFF, Data memory code protection is disabled
  1502                           ;	Brown Out Reset Selection bits
  1503                           ;	BOREN = OFF, BOR disabled
  1504                           ;	Internal External Switchover bit
  1505                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1506                           ;	Fail-Safe Clock Monitor Enabled bit
  1507                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1508                           ;	Low Voltage Programming Enable bit
  1509                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1510                           ;	In-Circuit Debugger Mode bit
  1511                           ;	DEBUG = 0x1, unprogrammed default
  1512  2007                     	org	8199
  1513  2007  20D4               	dw	8404
  1514                           
  1515                           ;Config register CONFIG2 @ 0x2008
  1516                           ;	Brown-out Reset Selection bit
  1517                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1518                           ;	Flash Program Memory Self Write Enable bits
  1519                           ;	WRT = OFF, Write protection off
  1520  2008                     	org	8200
  1521  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      5      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_traducir

Critical Paths under _main in BANK0

    _main->_swap
    _setup->_config_ADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      66
                                              4 BANK0      1     1      0
                              _setup
                               _swap
 ---------------------------------------------------------------------------------
 (1) _swap                                                 4     4      0      44
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      30
                                              3 COMMON     4     4      0
                           _traducir
 ---------------------------------------------------------------------------------
 (4) _traducir                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _config_ADC
   _swap

 _isr (ROOT)
   _traducir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 21:19:31 2021

                      pc 0002                       fsr 0004                      l115 017D  
                    l107 0156                      l108 015E                      l133 0092  
                    l118 012F                      l970 0035                      l980 003E  
                    l972 0038                      l964 002B                      l990 004D  
                    l982 0040                      l974 0039                      l966 002C  
                    l992 004E                      l984 0042                      l976 003A  
                    l968 002E                      l994 0051                      l986 0049  
                    l978 003D                      l996 0052                      l988 004C  
                    l998 0054                      _RB0 0030                      _RB1 0031  
                    _RE0 0048                      _RE1 0049                      _RB7 0037  
                    _RE2 004A                      u125 0169                      u207 0046  
                    u135 0175                      u160 014C                      u217 005A  
                    u161 014B                      u170 015C                      u227 006E  
                    u171 015B                      u187 0150                      u197 0032  
                    _isr 0093                      fsr0 0004                      indf 0000  
                   l1000 0056                     l1010 0065                     l1002 005D  
                   l1020 0074                     l1012 0066                     l1004 0060  
                   l1022 0075                     l1014 0068                     l1006 0061  
                   l1024 0076                     l1016 006A                     l1008 0062  
                   l1032 007C                     l1200 0121                     l1104 0166  
                   l1026 0079                     l1018 0071                     l1210 0128  
                   l1202 0122                     l1028 007A                     l1212 012E  
                   l1204 0125                     l1220 013C                     l1206 0126  
                   l1222 0148                     l1208 0127                     l1160 00FA  
                   l1152 00EF                     l1224 014C                     l1216 0130  
                   l1170 010B                     l1162 00FD                     l1154 00F3  
                   l1226 0153                     l1218 0135                     l1260 0084  
                   l1180 0110                     l1172 010C                     l1164 00FE  
                   l1156 00F6                     l1228 015C                     l1190 0118  
                   l1182 0111                     l1174 010D                     l1166 0106  
                   l1158 00F7                     l1192 011B                     l1184 0112  
                   l1176 010E                     l1168 0109                     l1194 011E  
                   l1186 0113                     l1178 010F                     l1196 011F  
                   l1188 0114                     l1198 0120                     _ADIF 0066  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   _TMR0 0001                     u3_20 0097                     u3_21 0096  
                   u4_20 009D                     u4_21 009C                     u5_20 00A5  
                   u5_21 00A4                     u6_20 00AE                     u6_21 00AD  
                   u7_20 00B7                     u7_21 00B6                     u8_20 00C0  
                   u8_21 00BF                     u9_20 00CA                     u9_21 00C9  
           _transistores 0077                     _main 0130                     _pot1 007B  
                   _pot2 007A                     _pot3 0079                     _swap 0163  
                   btemp 007E                     start 000E                    ??_isr 0073  
                  ?_main 0070           config_ADC@frec 0032                    ?_swap 0070  
                  i1l101 00E6                    i1l138 01AB                    i1l804 01A2  
                  i1l900 00C0                    i1l806 01AA                    i1l910 00CA  
                  i1l902 00C1                    i1l912 00CB                    i1l920 00D9  
                  i1l904 00C3                    i1l922 00DA                    i1l914 00CC  
                  i1l906 00C4                    i1l924 00DB                    i1l916 00CD  
                  i1l908 00C5                    i1l926 00E4                    i1l918 00D6  
                  i1l928 00E5                    i1l880 0097                    i1l882 009D  
                  i1l890 00A8                    i1l892 00AE                    i1l884 00A1  
                  i1l894 00B7                    i1l886 00A5                    i1l878 0093  
                  i1l896 00BB                    i1l888 00A7                    i1l898 00BC  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISC 0087  
                  _TRISD 0088                    _setup 00EF                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0163             __end_of_swap 017E             swap@variable 0033  
                 ??_main 0034                   ??_swap 0030                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISA0 0428  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISB7 0437  
                 saved_w 007E         __end_of_traducir 01AC  __end_of__initialization 0024  
         __pcstackCOMMON 0070             __pidataBANK0 0191            __end_of_setup 0130  
         _OPTION_REGbits 0081                  ??_setup 0033               __pmaintext 0130  
             __pintentry 0004               _config_ADC 0028                ?_traducir 0070  
              _ANSELbits 0188                  __ptext1 0163                  __ptext2 00EF  
                __ptext3 0028                  __ptext4 0093                  __ptext5 01A1  
             _tabla_7seg 0020             __size_of_isr 005C     end_of_initialization 0024  
             ??_traducir 0070                _PORTBbits 0006              ?_config_ADC 0070  
              _TRISEbits 0089      start_initialization 0011              __end_of_isr 00EF  
    __size_of_config_ADC 006B               init_fetch0 017E              __pdataBANK0 0020  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0030  
      __size_of_traducir 000B           __size_of_setup 0041        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F             ??_config_ADC 0030  
               _WPUBbits 0095       __end_of_config_ADC 0093                 _contador 0078  
          __size_of_main 0033            __size_of_swap 001B                 _traducir 01A1  
             _INTCONbits 000B                 init_ram0 0182                 intlevel1 0000  
             _OSCCONbits 008F       traducir@traduccion 0072         traducir@variable 0071  
