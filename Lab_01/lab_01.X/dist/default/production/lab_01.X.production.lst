

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 19 20:57:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	idataBANK0
   289  017E                     __pidataBANK0:
   290                           
   291                           ;initializer for _tabla_7seg
   292  017E  343F               	retlw	63
   293  017F  3406               	retlw	6
   294  0180  345B               	retlw	91
   295  0181  344F               	retlw	79
   296  0182  3466               	retlw	102
   297  0183  346D               	retlw	109
   298  0184  347D               	retlw	125
   299  0185  3407               	retlw	7
   300  0186  347F               	retlw	127
   301  0187  346F               	retlw	111
   302  0188  3477               	retlw	119
   303  0189  347C               	retlw	124
   304  018A  3439               	retlw	57
   305  018B  345E               	retlw	94
   306  018C  3479               	retlw	121
   307  018D  3471               	retlw	113
   308  000C                     _PIR1bits	set	12
   309  0009                     _PORTE	set	9
   310  0006                     _PORTB	set	6
   311  0005                     _PORTA	set	5
   312  0006                     _PORTBbits	set	6
   313  000B                     _INTCONbits	set	11
   314  0008                     _PORTD	set	8
   315  0001                     _TMR0	set	1
   316  001E                     _ADRESH	set	30
   317  001F                     _ADCON0bits	set	31
   318  0007                     _PORTC	set	7
   319  0037                     _RB7	set	55
   320  0049                     _RE1	set	73
   321  004A                     _RE2	set	74
   322  0048                     _RE0	set	72
   323  005A                     _T0IF	set	90
   324  0066                     _ADIF	set	102
   325  0031                     _RB1	set	49
   326  0030                     _RB0	set	48
   327  0058                     _RBIF	set	88
   328  009F                     _ADCON1bits	set	159
   329  0096                     _IOCBbits	set	150
   330  008C                     _PIE1bits	set	140
   331  008F                     _OSCCONbits	set	143
   332  0095                     _WPUBbits	set	149
   333  0081                     _OPTION_REGbits	set	129
   334  0089                     _TRISEbits	set	137
   335  0088                     _TRISD	set	136
   336  0087                     _TRISC	set	135
   337  0437                     _TRISB7	set	1079
   338  0428                     _TRISA0	set	1064
   339  0431                     _TRISB1	set	1073
   340  0430                     _TRISB0	set	1072
   341  0188                     _ANSELbits	set	392
   342  0189                     _ANSELH	set	393
   343                           
   344                           	psect	cinit
   345  0011                     start_initialization:	
   346                           ; #config settings
   347                           
   348  0011                     __initialization:
   349                           
   350                           ; Initialize objects allocated to BANK0
   351  0011  1383               	bcf	3,7	;select IRP bank0
   352  0012  3030               	movlw	low (__pdataBANK0+16)
   353  0013  00FD               	movwf	btemp+-1
   354  0014  3001               	movlw	high __pidataBANK0
   355  0015  00FE               	movwf	btemp
   356  0016  307E               	movlw	low __pidataBANK0
   357  0017  00FF               	movwf	btemp+1
   358  0018  3020               	movlw	low __pdataBANK0
   359  0019  0084               	movwf	4
   360  001A  120A  118A  216F  120A  118A  	fcall	init_ram0
   361                           
   362                           ; Clear objects allocated to COMMON
   363  001F  01F9               	clrf	__pbssCOMMON& (0+127)
   364  0020  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   365  0021  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   366  0022  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   367  0023  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   368  0024                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0024                     __end_of__initialization:
   372  0024  0183               	clrf	3
   373  0025  120A  118A  2924   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  0079                     __pbssCOMMON:
   377  0079                     _transistores:
   378  0079                     	ds	1
   379  007A                     _contador:
   380  007A                     	ds	1
   381  007B                     _pot3:
   382  007B                     	ds	1
   383  007C                     _pot2:
   384  007C                     	ds	1
   385  007D                     _pot1:
   386  007D                     	ds	1
   387                           
   388                           	psect	dataBANK0
   389  0020                     __pdataBANK0:
   390  0020                     _tabla_7seg:
   391  0020                     	ds	16
   392                           
   393                           	psect	inittext
   394  016B                     init_fetch0:	
   395                           ;	Called with low address in FSR and high address in W
   396                           
   397  016B  087E               	movf	btemp,w
   398  016C  008A               	movwf	10
   399  016D  087F               	movf	btemp+1,w
   400  016E  0082               	movwf	2
   401  016F                     init_ram0:	
   402                           ;Called with:
   403                           ;	high address of idata address in btemp 
   404                           ;	low address of idata address in btemp+1 
   405                           ;	low address of data in FSR
   406                           ;	high address + 1 of data in btemp-1
   407                           
   408  016F  120A  118A  216B  120A  118A  	fcall	init_fetch0
   409  0174  0080               	movwf	0
   410  0175  0A84               	incf	4,f
   411  0176  0804               	movf	4,w
   412  0177  067D               	xorwf	btemp+-1,w
   413  0178  1903               	btfsc	3,2
   414  0179  3400               	retlw	0
   415  017A  0AFF               	incf	btemp+1,f
   416  017B  1903               	btfsc	3,2
   417  017C  0AFE               	incf	btemp,f
   418  017D  296F               	goto	init_ram0
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_setup:
   423  0070                     ?_swap:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_config_ADC:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_isr:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_isr:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	4
   441  0074                     ??_swap:
   442  0074                     ??_config_ADC:	
   443                           ; 1 bytes @ 0x4
   444                           
   445                           
   446                           ; 1 bytes @ 0x4
   447  0074                     	ds	2
   448  0076                     config_ADC@frec:
   449                           
   450                           ; 1 bytes @ 0x6
   451  0076                     	ds	1
   452  0077                     ??_setup:
   453  0077                     swap@variable:	
   454                           ; 1 bytes @ 0x7
   455                           
   456                           
   457                           ; 1 bytes @ 0x7
   458  0077                     	ds	1
   459  0078                     ??_main:
   460                           
   461                           ; 1 bytes @ 0x8
   462  0078                     	ds	1
   463                           
   464                           	psect	maintext
   465  0124                     __pmaintext:	
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 122 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          1       0       0       0       0
   488 ;;      Totals:         1       0       0       0       0
   489 ;;Total ram usage:        1 bytes
   490 ;; Hardware stack levels required when called:    3
   491 ;; This function calls:
   492 ;;		_setup
   493 ;;		_swap
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  0124                     _main:
   502  0124                     l919:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           
   506  0124  120A  118A  20E3  120A  118A  	fcall	_setup
   507  0129                     l921:
   508  0129  087D               	movf	_pot1,w
   509  012A  390F               	andlw	15
   510  012B  00F8               	movwf	??_main
   511  012C  0878               	movf	??_main,w
   512  012D  00FC               	movwf	_pot2
   513  012E                     l923:
   514  012E  087D               	movf	_pot1,w
   515  012F  120A  118A  2152  120A  118A  	fcall	_swap
   516  0134  390F               	andlw	15
   517  0135  00F8               	movwf	??_main
   518  0136  0878               	movf	??_main,w
   519  0137  00FB               	movwf	_pot3
   520  0138                     l925:
   521  0138  1283               	bcf	3,5	;RP0=0, select bank0
   522  0139  1303               	bcf	3,6	;RP1=0, select bank0
   523  013A  189F               	btfsc	31,1	;volatile
   524  013B  293D               	goto	u101
   525  013C  293E               	goto	u100
   526  013D                     u101:
   527  013D  2945               	goto	l107
   528  013E                     u100:
   529  013E                     l927:
   530  013E  3021               	movlw	33
   531  013F  00F8               	movwf	??_main
   532  0140                     u127:
   533  0140  0BF8               	decfsz	??_main,f
   534  0141  2940               	goto	u127
   535  0142                     l929:
   536  0142  1283               	bcf	3,5	;RP0=0, select bank0
   537  0143  1303               	bcf	3,6	;RP1=0, select bank0
   538  0144  149F               	bsf	31,1	;volatile
   539  0145                     l107:
   540  0145  087D               	movf	_pot1,w
   541  0146  0207               	subwf	7,w	;volatile
   542  0147  1803               	skipnc
   543  0148  294A               	goto	u111
   544  0149  294B               	goto	u110
   545  014A                     u111:
   546  014A  294D               	goto	l108
   547  014B                     u110:
   548  014B                     l931:
   549  014B  1786               	bsf	6,7	;volatile
   550  014C  2929               	goto	l921
   551  014D                     l108:
   552  014D  1386               	bcf	6,7	;volatile
   553  014E  2929               	goto	l921
   554  014F  120A  118A  280E   	ljmp	start
   555  0152                     __end_of_main:
   556                           
   557                           	psect	text1
   558  0152                     __ptext1:	
   559 ;; *************** function _swap *****************
   560 ;; Defined at:
   561 ;;		line 173 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;  variable        1    wreg     unsigned char 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  variable        1    7[COMMON] unsigned char 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      unsigned char 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         1       0       0       0       0
   577 ;;      Temps:          3       0       0       0       0
   578 ;;      Totals:         4       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _swap
   591  0152                     _swap:
   592                           
   593                           ;incstack = 0
   594                           ; Regs used in _swap: [wreg+status,2+status,0]
   595                           ;swap@variable stored from wreg
   596  0152  00F7               	movwf	swap@variable
   597  0153                     l863:
   598                           
   599                           ;main.c: 174:     return ((variable & 0x0F)<<4 | (variable & 0xF0)>>4);
   600  0153  0877               	movf	swap@variable,w
   601  0154  00F4               	movwf	??_swap
   602  0155  3004               	movlw	4
   603  0156                     u15:
   604  0156  1003               	clrc
   605  0157  0CF4               	rrf	??_swap,f
   606  0158  3EFF               	addlw	-1
   607  0159  1D03               	skipz
   608  015A  2956               	goto	u15
   609  015B  300F               	movlw	15
   610  015C  0574               	andwf	??_swap,w
   611  015D  00F5               	movwf	??_swap+1
   612  015E  0877               	movf	swap@variable,w
   613  015F  390F               	andlw	15
   614  0160  00F6               	movwf	??_swap+2
   615  0161  3003               	movlw	3
   616  0162                     u25:
   617  0162  1003               	clrc
   618  0163  0DF6               	rlf	??_swap+2,f
   619  0164  3EFF               	addlw	-1
   620  0165  1D03               	skipz
   621  0166  2962               	goto	u25
   622  0167  1003               	clrc
   623  0168  0D76               	rlf	??_swap+2,w
   624  0169  0475               	iorwf	??_swap+1,w
   625  016A                     l115:
   626  016A  0008               	return
   627  016B                     __end_of_swap:
   628                           
   629                           	psect	text2
   630  00E3                     __ptext2:	
   631 ;; *************** function _setup *****************
   632 ;; Defined at:
   633 ;;		line 183 in file "main.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;		None
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       0       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0
   650 ;;      Totals:         0       0       0       0       0
   651 ;;Total ram usage:        0 bytes
   652 ;; Hardware stack levels used:    1
   653 ;; Hardware stack levels required when called:    2
   654 ;; This function calls:
   655 ;;		_config_ADC
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _setup
   663  00E3                     _setup:
   664  00E3                     l799:	
   665                           ;incstack = 0
   666                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;main.c: 185:     TRISB0 = 1;
   670  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   671  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   672  00E5  1406               	bsf	6,0	;volatile
   673                           
   674                           ;main.c: 186:     TRISB1 = 1;
   675  00E6  1486               	bsf	6,1	;volatile
   676  00E7                     l801:
   677                           
   678                           ;main.c: 187:     ANSELH = 0;
   679  00E7  1683               	bsf	3,5	;RP0=1, select bank3
   680  00E8  1703               	bsf	3,6	;RP1=1, select bank3
   681  00E9  0189               	clrf	9	;volatile
   682  00EA                     l803:
   683                           
   684                           ;main.c: 189:     ANSELbits.ANS0 = 1;
   685  00EA  1408               	bsf	8,0	;volatile
   686  00EB                     l805:
   687                           
   688                           ;main.c: 190:     TRISA0 = 1;
   689  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   690  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   691  00ED  1405               	bsf	5,0	;volatile
   692  00EE                     l807:
   693                           
   694                           ;main.c: 192:     TRISB7 = 0;
   695  00EE  1386               	bcf	6,7	;volatile
   696                           
   697                           ;main.c: 193:     TRISC = 0x00;
   698  00EF  0187               	clrf	7	;volatile
   699                           
   700                           ;main.c: 194:     TRISD = 0x00;
   701  00F0  0188               	clrf	8	;volatile
   702  00F1                     l809:
   703                           
   704                           ;main.c: 195:     TRISEbits.TRISE2 = 0;
   705  00F1  1109               	bcf	9,2	;volatile
   706  00F2                     l811:
   707                           
   708                           ;main.c: 196:     TRISEbits.TRISE1 = 0;
   709  00F2  1089               	bcf	9,1	;volatile
   710                           
   711                           ;main.c: 198:     PORTA = 0x00;
   712  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   713  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   714  00F5  0185               	clrf	5	;volatile
   715                           
   716                           ;main.c: 199:     PORTB = 0x00;
   717  00F6  0186               	clrf	6	;volatile
   718                           
   719                           ;main.c: 200:     PORTC = 0x00;
   720  00F7  0187               	clrf	7	;volatile
   721                           
   722                           ;main.c: 201:     PORTD = 0x00;
   723  00F8  0188               	clrf	8	;volatile
   724                           
   725                           ;main.c: 202:     PORTE = 0x00;
   726  00F9  0189               	clrf	9	;volatile
   727  00FA                     l813:
   728                           
   729                           ;main.c: 205:     OPTION_REGbits.nRBPU = 0;
   730  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   731  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   732  00FC  1381               	bcf	1,7	;volatile
   733  00FD                     l815:
   734                           
   735                           ;main.c: 206:     WPUBbits.WPUB = 0b00000011;
   736  00FD  3003               	movlw	3
   737  00FE  0095               	movwf	21	;volatile
   738  00FF                     l817:
   739                           
   740                           ;main.c: 209:     OSCCONbits.IRCF0 = 0;
   741  00FF  120F               	bcf	15,4	;volatile
   742  0100                     l819:
   743                           
   744                           ;main.c: 210:     OSCCONbits.IRCF1 = 1;
   745  0100  168F               	bsf	15,5	;volatile
   746  0101                     l821:
   747                           
   748                           ;main.c: 211:     OSCCONbits.IRCF2 = 1;
   749  0101  170F               	bsf	15,6	;volatile
   750  0102                     l823:
   751                           
   752                           ;main.c: 212:     OSCCONbits.SCS = 1;
   753  0102  140F               	bsf	15,0	;volatile
   754  0103                     l825:
   755                           
   756                           ;main.c: 215:     OPTION_REGbits.T0CS = 0;
   757  0103  1281               	bcf	1,5	;volatile
   758  0104                     l827:
   759                           
   760                           ;main.c: 216:     OPTION_REGbits.PSA = 0;
   761  0104  1181               	bcf	1,3	;volatile
   762  0105                     l829:
   763                           
   764                           ;main.c: 217:     OPTION_REGbits.PS0 = 1;
   765  0105  1401               	bsf	1,0	;volatile
   766  0106                     l831:
   767                           
   768                           ;main.c: 218:     OPTION_REGbits.PS1 = 1;
   769  0106  1481               	bsf	1,1	;volatile
   770  0107                     l833:
   771                           
   772                           ;main.c: 219:     OPTION_REGbits.PS2 = 1;
   773  0107  1501               	bsf	1,2	;volatile
   774  0108                     l835:
   775                           
   776                           ;main.c: 220:     TMR0 = 56;
   777  0108  3038               	movlw	56
   778  0109  1283               	bcf	3,5	;RP0=0, select bank0
   779  010A  1303               	bcf	3,6	;RP1=0, select bank0
   780  010B  0081               	movwf	1	;volatile
   781  010C                     l837:
   782                           
   783                           ;main.c: 223:     PIE1bits.ADIE = 1;
   784  010C  1683               	bsf	3,5	;RP0=1, select bank1
   785  010D  1303               	bcf	3,6	;RP1=0, select bank1
   786  010E  170C               	bsf	12,6	;volatile
   787  010F                     l839:
   788                           
   789                           ;main.c: 224:     PIR1bits.ADIF = 0;
   790  010F  1283               	bcf	3,5	;RP0=0, select bank0
   791  0110  1303               	bcf	3,6	;RP1=0, select bank0
   792  0111  130C               	bcf	12,6	;volatile
   793  0112                     l841:
   794                           
   795                           ;main.c: 225:     INTCONbits.GIE = 1;
   796  0112  178B               	bsf	11,7	;volatile
   797  0113                     l843:
   798                           
   799                           ;main.c: 226:     INTCONbits.PEIE = 1;
   800  0113  170B               	bsf	11,6	;volatile
   801  0114                     l845:
   802                           
   803                           ;main.c: 228:     INTCONbits.T0IE = 1;
   804  0114  168B               	bsf	11,5	;volatile
   805  0115                     l847:
   806                           
   807                           ;main.c: 229:     INTCONbits.T0IF = 0;
   808  0115  110B               	bcf	11,2	;volatile
   809  0116                     l849:
   810                           
   811                           ;main.c: 231:     IOCBbits.IOCB0 = 1;
   812  0116  1683               	bsf	3,5	;RP0=1, select bank1
   813  0117  1303               	bcf	3,6	;RP1=0, select bank1
   814  0118  1416               	bsf	22,0	;volatile
   815  0119                     l851:
   816                           
   817                           ;main.c: 232:     IOCBbits.IOCB1 = 1;
   818  0119  1496               	bsf	22,1	;volatile
   819  011A                     l853:
   820                           
   821                           ;main.c: 233:     INTCONbits.RBIE = 1;
   822  011A  158B               	bsf	11,3	;volatile
   823  011B                     l855:
   824                           
   825                           ;main.c: 234:     INTCONbits.RBIF = 0;
   826  011B  100B               	bcf	11,0	;volatile
   827  011C                     l857:
   828                           
   829                           ;main.c: 237:     config_ADC(1);
   830  011C  3001               	movlw	1
   831  011D  120A  118A  2028  120A  118A  	fcall	_config_ADC
   832  0122                     l859:
   833                           
   834                           ;main.c: 238:     transistores = 0;
   835  0122  01F9               	clrf	_transistores
   836  0123                     l118:
   837  0123  0008               	return
   838  0124                     __end_of_setup:
   839                           
   840                           	psect	text3
   841  0028                     __ptext3:	
   842 ;; *************** function _config_ADC *****************
   843 ;; Defined at:
   844 ;;		line 15 in file "config_ADC.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  frec            1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  frec            1    6[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          2       0       0       0       0
   861 ;;      Totals:         3       0       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_setup
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _config_ADC
   874  0028                     _config_ADC:
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
   878                           ;config_ADC@frec stored from wreg
   879  0028  00F6               	movwf	config_ADC@frec
   880  0029                     l725:
   881                           
   882                           ;config_ADC.c: 16:     switch(frec){
   883  0029  2876               	goto	l793
   884  002A                     l727:
   885                           
   886                           ;config_ADC.c: 18:             ADCON0bits.CHS = 0;
   887  002A  30C3               	movlw	-61
   888  002B  1283               	bcf	3,5	;RP0=0, select bank0
   889  002C  1303               	bcf	3,6	;RP1=0, select bank0
   890  002D  059F               	andwf	31,f	;volatile
   891  002E                     l729:
   892                           
   893                           ;config_ADC.c: 19:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   894  002E  3021               	movlw	33
   895  002F  00F4               	movwf	??_config_ADC
   896  0030                     u137:
   897  0030  0BF4               	decfsz	??_config_ADC,f
   898  0031  2830               	goto	u137
   899  0032                     l731:
   900                           
   901                           ;config_ADC.c: 21:             ADCON0bits.ADCS0 = 0;
   902  0032  1283               	bcf	3,5	;RP0=0, select bank0
   903  0033  1303               	bcf	3,6	;RP1=0, select bank0
   904  0034  131F               	bcf	31,6	;volatile
   905  0035                     l733:
   906                           
   907                           ;config_ADC.c: 22:             ADCON0bits.ADCS1 = 0;
   908  0035  139F               	bcf	31,7	;volatile
   909  0036                     l735:
   910                           
   911                           ;config_ADC.c: 23:             ADCON0bits.ADON = 1;
   912  0036  141F               	bsf	31,0	;volatile
   913  0037                     l737:
   914                           
   915                           ;config_ADC.c: 24:             ADCON1bits.ADFM = 0;
   916  0037  1683               	bsf	3,5	;RP0=1, select bank1
   917  0038  1303               	bcf	3,6	;RP1=0, select bank1
   918  0039  139F               	bcf	31,7	;volatile
   919  003A                     l739:
   920                           
   921                           ;config_ADC.c: 25:             ADCON1bits.VCFG1 = 0;
   922  003A  129F               	bcf	31,5	;volatile
   923  003B                     l741:
   924                           
   925                           ;config_ADC.c: 26:             ADCON1bits.VCFG0 = 0;
   926  003B  121F               	bcf	31,4	;volatile
   927                           
   928                           ;config_ADC.c: 27:             break;
   929  003C  288C               	goto	l133
   930  003D                     l743:
   931                           
   932                           ;config_ADC.c: 29:             ADCON0bits.CHS = 0;
   933  003D  30C3               	movlw	-61
   934  003E  1283               	bcf	3,5	;RP0=0, select bank0
   935  003F  1303               	bcf	3,6	;RP1=0, select bank0
   936  0040  059F               	andwf	31,f	;volatile
   937  0041                     l745:
   938                           
   939                           ;config_ADC.c: 30:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   940  0041  3021               	movlw	33
   941  0042  00F4               	movwf	??_config_ADC
   942  0043                     u147:
   943  0043  0BF4               	decfsz	??_config_ADC,f
   944  0044  2843               	goto	u147
   945  0045                     l747:
   946                           
   947                           ;config_ADC.c: 32:             ADCON0bits.ADCS0 = 1;
   948  0045  1283               	bcf	3,5	;RP0=0, select bank0
   949  0046  1303               	bcf	3,6	;RP1=0, select bank0
   950  0047  171F               	bsf	31,6	;volatile
   951  0048                     l749:
   952                           
   953                           ;config_ADC.c: 33:             ADCON0bits.ADCS1 = 0;
   954  0048  139F               	bcf	31,7	;volatile
   955  0049                     l751:
   956                           
   957                           ;config_ADC.c: 34:             ADCON0bits.ADON = 1;
   958  0049  141F               	bsf	31,0	;volatile
   959  004A                     l753:
   960                           
   961                           ;config_ADC.c: 35:             ADCON1bits.ADFM = 0;
   962  004A  1683               	bsf	3,5	;RP0=1, select bank1
   963  004B  1303               	bcf	3,6	;RP1=0, select bank1
   964  004C  139F               	bcf	31,7	;volatile
   965  004D                     l755:
   966                           
   967                           ;config_ADC.c: 36:             ADCON1bits.VCFG1 = 0;
   968  004D  129F               	bcf	31,5	;volatile
   969  004E                     l757:
   970                           
   971                           ;config_ADC.c: 37:             ADCON1bits.VCFG0 = 0;
   972  004E  121F               	bcf	31,4	;volatile
   973                           
   974                           ;config_ADC.c: 38:             break;
   975  004F  288C               	goto	l133
   976  0050                     l759:
   977                           
   978                           ;config_ADC.c: 40:             ADCON0bits.CHS = 0;
   979  0050  30C3               	movlw	-61
   980  0051  1283               	bcf	3,5	;RP0=0, select bank0
   981  0052  1303               	bcf	3,6	;RP1=0, select bank0
   982  0053  059F               	andwf	31,f	;volatile
   983  0054                     l761:
   984                           
   985                           ;config_ADC.c: 41:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   986  0054  3021               	movlw	33
   987  0055  00F4               	movwf	??_config_ADC
   988  0056                     u157:
   989  0056  0BF4               	decfsz	??_config_ADC,f
   990  0057  2856               	goto	u157
   991  0058                     l763:
   992                           
   993                           ;config_ADC.c: 43:             ADCON0bits.ADCS0 = 0;
   994  0058  1283               	bcf	3,5	;RP0=0, select bank0
   995  0059  1303               	bcf	3,6	;RP1=0, select bank0
   996  005A  131F               	bcf	31,6	;volatile
   997  005B                     l765:
   998                           
   999                           ;config_ADC.c: 44:             ADCON0bits.ADCS1 = 1;
  1000  005B  179F               	bsf	31,7	;volatile
  1001  005C                     l767:
  1002                           
  1003                           ;config_ADC.c: 45:             ADCON0bits.ADON = 1;
  1004  005C  141F               	bsf	31,0	;volatile
  1005  005D                     l769:
  1006                           
  1007                           ;config_ADC.c: 46:             ADCON1bits.ADFM = 0;
  1008  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1009  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1010  005F  139F               	bcf	31,7	;volatile
  1011  0060                     l771:
  1012                           
  1013                           ;config_ADC.c: 47:             ADCON1bits.VCFG1 = 0;
  1014  0060  129F               	bcf	31,5	;volatile
  1015  0061                     l773:
  1016                           
  1017                           ;config_ADC.c: 48:             ADCON1bits.VCFG0 = 0;
  1018  0061  121F               	bcf	31,4	;volatile
  1019                           
  1020                           ;config_ADC.c: 49:             break;
  1021  0062  288C               	goto	l133
  1022  0063                     l775:
  1023                           
  1024                           ;config_ADC.c: 51:             ADCON0bits.CHS = 0;
  1025  0063  30C3               	movlw	-61
  1026  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0066  059F               	andwf	31,f	;volatile
  1029  0067                     l777:
  1030                           
  1031                           ;config_ADC.c: 52:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1032  0067  3021               	movlw	33
  1033  0068  00F4               	movwf	??_config_ADC
  1034  0069                     u167:
  1035  0069  0BF4               	decfsz	??_config_ADC,f
  1036  006A  2869               	goto	u167
  1037  006B                     l779:
  1038                           
  1039                           ;config_ADC.c: 54:             ADCON0bits.ADCS0 = 1;
  1040  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1041  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1042  006D  171F               	bsf	31,6	;volatile
  1043  006E                     l781:
  1044                           
  1045                           ;config_ADC.c: 55:             ADCON0bits.ADCS1 = 1;
  1046  006E  179F               	bsf	31,7	;volatile
  1047  006F                     l783:
  1048                           
  1049                           ;config_ADC.c: 56:             ADCON0bits.ADON = 1;
  1050  006F  141F               	bsf	31,0	;volatile
  1051  0070                     l785:
  1052                           
  1053                           ;config_ADC.c: 57:             ADCON1bits.ADFM = 0;
  1054  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0071  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0072  139F               	bcf	31,7	;volatile
  1057  0073                     l787:
  1058                           
  1059                           ;config_ADC.c: 58:             ADCON1bits.VCFG1 = 0;
  1060  0073  129F               	bcf	31,5	;volatile
  1061  0074                     l789:
  1062                           
  1063                           ;config_ADC.c: 59:             ADCON1bits.VCFG0 = 0;
  1064  0074  121F               	bcf	31,4	;volatile
  1065                           
  1066                           ;config_ADC.c: 60:             break;
  1067  0075  288C               	goto	l133
  1068  0076                     l793:
  1069  0076  0876               	movf	config_ADC@frec,w
  1070  0077  00F4               	movwf	??_config_ADC
  1071  0078  01F5               	clrf	??_config_ADC+1
  1072                           
  1073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 1, Range of values is 0 to 0
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte            4     3 (average)
  1079                           ; direct_byte           11     8 (fixed)
  1080                           ; jumptable            260     6 (fixed)
  1081                           ;	Chosen strategy is simple_byte
  1082  0079  0875               	movf	??_config_ADC+1,w
  1083  007A  3A00               	xorlw	0	; case 0
  1084  007B  1903               	skipnz
  1085  007C  287E               	goto	l953
  1086  007D  288C               	goto	l133
  1087  007E                     l953:
  1088                           
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 4, Range of values is 0 to 3
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte           13     7 (average)
  1094                           ; direct_byte           20     8 (fixed)
  1095                           ; jumptable            260     6 (fixed)
  1096                           ;	Chosen strategy is simple_byte
  1097  007E  0874               	movf	??_config_ADC,w
  1098  007F  3A00               	xorlw	0	; case 0
  1099  0080  1903               	skipnz
  1100  0081  282A               	goto	l727
  1101  0082  3A01               	xorlw	1	; case 1
  1102  0083  1903               	skipnz
  1103  0084  283D               	goto	l743
  1104  0085  3A03               	xorlw	3	; case 2
  1105  0086  1903               	skipnz
  1106  0087  2850               	goto	l759
  1107  0088  3A01               	xorlw	1	; case 3
  1108  0089  1903               	skipnz
  1109  008A  2863               	goto	l775
  1110  008B  288C               	goto	l133
  1111  008C                     l133:
  1112  008C  0008               	return
  1113  008D                     __end_of_config_ADC:
  1114                           
  1115                           	psect	text4
  1116  008D                     __ptext4:	
  1117 ;; *************** function _isr *****************
  1118 ;; Defined at:
  1119 ;;		line 67 in file "main.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0
  1135 ;;      Temps:          4       0       0       0       0
  1136 ;;      Totals:         4       0       0       0       0
  1137 ;;Total ram usage:        4 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		Interrupt level 1
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _isr
  1148  008D                     _isr:
  1149  008D                     i1l867:
  1150                           
  1151                           ;main.c: 69: 
  1152  008D  1C0B               	btfss	11,0	;volatile
  1153  008E  2890               	goto	u3_21
  1154  008F  2891               	goto	u3_20
  1155  0090                     u3_21:
  1156  0090  28A2               	goto	i1l879
  1157  0091                     u3_20:
  1158  0091                     i1l869:
  1159                           
  1160                           ;main.c: 70:         INTCONbits.T0IF = 0;
  1161  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0093  1806               	btfsc	6,0	;volatile
  1164  0094  2896               	goto	u4_21
  1165  0095  2897               	goto	u4_20
  1166  0096                     u4_21:
  1167  0096  289B               	goto	i1l873
  1168  0097                     u4_20:
  1169  0097                     i1l871:
  1170                           
  1171                           ;main.c: 71:     }
  1172  0097  3001               	movlw	1
  1173  0098  00F0               	movwf	??_isr
  1174  0099  0870               	movf	??_isr,w
  1175  009A  0787               	addwf	7,f	;volatile
  1176  009B                     i1l873:
  1177                           
  1178                           ;main.c: 74: 
  1179  009B  1886               	btfsc	6,1	;volatile
  1180  009C  289E               	goto	u5_21
  1181  009D  289F               	goto	u5_20
  1182  009E                     u5_21:
  1183  009E  28A1               	goto	i1l877
  1184  009F                     u5_20:
  1185  009F                     i1l875:
  1186                           
  1187                           ;main.c: 75: 
  1188  009F  3001               	movlw	1
  1189  00A0  0287               	subwf	7,f	;volatile
  1190  00A1                     i1l877:
  1191                           
  1192                           ;main.c: 78:     setup();
  1193  00A1  100B               	bcf	11,0	;volatile
  1194  00A2                     i1l879:
  1195                           
  1196                           ;main.c: 81:         pot3 = swap(pot1) & 0b00001111;
  1197  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1199  00A4  1F0C               	btfss	12,6	;volatile
  1200  00A5  28A7               	goto	u6_21
  1201  00A6  28A8               	goto	u6_20
  1202  00A7                     u6_21:
  1203  00A7  28B6               	goto	i1l887
  1204  00A8                     u6_20:
  1205  00A8                     i1l881:
  1206                           
  1207                           ;main.c: 82:         if (ADCON0bits.GO == 0){
  1208  00A8  0C1F               	rrf	31,w	;volatile
  1209  00A9  00F0               	movwf	??_isr
  1210  00AA  0C70               	rrf	??_isr,w
  1211  00AB  390F               	andlw	15
  1212  00AC  3A00               	xorlw	0
  1213  00AD  1D03               	skipz
  1214  00AE  28B0               	goto	u7_21
  1215  00AF  28B1               	goto	u7_20
  1216  00B0                     u7_21:
  1217  00B0  28B5               	goto	i1l885
  1218  00B1                     u7_20:
  1219  00B1                     i1l883:
  1220                           
  1221                           ;main.c: 83:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1222  00B1  081E               	movf	30,w	;volatile
  1223  00B2  00F0               	movwf	??_isr
  1224  00B3  0870               	movf	??_isr,w
  1225  00B4  00FD               	movwf	_pot1
  1226  00B5                     i1l885:
  1227                           
  1228                           ;main.c: 86:         if(pot1 > PORTC) {
  1229  00B5  130C               	bcf	12,6	;volatile
  1230  00B6                     i1l887:
  1231                           
  1232                           ;main.c: 90:         }
  1233  00B6  1D0B               	btfss	11,2	;volatile
  1234  00B7  28B9               	goto	u8_21
  1235  00B8  28BA               	goto	u8_20
  1236  00B9                     u8_21:
  1237  00B9  28DA               	goto	i1l101
  1238  00BA                     u8_20:
  1239  00BA                     i1l889:
  1240                           
  1241                           ;main.c: 92: }
  1242  00BA  110B               	bcf	11,2	;volatile
  1243  00BB                     i1l891:
  1244  00BB  3038               	movlw	56
  1245  00BC  0081               	movwf	1	;volatile
  1246  00BD                     i1l893:
  1247  00BD  1009               	bcf	9,0	;volatile
  1248  00BE                     i1l895:
  1249  00BE  1109               	bcf	9,2	;volatile
  1250  00BF                     i1l897:
  1251  00BF  0879               	movf	_transistores,w
  1252  00C0  1D03               	btfss	3,2
  1253  00C1  28C3               	goto	u9_21
  1254  00C2  28C4               	goto	u9_20
  1255  00C3                     u9_21:
  1256  00C3  28D0               	goto	i1l909
  1257  00C4                     u9_20:
  1258  00C4                     i1l899:
  1259  00C4  0188               	clrf	8	;volatile
  1260  00C5                     i1l901:
  1261  00C5  1109               	bcf	9,2	;volatile
  1262  00C6                     i1l903:
  1263  00C6  1489               	bsf	9,1	;volatile
  1264  00C7                     i1l905:
  1265  00C7  087C               	movf	_pot2,w
  1266  00C8  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1267  00C9  0084               	movwf	4
  1268  00CA  1383               	bcf	3,7	;select IRP bank0
  1269  00CB  0800               	movf	0,w
  1270  00CC  0088               	movwf	8	;volatile
  1271  00CD                     i1l907:
  1272  00CD  01F9               	clrf	_transistores
  1273  00CE  0AF9               	incf	_transistores,f
  1274  00CF  28D9               	goto	i1l917
  1275  00D0                     i1l909:
  1276  00D0  0188               	clrf	8	;volatile
  1277  00D1                     i1l911:
  1278  00D1  1509               	bsf	9,2	;volatile
  1279  00D2                     i1l913:
  1280  00D2  087B               	movf	_pot3,w
  1281  00D3  3E20               	addlw	(low (_tabla_7seg| 0))& (0+255)
  1282  00D4  0084               	movwf	4
  1283  00D5  1383               	bcf	3,7	;select IRP bank0
  1284  00D6  0800               	movf	0,w
  1285  00D7  0088               	movwf	8	;volatile
  1286  00D8                     i1l915:
  1287  00D8  01F9               	clrf	_transistores
  1288  00D9                     i1l917:
  1289  00D9  110B               	bcf	11,2	;volatile
  1290  00DA                     i1l101:
  1291  00DA  0873               	movf	??_isr+3,w
  1292  00DB  008A               	movwf	10
  1293  00DC  0872               	movf	??_isr+2,w
  1294  00DD  0084               	movwf	4
  1295  00DE  0E71               	swapf	??_isr+1,w
  1296  00DF  0083               	movwf	3
  1297  00E0  0EFE               	swapf	btemp,f
  1298  00E1  0E7E               	swapf	btemp,w
  1299  00E2  0009               	retfie
  1300  00E3                     __end_of_isr:
  1301  007E                     btemp	set	126	;btemp
  1302  007E                     wtemp0	set	126
  1303                           
  1304                           	psect	intentry
  1305  0004                     __pintentry:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1308                           
  1309  0004                     interrupt_function:
  1310  007E                     saved_w	set	btemp
  1311  0004  00FE               	movwf	btemp
  1312  0005  0E03               	swapf	3,w
  1313  0006  00F1               	movwf	??_isr+1
  1314  0007  0804               	movf	4,w
  1315  0008  00F2               	movwf	??_isr+2
  1316  0009  080A               	movf	10,w
  1317  000A  00F3               	movwf	??_isr+3
  1318  000B  120A  118A  288D   	ljmp	_isr
  1319                           
  1320                           	psect	config
  1321                           
  1322                           ;Config register CONFIG1 @ 0x2007
  1323                           ;	Oscillator Selection bits
  1324                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1325                           ;	Watchdog Timer Enable bit
  1326                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1327                           ;	Power-up Timer Enable bit
  1328                           ;	PWRTE = OFF, PWRT disabled
  1329                           ;	RE3/MCLR pin function select bit
  1330                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1331                           ;	Code Protection bit
  1332                           ;	CP = OFF, Program memory code protection is disabled
  1333                           ;	Data Code Protection bit
  1334                           ;	CPD = OFF, Data memory code protection is disabled
  1335                           ;	Brown Out Reset Selection bits
  1336                           ;	BOREN = OFF, BOR disabled
  1337                           ;	Internal External Switchover bit
  1338                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1339                           ;	Fail-Safe Clock Monitor Enabled bit
  1340                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1341                           ;	Low Voltage Programming Enable bit
  1342                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1343                           ;	In-Circuit Debugger Mode bit
  1344                           ;	DEBUG = 0x1, unprogrammed default
  1345  2007                     	org	8199
  1346  2007  20D4               	dw	8404
  1347                           
  1348                           ;Config register CONFIG2 @ 0x2008
  1349                           ;	Brown-out Reset Selection bit
  1350                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1351                           ;	Flash Program Memory Self Write Enable bits
  1352                           ;	WRT = OFF, Write protection off
  1353  2008                     	org	8200
  1354  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_swap
    _setup->_config_ADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              8 COMMON     1     1      0
                              _setup
                               _swap
 ---------------------------------------------------------------------------------
 (1) _swap                                                 4     4      0      30
                                              4 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _config_ADC
   _swap

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 19 20:57:01 2021

                      pc 0002                       u15 0156                       u25 0162  
                     fsr 0004                      l115 016A                      l107 0145  
                    l108 014D                      l133 008C                      l118 0123  
                    l801 00E7                      l731 0032                      l811 00F2  
                    l803 00EA                      l741 003B                      l733 0035  
                    l725 0029                      l821 0101                      l813 00FA  
                    l805 00EB                      l751 0049                      l743 003D  
                    l735 0036                      l727 002A                      l831 0106  
                    l823 0102                      l815 00FD                      l807 00EE  
                    l761 0054                      l753 004A                      l745 0041  
                    l737 0037                      l729 002E                      l841 0112  
                    l833 0107                      l825 0103                      l817 00FF  
                    l809 00F1                      l921 0129                      l771 0060  
                    l763 0058                      l755 004D                      l747 0045  
                    l739 003A                      l851 0119                      l843 0113  
                    l835 0108                      l827 0104                      l819 0100  
                    l931 014B                      l923 012E                      l781 006E  
                    l773 0061                      l765 005B                      l757 004E  
                    l749 0048                      l853 011A                      l845 0114  
                    l837 010C                      l829 0105                      l925 0138  
                    l783 006F                      l775 0063                      l767 005C  
                    l759 0050                      l855 011B                      l847 0115  
                    l839 010F                      l863 0153                      l927 013E  
                    l919 0124                      l953 007E                      l785 0070  
                    l777 0067                      l769 005D                      l793 0076  
                    l857 011C                      l849 0116                      l929 0142  
                    l787 0073                      l779 006B                      l859 0122  
                    l789 0074                      l799 00E3                      _RB0 0030  
                    _RB1 0031                      _RE0 0048                      _RE1 0049  
                    _RB7 0037                      u100 013E                      _RE2 004A  
                    u101 013D                      u110 014B                      u111 014A  
                    u127 0140                      u137 0030                      u147 0043  
                    u157 0056                      u167 0069                      _isr 008D  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   ?_isr 0070                     _T0IF 005A                     _RBIF 0058  
                   _TMR0 0001                     u3_20 0091                     u3_21 0090  
                   u4_20 0097                     u4_21 0096                     u5_20 009F  
                   u5_21 009E                     u6_20 00A8                     u6_21 00A7  
                   u7_20 00B1                     u7_21 00B0                     u8_20 00BA  
                   u8_21 00B9                     u9_20 00C4                     u9_21 00C3  
           _transistores 0079                     _main 0124                     _pot1 007D  
                   _pot2 007C                     _pot3 007B                     _swap 0152  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070           config_ADC@frec 0076                    ?_swap 0070  
                  i1l101 00DA                    i1l901 00C5                    i1l911 00D1  
                  i1l903 00C6                    i1l913 00D2                    i1l905 00C7  
                  i1l915 00D8                    i1l907 00CD                    i1l917 00D9  
                  i1l909 00D0                    i1l871 0097                    i1l881 00A8  
                  i1l873 009B                    i1l891 00BB                    i1l883 00B1  
                  i1l875 009F                    i1l867 008D                    i1l893 00BD  
                  i1l885 00B5                    i1l877 00A1                    i1l869 0091  
                  i1l895 00BE                    i1l887 00B6                    i1l879 00A2  
                  i1l897 00BF                    i1l889 00BA                    i1l899 00C4  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISC 0087  
                  _TRISD 0088                    _setup 00E3                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0152             __end_of_swap 016B             swap@variable 0077  
                 ??_main 0078                   ??_swap 0074                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISA0 0428  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISB7 0437  
                 saved_w 007E  __end_of__initialization 0024           __pcstackCOMMON 0070  
           __pidataBANK0 017E            __end_of_setup 0124           _OPTION_REGbits 0081  
                ??_setup 0077               __pmaintext 0124               __pintentry 0004  
             _config_ADC 0028                _ANSELbits 0188                  __ptext1 0152  
                __ptext2 00E3                  __ptext3 0028                  __ptext4 008D  
             _tabla_7seg 0020             __size_of_isr 0056     end_of_initialization 0024  
              _PORTBbits 0006              ?_config_ADC 0070                _TRISEbits 0089  
    start_initialization 0011              __end_of_isr 00E3      __size_of_config_ADC 0065  
             init_fetch0 016B              __pdataBANK0 0020              __pbssCOMMON 0079  
              ___latbits 0002           __size_of_setup 0041        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F             ??_config_ADC 0074  
               _WPUBbits 0095       __end_of_config_ADC 008D                 _contador 007A  
          __size_of_main 002E            __size_of_swap 0019               _INTCONbits 000B  
               init_ram0 016F                 intlevel1 0000               _OSCCONbits 008F  
