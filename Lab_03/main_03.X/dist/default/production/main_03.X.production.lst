

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 20:03:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	strings
   387  000C                     __pstrings:
   388  000C                     stringtab:
   389  000C                     __stringtab:
   390  000C                     stringcode:	
   391                           ;	String table - string pointers are 1 byte each
   392                           
   393  000C                     stringdir:
   394  000C  3000               	movlw	high stringdir
   395  000D  008A               	movwf	10
   396  000E  0804               	movf	4,w
   397  000F  0A84               	incf	4,f
   398  0010  0782               	addwf	2,f
   399  0011                     __stringbase:
   400  0011  3400               	retlw	0
   401  0012                     __end_of__stringtab:
   402  0012                     _dpowers:
   403  0012  3401               	retlw	1
   404  0013  3400               	retlw	0
   405  0014  340A               	retlw	10
   406  0015  3400               	retlw	0
   407  0016  3464               	retlw	100
   408  0017  3400               	retlw	0
   409  0018  34E8               	retlw	232
   410  0019  3403               	retlw	3
   411  001A  3410               	retlw	16
   412  001B  3427               	retlw	39
   413  001C                     __end_of_dpowers:
   414  000C                     _PIR1bits	set	12
   415  000B                     _INTCONbits	set	11
   416  0018                     _RCSTAbits	set	24
   417  0013                     _SSPBUF	set	19
   418  0014                     _SSPCON	set	20
   419  0009                     _PORTE	set	9
   420  0007                     _PORTC	set	7
   421  0006                     _PORTB	set	6
   422  0005                     _PORTA	set	5
   423  0008                     _PORTD	set	8
   424  0019                     _TXREG	set	25
   425  001A                     _RCREG	set	26
   426  0007                     _PORTCbits	set	7
   427  0064                     _TXIF	set	100
   428  0065                     _RCIF	set	101
   429  0098                     _TXSTAbits	set	152
   430  009A                     _SPBRGH	set	154
   431  0099                     _SPBRG	set	153
   432  0094                     _SSPSTATbits	set	148
   433  0094                     _SSPSTAT	set	148
   434  0087                     _TRISCbits	set	135
   435  008F                     _OSCCONbits	set	143
   436  0086                     _TRISB	set	134
   437  0088                     _TRISD	set	136
   438  043B                     _TRISC3	set	1083
   439  043D                     _TRISC5	set	1085
   440  0187                     _BAUDCTLbits	set	391
   441  001C                     STR_1:
   442  001C  3450               	retlw	80	;'P'
   443  001D  346F               	retlw	111	;'o'
   444  001E  3472               	retlw	114	;'r'
   445  001F  3420               	retlw	32	;' '
   446  0020  3466               	retlw	102	;'f'
   447  0021  3461               	retlw	97	;'a'
   448  0022  3476               	retlw	118	;'v'
   449  0023  346F               	retlw	111	;'o'
   450  0024  3472               	retlw	114	;'r'
   451  0025  3420               	retlw	32	;' '
   452  0026  3469               	retlw	105	;'i'
   453  0027  346E               	retlw	110	;'n'
   454  0028  3467               	retlw	103	;'g'
   455  0029  3472               	retlw	114	;'r'
   456  002A  3465               	retlw	101	;'e'
   457  002B  3473               	retlw	115	;'s'
   458  002C  3465               	retlw	101	;'e'
   459  002D  3420               	retlw	32	;' '
   460  002E  346C               	retlw	108	;'l'
   461  002F  3461               	retlw	97	;'a'
   462  0030  3420               	retlw	32	;' '
   463  0031  3463               	retlw	99	;'c'
   464  0032  3465               	retlw	101	;'e'
   465  0033  346E               	retlw	110	;'n'
   466  0034  3474               	retlw	116	;'t'
   467  0035  3465               	retlw	101	;'e'
   468  0036  346E               	retlw	110	;'n'
   469  0037  3461               	retlw	97	;'a'
   470  0038  342C               	retlw	44	;','
   471  0039  3420               	retlw	32	;' '
   472  003A  3473               	retlw	115	;'s'
   473  003B  3469               	retlw	105	;'i'
   474  003C  3420               	retlw	32	;' '
   475  003D  3465               	retlw	101	;'e'
   476  003E  3473               	retlw	115	;'s'
   477  003F  3420               	retlw	32	;' '
   478  0040  343C               	retlw	60	;'<'
   479  0041  3431               	retlw	49	;'1'
   480  0042  3430               	retlw	48	;'0'
   481  0043  3430               	retlw	48	;'0'
   482  0044  3420               	retlw	32	;' '
   483  0045  3463               	retlw	99	;'c'
   484  0046  346F               	retlw	111	;'o'
   485  0047  346C               	retlw	108	;'l'
   486  0048  346F               	retlw	111	;'o'
   487  0049  3463               	retlw	99	;'c'
   488  004A  3461               	retlw	97	;'a'
   489  004B  3472               	retlw	114	;'r'
   490  004C  3420               	retlw	32	;' '
   491  004D  3430               	retlw	48	;'0'
   492  004E  340D               	retlw	13
   493  004F  3400               	retlw	0
   494  0050                     STR_14:
   495  0050  3449               	retlw	73	;'I'
   496  0051  346E               	retlw	110	;'n'
   497  0052  3474               	retlw	116	;'t'
   498  0053  3472               	retlw	114	;'r'
   499  0054  346F               	retlw	111	;'o'
   500  0055  3464               	retlw	100	;'d'
   501  0056  3475               	retlw	117	;'u'
   502  0057  347A               	retlw	122	;'z'
   503  0058  3463               	retlw	99	;'c'
   504  0059  3461               	retlw	97	;'a'
   505  005A  3420               	retlw	32	;' '
   506  005B  3475               	retlw	117	;'u'
   507  005C  346E               	retlw	110	;'n'
   508  005D  3420               	retlw	32	;' '
   509  005E  3476               	retlw	118	;'v'
   510  005F  3461               	retlw	97	;'a'
   511  0060  346C               	retlw	108	;'l'
   512  0061  346F               	retlw	111	;'o'
   513  0062  3472               	retlw	114	;'r'
   514  0063  3420               	retlw	32	;' '
   515  0064  346D               	retlw	109	;'m'
   516  0065  3465               	retlw	101	;'e'
   517  0066  346E               	retlw	110	;'n'
   518  0067  346F               	retlw	111	;'o'
   519  0068  3472               	retlw	114	;'r'
   520  0069  3420               	retlw	32	;' '
   521  006A  346F               	retlw	111	;'o'
   522  006B  3420               	retlw	32	;' '
   523  006C  3469               	retlw	105	;'i'
   524  006D  3467               	retlw	103	;'g'
   525  006E  3475               	retlw	117	;'u'
   526  006F  3461               	retlw	97	;'a'
   527  0070  346C               	retlw	108	;'l'
   528  0071  3420               	retlw	32	;' '
   529  0072  3461               	retlw	97	;'a'
   530  0073  3420               	retlw	32	;' '
   531  0074  3435               	retlw	53	;'5'
   532  0075  340D               	retlw	13
   533  0076  3400               	retlw	0
   534  0077                     STR_13:
   535  0077  3449               	retlw	73	;'I'
   536  0078  346E               	retlw	110	;'n'
   537  0079  3474               	retlw	116	;'t'
   538  007A  3472               	retlw	114	;'r'
   539  007B  346F               	retlw	111	;'o'
   540  007C  3464               	retlw	100	;'d'
   541  007D  3475               	retlw	117	;'u'
   542  007E  347A               	retlw	122	;'z'
   543  007F  3463               	retlw	99	;'c'
   544  0080  3461               	retlw	97	;'a'
   545  0081  3420               	retlw	32	;' '
   546  0082  3475               	retlw	117	;'u'
   547  0083  346E               	retlw	110	;'n'
   548  0084  3420               	retlw	32	;' '
   549  0085  3476               	retlw	118	;'v'
   550  0086  3461               	retlw	97	;'a'
   551  0087  346C               	retlw	108	;'l'
   552  0088  346F               	retlw	111	;'o'
   553  0089  3472               	retlw	114	;'r'
   554  008A  3420               	retlw	32	;' '
   555  008B  3476               	retlw	118	;'v'
   556  008C  3461               	retlw	97	;'a'
   557  008D  346C               	retlw	108	;'l'
   558  008E  3469               	retlw	105	;'i'
   559  008F  3464               	retlw	100	;'d'
   560  0090  346F               	retlw	111	;'o'
   561  0091  3420               	retlw	32	;' '
   562  0092  3464               	retlw	100	;'d'
   563  0093  3465               	retlw	101	;'e'
   564  0094  3420               	retlw	32	;' '
   565  0095  3430               	retlw	48	;'0'
   566  0096  3420               	retlw	32	;' '
   567  0097  3461               	retlw	97	;'a'
   568  0098  3420               	retlw	32	;' '
   569  0099  3432               	retlw	50	;'2'
   570  009A  340D               	retlw	13
   571  009B  3400               	retlw	0
   572  009C                     STR_2:
   573  009C  3450               	retlw	80	;'P'
   574  009D  346F               	retlw	111	;'o'
   575  009E  3472               	retlw	114	;'r'
   576  009F  3420               	retlw	32	;' '
   577  00A0  3466               	retlw	102	;'f'
   578  00A1  3461               	retlw	97	;'a'
   579  00A2  3476               	retlw	118	;'v'
   580  00A3  346F               	retlw	111	;'o'
   581  00A4  3472               	retlw	114	;'r'
   582  00A5  3420               	retlw	32	;' '
   583  00A6  3469               	retlw	105	;'i'
   584  00A7  346E               	retlw	110	;'n'
   585  00A8  3467               	retlw	103	;'g'
   586  00A9  3472               	retlw	114	;'r'
   587  00AA  3465               	retlw	101	;'e'
   588  00AB  3473               	retlw	115	;'s'
   589  00AC  3465               	retlw	101	;'e'
   590  00AD  3420               	retlw	32	;' '
   591  00AE  346C               	retlw	108	;'l'
   592  00AF  3461               	retlw	97	;'a'
   593  00B0  3420               	retlw	32	;' '
   594  00B1  3464               	retlw	100	;'d'
   595  00B2  3465               	retlw	101	;'e'
   596  00B3  3463               	retlw	99	;'c'
   597  00B4  3465               	retlw	101	;'e'
   598  00B5  346E               	retlw	110	;'n'
   599  00B6  3461               	retlw	97	;'a'
   600  00B7  340D               	retlw	13
   601  00B8  3400               	retlw	0
   602  00B9                     STR_3:
   603  00B9  3450               	retlw	80	;'P'
   604  00BA  346F               	retlw	111	;'o'
   605  00BB  3472               	retlw	114	;'r'
   606  00BC  3420               	retlw	32	;' '
   607  00BD  3466               	retlw	102	;'f'
   608  00BE  3461               	retlw	97	;'a'
   609  00BF  3476               	retlw	118	;'v'
   610  00C0  346F               	retlw	111	;'o'
   611  00C1  3472               	retlw	114	;'r'
   612  00C2  3420               	retlw	32	;' '
   613  00C3  3469               	retlw	105	;'i'
   614  00C4  346E               	retlw	110	;'n'
   615  00C5  3467               	retlw	103	;'g'
   616  00C6  3472               	retlw	114	;'r'
   617  00C7  3465               	retlw	101	;'e'
   618  00C8  3473               	retlw	115	;'s'
   619  00C9  3465               	retlw	101	;'e'
   620  00CA  3420               	retlw	32	;' '
   621  00CB  346C               	retlw	108	;'l'
   622  00CC  3461               	retlw	97	;'a'
   623  00CD  3420               	retlw	32	;' '
   624  00CE  3475               	retlw	117	;'u'
   625  00CF  346E               	retlw	110	;'n'
   626  00D0  3469               	retlw	105	;'i'
   627  00D1  3464               	retlw	100	;'d'
   628  00D2  3461               	retlw	97	;'a'
   629  00D3  3464               	retlw	100	;'d'
   630  00D4  340D               	retlw	13
   631  00D5  3400               	retlw	0
   632  00D6                     STR_7:
   633  00D6  340D               	retlw	13
   634  00D7  3456               	retlw	86	;'V'
   635  00D8  346F               	retlw	111	;'o'
   636  00D9  346C               	retlw	108	;'l'
   637  00DA  3474               	retlw	116	;'t'
   638  00DB  3461               	retlw	97	;'a'
   639  00DC  346A               	retlw	106	;'j'
   640  00DD  3465               	retlw	101	;'e'
   641  00DE  3431               	retlw	49	;'1'
   642  00DF  343A               	retlw	58	;':'
   643  00E0  3420               	retlw	32	;' '
   644  00E1  3400               	retlw	0
   645  00E2                     STR_10:
   646  00E2  340D               	retlw	13
   647  00E3  3456               	retlw	86	;'V'
   648  00E4  346F               	retlw	111	;'o'
   649  00E5  346C               	retlw	108	;'l'
   650  00E6  3474               	retlw	116	;'t'
   651  00E7  3461               	retlw	97	;'a'
   652  00E8  346A               	retlw	106	;'j'
   653  00E9  3465               	retlw	101	;'e'
   654  00EA  3432               	retlw	50	;'2'
   655  00EB  343A               	retlw	58	;':'
   656  00EC  3420               	retlw	32	;' '
   657  00ED  3400               	retlw	0
   658  00EE                     STR_9:
   659  00EE  340D               	retlw	13
   660  00EF  340D               	retlw	13
   661  00F0  3400               	retlw	0
   662  00F1                     STR_4:
   663  00F1  3425               	retlw	37	;'%'
   664  00F2  3464               	retlw	100	;'d'
   665  00F3  3400               	retlw	0
   666  00F4                     STR_8:
   667  00F4  342E               	retlw	46	;'.'
   668  00F5  3400               	retlw	0
   669  00EE                     
   670                           	psect	cinit
   671  07F3                     start_initialization:	
   672                           ; #config settings
   673                           
   674  07F3                     __initialization:
   675                           
   676                           ; Clear objects allocated to BANK0
   677  07F3  1383               	bcf	3,7	;select IRP bank0
   678  07F4  3020               	movlw	low __pbssBANK0
   679  07F5  0084               	movwf	4
   680  07F6  3047               	movlw	low (__pbssBANK0+39)
   681  07F7  120A  118A  2115  120A  118A  	fcall	clear_ram0
   682  07FC                     end_of_initialization:	
   683                           ;End of C runtime variable initialization code
   684                           
   685  07FC                     __end_of__initialization:
   686  07FC  0183               	clrf	3
   687  07FD  120A  118A  2E69   	ljmp	_main	;jump to C main() function
   688                           
   689                           	psect	bssBANK0
   690  0020                     __pbssBANK0:
   691  0020                     _u1:
   692  0020                     	ds	1
   693  0021                     _d1:
   694  0021                     	ds	1
   695  0022                     _c1:
   696  0022                     	ds	1
   697  0023                     _residuo:
   698  0023                     	ds	1
   699  0024                     _unidades:
   700  0024                     	ds	1
   701  0025                     _decenas:
   702  0025                     	ds	1
   703  0026                     _centenas:
   704  0026                     	ds	1
   705  0027                     _voltaje_b:
   706  0027                     	ds	1
   707  0028                     _voltaje_a:
   708  0028                     	ds	1
   709  0029                     _s3:
   710  0029                     	ds	10
   711  0033                     _s2:
   712  0033                     	ds	10
   713  003D                     _s1:
   714  003D                     	ds	10
   715                           
   716                           	psect	clrtext
   717  0115                     clear_ram0:	
   718                           ;	Called with FSR containing the base address, and
   719                           ;	W with the last address+1
   720                           
   721  0115  0064               	clrwdt	;clear the watchdog before getting into this loop
   722  0116                     clrloop0:
   723  0116  0180               	clrf	0	;clear RAM location pointed to by FSR
   724  0117  0A84               	incf	4,f	;increment pointer
   725  0118  0604               	xorwf	4,w	;XOR with final address
   726  0119  1903               	btfsc	3,2	;have we reached the end yet?
   727  011A  3400               	retlw	0	;all done for this memory range, return
   728  011B  0604               	xorwf	4,w	;XOR again to restore value
   729  011C  2916               	goto	clrloop0	;do the next byte
   730                           
   731                           	psect	cstackCOMMON
   732  0070                     __pcstackCOMMON:
   733  0070                     ?_isdigit:
   734  0070                     ?_setup:	
   735                           ; 1 bit 
   736                           
   737  0070                     ?_spiWrite:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_spiWrite:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_spiRead:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ??_spiRead:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_division:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_mensaje1:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_mensaje2:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_defensa:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_defensa1:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_defensa2:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_strcat:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_spiInit:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_config_USART:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_config_USART:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ??_isdigit:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_main:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_putch:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_spiReceiveWait:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ??_spiReceiveWait:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_printf:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?___wmul:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0070                     ?___awdiv:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0070                     ?___awmod:	
   804                           ; 2 bytes @ 0x0
   805                           
   806  0070                     ?___lwdiv:	
   807                           ; 2 bytes @ 0x0
   808                           
   809  0070                     putch@dato:	
   810                           ; 2 bytes @ 0x0
   811                           
   812  0070                     spiInit@sDataSample:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     spiWrite@dat:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     _isdigit$1017:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     strcat@from:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ___wmul@multiplier:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ___awdiv@divisor:	
   828                           ; 2 bytes @ 0x0
   829                           
   830  0070                     ___awmod@divisor:	
   831                           ; 2 bytes @ 0x0
   832                           
   833  0070                     ___lwdiv@divisor:	
   834                           ; 2 bytes @ 0x0
   835                           
   836                           
   837                           ; 2 bytes @ 0x0
   838  0070                     	ds	1
   839  0071                     ??_strcat:
   840  0071                     ??_putch:	
   841                           ; 1 bytes @ 0x1
   842                           
   843  0071                     spiInit@sClockIdle:	
   844                           ; 1 bytes @ 0x1
   845                           
   846  0071                     isdigit@c:	
   847                           ; 1 bytes @ 0x1
   848                           
   849                           
   850                           ; 1 bytes @ 0x1
   851  0071                     	ds	1
   852  0072                     spiInit@sTransmitEdge:
   853  0072                     strcat@to:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     ___wmul@multiplicand:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     ___awdiv@dividend:	
   860                           ; 2 bytes @ 0x2
   861                           
   862  0072                     ___awmod@dividend:	
   863                           ; 2 bytes @ 0x2
   864                           
   865  0072                     ___lwdiv@dividend:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 2 bytes @ 0x2
   870  0072                     	ds	1
   871  0073                     ??_spiInit:
   872  0073                     spiInit@sType:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0073                     strcat@cp:	
   876                           ; 1 bytes @ 0x3
   877                           
   878                           
   879                           ; 1 bytes @ 0x3
   880  0073                     	ds	1
   881  0074                     ??_setup:
   882  0074                     ??___wmul:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     ??___awdiv:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??___awmod:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ??___lwdiv:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ___wmul@product:	
   895                           ; 1 bytes @ 0x4
   896                           
   897                           
   898                           ; 2 bytes @ 0x4
   899  0074                     	ds	1
   900  0075                     ___awdiv@counter:
   901  0075                     ___awmod@counter:	
   902                           ; 1 bytes @ 0x5
   903                           
   904  0075                     ___lwdiv@quotient:	
   905                           ; 1 bytes @ 0x5
   906                           
   907                           
   908                           ; 2 bytes @ 0x5
   909  0075                     	ds	1
   910  0076                     ?_atoi:
   911  0076                     ___awdiv@sign:	
   912                           ; 2 bytes @ 0x6
   913                           
   914  0076                     ___awmod@sign:	
   915                           ; 1 bytes @ 0x6
   916                           
   917                           
   918                           ; 1 bytes @ 0x6
   919  0076                     	ds	1
   920  0077                     ___lwdiv@counter:
   921  0077                     ___awdiv@quotient:	
   922                           ; 1 bytes @ 0x7
   923                           
   924                           
   925                           ; 2 bytes @ 0x7
   926  0077                     	ds	1
   927  0078                     ??_atoi:
   928  0078                     ?___lwmod:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0078                     ___lwmod@divisor:	
   932                           ; 2 bytes @ 0x8
   933                           
   934                           
   935                           ; 2 bytes @ 0x8
   936  0078                     	ds	1
   937  0079                     ??_division:
   938                           
   939                           ; 1 bytes @ 0x9
   940  0079                     	ds	1
   941  007A                     atoi@sign:
   942  007A                     ___lwmod@dividend:	
   943                           ; 1 bytes @ 0xA
   944                           
   945                           
   946                           ; 2 bytes @ 0xA
   947  007A                     	ds	1
   948  007B                     atoi@a:
   949                           
   950                           ; 2 bytes @ 0xB
   951  007B                     	ds	1
   952  007C                     ??___lwmod:
   953  007C                     division@dividendo:	
   954                           ; 1 bytes @ 0xC
   955                           
   956                           
   957                           ; 1 bytes @ 0xC
   958  007C                     	ds	1
   959  007D                     ___lwmod@counter:
   960  007D                     atoi@s:	
   961                           ; 1 bytes @ 0xD
   962                           
   963                           
   964                           ; 1 bytes @ 0xD
   965  007D                     	ds	1
   966                           
   967                           	psect	cstackBANK0
   968  0047                     __pcstackBANK0:
   969  0047                     ?__doprnt:
   970  0047                     __doprnt@f:	
   971                           ; 2 bytes @ 0x0
   972                           
   973                           
   974                           ; 1 bytes @ 0x0
   975  0047                     	ds	1
   976  0048                     __doprnt@ap:
   977                           
   978                           ; 1 bytes @ 0x1
   979  0048                     	ds	1
   980  0049                     ??__doprnt:
   981                           
   982                           ; 1 bytes @ 0x2
   983  0049                     	ds	3
   984  004C                     __doprnt@flag:
   985                           
   986                           ; 1 bytes @ 0x5
   987  004C                     	ds	1
   988  004D                     __doprnt@prec:
   989                           
   990                           ; 1 bytes @ 0x6
   991  004D                     	ds	1
   992  004E                     __doprnt@val:
   993                           
   994                           ; 2 bytes @ 0x7
   995  004E                     	ds	2
   996  0050                     __doprnt@c:
   997                           
   998                           ; 1 bytes @ 0x9
   999  0050                     	ds	1
  1000  0051                     __doprnt@pb:
  1001                           
  1002                           ; 1 bytes @ 0xA
  1003  0051                     	ds	1
  1004  0052                     ??_printf:
  1005  0052                     ?_sprintf:	
  1006                           ; 1 bytes @ 0xB
  1007                           
  1008  0052                     sprintf@f:	
  1009                           ; 2 bytes @ 0xB
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0xB
  1013  0052                     	ds	2
  1014  0054                     printf@ap:
  1015                           
  1016                           ; 1 bytes @ 0xD
  1017  0054                     	ds	1
  1018  0055                     ??_sprintf:
  1019  0055                     printf@f:	
  1020                           ; 1 bytes @ 0xE
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0xE
  1024  0055                     	ds	1
  1025  0056                     printf@pb:
  1026                           
  1027                           ; 2 bytes @ 0xF
  1028  0056                     	ds	1
  1029  0057                     sprintf@ap:
  1030                           
  1031                           ; 1 bytes @ 0x10
  1032  0057                     	ds	1
  1033  0058                     ??_mensaje1:
  1034  0058                     ??_mensaje2:	
  1035                           ; 1 bytes @ 0x11
  1036                           
  1037  0058                     ??_defensa:	
  1038                           ; 1 bytes @ 0x11
  1039                           
  1040  0058                     ??_defensa1:	
  1041                           ; 1 bytes @ 0x11
  1042                           
  1043  0058                     ??_defensa2:	
  1044                           ; 1 bytes @ 0x11
  1045                           
  1046  0058                     sprintf@wh:	
  1047                           ; 1 bytes @ 0x11
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x11
  1051  0058                     	ds	1
  1052  0059                     sprintf@pb:
  1053                           
  1054                           ; 2 bytes @ 0x12
  1055  0059                     	ds	2
  1056  005B                     ??_main:
  1057                           
  1058                           ; 1 bytes @ 0x14
  1059  005B                     	ds	3
  1060  005E                     main@completo:
  1061                           
  1062                           ; 2 bytes @ 0x17
  1063  005E                     	ds	2
  1064                           
  1065                           	psect	maintext
  1066  0669                     __pmaintext:	
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 78 in file "master03.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  completo        2   23[BANK0 ] int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : B00/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       2       0       0       0
  1088 ;;      Temps:          0       3       0       0       0
  1089 ;;      Totals:         0       5       0       0       0
  1090 ;;Total ram usage:        5 bytes
  1091 ;; Hardware stack levels required when called:    4
  1092 ;; This function calls:
  1093 ;;		_atoi
  1094 ;;		_defensa
  1095 ;;		_defensa1
  1096 ;;		_defensa2
  1097 ;;		_division
  1098 ;;		_mensaje1
  1099 ;;		_mensaje2
  1100 ;;		_printf
  1101 ;;		_setup
  1102 ;;		_spiRead
  1103 ;;		_spiWrite
  1104 ;;		_sprintf
  1105 ;;		_strcat
  1106 ;; This function is called by:
  1107 ;;		Startup code after reset
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _main
  1113  0669                     _main:
  1114  0669                     l1833:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1117                           
  1118                           
  1119                           ;master03.c: 79:        }
  1120  0669  120A  118A  21DC  120A  118A  	fcall	_setup
  1121  066E                     l1835:
  1122                           
  1123                           ;master03.c: 82:        sprintf(s2, "%d", d1);
  1124  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1125  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0670  1107               	bcf	7,2	;volatile
  1127  0671                     l1837:
  1128                           
  1129                           ;master03.c: 83:        sprintf(s3, "%d", u1);
  1130  0671  30C7               	movlw	199
  1131  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0674  00DB               	movwf	??_main
  1134  0675                     u1497:
  1135  0675  2E76               	nop2
  1136  0676  0BDB               	decfsz	??_main,f
  1137  0677  2E75               	goto	u1497
  1138  0678  2E79               	nop2
  1139  0679                     l1839:
  1140                           
  1141                           ;master03.c: 85:        strcat(s1, s3);
  1142  0679  300A               	movlw	10
  1143  067A  120A  118A  2108  120A  118A  	fcall	_spiWrite
  1144  067F                     l1841:
  1145                           
  1146                           ;master03.c: 86:        int completo = atoi(s1);
  1147  067F  120A  118A  2126  120A  118A  	fcall	_spiRead
  1148  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0686  00DB               	movwf	??_main
  1151  0687  085B               	movf	??_main,w
  1152  0688  00A8               	movwf	_voltaje_a
  1153  0689                     l1843:
  1154                           
  1155                           ;master03.c: 87:        division(completo);
  1156  0689  30C7               	movlw	199
  1157  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1158  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1159  068C  00DB               	movwf	??_main
  1160  068D                     u1507:
  1161  068D  2E8E               	nop2
  1162  068E  0BDB               	decfsz	??_main,f
  1163  068F  2E8D               	goto	u1507
  1164  0690  2E91               	nop2
  1165                           
  1166                           ;master03.c: 89:        TXREG = centenas;
  1167  0691  300A               	movlw	10
  1168  0692  120A  118A  2108  120A  118A  	fcall	_spiWrite
  1169                           
  1170                           ;master03.c: 90:        _delay((unsigned long)((100)*(4000000/4000.0)));
  1171  0697  120A  118A  2126  120A  118A  	fcall	_spiRead
  1172  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1173  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1174  069E  00DB               	movwf	??_main
  1175  069F  085B               	movf	??_main,w
  1176  06A0  00A7               	movwf	_voltaje_b
  1177  06A1                     l1845:
  1178                           
  1179                           ;master03.c: 91:        TXREG = decenas;
  1180  06A1  30C7               	movlw	199
  1181  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1182  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1183  06A4  00DB               	movwf	??_main
  1184  06A5                     u1517:
  1185  06A5  2EA6               	nop2
  1186  06A6  0BDB               	decfsz	??_main,f
  1187  06A7  2EA5               	goto	u1517
  1188  06A8  2EA9               	nop2
  1189  06A9                     l1847:
  1190                           
  1191                           ;master03.c: 93:        TXREG = unidades;
  1192  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1193  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1194  06AB  1507               	bsf	7,2	;volatile
  1195  06AC                     l1849:
  1196                           
  1197                           ;master03.c: 95:        PORTD = completo;
  1198  06AC  3041               	movlw	65
  1199  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1200  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1201  06AF  00DC               	movwf	??_main+1
  1202  06B0  30ED               	movlw	237
  1203  06B1  00DB               	movwf	??_main
  1204  06B2                     u1527:
  1205  06B2  0BDB               	decfsz	??_main,f
  1206  06B3  2EB2               	goto	u1527
  1207  06B4  0BDC               	decfsz	??_main+1,f
  1208  06B5  2EB2               	goto	u1527
  1209  06B6  2EB7               	nop2
  1210                           
  1211                           ;master03.c: 96: 
  1212  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  1213  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  1214  06B9  0828               	movf	_voltaje_a,w
  1215  06BA  120A  118A  23ED  120A  118A  	fcall	_division
  1216  06BF                     l1851:
  1217                           
  1218                           ;master03.c: 97: }
  1219  06BF  120A  118A  22E8  120A  118A  	fcall	_mensaje1
  1220  06C4                     l1853:
  1221                           
  1222                           ;master03.c: 98:     return;
  1223  06C4  3041               	movlw	65
  1224  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1225  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1226  06C7  00DC               	movwf	??_main+1
  1227  06C8  30ED               	movlw	237
  1228  06C9  00DB               	movwf	??_main
  1229  06CA                     u1537:
  1230  06CA  0BDB               	decfsz	??_main,f
  1231  06CB  2ECA               	goto	u1537
  1232  06CC  0BDC               	decfsz	??_main+1,f
  1233  06CD  2ECA               	goto	u1537
  1234  06CE  2ECF               	nop2
  1235  06CF                     l1855:
  1236                           
  1237                           ;master03.c: 99: }
  1238  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1239  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1240  06D1  0827               	movf	_voltaje_b,w
  1241  06D2  120A  118A  23ED  120A  118A  	fcall	_division
  1242  06D7                     l1857:
  1243                           
  1244                           ;master03.c: 100: 
  1245  06D7  120A  118A  233E  120A  118A  	fcall	_mensaje2
  1246                           
  1247                           ;master03.c: 101: 
  1248  06DC  3041               	movlw	65
  1249  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1250  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1251  06DF  00DC               	movwf	??_main+1
  1252  06E0  30ED               	movlw	237
  1253  06E1  00DB               	movwf	??_main
  1254  06E2                     u1547:
  1255  06E2  0BDB               	decfsz	??_main,f
  1256  06E3  2EE2               	goto	u1547
  1257  06E4  0BDC               	decfsz	??_main+1,f
  1258  06E5  2EE2               	goto	u1547
  1259  06E6  2EE7               	nop2
  1260  06E7                     l1859:
  1261                           
  1262                           ;master03.c: 103: void putch(char dato){
  1263  06E7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1264  06E8  120A  118A  21A5  120A  118A  	fcall	_printf
  1265  06ED                     l90:	
  1266                           ;master03.c: 104:     while(TXIF == 0);
  1267                           
  1268  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  1269  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  1270  06EF  1E8C               	btfss	12,5	;volatile
  1271  06F0  2EF2               	goto	u1401
  1272  06F1  2EF3               	goto	u1400
  1273  06F2                     u1401:
  1274  06F2  2EED               	goto	l90
  1275  06F3                     u1400:
  1276  06F3                     l1861:
  1277                           
  1278                           ;master03.c: 105:     TXREG = dato;
  1279  06F3  081A               	movf	26,w	;volatile
  1280  06F4  3ED0               	addlw	208
  1281  06F5  00DB               	movwf	??_main
  1282  06F6  085B               	movf	??_main,w
  1283  06F7  00A2               	movwf	_c1
  1284                           
  1285                           ;master03.c: 107: }
  1286  06F8  2EFE               	goto	l1865
  1287  06F9                     l1863:
  1288                           
  1289                           ;master03.c: 108: 
  1290  06F9  120A  118A  2157  120A  118A  	fcall	_defensa
  1291  06FE                     l1865:
  1292                           
  1293                           ;master03.c: 107: }
  1294  06FE  3033               	movlw	51
  1295  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0701  021A               	subwf	26,w	;volatile
  1298  0702  1803               	skipnc
  1299  0703  2F05               	goto	u1411
  1300  0704  2F06               	goto	u1410
  1301  0705                     u1411:
  1302  0705  2EF9               	goto	l1863
  1303  0706                     u1410:
  1304  0706                     l1867:
  1305                           
  1306                           ;master03.c: 111:     centenas = (dividendo)/100;
  1307  0706  308B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1308  0707  120A  118A  21A5  120A  118A  	fcall	_printf
  1309  070C                     l96:	
  1310                           ;master03.c: 112:     residuo = dividendo%100;
  1311                           
  1312  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1313  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1314  070E  1E8C               	btfss	12,5	;volatile
  1315  070F  2F11               	goto	u1421
  1316  0710  2F12               	goto	u1420
  1317  0711                     u1421:
  1318  0711  2F0C               	goto	l96
  1319  0712                     u1420:
  1320  0712                     l1869:
  1321                           
  1322                           ;master03.c: 113:     decenas = residuo/10;
  1323  0712  081A               	movf	26,w	;volatile
  1324  0713  3ED0               	addlw	208
  1325  0714  00DB               	movwf	??_main
  1326  0715  085B               	movf	??_main,w
  1327  0716  00A1               	movwf	_d1
  1328                           
  1329                           ;master03.c: 115: 
  1330  0717  3002               	movlw	2
  1331  0718  0622               	xorwf	_c1,w
  1332  0719  1D03               	btfss	3,2
  1333  071A  2F1C               	goto	u1431
  1334  071B  2F1D               	goto	u1430
  1335  071C                     u1431:
  1336  071C  2F2B               	goto	l1877
  1337  071D                     u1430:
  1338  071D  2F23               	goto	l1875
  1339  071E                     l1873:
  1340                           
  1341                           ;master03.c: 117:     decenas += 48;
  1342  071E  120A  118A  2171  120A  118A  	fcall	_defensa1
  1343  0723                     l1875:
  1344                           
  1345                           ;master03.c: 116:     centenas += 48;
  1346  0723  3036               	movlw	54
  1347  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0726  021A               	subwf	26,w	;volatile
  1350  0727  1803               	skipnc
  1351  0728  2F2A               	goto	u1441
  1352  0729  2F2B               	goto	u1440
  1353  072A                     u1441:
  1354  072A  2F1E               	goto	l1873
  1355  072B                     u1440:
  1356  072B                     l1877:
  1357                           
  1358                           ;master03.c: 121: 
  1359  072B  30A8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1360  072C  120A  118A  21A5  120A  118A  	fcall	_printf
  1361  0731                     l103:	
  1362                           ;master03.c: 122: void mensaje1(void){
  1363                           
  1364  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0733  1E8C               	btfss	12,5	;volatile
  1367  0734  2F36               	goto	u1451
  1368  0735  2F37               	goto	u1450
  1369  0736                     u1451:
  1370  0736  2F31               	goto	l103
  1371  0737                     u1450:
  1372  0737                     l1879:
  1373                           
  1374                           ;master03.c: 123:     printf("\rVoltaje1: ");
  1375  0737  081A               	movf	26,w	;volatile
  1376  0738  3ED0               	addlw	208
  1377  0739  00DB               	movwf	??_main
  1378  073A  085B               	movf	??_main,w
  1379  073B  00A0               	movwf	_u1
  1380                           
  1381                           ;master03.c: 125:     TXREG = centenas;
  1382  073C  3002               	movlw	2
  1383  073D  0622               	xorwf	_c1,w
  1384  073E  1D03               	btfss	3,2
  1385  073F  2F41               	goto	u1461
  1386  0740  2F42               	goto	u1460
  1387  0741                     u1461:
  1388  0741  2F56               	goto	l1889
  1389  0742                     u1460:
  1390  0742                     l1881:
  1391  0742  3005               	movlw	5
  1392  0743  0621               	xorwf	_d1,w
  1393  0744  1D03               	btfss	3,2
  1394  0745  2F47               	goto	u1471
  1395  0746  2F48               	goto	u1470
  1396  0747                     u1471:
  1397  0747  2F56               	goto	l1889
  1398  0748                     u1470:
  1399  0748  2F4E               	goto	l1887
  1400  0749                     l1885:
  1401                           
  1402                           ;master03.c: 127:     printf(".");
  1403  0749  120A  118A  218B  120A  118A  	fcall	_defensa2
  1404  074E                     l1887:
  1405                           
  1406                           ;master03.c: 126:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1407  074E  3036               	movlw	54
  1408  074F  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0750  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0751  021A               	subwf	26,w	;volatile
  1411  0752  1803               	skipnc
  1412  0753  2F55               	goto	u1481
  1413  0754  2F56               	goto	u1480
  1414  0755                     u1481:
  1415  0755  2F49               	goto	l1885
  1416  0756                     u1480:
  1417  0756                     l1889:
  1418                           
  1419                           ;master03.c: 131:     TXREG = unidades;
  1420  0756  30E0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1421  0757  00DB               	movwf	??_main
  1422  0758  085B               	movf	??_main,w
  1423  0759  00D2               	movwf	sprintf@f
  1424  075A  0822               	movf	_c1,w
  1425  075B  00DC               	movwf	??_main+1
  1426  075C  01DD               	clrf	??_main+2
  1427  075D  085C               	movf	??_main+1,w
  1428  075E  00D3               	movwf	?_sprintf+1
  1429  075F  085D               	movf	??_main+2,w
  1430  0760  00D4               	movwf	?_sprintf+2
  1431  0761  303D               	movlw	(low (_s1| 0))& (0+255)
  1432  0762  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1433                           
  1434                           ;master03.c: 132:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1435  0767  30E0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1436  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1438  076A  00DB               	movwf	??_main
  1439  076B  085B               	movf	??_main,w
  1440  076C  00D2               	movwf	sprintf@f
  1441  076D  0821               	movf	_d1,w
  1442  076E  00DC               	movwf	??_main+1
  1443  076F  01DD               	clrf	??_main+2
  1444  0770  085C               	movf	??_main+1,w
  1445  0771  00D3               	movwf	?_sprintf+1
  1446  0772  085D               	movf	??_main+2,w
  1447  0773  00D4               	movwf	?_sprintf+2
  1448  0774  3033               	movlw	(low (_s2| 0))& (0+255)
  1449  0775  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1450                           
  1451                           ;master03.c: 133:     printf("\r\r");
  1452  077A  30E0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1453  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1454  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1455  077D  00DB               	movwf	??_main
  1456  077E  085B               	movf	??_main,w
  1457  077F  00D2               	movwf	sprintf@f
  1458  0780  0820               	movf	_u1,w
  1459  0781  00DC               	movwf	??_main+1
  1460  0782  01DD               	clrf	??_main+2
  1461  0783  085C               	movf	??_main+1,w
  1462  0784  00D3               	movwf	?_sprintf+1
  1463  0785  085D               	movf	??_main+2,w
  1464  0786  00D4               	movwf	?_sprintf+2
  1465  0787  3029               	movlw	(low (_s3| 0))& (0+255)
  1466  0788  120A  118A  21FB  120A  118A  	fcall	_sprintf
  1467  078D                     l1891:
  1468                           
  1469                           ;master03.c: 134: 
  1470  078D  3033               	movlw	(low (_s2| 0))& (0+255)
  1471  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1472  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0790  00DB               	movwf	??_main
  1474  0791  085B               	movf	??_main,w
  1475  0792  00F0               	movwf	strcat@from
  1476  0793  303D               	movlw	(low (_s1| 0))& (0+255)
  1477  0794  120A  118A  2241  120A  118A  	fcall	_strcat
  1478  0799                     l1893:
  1479                           
  1480                           ;master03.c: 135:     return;
  1481  0799  3029               	movlw	(low (_s3| 0))& (0+255)
  1482  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1483  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1484  079C  00DB               	movwf	??_main
  1485  079D  085B               	movf	??_main,w
  1486  079E  00F0               	movwf	strcat@from
  1487  079F  303D               	movlw	(low (_s1| 0))& (0+255)
  1488  07A0  120A  118A  2241  120A  118A  	fcall	_strcat
  1489  07A5                     l1895:
  1490                           
  1491                           ;master03.c: 136: }
  1492  07A5  303D               	movlw	(low (_s1| 0))& (0+255)
  1493  07A6  120A  118A  24BA  120A  118A  	fcall	_atoi
  1494  07AB  0877               	movf	?_atoi+1,w
  1495  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1496  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1497  07AE  00DF               	movwf	main@completo+1
  1498  07AF  0876               	movf	?_atoi,w
  1499  07B0  00DE               	movwf	main@completo
  1500  07B1                     l1897:
  1501                           
  1502                           ;master03.c: 137: 
  1503  07B1  085E               	movf	main@completo,w
  1504  07B2  120A  118A  23ED  120A  118A  	fcall	_division
  1505  07B7                     l1899:
  1506                           
  1507                           ;master03.c: 138: void mensaje2(void){
  1508  07B7  3082               	movlw	130
  1509  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1510  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1511  07BA  00DC               	movwf	??_main+1
  1512  07BB  30DD               	movlw	221
  1513  07BC  00DB               	movwf	??_main
  1514  07BD                     u1557:
  1515  07BD  0BDB               	decfsz	??_main,f
  1516  07BE  2FBD               	goto	u1557
  1517  07BF  0BDC               	decfsz	??_main+1,f
  1518  07C0  2FBD               	goto	u1557
  1519  07C1                     l1901:
  1520                           
  1521                           ;master03.c: 139:     printf("\rVoltaje2: ");
  1522  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1523  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1524  07C3  0826               	movf	_centenas,w
  1525  07C4  0099               	movwf	25	;volatile
  1526  07C5                     l1903:
  1527                           
  1528                           ;master03.c: 140:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1529  07C5  3082               	movlw	130
  1530  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1531  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1532  07C8  00DC               	movwf	??_main+1
  1533  07C9  30DD               	movlw	221
  1534  07CA  00DB               	movwf	??_main
  1535  07CB                     u1567:
  1536  07CB  0BDB               	decfsz	??_main,f
  1537  07CC  2FCB               	goto	u1567
  1538  07CD  0BDC               	decfsz	??_main+1,f
  1539  07CE  2FCB               	goto	u1567
  1540  07CF                     l1905:
  1541                           
  1542                           ;master03.c: 141:     TXREG = centenas;
  1543  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1544  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1545  07D1  0825               	movf	_decenas,w
  1546  07D2  0099               	movwf	25	;volatile
  1547  07D3                     l1907:
  1548                           
  1549                           ;master03.c: 142:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1550  07D3  3082               	movlw	130
  1551  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1552  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1553  07D6  00DC               	movwf	??_main+1
  1554  07D7  30DD               	movlw	221
  1555  07D8  00DB               	movwf	??_main
  1556  07D9                     u1577:
  1557  07D9  0BDB               	decfsz	??_main,f
  1558  07DA  2FD9               	goto	u1577
  1559  07DB  0BDC               	decfsz	??_main+1,f
  1560  07DC  2FD9               	goto	u1577
  1561  07DD                     l1909:
  1562                           
  1563                           ;master03.c: 143:     printf(".");
  1564  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1565  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1566  07DF  0824               	movf	_unidades,w
  1567  07E0  0099               	movwf	25	;volatile
  1568  07E1                     l1911:
  1569                           
  1570                           ;master03.c: 144:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1571  07E1  3082               	movlw	130
  1572  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1573  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1574  07E4  00DC               	movwf	??_main+1
  1575  07E5  30DD               	movlw	221
  1576  07E6  00DB               	movwf	??_main
  1577  07E7                     u1587:
  1578  07E7  0BDB               	decfsz	??_main,f
  1579  07E8  2FE7               	goto	u1587
  1580  07E9  0BDC               	decfsz	??_main+1,f
  1581  07EA  2FE7               	goto	u1587
  1582  07EB                     l1913:
  1583                           
  1584                           ;master03.c: 145:     TXREG = decenas;
  1585  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  1586  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  1587  07ED  085E               	movf	main@completo,w
  1588  07EE  0088               	movwf	8	;volatile
  1589  07EF  2E6E               	goto	l1835
  1590  07F0  120A  118A  2800   	ljmp	start
  1591  07F3                     __end_of_main:
  1592                           
  1593                           	psect	text1
  1594  0241                     __ptext1:	
  1595 ;; *************** function _strcat *****************
  1596 ;; Defined at:
  1597 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  to              1    wreg     PTR unsigned char 
  1600 ;;		 -> s1(10), 
  1601 ;;  from            1    0[COMMON] PTR const unsigned char 
  1602 ;;		 -> s3(10), s2(10), 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;  to              1    2[COMMON] PTR unsigned char 
  1605 ;;		 -> s1(10), 
  1606 ;;  cp              1    3[COMMON] PTR unsigned char 
  1607 ;;		 -> s1(10), 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      PTR unsigned char 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         1       0       0       0       0
  1618 ;;      Locals:         2       0       0       0       0
  1619 ;;      Temps:          1       0       0       0       0
  1620 ;;      Totals:         4       0       0       0       0
  1621 ;;Total ram usage:        4 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _strcat
  1632  0241                     _strcat:
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1636                           ;strcat@to stored from wreg
  1637  0241  00F2               	movwf	strcat@to
  1638  0242                     l1789:
  1639  0242  0872               	movf	strcat@to,w
  1640  0243  00F1               	movwf	??_strcat
  1641  0244  0871               	movf	??_strcat,w
  1642  0245  00F3               	movwf	strcat@cp
  1643  0246  2A4B               	goto	l1793
  1644  0247                     l1791:
  1645  0247  3001               	movlw	1
  1646  0248  00F1               	movwf	??_strcat
  1647  0249  0871               	movf	??_strcat,w
  1648  024A  07F3               	addwf	strcat@cp,f
  1649  024B                     l1793:
  1650  024B  0873               	movf	strcat@cp,w
  1651  024C  0084               	movwf	4
  1652  024D  1383               	bcf	3,7	;select IRP bank0
  1653  024E  0800               	movf	0,w
  1654  024F  1D03               	btfss	3,2
  1655  0250  2A52               	goto	u1321
  1656  0251  2A53               	goto	u1320
  1657  0252                     u1321:
  1658  0252  2A47               	goto	l1791
  1659  0253                     u1320:
  1660  0253  2A5C               	goto	l1797
  1661  0254                     l1795:
  1662  0254  3001               	movlw	1
  1663  0255  00F1               	movwf	??_strcat
  1664  0256  0871               	movf	??_strcat,w
  1665  0257  07F3               	addwf	strcat@cp,f
  1666  0258  3001               	movlw	1
  1667  0259  00F1               	movwf	??_strcat
  1668  025A  0871               	movf	??_strcat,w
  1669  025B  07F0               	addwf	strcat@from,f
  1670  025C                     l1797:
  1671  025C  0870               	movf	strcat@from,w
  1672  025D  0084               	movwf	4
  1673  025E  0800               	movf	0,w
  1674  025F  00F1               	movwf	??_strcat
  1675  0260  0873               	movf	strcat@cp,w
  1676  0261  0084               	movwf	4
  1677  0262  0871               	movf	??_strcat,w
  1678  0263  0080               	movwf	0
  1679  0264  0800               	movf	0,w
  1680  0265  1D03               	btfss	3,2
  1681  0266  2A68               	goto	u1331
  1682  0267  2A69               	goto	u1330
  1683  0268                     u1331:
  1684  0268  2A54               	goto	l1795
  1685  0269                     u1330:
  1686  0269                     l819:
  1687  0269  0008               	return
  1688  026A                     __end_of_strcat:
  1689                           
  1690                           	psect	text2
  1691  01FB                     __ptext2:	
  1692 ;; *************** function _sprintf *****************
  1693 ;; Defined at:
  1694 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  wh              1    wreg     PTR unsigned char 
  1697 ;;		 -> s3(10), s2(10), s1(10), 
  1698 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1699 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  wh              1   17[BANK0 ] PTR unsigned char 
  1702 ;;		 -> s3(10), s2(10), s1(10), 
  1703 ;;  pb              2   18[BANK0 ] struct __prbuf
  1704 ;;  ap              1   16[BANK0 ] PTR void [1]
  1705 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2   11[BANK0 ] int 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       3       0       0       0
  1716 ;;      Locals:         0       4       0       0       0
  1717 ;;      Temps:          0       2       0       0       0
  1718 ;;      Totals:         0       9       0       0       0
  1719 ;;Total ram usage:        9 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    2
  1722 ;; This function calls:
  1723 ;;		__doprnt
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _sprintf
  1731  01FB                     _sprintf:
  1732                           
  1733                           ;incstack = 0
  1734                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1735                           ;sprintf@wh stored from wreg
  1736  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1737  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1738  01FD  00D8               	movwf	sprintf@wh
  1739  01FE                     l1777:
  1740  01FE  0858               	movf	sprintf@wh,w
  1741  01FF  00D5               	movwf	??_sprintf
  1742  0200  0855               	movf	??_sprintf,w
  1743  0201  00D9               	movwf	sprintf@pb
  1744  0202                     l1779:
  1745  0202  01DA               	clrf	low ((sprintf@pb| 0+1))
  1746  0203                     l1781:
  1747  0203  3053               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1748  0204  00D5               	movwf	??_sprintf
  1749  0205  0855               	movf	??_sprintf,w
  1750  0206  00D7               	movwf	sprintf@ap
  1751  0207                     l1783:
  1752  0207  0852               	movf	sprintf@f,w
  1753  0208  00D5               	movwf	??_sprintf
  1754  0209  0855               	movf	??_sprintf,w
  1755  020A  00C7               	movwf	__doprnt@f
  1756  020B  3057               	movlw	(low (sprintf@ap| 0))& (0+255)
  1757  020C  00D6               	movwf	??_sprintf+1
  1758  020D  0856               	movf	??_sprintf+1,w
  1759  020E  00C8               	movwf	__doprnt@ap
  1760  020F  3059               	movlw	(low (sprintf@pb| 0))& (0+255)
  1761  0210  120A  118A  2535  120A  118A  	fcall	__doprnt
  1762  0215                     l1785:
  1763  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0217  0859               	movf	sprintf@pb,w
  1766  0218  0084               	movwf	4
  1767  0219  1383               	bcf	3,7	;select IRP bank0
  1768  021A  0180               	clrf	0
  1769  021B                     l810:
  1770  021B  0008               	return
  1771  021C                     __end_of_sprintf:
  1772                           
  1773                           	psect	text3
  1774  0108                     __ptext3:	
  1775 ;; *************** function _spiWrite *****************
  1776 ;; Defined at:
  1777 ;;		line 34 in file "SPI.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  dat             1    wreg     unsigned char 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  dat             1    0[COMMON] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         1       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0
  1794 ;;      Totals:         1       0       0       0       0
  1795 ;;Total ram usage:        1 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _spiWrite
  1806  0108                     _spiWrite:
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _spiWrite: [wreg]
  1810                           ;spiWrite@dat stored from wreg
  1811  0108  00F0               	movwf	spiWrite@dat
  1812  0109                     l1713:
  1813                           
  1814                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1815  0109  0870               	movf	spiWrite@dat,w
  1816  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1817  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1818  010C  0093               	movwf	19	;volatile
  1819  010D                     l177:
  1820  010D  0008               	return
  1821  010E                     __end_of_spiWrite:
  1822                           
  1823                           	psect	text4
  1824  0126                     __ptext4:	
  1825 ;; *************** function _spiRead *****************
  1826 ;; Defined at:
  1827 ;;		line 47 in file "SPI.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      unsigned char 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    1
  1848 ;; This function calls:
  1849 ;;		_spiReceiveWait
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _spiRead
  1857  0126                     _spiRead:
  1858  0126                     l1715:	
  1859                           ;incstack = 0
  1860                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1861                           
  1862                           
  1863                           ;SPI.c: 49:     spiReceiveWait();
  1864  0126  120A  118A  210E  120A  118A  	fcall	_spiReceiveWait
  1865  012B                     l1717:
  1866                           
  1867                           ;SPI.c: 50:     return(SSPBUF);
  1868  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1869  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1870  012D  0813               	movf	19,w	;volatile
  1871  012E                     l185:
  1872  012E  0008               	return
  1873  012F                     __end_of_spiRead:
  1874                           
  1875                           	psect	text5
  1876  010E                     __ptext5:	
  1877 ;; *************** function _spiReceiveWait *****************
  1878 ;; Defined at:
  1879 ;;		line 29 in file "SPI.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		None
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0
  1896 ;;      Totals:         0       0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_spiRead
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _spiReceiveWait
  1908  010E                     _spiReceiveWait:
  1909  010E                     l1585:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _spiReceiveWait: []
  1912                           
  1913  010E                     l171:	
  1914                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1915                           
  1916  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1917  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0110  1C14               	btfss	20,0	;volatile
  1919  0111  2913               	goto	u1001
  1920  0112  2914               	goto	u1000
  1921  0113                     u1001:
  1922  0113  290E               	goto	l171
  1923  0114                     u1000:
  1924  0114                     l174:
  1925  0114  0008               	return
  1926  0115                     __end_of_spiReceiveWait:
  1927                           
  1928                           	psect	text6
  1929  01DC                     __ptext6:	
  1930 ;; *************** function _setup *****************
  1931 ;; Defined at:
  1932 ;;		line 231 in file "master03.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    1
  1953 ;; This function calls:
  1954 ;;		_config_USART
  1955 ;;		_spiInit
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _setup
  1963  01DC                     _setup:
  1964  01DC                     l1695:	
  1965                           ;incstack = 0
  1966                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1967                           
  1968  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1969  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1970  01DE  0188               	clrf	8	;volatile
  1971  01DF  0186               	clrf	6	;volatile
  1972  01E0                     l1697:
  1973  01E0  120F               	bcf	15,4	;volatile
  1974  01E1                     l1699:
  1975  01E1  168F               	bsf	15,5	;volatile
  1976  01E2                     l1701:
  1977  01E2  170F               	bsf	15,6	;volatile
  1978  01E3                     l1703:
  1979  01E3  140F               	bsf	15,0	;volatile
  1980  01E4                     l1705:
  1981  01E4  1107               	bcf	7,2	;volatile
  1982  01E5                     l1707:
  1983  01E5  01F0               	clrf	spiInit@sDataSample
  1984  01E6  01F1               	clrf	spiInit@sClockIdle
  1985  01E7  01F2               	clrf	spiInit@sTransmitEdge
  1986  01E8  3020               	movlw	32
  1987  01E9  120A  118A  2141  120A  118A  	fcall	_spiInit
  1988  01EE                     l1709:
  1989  01EE  120A  118A  21C0  120A  118A  	fcall	_config_USART
  1990  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1991  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1992  01F5  0185               	clrf	5	;volatile
  1993  01F6  0186               	clrf	6	;volatile
  1994  01F7  0187               	clrf	7	;volatile
  1995  01F8  0188               	clrf	8	;volatile
  1996  01F9  0189               	clrf	9	;volatile
  1997  01FA                     l151:
  1998  01FA  0008               	return
  1999  01FB                     __end_of_setup:
  2000                           
  2001                           	psect	text7
  2002  0141                     __ptext7:	
  2003 ;; *************** function _spiInit *****************
  2004 ;; Defined at:
  2005 ;;		line 12 in file "SPI.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  sType           1    wreg     enum E1264
  2008 ;;  sDataSample     1    0[COMMON] enum E1272
  2009 ;;  sClockIdle      1    1[COMMON] enum E1276
  2010 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  sType           1    3[COMMON] enum E1264
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         3       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         4       0       0       0       0
  2026 ;;Total ram usage:        4 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_setup
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _spiInit
  2037  0141                     _spiInit:
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2041                           ;spiInit@sType stored from wreg
  2042  0141  00F3               	movwf	spiInit@sType
  2043  0142                     l1545:
  2044                           
  2045                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2046  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0143  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0144  1287               	bcf	7,5	;volatile
  2049                           
  2050                           ;SPI.c: 15:     if(sType & 0b00000100)
  2051  0145  1D73               	btfss	spiInit@sType,2
  2052  0146  2948               	goto	u991
  2053  0147  2949               	goto	u990
  2054  0148                     u991:
  2055  0148  294D               	goto	l1551
  2056  0149                     u990:
  2057  0149                     l1547:
  2058                           
  2059                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2060  0149  0872               	movf	spiInit@sTransmitEdge,w
  2061  014A  0094               	movwf	20	;volatile
  2062  014B                     l1549:
  2063                           
  2064                           ;SPI.c: 18:         TRISC3 = 1;
  2065  014B  1587               	bsf	7,3	;volatile
  2066                           
  2067                           ;SPI.c: 19:     }
  2068  014C  2951               	goto	l167
  2069  014D                     l1551:
  2070                           
  2071                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2072  014D  0870               	movf	spiInit@sDataSample,w
  2073  014E  0472               	iorwf	spiInit@sTransmitEdge,w
  2074  014F  0094               	movwf	20	;volatile
  2075  0150                     l1553:
  2076                           
  2077                           ;SPI.c: 23:         TRISC3 = 0;
  2078  0150  1187               	bcf	7,3	;volatile
  2079  0151                     l167:	
  2080                           ;SPI.c: 24:     }
  2081                           
  2082                           
  2083                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2084  0151  0873               	movf	spiInit@sType,w
  2085  0152  0471               	iorwf	spiInit@sClockIdle,w
  2086  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0155  0094               	movwf	20	;volatile
  2089  0156                     l168:
  2090  0156  0008               	return
  2091  0157                     __end_of_spiInit:
  2092                           
  2093                           	psect	text8
  2094  01C0                     __ptext8:	
  2095 ;; *************** function _config_USART *****************
  2096 ;; Defined at:
  2097 ;;		line 11 in file "config_USART.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_setup
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _config_USART
  2126  01C0                     _config_USART:
  2127  01C0                     l1555:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _config_USART: [wreg+status,2]
  2130                           
  2131                           
  2132                           ;config_USART.c: 13:     SPBRG = 103;
  2133  01C0  3067               	movlw	103
  2134  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2135  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2136  01C3  0099               	movwf	25	;volatile
  2137  01C4                     l1557:
  2138                           
  2139                           ;config_USART.c: 14:     SPBRGH = 0;
  2140  01C4  019A               	clrf	26	;volatile
  2141  01C5                     l1559:
  2142                           
  2143                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  2144  01C5  1683               	bsf	3,5	;RP0=1, select bank3
  2145  01C6  1703               	bsf	3,6	;RP1=1, select bank3
  2146  01C7  1587               	bsf	7,3	;volatile
  2147  01C8                     l1561:
  2148                           
  2149                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  2150  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2151  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  2152  01CA  1518               	bsf	24,2	;volatile
  2153  01CB                     l1563:
  2154                           
  2155                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  2156  01CB  1218               	bcf	24,4	;volatile
  2157  01CC                     l1565:
  2158                           
  2159                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  2160  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  2161  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  2162  01CE  1798               	bsf	24,7	;volatile
  2163  01CF                     l1567:
  2164                           
  2165                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  2166  01CF  1618               	bsf	24,4	;volatile
  2167  01D0                     l1569:
  2168                           
  2169                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  2170  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2171  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2172  01D2  1318               	bcf	24,6	;volatile
  2173  01D3                     l1571:
  2174                           
  2175                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  2176  01D3  1698               	bsf	24,5	;volatile
  2177  01D4                     l1573:
  2178                           
  2179                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  2180  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2181  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2182  01D6  1318               	bcf	24,6	;volatile
  2183  01D7                     l1575:
  2184                           
  2185                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  2186  01D7  178B               	bsf	11,7	;volatile
  2187  01D8                     l1577:
  2188                           
  2189                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  2190  01D8  170B               	bsf	11,6	;volatile
  2191  01D9                     l1579:
  2192                           
  2193                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  2194  01D9  120C               	bcf	12,4	;volatile
  2195  01DA                     l1581:
  2196                           
  2197                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  2198  01DA  128C               	bcf	12,5	;volatile
  2199  01DB                     l202:
  2200  01DB  0008               	return
  2201  01DC                     __end_of_config_USART:
  2202                           
  2203                           	psect	text9
  2204  033E                     __ptext9:	
  2205 ;; *************** function _mensaje2 *****************
  2206 ;; Defined at:
  2207 ;;		line 188 in file "master03.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0
  2223 ;;      Temps:          0       2       0       0       0
  2224 ;;      Totals:         0       2       0       0       0
  2225 ;;Total ram usage:        2 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		_printf
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _mensaje2
  2237  033E                     _mensaje2:
  2238  033E                     l1745:	
  2239                           ;incstack = 0
  2240                           ; Regs used in _mensaje2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2241                           
  2242                           
  2243                           ;master03.c: 189:     OSCCONbits.SCS = 1;
  2244  033E  30D1               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2245  033F  120A  118A  21A5  120A  118A  	fcall	_printf
  2246  0344                     l1747:
  2247                           
  2248                           ;master03.c: 190: 
  2249  0344  3041               	movlw	65
  2250  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2252  0347  00D9               	movwf	??_mensaje2+1
  2253  0348  30ED               	movlw	237
  2254  0349  00D8               	movwf	??_mensaje2
  2255  034A                     u1597:
  2256  034A  0BD8               	decfsz	??_mensaje2,f
  2257  034B  2B4A               	goto	u1597
  2258  034C  0BD9               	decfsz	??_mensaje2+1,f
  2259  034D  2B4A               	goto	u1597
  2260  034E  2B4F               	nop2
  2261  034F                     l1749:
  2262                           
  2263                           ;master03.c: 191: 
  2264  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0351  0826               	movf	_centenas,w
  2267  0352  0099               	movwf	25	;volatile
  2268  0353                     l1751:
  2269                           
  2270                           ;master03.c: 192: 
  2271  0353  3041               	movlw	65
  2272  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0356  00D9               	movwf	??_mensaje2+1
  2275  0357  30ED               	movlw	237
  2276  0358  00D8               	movwf	??_mensaje2
  2277  0359                     u1607:
  2278  0359  0BD8               	decfsz	??_mensaje2,f
  2279  035A  2B59               	goto	u1607
  2280  035B  0BD9               	decfsz	??_mensaje2+1,f
  2281  035C  2B59               	goto	u1607
  2282  035D  2B5E               	nop2
  2283  035E                     l1753:
  2284                           
  2285                           ;master03.c: 193: 
  2286  035E  30E3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2287  035F  120A  118A  21A5  120A  118A  	fcall	_printf
  2288                           
  2289                           ;master03.c: 194:     TRISCbits.TRISC2 = 0;
  2290  0364  3041               	movlw	65
  2291  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0367  00D9               	movwf	??_mensaje2+1
  2294  0368  30ED               	movlw	237
  2295  0369  00D8               	movwf	??_mensaje2
  2296  036A                     u1617:
  2297  036A  0BD8               	decfsz	??_mensaje2,f
  2298  036B  2B6A               	goto	u1617
  2299  036C  0BD9               	decfsz	??_mensaje2+1,f
  2300  036D  2B6A               	goto	u1617
  2301  036E  2B6F               	nop2
  2302                           
  2303                           ;master03.c: 195: 
  2304  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0371  0825               	movf	_decenas,w
  2307  0372  0099               	movwf	25	;volatile
  2308                           
  2309                           ;master03.c: 196: 
  2310  0373  3041               	movlw	65
  2311  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0376  00D9               	movwf	??_mensaje2+1
  2314  0377  30ED               	movlw	237
  2315  0378  00D8               	movwf	??_mensaje2
  2316  0379                     u1627:
  2317  0379  0BD8               	decfsz	??_mensaje2,f
  2318  037A  2B79               	goto	u1627
  2319  037B  0BD9               	decfsz	??_mensaje2+1,f
  2320  037C  2B79               	goto	u1627
  2321  037D  2B7E               	nop2
  2322                           
  2323                           ;master03.c: 197:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW,
  2324  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2325  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0380  0824               	movf	_unidades,w
  2327  0381  0099               	movwf	25	;volatile
  2328                           
  2329                           ;master03.c: 198:             SPI_IDLE_2_ACTIVE);
  2330  0382  3041               	movlw	65
  2331  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0385  00D9               	movwf	??_mensaje2+1
  2334  0386  30ED               	movlw	237
  2335  0387  00D8               	movwf	??_mensaje2
  2336  0388                     u1637:
  2337  0388  0BD8               	decfsz	??_mensaje2,f
  2338  0389  2B88               	goto	u1637
  2339  038A  0BD9               	decfsz	??_mensaje2+1,f
  2340  038B  2B88               	goto	u1637
  2341  038C  2B8D               	nop2
  2342  038D                     l1755:
  2343                           
  2344                           ;master03.c: 199: 
  2345  038D  30DD               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2346  038E  120A  118A  21A5  120A  118A  	fcall	_printf
  2347  0393                     l127:
  2348  0393  0008               	return
  2349  0394                     __end_of_mensaje2:
  2350                           
  2351                           	psect	text10
  2352  02E8                     __ptext10:	
  2353 ;; *************** function _mensaje1 *****************
  2354 ;; Defined at:
  2355 ;;		line 172 in file "master03.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0
  2371 ;;      Temps:          0       2       0       0       0
  2372 ;;      Totals:         0       2       0       0       0
  2373 ;;Total ram usage:        2 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    3
  2376 ;; This function calls:
  2377 ;;		_printf
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _mensaje1
  2385  02E8                     _mensaje1:
  2386  02E8                     l1731:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _mensaje1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2389                           
  2390                           
  2391                           ;master03.c: 173:        }
  2392  02E8  30C5               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2393  02E9  120A  118A  21A5  120A  118A  	fcall	_printf
  2394  02EE                     l1733:
  2395                           
  2396                           ;master03.c: 174:        while(RCIF == 0);
  2397  02EE  3041               	movlw	65
  2398  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2399  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2400  02F1  00D9               	movwf	??_mensaje1+1
  2401  02F2  30ED               	movlw	237
  2402  02F3  00D8               	movwf	??_mensaje1
  2403  02F4                     u1647:
  2404  02F4  0BD8               	decfsz	??_mensaje1,f
  2405  02F5  2AF4               	goto	u1647
  2406  02F6  0BD9               	decfsz	??_mensaje1+1,f
  2407  02F7  2AF4               	goto	u1647
  2408  02F8  2AF9               	nop2
  2409  02F9                     l1735:
  2410                           
  2411                           ;master03.c: 175:        u1 = RCREG -48;
  2412  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2413  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2414  02FB  0826               	movf	_centenas,w
  2415  02FC  0099               	movwf	25	;volatile
  2416  02FD                     l1737:
  2417                           
  2418                           ;master03.c: 176: }
  2419  02FD  3041               	movlw	65
  2420  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2421  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0300  00D9               	movwf	??_mensaje1+1
  2423  0301  30ED               	movlw	237
  2424  0302  00D8               	movwf	??_mensaje1
  2425  0303                     u1657:
  2426  0303  0BD8               	decfsz	??_mensaje1,f
  2427  0304  2B03               	goto	u1657
  2428  0305  0BD9               	decfsz	??_mensaje1+1,f
  2429  0306  2B03               	goto	u1657
  2430  0307  2B08               	nop2
  2431  0308                     l1739:
  2432                           
  2433                           ;master03.c: 177: 
  2434  0308  30E3               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2435  0309  120A  118A  21A5  120A  118A  	fcall	_printf
  2436                           
  2437                           ;master03.c: 178: 
  2438  030E  3041               	movlw	65
  2439  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0311  00D9               	movwf	??_mensaje1+1
  2442  0312  30ED               	movlw	237
  2443  0313  00D8               	movwf	??_mensaje1
  2444  0314                     u1667:
  2445  0314  0BD8               	decfsz	??_mensaje1,f
  2446  0315  2B14               	goto	u1667
  2447  0316  0BD9               	decfsz	??_mensaje1+1,f
  2448  0317  2B14               	goto	u1667
  2449  0318  2B19               	nop2
  2450                           
  2451                           ;master03.c: 179: 
  2452  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2453  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2454  031B  0825               	movf	_decenas,w
  2455  031C  0099               	movwf	25	;volatile
  2456                           
  2457                           ;master03.c: 180: 
  2458  031D  3041               	movlw	65
  2459  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2460  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0320  00D9               	movwf	??_mensaje1+1
  2462  0321  30ED               	movlw	237
  2463  0322  00D8               	movwf	??_mensaje1
  2464  0323                     u1677:
  2465  0323  0BD8               	decfsz	??_mensaje1,f
  2466  0324  2B23               	goto	u1677
  2467  0325  0BD9               	decfsz	??_mensaje1+1,f
  2468  0326  2B23               	goto	u1677
  2469  0327  2B28               	nop2
  2470                           
  2471                           ;master03.c: 181: void setup(void){
  2472  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2474  032A  0824               	movf	_unidades,w
  2475  032B  0099               	movwf	25	;volatile
  2476                           
  2477                           ;master03.c: 182: 
  2478  032C  3041               	movlw	65
  2479  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2480  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2481  032F  00D9               	movwf	??_mensaje1+1
  2482  0330  30ED               	movlw	237
  2483  0331  00D8               	movwf	??_mensaje1
  2484  0332                     u1687:
  2485  0332  0BD8               	decfsz	??_mensaje1,f
  2486  0333  2B32               	goto	u1687
  2487  0334  0BD9               	decfsz	??_mensaje1+1,f
  2488  0335  2B32               	goto	u1687
  2489  0336  2B37               	nop2
  2490  0337                     l1741:
  2491                           
  2492                           ;master03.c: 183:     TRISD = 0x00;
  2493  0337  30DD               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2494  0338  120A  118A  21A5  120A  118A  	fcall	_printf
  2495  033D                     l124:
  2496  033D  0008               	return
  2497  033E                     __end_of_mensaje1:
  2498                           
  2499                           	psect	text11
  2500  03ED                     __ptext11:	
  2501 ;; *************** function _division *****************
  2502 ;; Defined at:
  2503 ;;		line 159 in file "master03.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  dividendo       1    wreg     unsigned char 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  dividendo       1   12[COMMON] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0
  2519 ;;      Temps:          3       0       0       0       0
  2520 ;;      Totals:         4       0       0       0       0
  2521 ;;Total ram usage:        4 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    1
  2524 ;; This function calls:
  2525 ;;		___awdiv
  2526 ;;		___awmod
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _division
  2534  03ED                     _division:
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2538                           ;division@dividendo stored from wreg
  2539  03ED  00FC               	movwf	division@dividendo
  2540  03EE                     l1721:
  2541                           
  2542                           ;master03.c: 161: 
  2543  03EE  3064               	movlw	100
  2544  03EF  00F0               	movwf	___awdiv@divisor
  2545  03F0  3000               	movlw	0
  2546  03F1  00F1               	movwf	___awdiv@divisor+1
  2547  03F2  087C               	movf	division@dividendo,w
  2548  03F3  00F9               	movwf	??_division
  2549  03F4  01FA               	clrf	??_division+1
  2550  03F5  0879               	movf	??_division,w
  2551  03F6  00F2               	movwf	___awdiv@dividend
  2552  03F7  087A               	movf	??_division+1,w
  2553  03F8  00F3               	movwf	___awdiv@dividend+1
  2554  03F9  120A  118A  2453  120A  118A  	fcall	___awdiv
  2555  03FE  0870               	movf	?___awdiv,w
  2556  03FF  00FB               	movwf	??_division+2
  2557  0400  087B               	movf	??_division+2,w
  2558  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0403  00A6               	movwf	_centenas
  2561                           
  2562                           ;master03.c: 162: void defensa1(void){
  2563  0404  3064               	movlw	100
  2564  0405  00F0               	movwf	___awmod@divisor
  2565  0406  3000               	movlw	0
  2566  0407  00F1               	movwf	___awmod@divisor+1
  2567  0408  087C               	movf	division@dividendo,w
  2568  0409  00F9               	movwf	??_division
  2569  040A  01FA               	clrf	??_division+1
  2570  040B  0879               	movf	??_division,w
  2571  040C  00F2               	movwf	___awmod@dividend
  2572  040D  087A               	movf	??_division+1,w
  2573  040E  00F3               	movwf	___awmod@dividend+1
  2574  040F  120A  118A  2394  120A  118A  	fcall	___awmod
  2575  0414  0870               	movf	?___awmod,w
  2576  0415  00FB               	movwf	??_division+2
  2577  0416  087B               	movf	??_division+2,w
  2578  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0419  00A3               	movwf	_residuo
  2581                           
  2582                           ;master03.c: 163:     if(RCREG > 5){
  2583  041A  300A               	movlw	10
  2584  041B  00F0               	movwf	___awdiv@divisor
  2585  041C  3000               	movlw	0
  2586  041D  00F1               	movwf	___awdiv@divisor+1
  2587  041E  0823               	movf	_residuo,w
  2588  041F  00F9               	movwf	??_division
  2589  0420  01FA               	clrf	??_division+1
  2590  0421  0879               	movf	??_division,w
  2591  0422  00F2               	movwf	___awdiv@dividend
  2592  0423  087A               	movf	??_division+1,w
  2593  0424  00F3               	movwf	___awdiv@dividend+1
  2594  0425  120A  118A  2453  120A  118A  	fcall	___awdiv
  2595  042A  0870               	movf	?___awdiv,w
  2596  042B  00FB               	movwf	??_division+2
  2597  042C  087B               	movf	??_division+2,w
  2598  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2599  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2600  042F  00A5               	movwf	_decenas
  2601                           
  2602                           ;master03.c: 164:            printf("Introduzca un valor menor o igual a 5\r");
  2603  0430  300A               	movlw	10
  2604  0431  00F0               	movwf	___awmod@divisor
  2605  0432  3000               	movlw	0
  2606  0433  00F1               	movwf	___awmod@divisor+1
  2607  0434  0823               	movf	_residuo,w
  2608  0435  00F9               	movwf	??_division
  2609  0436  01FA               	clrf	??_division+1
  2610  0437  0879               	movf	??_division,w
  2611  0438  00F2               	movwf	___awmod@dividend
  2612  0439  087A               	movf	??_division+1,w
  2613  043A  00F3               	movwf	___awmod@dividend+1
  2614  043B  120A  118A  2394  120A  118A  	fcall	___awmod
  2615  0440  0870               	movf	?___awmod,w
  2616  0441  00FB               	movwf	??_division+2
  2617  0442  087B               	movf	??_division+2,w
  2618  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0445  00A4               	movwf	_unidades
  2621  0446                     l1723:
  2622                           
  2623                           ;master03.c: 166:        while(RCIF == 0);
  2624  0446  3030               	movlw	48
  2625  0447  00F9               	movwf	??_division
  2626  0448  0879               	movf	??_division,w
  2627  0449  07A6               	addwf	_centenas,f
  2628  044A                     l1725:
  2629                           
  2630                           ;master03.c: 167:        d1 = RCREG -48;
  2631  044A  3030               	movlw	48
  2632  044B  00F9               	movwf	??_division
  2633  044C  0879               	movf	??_division,w
  2634  044D  07A5               	addwf	_decenas,f
  2635  044E                     l1727:
  2636                           
  2637                           ;master03.c: 168: }
  2638  044E  3030               	movlw	48
  2639  044F  00F9               	movwf	??_division
  2640  0450  0879               	movf	??_division,w
  2641  0451  07A4               	addwf	_unidades,f
  2642  0452                     l121:
  2643  0452  0008               	return
  2644  0453                     __end_of_division:
  2645                           
  2646                           	psect	text12
  2647  0394                     __ptext12:	
  2648 ;; *************** function ___awmod *****************
  2649 ;; Defined at:
  2650 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  divisor         2    0[COMMON] int 
  2653 ;;  dividend        2    2[COMMON] int 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  sign            1    6[COMMON] unsigned char 
  2656 ;;  counter         1    5[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  2    0[COMMON] int 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         4       0       0       0       0
  2667 ;;      Locals:         2       0       0       0       0
  2668 ;;      Temps:          1       0       0       0       0
  2669 ;;      Totals:         7       0       0       0       0
  2670 ;;Total ram usage:        7 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; This function calls:
  2673 ;;		Nothing
  2674 ;; This function is called by:
  2675 ;;		_division
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function ___awmod
  2681  0394                     ___awmod:
  2682  0394                     l1645:	
  2683                           ;incstack = 0
  2684                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2685                           
  2686  0394  01F6               	clrf	___awmod@sign
  2687  0395                     l1647:
  2688  0395  1FF3               	btfss	___awmod@dividend+1,7
  2689  0396  2B98               	goto	u1151
  2690  0397  2B99               	goto	u1150
  2691  0398                     u1151:
  2692  0398  2BA0               	goto	l1653
  2693  0399                     u1150:
  2694  0399                     l1649:
  2695  0399  09F2               	comf	___awmod@dividend,f
  2696  039A  09F3               	comf	___awmod@dividend+1,f
  2697  039B  0AF2               	incf	___awmod@dividend,f
  2698  039C  1903               	skipnz
  2699  039D  0AF3               	incf	___awmod@dividend+1,f
  2700  039E                     l1651:
  2701  039E  01F6               	clrf	___awmod@sign
  2702  039F  0AF6               	incf	___awmod@sign,f
  2703  03A0                     l1653:
  2704  03A0  1FF1               	btfss	___awmod@divisor+1,7
  2705  03A1  2BA3               	goto	u1161
  2706  03A2  2BA4               	goto	u1160
  2707  03A3                     u1161:
  2708  03A3  2BA9               	goto	l1657
  2709  03A4                     u1160:
  2710  03A4                     l1655:
  2711  03A4  09F0               	comf	___awmod@divisor,f
  2712  03A5  09F1               	comf	___awmod@divisor+1,f
  2713  03A6  0AF0               	incf	___awmod@divisor,f
  2714  03A7  1903               	skipnz
  2715  03A8  0AF1               	incf	___awmod@divisor+1,f
  2716  03A9                     l1657:
  2717  03A9  0870               	movf	___awmod@divisor,w
  2718  03AA  0471               	iorwf	___awmod@divisor+1,w
  2719  03AB  1903               	btfsc	3,2
  2720  03AC  2BAE               	goto	u1171
  2721  03AD  2BAF               	goto	u1170
  2722  03AE                     u1171:
  2723  03AE  2BDE               	goto	l1675
  2724  03AF                     u1170:
  2725  03AF                     l1659:
  2726  03AF  01F5               	clrf	___awmod@counter
  2727  03B0  0AF5               	incf	___awmod@counter,f
  2728  03B1  2BBD               	goto	l1665
  2729  03B2                     l1661:
  2730  03B2  3001               	movlw	1
  2731  03B3                     u1185:
  2732  03B3  1003               	clrc
  2733  03B4  0DF0               	rlf	___awmod@divisor,f
  2734  03B5  0DF1               	rlf	___awmod@divisor+1,f
  2735  03B6  3EFF               	addlw	-1
  2736  03B7  1D03               	skipz
  2737  03B8  2BB3               	goto	u1185
  2738  03B9                     l1663:
  2739  03B9  3001               	movlw	1
  2740  03BA  00F4               	movwf	??___awmod
  2741  03BB  0874               	movf	??___awmod,w
  2742  03BC  07F5               	addwf	___awmod@counter,f
  2743  03BD                     l1665:
  2744  03BD  1FF1               	btfss	___awmod@divisor+1,7
  2745  03BE  2BC0               	goto	u1191
  2746  03BF  2BC1               	goto	u1190
  2747  03C0                     u1191:
  2748  03C0  2BB2               	goto	l1661
  2749  03C1                     u1190:
  2750  03C1                     l1667:
  2751  03C1  0871               	movf	___awmod@divisor+1,w
  2752  03C2  0273               	subwf	___awmod@dividend+1,w
  2753  03C3  1D03               	skipz
  2754  03C4  2BC7               	goto	u1205
  2755  03C5  0870               	movf	___awmod@divisor,w
  2756  03C6  0272               	subwf	___awmod@dividend,w
  2757  03C7                     u1205:
  2758  03C7  1C03               	skipc
  2759  03C8  2BCA               	goto	u1201
  2760  03C9  2BCB               	goto	u1200
  2761  03CA                     u1201:
  2762  03CA  2BD1               	goto	l1671
  2763  03CB                     u1200:
  2764  03CB                     l1669:
  2765  03CB  0870               	movf	___awmod@divisor,w
  2766  03CC  02F2               	subwf	___awmod@dividend,f
  2767  03CD  0871               	movf	___awmod@divisor+1,w
  2768  03CE  1C03               	skipc
  2769  03CF  03F3               	decf	___awmod@dividend+1,f
  2770  03D0  02F3               	subwf	___awmod@dividend+1,f
  2771  03D1                     l1671:
  2772  03D1  3001               	movlw	1
  2773  03D2                     u1215:
  2774  03D2  1003               	clrc
  2775  03D3  0CF1               	rrf	___awmod@divisor+1,f
  2776  03D4  0CF0               	rrf	___awmod@divisor,f
  2777  03D5  3EFF               	addlw	-1
  2778  03D6  1D03               	skipz
  2779  03D7  2BD2               	goto	u1215
  2780  03D8                     l1673:
  2781  03D8  3001               	movlw	1
  2782  03D9  02F5               	subwf	___awmod@counter,f
  2783  03DA  1D03               	btfss	3,2
  2784  03DB  2BDD               	goto	u1221
  2785  03DC  2BDE               	goto	u1220
  2786  03DD                     u1221:
  2787  03DD  2BC1               	goto	l1667
  2788  03DE                     u1220:
  2789  03DE                     l1675:
  2790  03DE  0876               	movf	___awmod@sign,w
  2791  03DF  1903               	btfsc	3,2
  2792  03E0  2BE2               	goto	u1231
  2793  03E1  2BE3               	goto	u1230
  2794  03E2                     u1231:
  2795  03E2  2BE8               	goto	l1679
  2796  03E3                     u1230:
  2797  03E3                     l1677:
  2798  03E3  09F2               	comf	___awmod@dividend,f
  2799  03E4  09F3               	comf	___awmod@dividend+1,f
  2800  03E5  0AF2               	incf	___awmod@dividend,f
  2801  03E6  1903               	skipnz
  2802  03E7  0AF3               	incf	___awmod@dividend+1,f
  2803  03E8                     l1679:
  2804  03E8  0873               	movf	___awmod@dividend+1,w
  2805  03E9  00F1               	movwf	?___awmod+1
  2806  03EA  0872               	movf	___awmod@dividend,w
  2807  03EB  00F0               	movwf	?___awmod
  2808  03EC                     l454:
  2809  03EC  0008               	return
  2810  03ED                     __end_of___awmod:
  2811                           
  2812                           	psect	text13
  2813  0453                     __ptext13:	
  2814 ;; *************** function ___awdiv *****************
  2815 ;; Defined at:
  2816 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  divisor         2    0[COMMON] int 
  2819 ;;  dividend        2    2[COMMON] int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  quotient        2    7[COMMON] int 
  2822 ;;  sign            1    6[COMMON] unsigned char 
  2823 ;;  counter         1    5[COMMON] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  2    0[COMMON] int 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         4       0       0       0       0
  2834 ;;      Locals:         4       0       0       0       0
  2835 ;;      Temps:          1       0       0       0       0
  2836 ;;      Totals:         9       0       0       0       0
  2837 ;;Total ram usage:        9 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_division
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function ___awdiv
  2848  0453                     ___awdiv:
  2849  0453                     l1601:	
  2850                           ;incstack = 0
  2851                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2852                           
  2853  0453  01F6               	clrf	___awdiv@sign
  2854  0454                     l1603:
  2855  0454  1FF1               	btfss	___awdiv@divisor+1,7
  2856  0455  2C57               	goto	u1051
  2857  0456  2C58               	goto	u1050
  2858  0457                     u1051:
  2859  0457  2C5F               	goto	l1609
  2860  0458                     u1050:
  2861  0458                     l1605:
  2862  0458  09F0               	comf	___awdiv@divisor,f
  2863  0459  09F1               	comf	___awdiv@divisor+1,f
  2864  045A  0AF0               	incf	___awdiv@divisor,f
  2865  045B  1903               	skipnz
  2866  045C  0AF1               	incf	___awdiv@divisor+1,f
  2867  045D                     l1607:
  2868  045D  01F6               	clrf	___awdiv@sign
  2869  045E  0AF6               	incf	___awdiv@sign,f
  2870  045F                     l1609:
  2871  045F  1FF3               	btfss	___awdiv@dividend+1,7
  2872  0460  2C62               	goto	u1061
  2873  0461  2C63               	goto	u1060
  2874  0462                     u1061:
  2875  0462  2C6C               	goto	l1615
  2876  0463                     u1060:
  2877  0463                     l1611:
  2878  0463  09F2               	comf	___awdiv@dividend,f
  2879  0464  09F3               	comf	___awdiv@dividend+1,f
  2880  0465  0AF2               	incf	___awdiv@dividend,f
  2881  0466  1903               	skipnz
  2882  0467  0AF3               	incf	___awdiv@dividend+1,f
  2883  0468                     l1613:
  2884  0468  3001               	movlw	1
  2885  0469  00F4               	movwf	??___awdiv
  2886  046A  0874               	movf	??___awdiv,w
  2887  046B  06F6               	xorwf	___awdiv@sign,f
  2888  046C                     l1615:
  2889  046C  01F7               	clrf	___awdiv@quotient
  2890  046D  01F8               	clrf	___awdiv@quotient+1
  2891  046E                     l1617:
  2892  046E  0870               	movf	___awdiv@divisor,w
  2893  046F  0471               	iorwf	___awdiv@divisor+1,w
  2894  0470  1903               	btfsc	3,2
  2895  0471  2C73               	goto	u1071
  2896  0472  2C74               	goto	u1070
  2897  0473                     u1071:
  2898  0473  2CAB               	goto	l1637
  2899  0474                     u1070:
  2900  0474                     l1619:
  2901  0474  01F5               	clrf	___awdiv@counter
  2902  0475  0AF5               	incf	___awdiv@counter,f
  2903  0476  2C82               	goto	l1625
  2904  0477                     l1621:
  2905  0477  3001               	movlw	1
  2906  0478                     u1085:
  2907  0478  1003               	clrc
  2908  0479  0DF0               	rlf	___awdiv@divisor,f
  2909  047A  0DF1               	rlf	___awdiv@divisor+1,f
  2910  047B  3EFF               	addlw	-1
  2911  047C  1D03               	skipz
  2912  047D  2C78               	goto	u1085
  2913  047E                     l1623:
  2914  047E  3001               	movlw	1
  2915  047F  00F4               	movwf	??___awdiv
  2916  0480  0874               	movf	??___awdiv,w
  2917  0481  07F5               	addwf	___awdiv@counter,f
  2918  0482                     l1625:
  2919  0482  1FF1               	btfss	___awdiv@divisor+1,7
  2920  0483  2C85               	goto	u1091
  2921  0484  2C86               	goto	u1090
  2922  0485                     u1091:
  2923  0485  2C77               	goto	l1621
  2924  0486                     u1090:
  2925  0486                     l1627:
  2926  0486  3001               	movlw	1
  2927  0487                     u1105:
  2928  0487  1003               	clrc
  2929  0488  0DF7               	rlf	___awdiv@quotient,f
  2930  0489  0DF8               	rlf	___awdiv@quotient+1,f
  2931  048A  3EFF               	addlw	-1
  2932  048B  1D03               	skipz
  2933  048C  2C87               	goto	u1105
  2934  048D  0871               	movf	___awdiv@divisor+1,w
  2935  048E  0273               	subwf	___awdiv@dividend+1,w
  2936  048F  1D03               	skipz
  2937  0490  2C93               	goto	u1115
  2938  0491  0870               	movf	___awdiv@divisor,w
  2939  0492  0272               	subwf	___awdiv@dividend,w
  2940  0493                     u1115:
  2941  0493  1C03               	skipc
  2942  0494  2C96               	goto	u1111
  2943  0495  2C97               	goto	u1110
  2944  0496                     u1111:
  2945  0496  2C9E               	goto	l1633
  2946  0497                     u1110:
  2947  0497                     l1629:
  2948  0497  0870               	movf	___awdiv@divisor,w
  2949  0498  02F2               	subwf	___awdiv@dividend,f
  2950  0499  0871               	movf	___awdiv@divisor+1,w
  2951  049A  1C03               	skipc
  2952  049B  03F3               	decf	___awdiv@dividend+1,f
  2953  049C  02F3               	subwf	___awdiv@dividend+1,f
  2954  049D                     l1631:
  2955  049D  1477               	bsf	___awdiv@quotient,0
  2956  049E                     l1633:
  2957  049E  3001               	movlw	1
  2958  049F                     u1125:
  2959  049F  1003               	clrc
  2960  04A0  0CF1               	rrf	___awdiv@divisor+1,f
  2961  04A1  0CF0               	rrf	___awdiv@divisor,f
  2962  04A2  3EFF               	addlw	-1
  2963  04A3  1D03               	skipz
  2964  04A4  2C9F               	goto	u1125
  2965  04A5                     l1635:
  2966  04A5  3001               	movlw	1
  2967  04A6  02F5               	subwf	___awdiv@counter,f
  2968  04A7  1D03               	btfss	3,2
  2969  04A8  2CAA               	goto	u1131
  2970  04A9  2CAB               	goto	u1130
  2971  04AA                     u1131:
  2972  04AA  2C86               	goto	l1627
  2973  04AB                     u1130:
  2974  04AB                     l1637:
  2975  04AB  0876               	movf	___awdiv@sign,w
  2976  04AC  1903               	btfsc	3,2
  2977  04AD  2CAF               	goto	u1141
  2978  04AE  2CB0               	goto	u1140
  2979  04AF                     u1141:
  2980  04AF  2CB5               	goto	l1641
  2981  04B0                     u1140:
  2982  04B0                     l1639:
  2983  04B0  09F7               	comf	___awdiv@quotient,f
  2984  04B1  09F8               	comf	___awdiv@quotient+1,f
  2985  04B2  0AF7               	incf	___awdiv@quotient,f
  2986  04B3  1903               	skipnz
  2987  04B4  0AF8               	incf	___awdiv@quotient+1,f
  2988  04B5                     l1641:
  2989  04B5  0878               	movf	___awdiv@quotient+1,w
  2990  04B6  00F1               	movwf	?___awdiv+1
  2991  04B7  0877               	movf	___awdiv@quotient,w
  2992  04B8  00F0               	movwf	?___awdiv
  2993  04B9                     l441:
  2994  04B9  0008               	return
  2995  04BA                     __end_of___awdiv:
  2996                           
  2997                           	psect	text14
  2998  018B                     __ptext14:	
  2999 ;; *************** function _defensa2 *****************
  3000 ;; Defined at:
  3001 ;;		line 220 in file "master03.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0
  3017 ;;      Temps:          0       1       0       0       0
  3018 ;;      Totals:         0       1       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    3
  3022 ;; This function calls:
  3023 ;;		_printf
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _defensa2
  3031  018B                     _defensa2:
  3032  018B                     l1771:	
  3033                           ;incstack = 0
  3034                           ; Regs used in _defensa2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3035                           
  3036  018B  3006               	movlw	6
  3037  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3038  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3039  018E  021A               	subwf	26,w	;volatile
  3040  018F  1C03               	skipc
  3041  0190  2992               	goto	u1301
  3042  0191  2993               	goto	u1300
  3043  0192                     u1301:
  3044  0192  2999               	goto	l145
  3045  0193                     u1300:
  3046  0193                     l1773:
  3047  0193  303F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3048  0194  120A  118A  21A5  120A  118A  	fcall	_printf
  3049  0199                     l145:
  3050  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3051  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3052  019B  1E8C               	btfss	12,5	;volatile
  3053  019C  299E               	goto	u1311
  3054  019D  299F               	goto	u1310
  3055  019E                     u1311:
  3056  019E  2999               	goto	l145
  3057  019F                     u1310:
  3058  019F                     l1775:
  3059  019F  081A               	movf	26,w	;volatile
  3060  01A0  3ED0               	addlw	208
  3061  01A1  00D8               	movwf	??_defensa2
  3062  01A2  0858               	movf	??_defensa2,w
  3063  01A3  00A0               	movwf	_u1
  3064  01A4                     l148:
  3065  01A4  0008               	return
  3066  01A5                     __end_of_defensa2:
  3067                           
  3068                           	psect	text15
  3069  0171                     __ptext15:	
  3070 ;; *************** function _defensa1 *****************
  3071 ;; Defined at:
  3072 ;;		line 212 in file "master03.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       1       0       0       0
  3089 ;;      Totals:         0       1       0       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		_printf
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _defensa1
  3102  0171                     _defensa1:
  3103  0171                     l1765:	
  3104                           ;incstack = 0
  3105                           ; Regs used in _defensa1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3106                           
  3107  0171  3006               	movlw	6
  3108  0172  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0173  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0174  021A               	subwf	26,w	;volatile
  3111  0175  1C03               	skipc
  3112  0176  2978               	goto	u1281
  3113  0177  2979               	goto	u1280
  3114  0178                     u1281:
  3115  0178  297F               	goto	l138
  3116  0179                     u1280:
  3117  0179                     l1767:
  3118  0179  303F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3119  017A  120A  118A  21A5  120A  118A  	fcall	_printf
  3120  017F                     l138:
  3121  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0181  1E8C               	btfss	12,5	;volatile
  3124  0182  2984               	goto	u1291
  3125  0183  2985               	goto	u1290
  3126  0184                     u1291:
  3127  0184  297F               	goto	l138
  3128  0185                     u1290:
  3129  0185                     l1769:
  3130  0185  081A               	movf	26,w	;volatile
  3131  0186  3ED0               	addlw	208
  3132  0187  00D8               	movwf	??_defensa1
  3133  0188  0858               	movf	??_defensa1,w
  3134  0189  00A1               	movwf	_d1
  3135  018A                     l141:
  3136  018A  0008               	return
  3137  018B                     __end_of_defensa1:
  3138                           
  3139                           	psect	text16
  3140  0157                     __ptext16:	
  3141 ;; *************** function _defensa *****************
  3142 ;; Defined at:
  3143 ;;		line 204 in file "master03.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3157 ;;      Params:         0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0
  3159 ;;      Temps:          0       1       0       0       0
  3160 ;;      Totals:         0       1       0       0       0
  3161 ;;Total ram usage:        1 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    3
  3164 ;; This function calls:
  3165 ;;		_printf
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _defensa
  3173  0157                     _defensa:
  3174  0157                     l1759:	
  3175                           ;incstack = 0
  3176                           ; Regs used in _defensa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3177                           
  3178                           
  3179                           ;master03.c: 205:     PORTC = 0x00;
  3180  0157  3003               	movlw	3
  3181  0158  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0159  1303               	bcf	3,6	;RP1=0, select bank0
  3183  015A  021A               	subwf	26,w	;volatile
  3184  015B  1C03               	skipc
  3185  015C  295E               	goto	u1261
  3186  015D  295F               	goto	u1260
  3187  015E                     u1261:
  3188  015E  2965               	goto	l131
  3189  015F                     u1260:
  3190  015F                     l1761:
  3191                           
  3192                           ;master03.c: 206:     PORTD = 0x00;
  3193  015F  3066               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3194  0160  120A  118A  21A5  120A  118A  	fcall	_printf
  3195  0165                     l131:
  3196  0165  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0166  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0167  1E8C               	btfss	12,5	;volatile
  3199  0168  296A               	goto	u1271
  3200  0169  296B               	goto	u1270
  3201  016A                     u1271:
  3202  016A  2965               	goto	l131
  3203  016B                     u1270:
  3204  016B                     l1763:
  3205                           
  3206                           ;master03.c: 209:     return;
  3207  016B  081A               	movf	26,w	;volatile
  3208  016C  3ED0               	addlw	208
  3209  016D  00D8               	movwf	??_defensa
  3210  016E  0858               	movf	??_defensa,w
  3211  016F  00A2               	movwf	_c1
  3212  0170                     l134:
  3213  0170  0008               	return
  3214  0171                     __end_of_defensa:
  3215                           
  3216                           	psect	text17
  3217  01A5                     __ptext17:	
  3218 ;; *************** function _printf *****************
  3219 ;; Defined at:
  3220 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  f               1    wreg     PTR const unsigned char 
  3223 ;;		 -> STR_15(39), STR_14(39), STR_13(37), STR_12(3), 
  3224 ;;		 -> STR_11(2), STR_10(12), STR_9(3), STR_8(2), 
  3225 ;;		 -> STR_7(12), STR_3(29), STR_2(29), STR_1(52), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  3228 ;;		 -> STR_15(39), STR_14(39), STR_13(37), STR_12(3), 
  3229 ;;		 -> STR_11(2), STR_10(12), STR_9(3), STR_8(2), 
  3230 ;;		 -> STR_7(12), STR_3(29), STR_2(29), STR_1(52), 
  3231 ;;  pb              2   15[BANK0 ] struct __prbuf
  3232 ;;  ap              1   13[BANK0 ] PTR void [1]
  3233 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2   18[None  ] int 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       4       0       0       0
  3245 ;;      Temps:          0       2       0       0       0
  3246 ;;      Totals:         0       6       0       0       0
  3247 ;;Total ram usage:        6 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		__doprnt
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;;		_mensaje1
  3255 ;;		_mensaje2
  3256 ;;		_defensa
  3257 ;;		_defensa1
  3258 ;;		_defensa2
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _printf
  3264  01A5                     _printf:
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3268                           ;printf@f stored from wreg
  3269  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3270  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3271  01A7  00D5               	movwf	printf@f
  3272  01A8                     l1535:
  3273  01A8  01D6               	clrf	printf@pb
  3274  01A9                     l1537:
  3275  01A9  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  3276  01AA  00D2               	movwf	??_printf
  3277  01AB  0852               	movf	??_printf,w
  3278  01AC  00D7               	movwf	low ((printf@pb| 0+1))
  3279  01AD                     l1539:
  3280  01AD  3070               	movlw	(low (?_printf| 0))& (0+255)
  3281  01AE  00D2               	movwf	??_printf
  3282  01AF  0852               	movf	??_printf,w
  3283  01B0  00D4               	movwf	printf@ap
  3284  01B1                     l1541:
  3285                           
  3286                           ;	Return value of _printf is never used
  3287  01B1  0855               	movf	printf@f,w
  3288  01B2  00D2               	movwf	??_printf
  3289  01B3  0852               	movf	??_printf,w
  3290  01B4  00C7               	movwf	__doprnt@f
  3291  01B5  3054               	movlw	(low (printf@ap| 0))& (0+255)
  3292  01B6  00D3               	movwf	??_printf+1
  3293  01B7  0853               	movf	??_printf+1,w
  3294  01B8  00C8               	movwf	__doprnt@ap
  3295  01B9  3056               	movlw	(low (printf@pb| 0))& (0+255)
  3296  01BA  120A  118A  2535  120A  118A  	fcall	__doprnt
  3297  01BF                     l765:
  3298  01BF  0008               	return
  3299  01C0                     __end_of_printf:
  3300                           
  3301                           	psect	text18
  3302  0535                     __ptext18:	
  3303 ;; *************** function __doprnt *****************
  3304 ;; Defined at:
  3305 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  pb              1    wreg     PTR struct __prbuf
  3308 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3309 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  3310 ;;		 -> STR_15(39), STR_14(39), STR_13(37), STR_12(3), 
  3311 ;;		 -> STR_11(2), STR_10(12), STR_9(3), STR_8(2), 
  3312 ;;		 -> STR_7(12), STR_6(3), STR_5(3), STR_4(3), 
  3313 ;;		 -> STR_3(29), STR_2(29), STR_1(52), 
  3314 ;;  ap              1    1[BANK0 ] PTR PTR void 
  3315 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  pb              1   10[BANK0 ] PTR struct __prbuf
  3318 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3319 ;;  tmpval          4    0        struct .
  3320 ;;  val             2    7[BANK0 ] unsigned int 
  3321 ;;  cp              2    0        PTR const unsigned char 
  3322 ;;  len             2    0        unsigned int 
  3323 ;;  c               1    9[BANK0 ] unsigned char 
  3324 ;;  prec            1    6[BANK0 ] char 
  3325 ;;  flag            1    5[BANK0 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    0[BANK0 ] int 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       2       0       0       0
  3336 ;;      Locals:         0       6       0       0       0
  3337 ;;      Temps:          0       3       0       0       0
  3338 ;;      Totals:         0      11       0       0       0
  3339 ;;Total ram usage:       11 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		Absolute function
  3344 ;;		___lwdiv
  3345 ;;		___lwmod
  3346 ;;		_putch
  3347 ;; This function is called by:
  3348 ;;		_printf
  3349 ;;		_sprintf
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function __doprnt
  3355  0535                     __doprnt:
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3359                           ;__doprnt@pb stored from wreg
  3360  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0537  00D1               	movwf	__doprnt@pb
  3363  0538                     l1463:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3366  0538  2E52               	goto	l1525
  3367  0539                     l1465:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3370  0539  3025               	movlw	37
  3371  053A  0650               	xorwf	__doprnt@c,w
  3372  053B  1903               	btfsc	3,2
  3373  053C  2D3E               	goto	u891
  3374  053D  2D3F               	goto	u890
  3375  053E                     u891:
  3376  053E  2D65               	goto	l1475
  3377  053F                     u890:
  3378  053F                     l1467:
  3379  053F  0A51               	incf	__doprnt@pb,w
  3380  0540  0084               	movwf	4
  3381  0541  1383               	bcf	3,7	;select IRP bank0
  3382  0542  0800               	movf	0,w
  3383  0543  1903               	btfsc	3,2
  3384  0544  2D46               	goto	u901
  3385  0545  2D47               	goto	u900
  3386  0546                     u901:
  3387  0546  2D56               	goto	l1471
  3388  0547                     u900:
  3389  0547                     l1469:
  3390  0547  0850               	movf	__doprnt@c,w
  3391  0548  00C9               	movwf	??__doprnt
  3392  0549  0849               	movf	??__doprnt,w
  3393  054A  00F0               	movwf	putch@dato
  3394  054B  0A51               	incf	__doprnt@pb,w
  3395  054C  0084               	movwf	4
  3396  054D  0800               	movf	0,w
  3397  054E  120A  118A  2003  120A  118A  	fcall	fptable
  3398  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0554  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0555  2D38               	goto	l1463
  3401  0556                     l1471:
  3402  0556  0850               	movf	__doprnt@c,w
  3403  0557  00C9               	movwf	??__doprnt
  3404  0558  0851               	movf	__doprnt@pb,w
  3405  0559  0084               	movwf	4
  3406  055A  0800               	movf	0,w
  3407  055B  0084               	movwf	4
  3408  055C  0849               	movf	??__doprnt,w
  3409  055D  0080               	movwf	0
  3410  055E                     l1473:
  3411  055E  3001               	movlw	1
  3412  055F  00C9               	movwf	??__doprnt
  3413  0560  0851               	movf	__doprnt@pb,w
  3414  0561  0084               	movwf	4
  3415  0562  0849               	movf	??__doprnt,w
  3416  0563  0780               	addwf	0,f
  3417  0564  2D38               	goto	l1463
  3418  0565                     l1475:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3421  0565  01CC               	clrf	__doprnt@flag
  3422  0566                     l1479:	
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3424                           
  3425  0566  3001               	movlw	1
  3426  0567  07C7               	addwf	__doprnt@f,f
  3427  0568  30FF               	movlw	-1
  3428  0569  0747               	addwf	__doprnt@f,w
  3429  056A  0084               	movwf	4
  3430  056B  120A  118A  200C  120A  118A  	fcall	stringdir
  3431  0570  00D0               	movwf	__doprnt@c
  3432  0571  00C9               	movwf	??__doprnt
  3433  0572  01CA               	clrf	??__doprnt+1
  3434                           
  3435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 1, Range of values is 0 to 0
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            4     3 (average)
  3441                           ; direct_byte           11     8 (fixed)
  3442                           ; jumptable            260     6 (fixed)
  3443                           ;	Chosen strategy is simple_byte
  3444  0573  084A               	movf	??__doprnt+1,w
  3445  0574  3A00               	xorlw	0	; case 0
  3446  0575  1903               	skipnz
  3447  0576  2D78               	goto	l1935
  3448  0577  2E52               	goto	l1525
  3449  0578                     l1935:
  3450                           
  3451                           ; Switch size 1, requested type "simple"
  3452                           ; Number of cases is 3, Range of values is 0 to 105
  3453                           ; switch strategies available:
  3454                           ; Name         Instructions Cycles
  3455                           ; simple_byte           10     6 (average)
  3456                           ; jumptable            260     6 (fixed)
  3457                           ;	Chosen strategy is simple_byte
  3458  0578  0849               	movf	??__doprnt,w
  3459  0579  3A00               	xorlw	0	; case 0
  3460  057A  1903               	skipnz
  3461  057B  2E66               	goto	l1527
  3462  057C  3A64               	xorlw	100	; case 100
  3463  057D  1903               	skipnz
  3464  057E  2D83               	goto	l1481
  3465  057F  3A0D               	xorlw	13	; case 105
  3466  0580  1903               	skipnz
  3467  0581  2D83               	goto	l1481
  3468  0582  2E52               	goto	l1525
  3469  0583                     l1481:
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3472  0583  0848               	movf	__doprnt@ap,w
  3473  0584  0084               	movwf	4
  3474  0585  1383               	bcf	3,7	;select IRP bank0
  3475  0586  0800               	movf	0,w
  3476  0587  00C9               	movwf	??__doprnt
  3477  0588  3002               	movlw	2
  3478  0589  0780               	addwf	0,f
  3479  058A  0849               	movf	??__doprnt,w
  3480  058B  0084               	movwf	4
  3481  058C  0800               	movf	0,w
  3482  058D  00CE               	movwf	__doprnt@val
  3483  058E  0A84               	incf	4,f
  3484  058F  0800               	movf	0,w
  3485  0590  00CF               	movwf	__doprnt@val+1
  3486  0591                     l1483:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3489  0591  1FCF               	btfss	__doprnt@val+1,7
  3490  0592  2D94               	goto	u911
  3491  0593  2D95               	goto	u910
  3492  0594                     u911:
  3493  0594  2D9E               	goto	l1489
  3494  0595                     u910:
  3495  0595                     l1485:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3498  0595  3003               	movlw	3
  3499  0596  00C9               	movwf	??__doprnt
  3500  0597  0849               	movf	??__doprnt,w
  3501  0598  04CC               	iorwf	__doprnt@flag,f
  3502  0599                     l1487:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3505  0599  09CE               	comf	__doprnt@val,f
  3506  059A  09CF               	comf	__doprnt@val+1,f
  3507  059B  0ACE               	incf	__doprnt@val,f
  3508  059C  1903               	skipnz
  3509  059D  0ACF               	incf	__doprnt@val+1,f
  3510  059E                     l1489:
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3513  059E  01D0               	clrf	__doprnt@c
  3514  059F  0AD0               	incf	__doprnt@c,f
  3515  05A0                     l1495:
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3518  05A0  0850               	movf	__doprnt@c,w
  3519  05A1  00C9               	movwf	??__doprnt
  3520  05A2  0749               	addwf	??__doprnt,w
  3521  05A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3522  05A4  0084               	movwf	4
  3523  05A5  120A  118A  200C  120A  118A  	fcall	stringdir
  3524  05AA  00CA               	movwf	??__doprnt+1
  3525  05AB  120A  118A  200C  120A  118A  	fcall	stringdir
  3526  05B0  00CB               	movwf	??__doprnt+2
  3527  05B1  084B               	movf	??__doprnt+2,w
  3528  05B2  024F               	subwf	__doprnt@val+1,w
  3529  05B3  1D03               	skipz
  3530  05B4  2DB7               	goto	u925
  3531  05B5  084A               	movf	??__doprnt+1,w
  3532  05B6  024E               	subwf	__doprnt@val,w
  3533  05B7                     u925:
  3534  05B7  1803               	skipnc
  3535  05B8  2DBA               	goto	u921
  3536  05B9  2DBB               	goto	u920
  3537  05BA                     u921:
  3538  05BA  2DBC               	goto	l1499
  3539  05BB                     u920:
  3540  05BB  2DC6               	goto	l1501
  3541  05BC                     l1499:
  3542  05BC  3001               	movlw	1
  3543  05BD  00C9               	movwf	??__doprnt
  3544  05BE  0849               	movf	??__doprnt,w
  3545  05BF  07D0               	addwf	__doprnt@c,f
  3546  05C0  3005               	movlw	5
  3547  05C1  0650               	xorwf	__doprnt@c,w
  3548  05C2  1D03               	btfss	3,2
  3549  05C3  2DC5               	goto	u931
  3550  05C4  2DC6               	goto	u930
  3551  05C5                     u931:
  3552  05C5  2DA0               	goto	l1495
  3553  05C6                     u930:
  3554  05C6                     l1501:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3557  05C6  084C               	movf	__doprnt@flag,w
  3558  05C7  3903               	andlw	3
  3559  05C8  1903               	btfsc	3,2
  3560  05C9  2DCB               	goto	u941
  3561  05CA  2DCC               	goto	u940
  3562  05CB                     u941:
  3563  05CB  2DEF               	goto	l1511
  3564  05CC                     u940:
  3565  05CC                     l1503:
  3566  05CC  0A51               	incf	__doprnt@pb,w
  3567  05CD  0084               	movwf	4
  3568  05CE  1383               	bcf	3,7	;select IRP bank0
  3569  05CF  0800               	movf	0,w
  3570  05D0  1903               	btfsc	3,2
  3571  05D1  2DD3               	goto	u951
  3572  05D2  2DD4               	goto	u950
  3573  05D3                     u951:
  3574  05D3  2DE1               	goto	l1507
  3575  05D4                     u950:
  3576  05D4                     l1505:
  3577  05D4  302D               	movlw	45
  3578  05D5  00C9               	movwf	??__doprnt
  3579  05D6  0849               	movf	??__doprnt,w
  3580  05D7  00F0               	movwf	putch@dato
  3581  05D8  0A51               	incf	__doprnt@pb,w
  3582  05D9  0084               	movwf	4
  3583  05DA  0800               	movf	0,w
  3584  05DB  120A  118A  2003  120A  118A  	fcall	fptable
  3585  05E0  2DEF               	goto	l1511
  3586  05E1                     l1507:
  3587  05E1  302D               	movlw	45
  3588  05E2  00C9               	movwf	??__doprnt
  3589  05E3  0851               	movf	__doprnt@pb,w
  3590  05E4  0084               	movwf	4
  3591  05E5  0800               	movf	0,w
  3592  05E6  0084               	movwf	4
  3593  05E7  0849               	movf	??__doprnt,w
  3594  05E8  0080               	movwf	0
  3595  05E9                     l1509:
  3596  05E9  3001               	movlw	1
  3597  05EA  00C9               	movwf	??__doprnt
  3598  05EB  0851               	movf	__doprnt@pb,w
  3599  05EC  0084               	movwf	4
  3600  05ED  0849               	movf	??__doprnt,w
  3601  05EE  0780               	addwf	0,f
  3602  05EF                     l1511:
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3605  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3606  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3607  05F1  0850               	movf	__doprnt@c,w
  3608  05F2  00C9               	movwf	??__doprnt
  3609  05F3  0849               	movf	??__doprnt,w
  3610  05F4  00CD               	movwf	__doprnt@prec
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3613  05F5  2E47               	goto	l1523
  3614  05F6                     l1513:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3617  05F6  300A               	movlw	10
  3618  05F7  00F8               	movwf	___lwmod@divisor
  3619  05F8  3000               	movlw	0
  3620  05F9  00F9               	movwf	___lwmod@divisor+1
  3621  05FA  084D               	movf	__doprnt@prec,w
  3622  05FB  00C9               	movwf	??__doprnt
  3623  05FC  0749               	addwf	??__doprnt,w
  3624  05FD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3625  05FE  0084               	movwf	4
  3626  05FF  120A  118A  200C  120A  118A  	fcall	stringdir
  3627  0604  00F0               	movwf	___lwdiv@divisor
  3628  0605  120A  118A  200C  120A  118A  	fcall	stringdir
  3629  060A  00F1               	movwf	___lwdiv@divisor+1
  3630  060B  084F               	movf	__doprnt@val+1,w
  3631  060C  00F3               	movwf	___lwdiv@dividend+1
  3632  060D  084E               	movf	__doprnt@val,w
  3633  060E  00F2               	movwf	___lwdiv@dividend
  3634  060F  120A  118A  22A4  120A  118A  	fcall	___lwdiv
  3635  0614  0871               	movf	?___lwdiv+1,w
  3636  0615  00FB               	movwf	___lwmod@dividend+1
  3637  0616  0870               	movf	?___lwdiv,w
  3638  0617  00FA               	movwf	___lwmod@dividend
  3639  0618  120A  118A  226A  120A  118A  	fcall	___lwmod
  3640  061D  0878               	movf	?___lwmod,w
  3641  061E  3E30               	addlw	48
  3642  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0621  00CA               	movwf	??__doprnt+1
  3645  0622  084A               	movf	??__doprnt+1,w
  3646  0623  00D0               	movwf	__doprnt@c
  3647  0624                     l1515:
  3648  0624  0A51               	incf	__doprnt@pb,w
  3649  0625  0084               	movwf	4
  3650  0626  1383               	bcf	3,7	;select IRP bank0
  3651  0627  0800               	movf	0,w
  3652  0628  1903               	btfsc	3,2
  3653  0629  2E2B               	goto	u961
  3654  062A  2E2C               	goto	u960
  3655  062B                     u961:
  3656  062B  2E39               	goto	l1519
  3657  062C                     u960:
  3658  062C                     l1517:
  3659  062C  0850               	movf	__doprnt@c,w
  3660  062D  00C9               	movwf	??__doprnt
  3661  062E  0849               	movf	??__doprnt,w
  3662  062F  00F0               	movwf	putch@dato
  3663  0630  0A51               	incf	__doprnt@pb,w
  3664  0631  0084               	movwf	4
  3665  0632  0800               	movf	0,w
  3666  0633  120A  118A  2003  120A  118A  	fcall	fptable
  3667  0638  2E47               	goto	l1523
  3668  0639                     l1519:
  3669  0639  0850               	movf	__doprnt@c,w
  3670  063A  00C9               	movwf	??__doprnt
  3671  063B  0851               	movf	__doprnt@pb,w
  3672  063C  0084               	movwf	4
  3673  063D  0800               	movf	0,w
  3674  063E  0084               	movwf	4
  3675  063F  0849               	movf	??__doprnt,w
  3676  0640  0080               	movwf	0
  3677  0641                     l1521:
  3678  0641  3001               	movlw	1
  3679  0642  00C9               	movwf	??__doprnt
  3680  0643  0851               	movf	__doprnt@pb,w
  3681  0644  0084               	movwf	4
  3682  0645  0849               	movf	??__doprnt,w
  3683  0646  0780               	addwf	0,f
  3684  0647                     l1523:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3687  0647  30FF               	movlw	255
  3688  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3690  064A  00C9               	movwf	??__doprnt
  3691  064B  0849               	movf	??__doprnt,w
  3692  064C  07CD               	addwf	__doprnt@prec,f
  3693  064D  0A4D               	incf	__doprnt@prec,w
  3694  064E  1D03               	btfss	3,2
  3695  064F  2E51               	goto	u971
  3696  0650  2E52               	goto	u970
  3697  0651                     u971:
  3698  0651  2DF6               	goto	l1513
  3699  0652                     u970:
  3700  0652                     l1525:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3703  0652  3001               	movlw	1
  3704  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0655  07C7               	addwf	__doprnt@f,f
  3707  0656  30FF               	movlw	-1
  3708  0657  0747               	addwf	__doprnt@f,w
  3709  0658  0084               	movwf	4
  3710  0659  120A  118A  200C  120A  118A  	fcall	stringdir
  3711  065E  00C9               	movwf	??__doprnt
  3712  065F  0849               	movf	??__doprnt,w
  3713  0660  00D0               	movwf	__doprnt@c
  3714  0661  0850               	movf	__doprnt@c,w
  3715  0662  1D03               	btfss	3,2
  3716  0663  2E65               	goto	u981
  3717  0664  2E66               	goto	u980
  3718  0665                     u981:
  3719  0665  2D39               	goto	l1465
  3720  0666                     u980:
  3721  0666                     l1527:
  3722                           
  3723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3724  0666  01C7               	clrf	?__doprnt
  3725  0667  01C8               	clrf	?__doprnt+1
  3726  0668                     l803:
  3727  0668  0008               	return
  3728  0669                     __end_of__doprnt:
  3729                           
  3730                           	psect	text19
  3731  011D                     __ptext19:	
  3732 ;; *************** function _putch *****************
  3733 ;; Defined at:
  3734 ;;		line 153 in file "master03.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  dato            1    0[COMMON] unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3748 ;;      Params:         1       0       0       0       0
  3749 ;;      Locals:         0       0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0
  3751 ;;      Totals:         1       0       0       0       0
  3752 ;;Total ram usage:        1 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_printf
  3758 ;;		__doprnt
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           
  3763                           ;psect for function _putch
  3764  011D                     _putch:
  3765  011D                     l1409:	
  3766                           ;incstack = 0
  3767                           ; Regs used in _putch: [wreg]
  3768                           
  3769  011D                     l115:	
  3770                           ;master03.c: 154: void defensa(void){
  3771                           
  3772  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3773  011E  1303               	bcf	3,6	;RP1=0, select bank0
  3774  011F  1E0C               	btfss	12,4	;volatile
  3775  0120  2922               	goto	u751
  3776  0121  2923               	goto	u750
  3777  0122                     u751:
  3778  0122  291D               	goto	l115
  3779  0123                     u750:
  3780  0123                     l1411:
  3781                           
  3782                           ;master03.c: 155:     if(RCREG > 2){
  3783  0123  0870               	movf	putch@dato,w
  3784  0124  0099               	movwf	25	;volatile
  3785  0125                     l118:
  3786  0125  0008               	return
  3787  0126                     __end_of_putch:
  3788                           
  3789                           	psect	text20
  3790  026A                     __ptext20:	
  3791 ;; *************** function ___lwmod *****************
  3792 ;; Defined at:
  3793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  divisor         2    8[COMMON] unsigned int 
  3796 ;;  dividend        2   10[COMMON] unsigned int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  counter         1   13[COMMON] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2    8[COMMON] unsigned int 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         4       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0
  3810 ;;      Temps:          1       0       0       0       0
  3811 ;;      Totals:         6       0       0       0       0
  3812 ;;Total ram usage:        6 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		__doprnt
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function ___lwmod
  3823  026A                     ___lwmod:
  3824  026A                     l1441:	
  3825                           ;incstack = 0
  3826                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3827                           
  3828  026A  0878               	movf	___lwmod@divisor,w
  3829  026B  0479               	iorwf	___lwmod@divisor+1,w
  3830  026C  1903               	btfsc	3,2
  3831  026D  2A6F               	goto	u831
  3832  026E  2A70               	goto	u830
  3833  026F                     u831:
  3834  026F  2A9F               	goto	l1459
  3835  0270                     u830:
  3836  0270                     l1443:
  3837  0270  01FD               	clrf	___lwmod@counter
  3838  0271  0AFD               	incf	___lwmod@counter,f
  3839  0272  2A7E               	goto	l1449
  3840  0273                     l1445:
  3841  0273  3001               	movlw	1
  3842  0274                     u845:
  3843  0274  1003               	clrc
  3844  0275  0DF8               	rlf	___lwmod@divisor,f
  3845  0276  0DF9               	rlf	___lwmod@divisor+1,f
  3846  0277  3EFF               	addlw	-1
  3847  0278  1D03               	skipz
  3848  0279  2A74               	goto	u845
  3849  027A                     l1447:
  3850  027A  3001               	movlw	1
  3851  027B  00FC               	movwf	??___lwmod
  3852  027C  087C               	movf	??___lwmod,w
  3853  027D  07FD               	addwf	___lwmod@counter,f
  3854  027E                     l1449:
  3855  027E  1FF9               	btfss	___lwmod@divisor+1,7
  3856  027F  2A81               	goto	u851
  3857  0280  2A82               	goto	u850
  3858  0281                     u851:
  3859  0281  2A73               	goto	l1445
  3860  0282                     u850:
  3861  0282                     l1451:
  3862  0282  0879               	movf	___lwmod@divisor+1,w
  3863  0283  027B               	subwf	___lwmod@dividend+1,w
  3864  0284  1D03               	skipz
  3865  0285  2A88               	goto	u865
  3866  0286  0878               	movf	___lwmod@divisor,w
  3867  0287  027A               	subwf	___lwmod@dividend,w
  3868  0288                     u865:
  3869  0288  1C03               	skipc
  3870  0289  2A8B               	goto	u861
  3871  028A  2A8C               	goto	u860
  3872  028B                     u861:
  3873  028B  2A92               	goto	l1455
  3874  028C                     u860:
  3875  028C                     l1453:
  3876  028C  0878               	movf	___lwmod@divisor,w
  3877  028D  02FA               	subwf	___lwmod@dividend,f
  3878  028E  0879               	movf	___lwmod@divisor+1,w
  3879  028F  1C03               	skipc
  3880  0290  03FB               	decf	___lwmod@dividend+1,f
  3881  0291  02FB               	subwf	___lwmod@dividend+1,f
  3882  0292                     l1455:
  3883  0292  3001               	movlw	1
  3884  0293                     u875:
  3885  0293  1003               	clrc
  3886  0294  0CF9               	rrf	___lwmod@divisor+1,f
  3887  0295  0CF8               	rrf	___lwmod@divisor,f
  3888  0296  3EFF               	addlw	-1
  3889  0297  1D03               	skipz
  3890  0298  2A93               	goto	u875
  3891  0299                     l1457:
  3892  0299  3001               	movlw	1
  3893  029A  02FD               	subwf	___lwmod@counter,f
  3894  029B  1D03               	btfss	3,2
  3895  029C  2A9E               	goto	u881
  3896  029D  2A9F               	goto	u880
  3897  029E                     u881:
  3898  029E  2A82               	goto	l1451
  3899  029F                     u880:
  3900  029F                     l1459:
  3901  029F  087B               	movf	___lwmod@dividend+1,w
  3902  02A0  00F9               	movwf	?___lwmod+1
  3903  02A1  087A               	movf	___lwmod@dividend,w
  3904  02A2  00F8               	movwf	?___lwmod
  3905  02A3                     l570:
  3906  02A3  0008               	return
  3907  02A4                     __end_of___lwmod:
  3908                           
  3909                           	psect	text21
  3910  02A4                     __ptext21:	
  3911 ;; *************** function ___lwdiv *****************
  3912 ;; Defined at:
  3913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  divisor         2    0[COMMON] unsigned int 
  3916 ;;  dividend        2    2[COMMON] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  quotient        2    5[COMMON] unsigned int 
  3919 ;;  counter         1    7[COMMON] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[COMMON] unsigned int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         4       0       0       0       0
  3930 ;;      Locals:         3       0       0       0       0
  3931 ;;      Temps:          1       0       0       0       0
  3932 ;;      Totals:         8       0       0       0       0
  3933 ;;Total ram usage:        8 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		__doprnt
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function ___lwdiv
  3944  02A4                     ___lwdiv:
  3945  02A4                     l1415:	
  3946                           ;incstack = 0
  3947                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3948                           
  3949  02A4  01F5               	clrf	___lwdiv@quotient
  3950  02A5  01F6               	clrf	___lwdiv@quotient+1
  3951  02A6                     l1417:
  3952  02A6  0870               	movf	___lwdiv@divisor,w
  3953  02A7  0471               	iorwf	___lwdiv@divisor+1,w
  3954  02A8  1903               	btfsc	3,2
  3955  02A9  2AAB               	goto	u761
  3956  02AA  2AAC               	goto	u760
  3957  02AB                     u761:
  3958  02AB  2AE3               	goto	l1437
  3959  02AC                     u760:
  3960  02AC                     l1419:
  3961  02AC  01F7               	clrf	___lwdiv@counter
  3962  02AD  0AF7               	incf	___lwdiv@counter,f
  3963  02AE  2ABA               	goto	l1425
  3964  02AF                     l1421:
  3965  02AF  3001               	movlw	1
  3966  02B0                     u775:
  3967  02B0  1003               	clrc
  3968  02B1  0DF0               	rlf	___lwdiv@divisor,f
  3969  02B2  0DF1               	rlf	___lwdiv@divisor+1,f
  3970  02B3  3EFF               	addlw	-1
  3971  02B4  1D03               	skipz
  3972  02B5  2AB0               	goto	u775
  3973  02B6                     l1423:
  3974  02B6  3001               	movlw	1
  3975  02B7  00F4               	movwf	??___lwdiv
  3976  02B8  0874               	movf	??___lwdiv,w
  3977  02B9  07F7               	addwf	___lwdiv@counter,f
  3978  02BA                     l1425:
  3979  02BA  1FF1               	btfss	___lwdiv@divisor+1,7
  3980  02BB  2ABD               	goto	u781
  3981  02BC  2ABE               	goto	u780
  3982  02BD                     u781:
  3983  02BD  2AAF               	goto	l1421
  3984  02BE                     u780:
  3985  02BE                     l1427:
  3986  02BE  3001               	movlw	1
  3987  02BF                     u795:
  3988  02BF  1003               	clrc
  3989  02C0  0DF5               	rlf	___lwdiv@quotient,f
  3990  02C1  0DF6               	rlf	___lwdiv@quotient+1,f
  3991  02C2  3EFF               	addlw	-1
  3992  02C3  1D03               	skipz
  3993  02C4  2ABF               	goto	u795
  3994  02C5  0871               	movf	___lwdiv@divisor+1,w
  3995  02C6  0273               	subwf	___lwdiv@dividend+1,w
  3996  02C7  1D03               	skipz
  3997  02C8  2ACB               	goto	u805
  3998  02C9  0870               	movf	___lwdiv@divisor,w
  3999  02CA  0272               	subwf	___lwdiv@dividend,w
  4000  02CB                     u805:
  4001  02CB  1C03               	skipc
  4002  02CC  2ACE               	goto	u801
  4003  02CD  2ACF               	goto	u800
  4004  02CE                     u801:
  4005  02CE  2AD6               	goto	l1433
  4006  02CF                     u800:
  4007  02CF                     l1429:
  4008  02CF  0870               	movf	___lwdiv@divisor,w
  4009  02D0  02F2               	subwf	___lwdiv@dividend,f
  4010  02D1  0871               	movf	___lwdiv@divisor+1,w
  4011  02D2  1C03               	skipc
  4012  02D3  03F3               	decf	___lwdiv@dividend+1,f
  4013  02D4  02F3               	subwf	___lwdiv@dividend+1,f
  4014  02D5                     l1431:
  4015  02D5  1475               	bsf	___lwdiv@quotient,0
  4016  02D6                     l1433:
  4017  02D6  3001               	movlw	1
  4018  02D7                     u815:
  4019  02D7  1003               	clrc
  4020  02D8  0CF1               	rrf	___lwdiv@divisor+1,f
  4021  02D9  0CF0               	rrf	___lwdiv@divisor,f
  4022  02DA  3EFF               	addlw	-1
  4023  02DB  1D03               	skipz
  4024  02DC  2AD7               	goto	u815
  4025  02DD                     l1435:
  4026  02DD  3001               	movlw	1
  4027  02DE  02F7               	subwf	___lwdiv@counter,f
  4028  02DF  1D03               	btfss	3,2
  4029  02E0  2AE2               	goto	u821
  4030  02E1  2AE3               	goto	u820
  4031  02E2                     u821:
  4032  02E2  2ABE               	goto	l1427
  4033  02E3                     u820:
  4034  02E3                     l1437:
  4035  02E3  0876               	movf	___lwdiv@quotient+1,w
  4036  02E4  00F1               	movwf	?___lwdiv+1
  4037  02E5  0875               	movf	___lwdiv@quotient,w
  4038  02E6  00F0               	movwf	?___lwdiv
  4039  02E7                     l560:
  4040  02E7  0008               	return
  4041  02E8                     __end_of___lwdiv:
  4042                           
  4043                           	psect	text22
  4044  04BA                     __ptext22:	
  4045 ;; *************** function _atoi *****************
  4046 ;; Defined at:
  4047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  s               1    wreg     PTR const unsigned char 
  4050 ;;		 -> s1(10), 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  s               1   13[COMMON] PTR const unsigned char 
  4053 ;;		 -> s1(10), 
  4054 ;;  a               2   11[COMMON] int 
  4055 ;;  sign            1   10[COMMON] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  2    6[COMMON] int 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         2       0       0       0       0
  4066 ;;      Locals:         4       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0
  4068 ;;      Totals:         8       0       0       0       0
  4069 ;;Total ram usage:        8 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    1
  4072 ;; This function calls:
  4073 ;;		___wmul
  4074 ;;		_isdigit
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _atoi
  4082  04BA                     _atoi:
  4083                           
  4084                           ;incstack = 0
  4085                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4086                           ;atoi@s stored from wreg
  4087  04BA  00FD               	movwf	atoi@s
  4088  04BB                     l1799:
  4089  04BB  2CC0               	goto	l1803
  4090  04BC                     l1801:
  4091  04BC  3001               	movlw	1
  4092  04BD  00F8               	movwf	??_atoi
  4093  04BE  0878               	movf	??_atoi,w
  4094  04BF  07FD               	addwf	atoi@s,f
  4095  04C0                     l1803:
  4096  04C0  087D               	movf	atoi@s,w
  4097  04C1  0084               	movwf	4
  4098  04C2  3020               	movlw	32
  4099  04C3  1383               	bcf	3,7	;select IRP bank0
  4100  04C4  0600               	xorwf	0,w
  4101  04C5  1903               	btfsc	3,2
  4102  04C6  2CC8               	goto	u1341
  4103  04C7  2CC9               	goto	u1340
  4104  04C8                     u1341:
  4105  04C8  2CBC               	goto	l1801
  4106  04C9                     u1340:
  4107  04C9                     l1805:
  4108  04C9  087D               	movf	atoi@s,w
  4109  04CA  0084               	movwf	4
  4110  04CB  3009               	movlw	9
  4111  04CC  0600               	xorwf	0,w
  4112  04CD  1903               	btfsc	3,2
  4113  04CE  2CD0               	goto	u1351
  4114  04CF  2CD1               	goto	u1350
  4115  04D0                     u1351:
  4116  04D0  2CBC               	goto	l1801
  4117  04D1                     u1350:
  4118  04D1                     l1807:
  4119  04D1  01FB               	clrf	atoi@a
  4120  04D2  01FC               	clrf	atoi@a+1
  4121  04D3  01FA               	clrf	atoi@sign
  4122  04D4                     l1809:
  4123  04D4  087D               	movf	atoi@s,w
  4124  04D5  0084               	movwf	4
  4125  04D6  302D               	movlw	45
  4126  04D7  0600               	xorwf	0,w
  4127  04D8  1D03               	btfss	3,2
  4128  04D9  2CDB               	goto	u1361
  4129  04DA  2CDC               	goto	u1360
  4130  04DB                     u1361:
  4131  04DB  2CE5               	goto	l1813
  4132  04DC                     u1360:
  4133  04DC                     l1811:
  4134  04DC  3001               	movlw	1
  4135  04DD  00F8               	movwf	??_atoi
  4136  04DE  0878               	movf	??_atoi,w
  4137  04DF  07FA               	addwf	atoi@sign,f
  4138  04E0  3001               	movlw	1
  4139  04E1  00F8               	movwf	??_atoi
  4140  04E2  0878               	movf	??_atoi,w
  4141  04E3  07FD               	addwf	atoi@s,f
  4142  04E4  2D13               	goto	l1821
  4143  04E5                     l1813:
  4144  04E5  087D               	movf	atoi@s,w
  4145  04E6  0084               	movwf	4
  4146  04E7  302B               	movlw	43
  4147  04E8  0600               	xorwf	0,w
  4148  04E9  1D03               	btfss	3,2
  4149  04EA  2CEC               	goto	u1371
  4150  04EB  2CED               	goto	u1370
  4151  04EC                     u1371:
  4152  04EC  2D13               	goto	l1821
  4153  04ED                     u1370:
  4154  04ED                     l1815:
  4155  04ED  3001               	movlw	1
  4156  04EE  00F8               	movwf	??_atoi
  4157  04EF  0878               	movf	??_atoi,w
  4158  04F0  07FD               	addwf	atoi@s,f
  4159  04F1  2D13               	goto	l1821
  4160  04F2                     l1817:
  4161  04F2  087D               	movf	atoi@s,w
  4162  04F3  0084               	movwf	4
  4163  04F4  087C               	movf	atoi@a+1,w
  4164  04F5  00F1               	movwf	___wmul@multiplier+1
  4165  04F6  087B               	movf	atoi@a,w
  4166  04F7  00F0               	movwf	___wmul@multiplier
  4167  04F8  300A               	movlw	10
  4168  04F9  00F2               	movwf	___wmul@multiplicand
  4169  04FA  3000               	movlw	0
  4170  04FB  00F3               	movwf	___wmul@multiplicand+1
  4171  04FC  120A  118A  221C  120A  118A  	fcall	___wmul
  4172  0501  1383               	bcf	3,7	;select IRP bank0
  4173  0502  0800               	movf	0,w
  4174  0503  0770               	addwf	?___wmul,w
  4175  0504  00F8               	movwf	??_atoi
  4176  0505  3000               	movlw	0
  4177  0506  1803               	skipnc
  4178  0507  3001               	movlw	1
  4179  0508  0771               	addwf	?___wmul+1,w
  4180  0509  00F9               	movwf	??_atoi+1
  4181  050A  0878               	movf	??_atoi,w
  4182  050B  3ED0               	addlw	208
  4183  050C  00FB               	movwf	atoi@a
  4184  050D  0879               	movf	??_atoi+1,w
  4185  050E  1803               	skipnc
  4186  050F  3E01               	addlw	1
  4187  0510  3EFF               	addlw	255
  4188  0511  00FC               	movwf	atoi@a+1
  4189  0512  2CED               	goto	l1815
  4190  0513                     l1821:
  4191  0513  087D               	movf	atoi@s,w
  4192  0514  0084               	movwf	4
  4193  0515  0800               	movf	0,w
  4194  0516  120A  118A  212F  120A  118A  	fcall	_isdigit
  4195  051B  1803               	btfsc	3,0
  4196  051C  2D1E               	goto	u1381
  4197  051D  2D1F               	goto	u1380
  4198  051E                     u1381:
  4199  051E  2CF2               	goto	l1817
  4200  051F                     u1380:
  4201  051F                     l1823:
  4202  051F  087A               	movf	atoi@sign,w
  4203  0520  1903               	btfsc	3,2
  4204  0521  2D23               	goto	u1391
  4205  0522  2D24               	goto	u1390
  4206  0523                     u1391:
  4207  0523  2D30               	goto	l1829
  4208  0524                     u1390:
  4209  0524                     l1825:
  4210  0524  097B               	comf	atoi@a,w
  4211  0525  00F8               	movwf	??_atoi
  4212  0526  097C               	comf	atoi@a+1,w
  4213  0527  00F9               	movwf	??_atoi+1
  4214  0528  0AF8               	incf	??_atoi,f
  4215  0529  1903               	skipnz
  4216  052A  0AF9               	incf	??_atoi+1,f
  4217  052B  0878               	movf	??_atoi,w
  4218  052C  00F6               	movwf	?_atoi
  4219  052D  0879               	movf	??_atoi+1,w
  4220  052E  00F7               	movwf	?_atoi+1
  4221  052F  2D34               	goto	l751
  4222  0530                     l1829:
  4223  0530  087C               	movf	atoi@a+1,w
  4224  0531  00F7               	movwf	?_atoi+1
  4225  0532  087B               	movf	atoi@a,w
  4226  0533  00F6               	movwf	?_atoi
  4227  0534                     l751:
  4228  0534  0008               	return
  4229  0535                     __end_of_atoi:
  4230                           
  4231                           	psect	text23
  4232  012F                     __ptext23:	
  4233 ;; *************** function _isdigit *****************
  4234 ;; Defined at:
  4235 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  c               1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  c               1    1[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;		None               void
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4249 ;;      Params:         0       0       0       0       0
  4250 ;;      Locals:         2       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0
  4252 ;;      Totals:         2       0       0       0       0
  4253 ;;Total ram usage:        2 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_atoi
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _isdigit
  4264  012F                     _isdigit:
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4268                           ;isdigit@c stored from wreg
  4269  012F  00F1               	movwf	isdigit@c
  4270  0130                     l1683:
  4271  0130  01F0               	clrf	_isdigit$1017
  4272  0131                     l1685:
  4273  0131  303A               	movlw	58
  4274  0132  0271               	subwf	isdigit@c,w
  4275  0133  1803               	skipnc
  4276  0134  2936               	goto	u1241
  4277  0135  2937               	goto	u1240
  4278  0136                     u1241:
  4279  0136  293F               	goto	l1691
  4280  0137                     u1240:
  4281  0137                     l1687:
  4282  0137  3030               	movlw	48
  4283  0138  0271               	subwf	isdigit@c,w
  4284  0139  1C03               	skipc
  4285  013A  293C               	goto	u1251
  4286  013B  293D               	goto	u1250
  4287  013C                     u1251:
  4288  013C  293F               	goto	l1691
  4289  013D                     u1250:
  4290  013D                     l1689:
  4291  013D  01F0               	clrf	_isdigit$1017
  4292  013E  0AF0               	incf	_isdigit$1017,f
  4293  013F                     l1691:
  4294  013F  0C70               	rrf	_isdigit$1017,w
  4295  0140                     l756:
  4296  0140  0008               	return
  4297  0141                     __end_of_isdigit:
  4298                           
  4299                           	psect	text24
  4300  021C                     __ptext24:	
  4301 ;; *************** function ___wmul *****************
  4302 ;; Defined at:
  4303 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  multiplier      2    0[COMMON] unsigned int 
  4306 ;;  multiplicand    2    2[COMMON] unsigned int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  product         2    4[COMMON] unsigned int 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2    0[COMMON] unsigned int 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         4       0       0       0       0
  4319 ;;      Locals:         2       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0
  4321 ;;      Totals:         6       0       0       0       0
  4322 ;;Total ram usage:        6 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_atoi
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function ___wmul
  4333  021C                     ___wmul:
  4334  021C                     l1587:	
  4335                           ;incstack = 0
  4336                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4337                           
  4338  021C  01F4               	clrf	___wmul@product
  4339  021D  01F5               	clrf	___wmul@product+1
  4340  021E                     l1589:
  4341  021E  1C70               	btfss	___wmul@multiplier,0
  4342  021F  2A21               	goto	u1011
  4343  0220  2A22               	goto	u1010
  4344  0221                     u1011:
  4345  0221  2A28               	goto	l288
  4346  0222                     u1010:
  4347  0222                     l1591:
  4348  0222  0872               	movf	___wmul@multiplicand,w
  4349  0223  07F4               	addwf	___wmul@product,f
  4350  0224  1803               	skipnc
  4351  0225  0AF5               	incf	___wmul@product+1,f
  4352  0226  0873               	movf	___wmul@multiplicand+1,w
  4353  0227  07F5               	addwf	___wmul@product+1,f
  4354  0228                     l288:
  4355  0228  3001               	movlw	1
  4356  0229                     u1025:
  4357  0229  1003               	clrc
  4358  022A  0DF2               	rlf	___wmul@multiplicand,f
  4359  022B  0DF3               	rlf	___wmul@multiplicand+1,f
  4360  022C  3EFF               	addlw	-1
  4361  022D  1D03               	skipz
  4362  022E  2A29               	goto	u1025
  4363  022F                     l1593:
  4364  022F  3001               	movlw	1
  4365  0230                     u1035:
  4366  0230  1003               	clrc
  4367  0231  0CF1               	rrf	___wmul@multiplier+1,f
  4368  0232  0CF0               	rrf	___wmul@multiplier,f
  4369  0233  3EFF               	addlw	-1
  4370  0234  1D03               	skipz
  4371  0235  2A30               	goto	u1035
  4372  0236                     l1595:
  4373  0236  0870               	movf	___wmul@multiplier,w
  4374  0237  0471               	iorwf	___wmul@multiplier+1,w
  4375  0238  1D03               	btfss	3,2
  4376  0239  2A3B               	goto	u1041
  4377  023A  2A3C               	goto	u1040
  4378  023B                     u1041:
  4379  023B  2A1E               	goto	l1589
  4380  023C                     u1040:
  4381  023C                     l1597:
  4382  023C  0875               	movf	___wmul@product+1,w
  4383  023D  00F1               	movwf	?___wmul+1
  4384  023E  0874               	movf	___wmul@product,w
  4385  023F  00F0               	movwf	?___wmul
  4386  0240                     l290:
  4387  0240  0008               	return
  4388  0241                     __end_of___wmul:
  4389  0002                     
  4390                           	psect	functab
  4391  0003                     __pfunctab:
  4392  0003                     __fptable:
  4393  0003                     fptable:
  4394  0003  00FF               	movwf	(btemp+1)& (0+127)
  4395  0004  3000               	movlw	high fptable
  4396  0005  008A               	movwf	10
  4397  0006  087F               	movf	(btemp+1)& (0+127),w
  4398  0007  0782               	addwf	2,f
  4399  0008                     fpbase:
  4400  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4401  0009                     fp__putch:
  4402  0009  120A  118A  291D   	ljmp	_putch
  4403  000C                     __end_of__fptable:
  4404  007E                     btemp	set	126	;btemp
  4405  007E                     wtemp0	set	126
  4406                           
  4407                           	psect	config
  4408                           
  4409                           ;Config register CONFIG1 @ 0x2007
  4410                           ;	Oscillator Selection bits
  4411                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4412                           ;	Watchdog Timer Enable bit
  4413                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4414                           ;	Power-up Timer Enable bit
  4415                           ;	PWRTE = OFF, PWRT disabled
  4416                           ;	RE3/MCLR pin function select bit
  4417                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4418                           ;	Code Protection bit
  4419                           ;	CP = OFF, Program memory code protection is disabled
  4420                           ;	Data Code Protection bit
  4421                           ;	CPD = OFF, Data memory code protection is disabled
  4422                           ;	Brown Out Reset Selection bits
  4423                           ;	BOREN = OFF, BOR disabled
  4424                           ;	Internal External Switchover bit
  4425                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4426                           ;	Fail-Safe Clock Monitor Enabled bit
  4427                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4428                           ;	Low Voltage Programming Enable bit
  4429                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4430                           ;	In-Circuit Debugger Mode bit
  4431                           ;	DEBUG = 0x1, unprogrammed default
  4432  2007                     	org	8199
  4433  2007  20D4               	dw	8404
  4434                           
  4435                           ;Config register CONFIG2 @ 0x2008
  4436                           ;	Brown-out Reset Selection bit
  4437                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4438                           ;	Flash Program Memory Self Write Enable bits
  4439                           ;	WRT = OFF, Write protection off
  4440  2008                     	org	8200
  4441  2008  3FFF               	dw	16383

Data Sizes:
    Strings     218
    Constant    10
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 10
		 -> s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 52
		 -> STR_15(CODE[39]), STR_14(CODE[39]), STR_13(CODE[37]), STR_12(CODE[3]), 
		 -> STR_11(CODE[2]), STR_10(CODE[12]), STR_9(CODE[3]), STR_8(CODE[2]), 
		 -> STR_7(CODE[12]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[29]), STR_2(CODE[29]), STR_1(CODE[52]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 52
		 -> STR_15(CODE[39]), STR_14(CODE[39]), STR_13(CODE[37]), STR_12(CODE[3]), 
		 -> STR_11(CODE[2]), STR_10(CODE[12]), STR_9(CODE[3]), STR_8(CODE[2]), 
		 -> STR_7(CODE[12]), STR_3(CODE[29]), STR_2(CODE[29]), STR_1(CODE[52]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S1019__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1019__prbuf$ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 10
		 -> NULL(NULL[0]), s3(BANK0[10]), s2(BANK0[10]), s1(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> s1(BANK0[10]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _setup->_spiInit
    _division->___awdiv
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _mensaje2->_printf
    _mensaje1->_printf
    _defensa2->_printf
    _defensa1->_printf
    _defensa->_printf
    _printf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   19162
                                             20 BANK0      5     5      0
                               _atoi
                            _defensa
                           _defensa1
                           _defensa2
                           _division
                           _mensaje1
                           _mensaje2
                             _printf
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2360
                                             11 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                       _config_USART
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mensaje2                                             2     2      0    2373
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje1                                             2     2      0    2373
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1248
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _defensa2                                             1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _defensa1                                             1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _defensa                                              1     1      0    2373
                                             17 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     6      0    2373
                                             11 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    1868
                                              0 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _defensa
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _defensa1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _defensa2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _division
     ___awdiv
     ___awmod
   _mensaje1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _mensaje2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _setup
     _config_USART
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 20:03:54 2021

                      pc 0002              _SSPSTATbits 0094                       l90 06ED  
                     l96 070C                       _c1 0022                       _d1 0021  
           ___awdiv@sign 0076                       _s1 003D                       _s2 0033  
                     _s3 0029                       _u1 0020                       fsr 0004  
    ___wmul@multiplicand 0072                      l103 0731                      l121 0452  
                    l202 01DB                      l115 011D                      l131 0165  
                    l124 033D                      l141 018A                      l118 0125  
                    l134 0170                      l127 0393                      l151 01FA  
                    l145 0199                      l138 017F                      l171 010E  
                    l148 01A4                      l174 0114                      l167 0151  
                    l168 0156                      l441 04B9                      l185 012E  
                    l177 010D                      l290 0240                      l454 03EC  
                    l288 0228                      l560 02E7                      l570 02A3  
                    l810 021B                      l803 0668                      l751 0534  
                    l819 0269                      l756 0140                      l765 01BF  
                    u800 02CF                      u801 02CE                      u820 02E3  
                    u900 0547                      u821 02E2                      u805 02CB  
                    u901 0546                      u830 0270                      u750 0123  
                    u910 0595                      u815 02D7                      u831 026F  
                    u751 0122                      u911 0594                      u760 02AC  
                    u920 05BB                      u761 02AB                      u921 05BA  
                    u850 0282                      u930 05C6                      u851 0281  
                    u931 05C5                      u780 02BE                      u860 028C  
                    u940 05CC                      u781 02BD                      u861 028B  
                    u845 0274                      u941 05CB                      u925 05B7  
                    u950 05D4                      u775 02B0                      u951 05D3  
                    u880 029F                      u960 062C                      u881 029E  
                    u865 0288                      u961 062B                      u970 0652  
                    u890 053F                      u795 02BF                      u875 0293  
                    u971 0651                      u891 053E                      u980 0666  
                    u981 0665                      u990 0149                      u991 0148  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1411 0123                     l1421 02AF                     l1501 05C6  
                   l1431 02D5                     l1423 02B6                     l1415 02A4  
                   l1503 05CC                     l1511 05EF                     l1433 02D6  
                   l1425 02BA                     l1417 02A6                     l1441 026A  
                   l1409 011D                     l1521 0641                     l1513 05F6  
                   l1505 05D4                     l1601 0453                     l1435 02DD  
                   l1427 02BE                     l1419 02AC                     l1451 0282  
                   l1443 0270                     l1515 0624                     l1523 0647  
                   l1507 05E1                     l1611 0463                     l1603 0454  
                   l1429 02CF                     l1437 02E3                     l1453 028C  
                   l1445 0273                     l1517 062C                     l1509 05E9  
                   l1525 0652                     l1541 01B1                     l1621 0477  
                   l1613 0468                     l1605 0458                     l1701 01E2  
                   l1455 0292                     l1447 027A                     l1519 0639  
                   l1527 0666                     l1471 0556                     l1463 0538  
                   l1535 01A8                     l1631 049D                     l1623 047E  
                   l1615 046C                     l1607 045D                     l1551 014D  
                   l1703 01E3                     l1801 04BC                     l1457 0299  
                   l1449 027E                     l1481 0583                     l1473 055E  
                   l1465 0539                     l1537 01A9                     l1641 04B5  
                   l1633 049E                     l1625 0482                     l1617 046E  
                   l1609 045F                     l1721 03EE                     l1561 01C8  
                   l1553 0150                     l1545 0142                     l1705 01E4  
                   l1713 0109                     l1811 04DC                     l1803 04C0  
                   l1459 029F                     l1483 0591                     l1467 053F  
                   l1475 0565                     l1539 01AD                     l1635 04A5  
                   l1627 0486                     l1619 0474                     l1651 039E  
                   l1723 0446                     l1731 02E8                     l1571 01D3  
                   l1563 01CB                     l1555 01C0                     l1547 0149  
                   l1707 01E5                     l1715 0126                     l1821 0513  
                   l1813 04E5                     l1805 04C9                     l1485 0595  
                   l1469 0547                     l1629 0497                     l1637 04AB  
                   l1661 03B2                     l1653 03A0                     l1645 0394  
                   l1725 044A                     l1741 0337                     l1733 02EE  
                   l1581 01DA                     l1573 01D4                     l1565 01CC  
                   l1557 01C4                     l1549 014B                     l1709 01EE  
                   l1717 012B                     l1901 07C1                     l1591 0222  
                   l1823 051F                     l1815 04ED                     l1807 04D1  
                   l1495 05A0                     l1487 0599                     l1479 0566  
                   l1639 04B0                     l1671 03D1                     l1663 03B9  
                   l1655 03A4                     l1647 0395                     l1727 044E  
                   l1735 02F9                     l1751 0353                     l1575 01D7  
                   l1567 01CF                     l1559 01C5                     l1911 07E1  
                   l1903 07C5                     l1593 022F                     l1825 0524  
                   l1817 04F2                     l1809 04D4                     l1489 059E  
                   l1761 015F                     l1673 03D8                     l1665 03BD  
                   l1657 03A9                     l1649 0399                     l1737 02FD  
                   l1753 035E                     l1745 033E                     l1577 01D8  
                   l1569 01D0                     l1585 010E                     l1913 07EB  
                   l1905 07CF                     l1841 067F                     l1833 0669  
                   l1595 0236                     l1587 021C                     l1691 013F  
                   l1683 0130                     l1499 05BC                     l1763 016B  
                   l1771 018B                     l1667 03C1                     l1659 03AF  
                   l1675 03DE                     l1739 0308                     l1755 038D  
                   l1747 0344                     l1579 01D9                     l1907 07D3  
                   l1851 06BF                     l1843 0689                     l1835 066E  
                   l1597 023C                     l1589 021E                     l1685 0131  
                   l1829 0530                     l1765 0171                     l1773 0193  
                   l1677 03E3                     l1669 03CB                     l1749 034F  
                   l1781 0203                     l1909 07DD                     l1861 06F3  
                   l1853 06C4                     l1845 06A1                     l1837 0671  
                   l1687 0137                     l1935 0578                     l1759 0157  
                   l1767 0179                     l1775 019F                     l1679 03E8  
                   l1695 01DC                     l1783 0207                     l1791 0247  
                   l1863 06F9                     l1855 06CF                     l1847 06A9  
                   l1839 0679                     l1689 013D                     l1769 0185  
                   l1697 01E0                     l1785 0215                     l1777 01FE  
                   l1793 024B                     l1881 0742                     l1873 071E  
                   l1865 06FE                     l1857 06D7                     l1849 06AC  
                   l1699 01E1                     l1779 0202                     l1795 0254  
                   l1891 078D                     l1875 0723                     l1867 0706  
                   l1859 06E7                     l1797 025C                     l1789 0242  
                   l1893 0799                     l1885 0749                     l1877 072B  
                   l1869 0712                     l1799 04BB                     l1895 07A5  
                   l1887 074E                     l1879 0737                     l1897 07B1  
                   l1889 0756                     l1899 07B7                     STR_1 001C  
                   STR_2 009C                     STR_3 00B9                     STR_4 00F1  
                   STR_5 00F1                     STR_6 00F1                     STR_7 00D6  
                   STR_8 00F4                     STR_9 00EE                     u1000 0114  
                   u1001 0113                     u1010 0222                     u1011 0221  
                   u1110 0497                     u1111 0496                     u1040 023C  
                   u1200 03CB                     u1041 023B                     u1025 0229  
                   u1105 0487                     u1201 03CA                     u1130 04AB  
                   u1050 0458                     u1035 0230                     u1131 04AA  
                   u1115 0493                     u1051 0457                     u1300 0193  
                   u1140 04B0                     u1060 0463                     u1220 03DE  
                   u1301 0192                     u1141 04AF                     u1125 049F  
                   u1061 0462                     u1221 03DD                     u1205 03C7  
                   u1310 019F                     u1070 0474                     u1230 03E3  
                   u1150 0399                     u1311 019E                     u1071 0473  
                   u1231 03E2                     u1215 03D2                     u1151 0398  
                   u1240 0137                     u1160 03A4                     u1320 0253  
                   u1400 06F3                     u1241 0136                     u1161 03A3  
                   u1321 0252                     u1401 06F2                     u1250 013D  
                   u1090 0486                     u1170 03AF                     u1330 0269  
                   u1410 0706                     u1251 013C                     u1091 0485  
                   u1171 03AE                     u1331 0268                     u1411 0705  
                   u1340 04C9                     u1260 015F                     u1420 0712  
                   u1341 04C8                     u1261 015E                     u1085 0478  
                   u1421 0711                     u1350 04D1                     u1270 016B  
                   u1190 03C1                     u1430 071D                     u1351 04D0  
                   u1271 016A                     u1191 03C0                     u1431 071C  
                   u1360 04DC                     u1280 0179                     u1440 072B  
                   u1361 04DB                     u1281 0178                     u1185 03B3  
                   u1441 072A                     u1370 04ED                     u1290 0185  
                   u1450 0737                     u1371 04EC                     u1291 0184  
                   u1451 0736                     u1507 068D                     u1380 051F  
                   u1460 0742                     u1381 051E                     u1461 0741  
                   u1517 06A5                     u1390 0524                     u1470 0748  
                   u1391 0523                     u1607 0359                     u1471 0747  
                   u1527 06B2                     u1480 0756                     u1617 036A  
                   u1481 0755                     u1537 06CA           ??_config_USART 0070  
                   u1627 0379                     u1547 06E2                     u1637 0388  
                   u1557 07BD                     u1647 02F4                     u1567 07CB  
                   u1657 0303                     u1577 07D9                     u1497 0675  
                   u1667 0314                     u1587 07E7                     u1677 0323  
                   u1597 034A                     u1687 0332                     _RCIF 0065  
                   _TXIF 0064                     _atoi 04BA                     _main 0669  
                   btemp 007E                     start 0000                    ?_atoi 0076  
           main@completo 005E                    ?_main 0070          __end_of___awdiv 04BA  
                  STR_10 00E2                    STR_11 00F4                    STR_12 00EE  
                  STR_13 0077                    STR_14 0050                    STR_15 0050  
        __end_of___awmod 03ED          ___awdiv@divisor 0070          __end_of___lwdiv 02E8  
        __end_of___lwmod 02A4          ___awdiv@counter 0075                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
        __end_of__doprnt 0669                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019          __end_of_defensa 0171          __end_of_dpowers 001C  
        __end_of_isdigit 0141                    atoi@a 007B                    _setup 01DC  
                  atoi@s 007D                    _putch 011D                    fpbase 0008  
                  pclath 000A          __end_of_spiInit 0157          __end_of_spiRead 012F  
                  status 0003                    wtemp0 007E          __end_of_sprintf 021C  
        __initialization 07F3             __end_of_atoi 0535             __end_of_main 07F3  
                 ??_atoi 0078                   ??_main 005B         ___awdiv@dividend 0072  
                 ?_setup 0070                   ?_putch 0070                   _SPBRGH 009A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of__fptable 000C         __end_of_defensa1 018B  
       __end_of_defensa2 01A5         __end_of_division 0453                   ___wmul 021C  
              ??___awdiv 0074                ??___awmod 0074                ??___lwdiv 0074  
              ??___lwmod 007C                ??__doprnt 0049         __end_of_mensaje1 033E  
       __end_of_mensaje2 0394                ??_defensa 0058         ___awdiv@quotient 0077  
   __end_of_config_USART 01DC          ___awmod@divisor 0070             __doprnt@flag 004C  
        ___awmod@counter 0075                   _printf 01A5             __doprnt@prec 004D  
                 _strcat 0241                   fptable 0003                   fptotal 0002  
              ??_isdigit 0070         __end_of_spiWrite 010E                ??_spiInit 0073  
              ??_spiRead 0070                ??_sprintf 0055  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 01FB            __end_of_putch 0126  
             __doprnt@ap 0048               __doprnt@pb 0051                  ??_setup 0074  
                ??_putch 0071               __pbssBANK0 0020               __pmaintext 0669  
                ?___wmul 0070  __size_of_spiReceiveWait 0007                  ?_printf 0070  
                ?_strcat 0070                ?_defensa1 0070                ?_defensa2 0070  
                _SSPSTAT 0094               __stringtab 000C                ?_division 0070  
              ?_mensaje1 0070                ?_mensaje2 0070    __size_of_config_USART 001C  
              ?_spiWrite 0070                  ___awdiv 0453                  ___awmod 0394  
        __size_of___wmul 0025                  ___lwdiv 02A4                  ___lwmod 026A  
                __doprnt 0535                  _decenas 0025                  _defensa 0157  
                __ptext1 0241                  __ptext2 01FB                  __ptext3 0108  
                __ptext4 0126                  __ptext5 010E                  __ptext6 01DC  
                __ptext7 0141                  __ptext8 01C0                  __ptext9 033E  
        __size_of_printf 001B          __size_of_strcat 0029                  _dpowers 0012  
                _isdigit 012F               ??_defensa1 0058               ??_defensa2 0058  
       ___awmod@dividend 0072                  _residuo 0023                  _spiInit 0141  
                _spiRead 0126                  _sprintf 01FB                  clrloop0 0116  
   end_of_initialization 07FC               ??_division 0079             _config_USART 01C0  
             ??_mensaje1 0058               ??_mensaje2 0058                _RCSTAbits 0018  
                printf@f 0055               ??_spiWrite 0070                _PORTCbits 0007  
              _TRISCbits 0087        division@dividendo 007C              spiWrite@dat 0070  
              _TXSTAbits 0098           _spiReceiveWait 010E           __end_of___wmul 0241  
            _BAUDCTLbits 0187           __end_of_printf 01C0           __end_of_strcat 026A  
    start_initialization 07F3   __end_of_spiReceiveWait 0115                 ??___wmul 0074  
            __doprnt@val 004E                 ??_printf 0052                 ??_strcat 0071  
              ___latbits 0002            __pcstackBANK0 0047        __size_of__fptable 0009  
      __size_of_defensa1 001A        __size_of_defensa2 001A             _isdigit$1017 0070  
              __doprnt@c 0050                __doprnt@f 0047        __size_of_division 0066  
      __size_of_mensaje1 0056        __size_of_mensaje2 0056         ___lwdiv@dividend 0072  
        ?_spiReceiveWait 0070                __pfunctab 0003                 ?___awdiv 0070  
               ?___awmod 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
               ?__doprnt 0047        __size_of_spiWrite 0006                 ?_defensa 0070  
              __pstrings 000C                 ?_isdigit 0070                 ?_spiInit 0070  
               ?_spiRead 0070         ___lwdiv@quotient 0075                 ?_sprintf 0052  
         __size_of_setup 001F           __size_of_putch 0009     spiInit@sTransmitEdge 0072  
         ___wmul@product 0074                clear_ram0 0115       spiInit@sDataSample 0070  
               _PIR1bits 000C              __stringbase 0011        ___wmul@multiplier 0070  
              _voltaje_a 0028                _voltaje_b 0027         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003A  
       __size_of__doprnt 0134       __end_of__stringtab 0012         __size_of_defensa 001A  
               __fptable 0003                 _defensa1 0171                 _defensa2 018B  
             strcat@from 0070         __size_of_isdigit 0012          ___lwdiv@divisor 0070  
               _centenas 0026          ___lwdiv@counter 0077                 __ptext10 02E8  
               __ptext11 03ED                 __ptext20 026A                 __ptext12 0394  
               __ptext21 02A4                 __ptext13 0453                 __ptext22 04BA  
               __ptext14 018B                 __ptext23 012F                 __ptext15 0171  
               __ptext24 021C                 __ptext16 0157                 __ptext17 01A5  
               __ptext18 0535                 __ptext19 011D         __size_of_spiInit 0016  
       __size_of_spiRead 0009                 _division 03ED         __size_of_sprintf 0021  
          __size_of_atoi 007B            __size_of_main 018A                 _mensaje1 02E8  
               _mensaje2 033E                 _spiWrite 0108                 _unidades 0024  
           spiInit@sType 0073                 atoi@sign 007A                 fp__putch 0009  
      spiInit@sClockIdle 0071                putch@dato 0070               _INTCONbits 000B  
               isdigit@c 0071                sprintf@ap 0057                sprintf@pb 0059  
              sprintf@wh 0058         ___lwmod@dividend 007A         ??_spiReceiveWait 0070  
              stringcode 000C               _OSCCONbits 008F                 printf@ap 0054  
               printf@pb 0056                 sprintf@f 0052                 strcat@cp 0073  
               strcat@to 0072          ___lwmod@divisor 0078          ___lwmod@counter 007D  
               stringdir 000C                 stringtab 000C            ?_config_USART 0070  
