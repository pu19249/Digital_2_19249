

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 01 00:58:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	functab,global,class=ENTRY,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	strings
   385  000C                     __pstrings:
   386  000C                     stringtab:
   387  000C                     __stringtab:
   388  000C                     stringcode:	
   389                           ;	String table - string pointers are 1 byte each
   390                           
   391  000C                     stringdir:
   392  000C  3000               	movlw	high stringdir
   393  000D  008A               	movwf	10
   394  000E  0804               	movf	4,w
   395  000F  0A84               	incf	4,f
   396  0010  0782               	addwf	2,f
   397  0011                     __stringbase:
   398  0011  3400               	retlw	0
   399  0012                     __end_of__stringtab:
   400  0012                     _dpowers:
   401  0012  3401               	retlw	1
   402  0013  3400               	retlw	0
   403  0014  340A               	retlw	10
   404  0015  3400               	retlw	0
   405  0016  3464               	retlw	100
   406  0017  3400               	retlw	0
   407  0018  34E8               	retlw	232
   408  0019  3403               	retlw	3
   409  001A  3410               	retlw	16
   410  001B  3427               	retlw	39
   411  001C                     __end_of_dpowers:
   412  000C                     _PIR1bits	set	12
   413  000B                     _INTCONbits	set	11
   414  0018                     _RCSTAbits	set	24
   415  0013                     _SSPBUF	set	19
   416  0014                     _SSPCON	set	20
   417  0009                     _PORTE	set	9
   418  0008                     _PORTD	set	8
   419  0007                     _PORTC	set	7
   420  0005                     _PORTA	set	5
   421  0006                     _PORTB	set	6
   422  0019                     _TXREG	set	25
   423  001A                     _RCREG	set	26
   424  0007                     _PORTCbits	set	7
   425  0064                     _TXIF	set	100
   426  0065                     _RCIF	set	101
   427  0098                     _TXSTAbits	set	152
   428  009A                     _SPBRGH	set	154
   429  0099                     _SPBRG	set	153
   430  0094                     _SSPSTATbits	set	148
   431  0094                     _SSPSTAT	set	148
   432  0087                     _TRISCbits	set	135
   433  008F                     _OSCCONbits	set	143
   434  0086                     _TRISB	set	134
   435  0088                     _TRISD	set	136
   436  043B                     _TRISC3	set	1083
   437  043D                     _TRISC5	set	1085
   438  0187                     _BAUDCTLbits	set	391
   439  001C                     STR_4:
   440  001C  340D               	retlw	13
   441  001D  3456               	retlw	86	;'V'
   442  001E  346F               	retlw	111	;'o'
   443  001F  346C               	retlw	108	;'l'
   444  0020  3474               	retlw	116	;'t'
   445  0021  3461               	retlw	97	;'a'
   446  0022  346A               	retlw	106	;'j'
   447  0023  3465               	retlw	101	;'e'
   448  0024  3431               	retlw	49	;'1'
   449  0025  343A               	retlw	58	;':'
   450  0026  3420               	retlw	32	;' '
   451  0027  3400               	retlw	0
   452  0028                     STR_7:
   453  0028  340D               	retlw	13
   454  0029  3456               	retlw	86	;'V'
   455  002A  346F               	retlw	111	;'o'
   456  002B  346C               	retlw	108	;'l'
   457  002C  3474               	retlw	116	;'t'
   458  002D  3461               	retlw	97	;'a'
   459  002E  346A               	retlw	106	;'j'
   460  002F  3465               	retlw	101	;'e'
   461  0030  3432               	retlw	50	;'2'
   462  0031  343A               	retlw	58	;':'
   463  0032  3420               	retlw	32	;' '
   464  0033  3400               	retlw	0
   465  0034                     STR_6:
   466  0034  340D               	retlw	13
   467  0035  340D               	retlw	13
   468  0036  3400               	retlw	0
   469  0037                     STR_1:
   470  0037  3425               	retlw	37	;'%'
   471  0038  3464               	retlw	100	;'d'
   472  0039  3400               	retlw	0
   473  003A                     STR_5:
   474  003A  342E               	retlw	46	;'.'
   475  003B  3400               	retlw	0
   476  0034                     
   477                           	psect	cinit
   478  07EB                     start_initialization:	
   479                           ; #config settings
   480                           
   481  07EB                     __initialization:
   482                           
   483                           ; Clear objects allocated to BANK0
   484  07EB  1383               	bcf	3,7	;select IRP bank0
   485  07EC  3020               	movlw	low __pbssBANK0
   486  07ED  0084               	movwf	4
   487  07EE  3051               	movlw	low (__pbssBANK0+49)
   488  07EF  120A  118A  21AD  120A  118A  	fcall	clear_ram0
   489                           
   490                           ; Clear objects allocated to BANK1
   491  07F4  30A0               	movlw	low __pbssBANK1
   492  07F5  0084               	movwf	4
   493  07F6  30B4               	movlw	low (__pbssBANK1+20)
   494  07F7  120A  118A  21AD  120A  118A  	fcall	clear_ram0
   495  07FC                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  07FC                     __end_of__initialization:
   499  07FC  0183               	clrf	3
   500  07FD  120A  118A  2EB3   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssBANK0
   503  0020                     __pbssBANK0:
   504  0020                     _u1:
   505  0020                     	ds	1
   506  0021                     _d1:
   507  0021                     	ds	1
   508  0022                     _c1:
   509  0022                     	ds	1
   510  0023                     _residuo:
   511  0023                     	ds	1
   512  0024                     _unidades:
   513  0024                     	ds	1
   514  0025                     _decenas:
   515  0025                     	ds	1
   516  0026                     _centenas:
   517  0026                     	ds	1
   518  0027                     _voltaje_b:
   519  0027                     	ds	1
   520  0028                     _voltaje_a:
   521  0028                     	ds	1
   522  0029                     _s2:
   523  0029                     	ds	20
   524  003D                     _s1:
   525  003D                     	ds	20
   526                           
   527                           	psect	bssBANK1
   528  00A0                     __pbssBANK1:
   529  00A0                     _s3:
   530  00A0                     	ds	20
   531                           
   532                           	psect	clrtext
   533  01AD                     clear_ram0:	
   534                           ;	Called with FSR containing the base address, and
   535                           ;	W with the last address+1
   536                           
   537  01AD  0064               	clrwdt	;clear the watchdog before getting into this loop
   538  01AE                     clrloop0:
   539  01AE  0180               	clrf	0	;clear RAM location pointed to by FSR
   540  01AF  0A84               	incf	4,f	;increment pointer
   541  01B0  0604               	xorwf	4,w	;XOR with final address
   542  01B1  1903               	btfsc	3,2	;have we reached the end yet?
   543  01B2  3400               	retlw	0	;all done for this memory range, return
   544  01B3  0604               	xorwf	4,w	;XOR again to restore value
   545  01B4  29AE               	goto	clrloop0	;do the next byte
   546                           
   547                           	psect	cstackCOMMON
   548  0070                     __pcstackCOMMON:
   549  0070                     ?_isdigit:
   550  0070                     ?_setup:	
   551                           ; 1 bit 
   552                           
   553  0070                     ?_spiWrite:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ??_spiWrite:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_spiRead:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_spiRead:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_division:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_mensaje1:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_mensaje2:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_strcat:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_spiInit:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_config_USART:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ??_config_USART:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_isdigit:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_putch:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_spiReceiveWait:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ??_spiReceiveWait:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_printf:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?___wmul:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ?___awdiv:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ?___awmod:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ?___lwdiv:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     putch@dato:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     spiInit@sDataSample:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     spiWrite@dat:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     _isdigit$996:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     strcat@from:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ___wmul@multiplier:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ___awdiv@divisor:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awmod@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___lwdiv@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	1
   646  0071                     ??_strcat:
   647  0071                     ??_putch:	
   648                           ; 1 bytes @ 0x1
   649                           
   650  0071                     spiInit@sClockIdle:	
   651                           ; 1 bytes @ 0x1
   652                           
   653  0071                     isdigit@c:	
   654                           ; 1 bytes @ 0x1
   655                           
   656                           
   657                           ; 1 bytes @ 0x1
   658  0071                     	ds	1
   659  0072                     spiInit@sTransmitEdge:
   660  0072                     strcat@to:	
   661                           ; 1 bytes @ 0x2
   662                           
   663  0072                     ___wmul@multiplicand:	
   664                           ; 1 bytes @ 0x2
   665                           
   666  0072                     ___awdiv@dividend:	
   667                           ; 2 bytes @ 0x2
   668                           
   669  0072                     ___awmod@dividend:	
   670                           ; 2 bytes @ 0x2
   671                           
   672  0072                     ___lwdiv@dividend:	
   673                           ; 2 bytes @ 0x2
   674                           
   675                           
   676                           ; 2 bytes @ 0x2
   677  0072                     	ds	1
   678  0073                     ??_spiInit:
   679  0073                     spiInit@sType:	
   680                           ; 1 bytes @ 0x3
   681                           
   682  0073                     strcat@cp:	
   683                           ; 1 bytes @ 0x3
   684                           
   685                           
   686                           ; 1 bytes @ 0x3
   687  0073                     	ds	1
   688  0074                     ??_setup:
   689  0074                     ??___wmul:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___awdiv:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??___awmod:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ??___lwdiv:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     ___wmul@product:	
   702                           ; 1 bytes @ 0x4
   703                           
   704                           
   705                           ; 2 bytes @ 0x4
   706  0074                     	ds	1
   707  0075                     ___awdiv@counter:
   708  0075                     ___awmod@counter:	
   709                           ; 1 bytes @ 0x5
   710                           
   711  0075                     ___lwdiv@quotient:	
   712                           ; 1 bytes @ 0x5
   713                           
   714                           
   715                           ; 2 bytes @ 0x5
   716  0075                     	ds	1
   717  0076                     ?_atoi:
   718  0076                     ___awdiv@sign:	
   719                           ; 2 bytes @ 0x6
   720                           
   721  0076                     ___awmod@sign:	
   722                           ; 1 bytes @ 0x6
   723                           
   724                           
   725                           ; 1 bytes @ 0x6
   726  0076                     	ds	1
   727  0077                     ___lwdiv@counter:
   728  0077                     ___awdiv@quotient:	
   729                           ; 1 bytes @ 0x7
   730                           
   731                           
   732                           ; 2 bytes @ 0x7
   733  0077                     	ds	1
   734  0078                     ??_atoi:
   735  0078                     ?___lwmod:	
   736                           ; 1 bytes @ 0x8
   737                           
   738  0078                     ___lwmod@divisor:	
   739                           ; 2 bytes @ 0x8
   740                           
   741                           
   742                           ; 2 bytes @ 0x8
   743  0078                     	ds	1
   744  0079                     ??_division:
   745                           
   746                           ; 1 bytes @ 0x9
   747  0079                     	ds	1
   748  007A                     atoi@sign:
   749  007A                     ___lwmod@dividend:	
   750                           ; 1 bytes @ 0xA
   751                           
   752                           
   753                           ; 2 bytes @ 0xA
   754  007A                     	ds	1
   755  007B                     atoi@a:
   756                           
   757                           ; 2 bytes @ 0xB
   758  007B                     	ds	1
   759  007C                     ??___lwmod:
   760  007C                     division@dividendo:	
   761                           ; 1 bytes @ 0xC
   762                           
   763                           
   764                           ; 1 bytes @ 0xC
   765  007C                     	ds	1
   766  007D                     ___lwmod@counter:
   767  007D                     atoi@s:	
   768                           ; 1 bytes @ 0xD
   769                           
   770                           
   771                           ; 1 bytes @ 0xD
   772  007D                     	ds	1
   773                           
   774                           	psect	cstackBANK0
   775  0051                     __pcstackBANK0:
   776  0051                     ?__doprnt:
   777  0051                     __doprnt@f:	
   778                           ; 2 bytes @ 0x0
   779                           
   780                           
   781                           ; 1 bytes @ 0x0
   782  0051                     	ds	1
   783  0052                     __doprnt@ap:
   784                           
   785                           ; 1 bytes @ 0x1
   786  0052                     	ds	1
   787  0053                     ??__doprnt:
   788                           
   789                           ; 1 bytes @ 0x2
   790  0053                     	ds	3
   791  0056                     __doprnt@flag:
   792                           
   793                           ; 1 bytes @ 0x5
   794  0056                     	ds	1
   795  0057                     __doprnt@prec:
   796                           
   797                           ; 1 bytes @ 0x6
   798  0057                     	ds	1
   799  0058                     __doprnt@val:
   800                           
   801                           ; 2 bytes @ 0x7
   802  0058                     	ds	2
   803  005A                     __doprnt@c:
   804                           
   805                           ; 1 bytes @ 0x9
   806  005A                     	ds	1
   807  005B                     __doprnt@pb:
   808                           
   809                           ; 1 bytes @ 0xA
   810  005B                     	ds	1
   811  005C                     ??_printf:
   812  005C                     ?_sprintf:	
   813                           ; 1 bytes @ 0xB
   814                           
   815  005C                     sprintf@f:	
   816                           ; 2 bytes @ 0xB
   817                           
   818                           
   819                           ; 1 bytes @ 0xB
   820  005C                     	ds	2
   821  005E                     printf@ap:
   822                           
   823                           ; 1 bytes @ 0xD
   824  005E                     	ds	1
   825  005F                     ??_sprintf:
   826  005F                     printf@f:	
   827                           ; 1 bytes @ 0xE
   828                           
   829                           
   830                           ; 1 bytes @ 0xE
   831  005F                     	ds	1
   832  0060                     printf@pb:
   833                           
   834                           ; 2 bytes @ 0xF
   835  0060                     	ds	1
   836  0061                     sprintf@ap:
   837                           
   838                           ; 1 bytes @ 0x10
   839  0061                     	ds	1
   840  0062                     ??_mensaje1:
   841  0062                     ??_mensaje2:	
   842                           ; 1 bytes @ 0x11
   843                           
   844  0062                     sprintf@wh:	
   845                           ; 1 bytes @ 0x11
   846                           
   847                           
   848                           ; 1 bytes @ 0x11
   849  0062                     	ds	1
   850  0063                     sprintf@pb:
   851                           
   852                           ; 2 bytes @ 0x12
   853  0063                     	ds	2
   854  0065                     ??_main:
   855                           
   856                           ; 1 bytes @ 0x14
   857  0065                     	ds	3
   858  0068                     main@completo:
   859                           
   860                           ; 2 bytes @ 0x17
   861  0068                     	ds	2
   862                           
   863                           	psect	maintext
   864  06B3                     __pmaintext:	
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 77 in file "master03.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  completo        2   23[BANK0 ] int 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : B00/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       2       0       0       0
   886 ;;      Temps:          0       3       0       0       0
   887 ;;      Totals:         0       5       0       0       0
   888 ;;Total ram usage:        5 bytes
   889 ;; Hardware stack levels required when called:    4
   890 ;; This function calls:
   891 ;;		_atoi
   892 ;;		_division
   893 ;;		_mensaje1
   894 ;;		_mensaje2
   895 ;;		_setup
   896 ;;		_spiRead
   897 ;;		_spiWrite
   898 ;;		_sprintf
   899 ;;		_strcat
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _main
   907  06B3                     _main:
   908  06B3                     l1739:	
   909                           ;incstack = 0
   910                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   911                           
   912                           
   913                           ;master03.c: 78: 
   914  06B3  120A  118A  2226  120A  118A  	fcall	_setup
   915  06B8                     l1741:
   916                           
   917                           ;master03.c: 81:     while(TXIF == 0);
   918  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   919  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   920  06BA  1107               	bcf	7,2	;volatile
   921  06BB                     l1743:
   922                           
   923                           ;master03.c: 82:     TXREG = dato;
   924  06BB  30C7               	movlw	199
   925  06BC  1283               	bcf	3,5	;RP0=0, select bank0
   926  06BD  1303               	bcf	3,6	;RP1=0, select bank0
   927  06BE  00E5               	movwf	??_main
   928  06BF                     u1257:
   929  06BF  2EC0               	nop2
   930  06C0  0BE5               	decfsz	??_main,f
   931  06C1  2EBF               	goto	u1257
   932  06C2  2EC3               	nop2
   933  06C3                     l1745:
   934                           
   935                           ;master03.c: 84: }
   936  06C3  300A               	movlw	10
   937  06C4  120A  118A  21A0  120A  118A  	fcall	_spiWrite
   938  06C9                     l1747:
   939                           
   940                           ;master03.c: 85: 
   941  06C9  120A  118A  21BE  120A  118A  	fcall	_spiRead
   942  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   943  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   944  06D0  00E5               	movwf	??_main
   945  06D1  0865               	movf	??_main,w
   946  06D2  00A8               	movwf	_voltaje_a
   947  06D3                     l1749:
   948                           
   949                           ;master03.c: 86: void division (char dividendo){
   950  06D3  30C7               	movlw	199
   951  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   952  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   953  06D6  00E5               	movwf	??_main
   954  06D7                     u1267:
   955  06D7  2ED8               	nop2
   956  06D8  0BE5               	decfsz	??_main,f
   957  06D9  2ED7               	goto	u1267
   958  06DA  2EDB               	nop2
   959                           
   960                           ;master03.c: 88:     centenas = dividendo/100;
   961  06DB  300A               	movlw	10
   962  06DC  120A  118A  21A0  120A  118A  	fcall	_spiWrite
   963                           
   964                           ;master03.c: 89:     residuo = dividendo%100;
   965  06E1  120A  118A  21BE  120A  118A  	fcall	_spiRead
   966  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   967  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   968  06E8  00E5               	movwf	??_main
   969  06E9  0865               	movf	??_main,w
   970  06EA  00A7               	movwf	_voltaje_b
   971  06EB                     l1751:
   972                           
   973                           ;master03.c: 90:     decenas = residuo/10;
   974  06EB  30C7               	movlw	199
   975  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   976  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   977  06EE  00E5               	movwf	??_main
   978  06EF                     u1277:
   979  06EF  2EF0               	nop2
   980  06F0  0BE5               	decfsz	??_main,f
   981  06F1  2EEF               	goto	u1277
   982  06F2  2EF3               	nop2
   983  06F3                     l1753:
   984                           
   985                           ;master03.c: 92: 
   986  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   987  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   988  06F5  1507               	bsf	7,2	;volatile
   989  06F6                     l1755:
   990                           
   991                           ;master03.c: 94:     decenas += 48;
   992  06F6  3041               	movlw	65
   993  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   994  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   995  06F9  00E6               	movwf	??_main+1
   996  06FA  30ED               	movlw	237
   997  06FB  00E5               	movwf	??_main
   998  06FC                     u1287:
   999  06FC  0BE5               	decfsz	??_main,f
  1000  06FD  2EFC               	goto	u1287
  1001  06FE  0BE6               	decfsz	??_main+1,f
  1002  06FF  2EFC               	goto	u1287
  1003  0700  2F01               	nop2
  1004                           
  1005                           ;master03.c: 95:     unidades += 48;
  1006  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0703  0828               	movf	_voltaje_a,w
  1009  0704  120A  118A  2437  120A  118A  	fcall	_division
  1010  0709                     l1757:
  1011                           
  1012                           ;master03.c: 96:     return;
  1013  0709  120A  118A  2332  120A  118A  	fcall	_mensaje1
  1014  070E                     l1759:
  1015                           
  1016                           ;master03.c: 97: }
  1017  070E  3041               	movlw	65
  1018  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0711  00E6               	movwf	??_main+1
  1021  0712  30ED               	movlw	237
  1022  0713  00E5               	movwf	??_main
  1023  0714                     u1297:
  1024  0714  0BE5               	decfsz	??_main,f
  1025  0715  2F14               	goto	u1297
  1026  0716  0BE6               	decfsz	??_main+1,f
  1027  0717  2F14               	goto	u1297
  1028  0718  2F19               	nop2
  1029  0719                     l1761:
  1030                           
  1031                           ;master03.c: 98: 
  1032  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1033  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1034  071B  0827               	movf	_voltaje_b,w
  1035  071C  120A  118A  2437  120A  118A  	fcall	_division
  1036  0721                     l1763:
  1037                           
  1038                           ;master03.c: 99: void mensaje1(void){
  1039  0721  120A  118A  2388  120A  118A  	fcall	_mensaje2
  1040                           
  1041                           ;master03.c: 100:     printf("\rVoltaje1: ");
  1042  0726  3041               	movlw	65
  1043  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0729  00E6               	movwf	??_main+1
  1046  072A  30ED               	movlw	237
  1047  072B  00E5               	movwf	??_main
  1048  072C                     u1307:
  1049  072C  0BE5               	decfsz	??_main,f
  1050  072D  2F2C               	goto	u1307
  1051  072E  0BE6               	decfsz	??_main+1,f
  1052  072F  2F2C               	goto	u1307
  1053  0730  2F31               	nop2
  1054  0731                     l84:	
  1055                           ;master03.c: 102:     TXREG = centenas;
  1056                           
  1057  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0733  1E8C               	btfss	12,5	;volatile
  1060  0734  2F36               	goto	u1221
  1061  0735  2F37               	goto	u1220
  1062  0736                     u1221:
  1063  0736  2F31               	goto	l84
  1064  0737                     u1220:
  1065  0737                     l1765:
  1066                           
  1067                           ;master03.c: 103:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1068  0737  081A               	movf	26,w	;volatile
  1069  0738  3ED0               	addlw	208
  1070  0739  00E5               	movwf	??_main
  1071  073A  0865               	movf	??_main,w
  1072  073B  00A2               	movwf	_c1
  1073  073C                     l87:	
  1074                           ;master03.c: 104:     printf(".");
  1075                           
  1076  073C  1E8C               	btfss	12,5	;volatile
  1077  073D  2F3F               	goto	u1231
  1078  073E  2F40               	goto	u1230
  1079  073F                     u1231:
  1080  073F  2F3C               	goto	l87
  1081  0740                     u1230:
  1082  0740                     l1767:
  1083                           
  1084                           ;master03.c: 105:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1085  0740  081A               	movf	26,w	;volatile
  1086  0741  3ED0               	addlw	208
  1087  0742  00E5               	movwf	??_main
  1088  0743  0865               	movf	??_main,w
  1089  0744  00A1               	movwf	_d1
  1090  0745                     l90:	
  1091                           ;master03.c: 106:     TXREG = decenas;
  1092                           
  1093  0745  1E8C               	btfss	12,5	;volatile
  1094  0746  2F48               	goto	u1241
  1095  0747  2F49               	goto	u1240
  1096  0748                     u1241:
  1097  0748  2F45               	goto	l90
  1098  0749                     u1240:
  1099  0749                     l1769:
  1100                           
  1101                           ;master03.c: 107:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1102  0749  081A               	movf	26,w	;volatile
  1103  074A  3ED0               	addlw	208
  1104  074B  00E5               	movwf	??_main
  1105  074C  0865               	movf	??_main,w
  1106  074D  00A0               	movwf	_u1
  1107  074E                     l1771:
  1108                           
  1109                           ;master03.c: 108:     TXREG = unidades;
  1110  074E  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1111  074F  00E5               	movwf	??_main
  1112  0750  0865               	movf	??_main,w
  1113  0751  00DC               	movwf	sprintf@f
  1114  0752  0822               	movf	_c1,w
  1115  0753  00E6               	movwf	??_main+1
  1116  0754  01E7               	clrf	??_main+2
  1117  0755  0866               	movf	??_main+1,w
  1118  0756  00DD               	movwf	?_sprintf+1
  1119  0757  0867               	movf	??_main+2,w
  1120  0758  00DE               	movwf	?_sprintf+2
  1121  0759  303D               	movlw	(low (_s1| 0))& (0+255)
  1122  075A  120A  118A  2245  120A  118A  	fcall	_sprintf
  1123  075F                     l1773:
  1124                           
  1125                           ;master03.c: 109:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1126  075F  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1127  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0762  00E5               	movwf	??_main
  1130  0763  0865               	movf	??_main,w
  1131  0764  00DC               	movwf	sprintf@f
  1132  0765  0821               	movf	_d1,w
  1133  0766  00E6               	movwf	??_main+1
  1134  0767  01E7               	clrf	??_main+2
  1135  0768  0866               	movf	??_main+1,w
  1136  0769  00DD               	movwf	?_sprintf+1
  1137  076A  0867               	movf	??_main+2,w
  1138  076B  00DE               	movwf	?_sprintf+2
  1139  076C  3029               	movlw	(low (_s2| 0))& (0+255)
  1140  076D  120A  118A  2245  120A  118A  	fcall	_sprintf
  1141  0772                     l1775:
  1142                           
  1143                           ;master03.c: 110:     printf("\r\r");
  1144  0772  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1145  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0775  00E5               	movwf	??_main
  1148  0776  0865               	movf	??_main,w
  1149  0777  00DC               	movwf	sprintf@f
  1150  0778  0820               	movf	_u1,w
  1151  0779  00E6               	movwf	??_main+1
  1152  077A  01E7               	clrf	??_main+2
  1153  077B  0866               	movf	??_main+1,w
  1154  077C  00DD               	movwf	?_sprintf+1
  1155  077D  0867               	movf	??_main+2,w
  1156  077E  00DE               	movwf	?_sprintf+2
  1157  077F  30A0               	movlw	(low (_s3| 0))& (0+255)
  1158  0780  120A  118A  2245  120A  118A  	fcall	_sprintf
  1159  0785                     l1777:
  1160                           
  1161                           ;master03.c: 111: 
  1162  0785  3029               	movlw	(low (_s2| 0))& (0+255)
  1163  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0788  00E5               	movwf	??_main
  1166  0789  0865               	movf	??_main,w
  1167  078A  00F0               	movwf	strcat@from
  1168  078B  303D               	movlw	(low (_s1| 0))& (0+255)
  1169  078C  120A  118A  228B  120A  118A  	fcall	_strcat
  1170  0791                     l1779:
  1171                           
  1172                           ;master03.c: 112:     return;
  1173  0791  30A0               	movlw	(low (_s3| 0))& (0+255)
  1174  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0794  00E5               	movwf	??_main
  1177  0795  0865               	movf	??_main,w
  1178  0796  00F0               	movwf	strcat@from
  1179  0797  303D               	movlw	(low (_s1| 0))& (0+255)
  1180  0798  120A  118A  228B  120A  118A  	fcall	_strcat
  1181  079D                     l1781:
  1182                           
  1183                           ;master03.c: 113: }
  1184  079D  303D               	movlw	(low (_s1| 0))& (0+255)
  1185  079E  120A  118A  2504  120A  118A  	fcall	_atoi
  1186  07A3  0877               	movf	?_atoi+1,w
  1187  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1188  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1189  07A6  00E9               	movwf	main@completo+1
  1190  07A7  0876               	movf	?_atoi,w
  1191  07A8  00E8               	movwf	main@completo
  1192  07A9                     l1783:
  1193                           
  1194                           ;master03.c: 114: 
  1195  07A9  0868               	movf	main@completo,w
  1196  07AA  120A  118A  2437  120A  118A  	fcall	_division
  1197  07AF                     l1785:
  1198                           
  1199                           ;master03.c: 115: void mensaje2(void){
  1200  07AF  3082               	movlw	130
  1201  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1202  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1203  07B2  00E6               	movwf	??_main+1
  1204  07B3  30DD               	movlw	221
  1205  07B4  00E5               	movwf	??_main
  1206  07B5                     u1317:
  1207  07B5  0BE5               	decfsz	??_main,f
  1208  07B6  2FB5               	goto	u1317
  1209  07B7  0BE6               	decfsz	??_main+1,f
  1210  07B8  2FB5               	goto	u1317
  1211  07B9                     l1787:
  1212                           
  1213                           ;master03.c: 116:     printf("\rVoltaje2: ");
  1214  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1215  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  1216  07BB  0826               	movf	_centenas,w
  1217  07BC  0099               	movwf	25	;volatile
  1218  07BD                     l1789:
  1219                           
  1220                           ;master03.c: 117:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1221  07BD  3082               	movlw	130
  1222  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1223  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1224  07C0  00E6               	movwf	??_main+1
  1225  07C1  30DD               	movlw	221
  1226  07C2  00E5               	movwf	??_main
  1227  07C3                     u1327:
  1228  07C3  0BE5               	decfsz	??_main,f
  1229  07C4  2FC3               	goto	u1327
  1230  07C5  0BE6               	decfsz	??_main+1,f
  1231  07C6  2FC3               	goto	u1327
  1232  07C7                     l1791:
  1233                           
  1234                           ;master03.c: 118:     TXREG = centenas;
  1235  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1236  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1237  07C9  0825               	movf	_decenas,w
  1238  07CA  0099               	movwf	25	;volatile
  1239  07CB                     l1793:
  1240                           
  1241                           ;master03.c: 119:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1242  07CB  3082               	movlw	130
  1243  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1244  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1245  07CE  00E6               	movwf	??_main+1
  1246  07CF  30DD               	movlw	221
  1247  07D0  00E5               	movwf	??_main
  1248  07D1                     u1337:
  1249  07D1  0BE5               	decfsz	??_main,f
  1250  07D2  2FD1               	goto	u1337
  1251  07D3  0BE6               	decfsz	??_main+1,f
  1252  07D4  2FD1               	goto	u1337
  1253  07D5                     l1795:
  1254                           
  1255                           ;master03.c: 120:     printf(".");
  1256  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1257  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1258  07D7  0824               	movf	_unidades,w
  1259  07D8  0099               	movwf	25	;volatile
  1260  07D9                     l1797:
  1261                           
  1262                           ;master03.c: 121:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1263  07D9  3082               	movlw	130
  1264  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1265  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1266  07DC  00E6               	movwf	??_main+1
  1267  07DD  30DD               	movlw	221
  1268  07DE  00E5               	movwf	??_main
  1269  07DF                     u1347:
  1270  07DF  0BE5               	decfsz	??_main,f
  1271  07E0  2FDF               	goto	u1347
  1272  07E1  0BE6               	decfsz	??_main+1,f
  1273  07E2  2FDF               	goto	u1347
  1274  07E3                     l1799:
  1275                           
  1276                           ;master03.c: 122:     TXREG = decenas;
  1277  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1278  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1279  07E5  0868               	movf	main@completo,w
  1280  07E6  0086               	movwf	6	;volatile
  1281  07E7  2EB8               	goto	l1741
  1282  07E8  120A  118A  2800   	ljmp	start
  1283  07EB                     __end_of_main:
  1284                           
  1285                           	psect	text1
  1286  028B                     __ptext1:	
  1287 ;; *************** function _strcat *****************
  1288 ;; Defined at:
  1289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  to              1    wreg     PTR unsigned char 
  1292 ;;		 -> s1(20), 
  1293 ;;  from            1    0[COMMON] PTR const unsigned char 
  1294 ;;		 -> s3(20), s2(20), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  to              1    2[COMMON] PTR unsigned char 
  1297 ;;		 -> s1(20), 
  1298 ;;  cp              1    3[COMMON] PTR unsigned char 
  1299 ;;		 -> s1(20), 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      PTR unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         1       0       0       0       0
  1310 ;;      Locals:         2       0       0       0       0
  1311 ;;      Temps:          1       0       0       0       0
  1312 ;;      Totals:         4       0       0       0       0
  1313 ;;Total ram usage:        4 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _strcat
  1324  028B                     _strcat:
  1325                           
  1326                           ;incstack = 0
  1327                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1328                           ;strcat@to stored from wreg
  1329  028B  00F2               	movwf	strcat@to
  1330  028C                     l1695:
  1331  028C  0872               	movf	strcat@to,w
  1332  028D  00F1               	movwf	??_strcat
  1333  028E  0871               	movf	??_strcat,w
  1334  028F  00F3               	movwf	strcat@cp
  1335  0290  2A95               	goto	l1699
  1336  0291                     l1697:
  1337  0291  3001               	movlw	1
  1338  0292  00F1               	movwf	??_strcat
  1339  0293  0871               	movf	??_strcat,w
  1340  0294  07F3               	addwf	strcat@cp,f
  1341  0295                     l1699:
  1342  0295  0873               	movf	strcat@cp,w
  1343  0296  0084               	movwf	4
  1344  0297  1383               	bcf	3,7	;select IRP bank0
  1345  0298  0800               	movf	0,w
  1346  0299  1D03               	btfss	3,2
  1347  029A  2A9C               	goto	u1141
  1348  029B  2A9D               	goto	u1140
  1349  029C                     u1141:
  1350  029C  2A91               	goto	l1697
  1351  029D                     u1140:
  1352  029D  2AA6               	goto	l1703
  1353  029E                     l1701:
  1354  029E  3001               	movlw	1
  1355  029F  00F1               	movwf	??_strcat
  1356  02A0  0871               	movf	??_strcat,w
  1357  02A1  07F3               	addwf	strcat@cp,f
  1358  02A2  3001               	movlw	1
  1359  02A3  00F1               	movwf	??_strcat
  1360  02A4  0871               	movf	??_strcat,w
  1361  02A5  07F0               	addwf	strcat@from,f
  1362  02A6                     l1703:
  1363  02A6  0870               	movf	strcat@from,w
  1364  02A7  0084               	movwf	4
  1365  02A8  0800               	movf	0,w
  1366  02A9  00F1               	movwf	??_strcat
  1367  02AA  0873               	movf	strcat@cp,w
  1368  02AB  0084               	movwf	4
  1369  02AC  0871               	movf	??_strcat,w
  1370  02AD  0080               	movwf	0
  1371  02AE  0800               	movf	0,w
  1372  02AF  1D03               	btfss	3,2
  1373  02B0  2AB2               	goto	u1151
  1374  02B1  2AB3               	goto	u1150
  1375  02B2                     u1151:
  1376  02B2  2A9E               	goto	l1701
  1377  02B3                     u1150:
  1378  02B3                     l781:
  1379  02B3  0008               	return
  1380  02B4                     __end_of_strcat:
  1381                           
  1382                           	psect	text2
  1383  0245                     __ptext2:	
  1384 ;; *************** function _sprintf *****************
  1385 ;; Defined at:
  1386 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  wh              1    wreg     PTR unsigned char 
  1389 ;;		 -> s3(20), s2(20), s1(20), 
  1390 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1391 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  wh              1   17[BANK0 ] PTR unsigned char 
  1394 ;;		 -> s3(20), s2(20), s1(20), 
  1395 ;;  pb              2   18[BANK0 ] struct __prbuf
  1396 ;;  ap              1   16[BANK0 ] PTR void [1]
  1397 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  2   11[BANK0 ] int 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       3       0       0       0
  1408 ;;      Locals:         0       4       0       0       0
  1409 ;;      Temps:          0       2       0       0       0
  1410 ;;      Totals:         0       9       0       0       0
  1411 ;;Total ram usage:        9 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    2
  1414 ;; This function calls:
  1415 ;;		__doprnt
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _sprintf
  1423  0245                     _sprintf:
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1427                           ;sprintf@wh stored from wreg
  1428  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0247  00E2               	movwf	sprintf@wh
  1431  0248                     l1683:
  1432  0248  0862               	movf	sprintf@wh,w
  1433  0249  00DF               	movwf	??_sprintf
  1434  024A  085F               	movf	??_sprintf,w
  1435  024B  00E3               	movwf	sprintf@pb
  1436  024C                     l1685:
  1437  024C  01E4               	clrf	low ((sprintf@pb| 0+1))
  1438  024D                     l1687:
  1439  024D  305D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1440  024E  00DF               	movwf	??_sprintf
  1441  024F  085F               	movf	??_sprintf,w
  1442  0250  00E1               	movwf	sprintf@ap
  1443  0251                     l1689:
  1444  0251  085C               	movf	sprintf@f,w
  1445  0252  00DF               	movwf	??_sprintf
  1446  0253  085F               	movf	??_sprintf,w
  1447  0254  00D1               	movwf	__doprnt@f
  1448  0255  3061               	movlw	(low (sprintf@ap| 0))& (0+255)
  1449  0256  00E0               	movwf	??_sprintf+1
  1450  0257  0860               	movf	??_sprintf+1,w
  1451  0258  00D2               	movwf	__doprnt@ap
  1452  0259  3063               	movlw	(low (sprintf@pb| 0))& (0+255)
  1453  025A  120A  118A  257F  120A  118A  	fcall	__doprnt
  1454  025F                     l1691:
  1455  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0261  0863               	movf	sprintf@pb,w
  1458  0262  0084               	movwf	4
  1459  0263  1383               	bcf	3,7	;select IRP bank0
  1460  0264  0180               	clrf	0
  1461  0265                     l772:
  1462  0265  0008               	return
  1463  0266                     __end_of_sprintf:
  1464                           
  1465                           	psect	text3
  1466  01A0                     __ptext3:	
  1467 ;; *************** function _spiWrite *****************
  1468 ;; Defined at:
  1469 ;;		line 34 in file "SPI.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  dat             1    wreg     unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  dat             1    0[COMMON] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _spiWrite
  1498  01A0                     _spiWrite:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _spiWrite: [wreg]
  1502                           ;spiWrite@dat stored from wreg
  1503  01A0  00F0               	movwf	spiWrite@dat
  1504  01A1                     l1637:
  1505                           
  1506                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1507  01A1  0870               	movf	spiWrite@dat,w
  1508  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1509  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1510  01A4  0093               	movwf	19	;volatile
  1511  01A5                     l139:
  1512  01A5  0008               	return
  1513  01A6                     __end_of_spiWrite:
  1514                           
  1515                           	psect	text4
  1516  01BE                     __ptext4:	
  1517 ;; *************** function _spiRead *****************
  1518 ;; Defined at:
  1519 ;;		line 47 in file "SPI.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      unsigned char 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         0       0       0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		_spiReceiveWait
  1542 ;; This function is called by:
  1543 ;;		_main
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _spiRead
  1549  01BE                     _spiRead:
  1550  01BE                     l1639:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1553                           
  1554                           
  1555                           ;SPI.c: 49:     spiReceiveWait();
  1556  01BE  120A  118A  21A6  120A  118A  	fcall	_spiReceiveWait
  1557  01C3                     l1641:
  1558                           
  1559                           ;SPI.c: 50:     return(SSPBUF);
  1560  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1561  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1562  01C5  0813               	movf	19,w	;volatile
  1563  01C6                     l147:
  1564  01C6  0008               	return
  1565  01C7                     __end_of_spiRead:
  1566                           
  1567                           	psect	text5
  1568  01A6                     __ptext5:	
  1569 ;; *************** function _spiReceiveWait *****************
  1570 ;; Defined at:
  1571 ;;		line 29 in file "SPI.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		None
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0
  1588 ;;      Totals:         0       0       0       0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_spiRead
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _spiReceiveWait
  1600  01A6                     _spiReceiveWait:
  1601  01A6                     l1509:	
  1602                           ;incstack = 0
  1603                           ; Regs used in _spiReceiveWait: []
  1604                           
  1605  01A6                     l133:	
  1606                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1607                           
  1608  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1609  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1610  01A8  1C14               	btfss	20,0	;volatile
  1611  01A9  29AB               	goto	u881
  1612  01AA  29AC               	goto	u880
  1613  01AB                     u881:
  1614  01AB  29A6               	goto	l133
  1615  01AC                     u880:
  1616  01AC                     l136:
  1617  01AC  0008               	return
  1618  01AD                     __end_of_spiReceiveWait:
  1619                           
  1620                           	psect	text6
  1621  0226                     __ptext6:	
  1622 ;; *************** function _setup *****************
  1623 ;; Defined at:
  1624 ;;		line 185 in file "master03.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		_config_USART
  1647 ;;		_spiInit
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _setup
  1655  0226                     _setup:
  1656  0226                     l1619:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1659                           
  1660  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0228  0188               	clrf	8	;volatile
  1663  0229  0186               	clrf	6	;volatile
  1664  022A                     l1621:
  1665  022A  120F               	bcf	15,4	;volatile
  1666  022B                     l1623:
  1667  022B  168F               	bsf	15,5	;volatile
  1668  022C                     l1625:
  1669  022C  170F               	bsf	15,6	;volatile
  1670  022D                     l1627:
  1671  022D  140F               	bsf	15,0	;volatile
  1672  022E                     l1629:
  1673  022E  1107               	bcf	7,2	;volatile
  1674  022F                     l1631:
  1675  022F  01F0               	clrf	spiInit@sDataSample
  1676  0230  01F1               	clrf	spiInit@sClockIdle
  1677  0231  01F2               	clrf	spiInit@sTransmitEdge
  1678  0232  3020               	movlw	32
  1679  0233  120A  118A  21D9  120A  118A  	fcall	_spiInit
  1680  0238                     l1633:
  1681  0238  120A  118A  220A  120A  118A  	fcall	_config_USART
  1682  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1683  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1684  023F  0185               	clrf	5	;volatile
  1685  0240  0186               	clrf	6	;volatile
  1686  0241  0187               	clrf	7	;volatile
  1687  0242  0188               	clrf	8	;volatile
  1688  0243  0189               	clrf	9	;volatile
  1689  0244                     l113:
  1690  0244  0008               	return
  1691  0245                     __end_of_setup:
  1692                           
  1693                           	psect	text7
  1694  01D9                     __ptext7:	
  1695 ;; *************** function _spiInit *****************
  1696 ;; Defined at:
  1697 ;;		line 12 in file "SPI.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  sType           1    wreg     enum E1264
  1700 ;;  sDataSample     1    0[COMMON] enum E1272
  1701 ;;  sClockIdle      1    1[COMMON] enum E1276
  1702 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  sType           1    3[COMMON] enum E1264
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         3       0       0       0       0
  1715 ;;      Locals:         1       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0
  1717 ;;      Totals:         4       0       0       0       0
  1718 ;;Total ram usage:        4 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_setup
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _spiInit
  1729  01D9                     _spiInit:
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1733                           ;spiInit@sType stored from wreg
  1734  01D9  00F3               	movwf	spiInit@sType
  1735  01DA                     l1469:
  1736                           
  1737                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1738  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  1739  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  1740  01DC  1287               	bcf	7,5	;volatile
  1741                           
  1742                           ;SPI.c: 15:     if(sType & 0b00000100)
  1743  01DD  1D73               	btfss	spiInit@sType,2
  1744  01DE  29E0               	goto	u871
  1745  01DF  29E1               	goto	u870
  1746  01E0                     u871:
  1747  01E0  29E5               	goto	l1475
  1748  01E1                     u870:
  1749  01E1                     l1471:
  1750                           
  1751                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1752  01E1  0872               	movf	spiInit@sTransmitEdge,w
  1753  01E2  0094               	movwf	20	;volatile
  1754  01E3                     l1473:
  1755                           
  1756                           ;SPI.c: 18:         TRISC3 = 1;
  1757  01E3  1587               	bsf	7,3	;volatile
  1758                           
  1759                           ;SPI.c: 19:     }
  1760  01E4  29E9               	goto	l129
  1761  01E5                     l1475:
  1762                           
  1763                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1764  01E5  0870               	movf	spiInit@sDataSample,w
  1765  01E6  0472               	iorwf	spiInit@sTransmitEdge,w
  1766  01E7  0094               	movwf	20	;volatile
  1767  01E8                     l1477:
  1768                           
  1769                           ;SPI.c: 23:         TRISC3 = 0;
  1770  01E8  1187               	bcf	7,3	;volatile
  1771  01E9                     l129:	
  1772                           ;SPI.c: 24:     }
  1773                           
  1774                           
  1775                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1776  01E9  0873               	movf	spiInit@sType,w
  1777  01EA  0471               	iorwf	spiInit@sClockIdle,w
  1778  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1779  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1780  01ED  0094               	movwf	20	;volatile
  1781  01EE                     l130:
  1782  01EE  0008               	return
  1783  01EF                     __end_of_spiInit:
  1784                           
  1785                           	psect	text8
  1786  020A                     __ptext8:	
  1787 ;; *************** function _config_USART *****************
  1788 ;; Defined at:
  1789 ;;		line 11 in file "config_USART.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_setup
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _config_USART
  1818  020A                     _config_USART:
  1819  020A                     l1479:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _config_USART: [wreg+status,2]
  1822                           
  1823                           
  1824                           ;config_USART.c: 13:     SPBRG = 103;
  1825  020A  3067               	movlw	103
  1826  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1827  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1828  020D  0099               	movwf	25	;volatile
  1829  020E                     l1481:
  1830                           
  1831                           ;config_USART.c: 14:     SPBRGH = 0;
  1832  020E  019A               	clrf	26	;volatile
  1833  020F                     l1483:
  1834                           
  1835                           ;config_USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1836  020F  1683               	bsf	3,5	;RP0=1, select bank3
  1837  0210  1703               	bsf	3,6	;RP1=1, select bank3
  1838  0211  1587               	bsf	7,3	;volatile
  1839  0212                     l1485:
  1840                           
  1841                           ;config_USART.c: 16:     TXSTAbits.BRGH = 1;
  1842  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0214  1518               	bsf	24,2	;volatile
  1845  0215                     l1487:
  1846                           
  1847                           ;config_USART.c: 18:     TXSTAbits.SYNC = 0;
  1848  0215  1218               	bcf	24,4	;volatile
  1849  0216                     l1489:
  1850                           
  1851                           ;config_USART.c: 20:     RCSTAbits.SPEN = 1;
  1852  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0218  1798               	bsf	24,7	;volatile
  1855  0219                     l1491:
  1856                           
  1857                           ;config_USART.c: 21:     RCSTAbits.CREN = 1;
  1858  0219  1618               	bsf	24,4	;volatile
  1859  021A                     l1493:
  1860                           
  1861                           ;config_USART.c: 23:     TXSTAbits.TX9 = 0;
  1862  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1863  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1864  021C  1318               	bcf	24,6	;volatile
  1865  021D                     l1495:
  1866                           
  1867                           ;config_USART.c: 24:     TXSTAbits.TXEN = 1;
  1868  021D  1698               	bsf	24,5	;volatile
  1869  021E                     l1497:
  1870                           
  1871                           ;config_USART.c: 25:     RCSTAbits.RX9 = 0;
  1872  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1873  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0220  1318               	bcf	24,6	;volatile
  1875  0221                     l1499:
  1876                           
  1877                           ;config_USART.c: 28:     INTCONbits.GIE = 1;
  1878  0221  178B               	bsf	11,7	;volatile
  1879  0222                     l1501:
  1880                           
  1881                           ;config_USART.c: 29:     INTCONbits.PEIE = 1;
  1882  0222  170B               	bsf	11,6	;volatile
  1883  0223                     l1503:
  1884                           
  1885                           ;config_USART.c: 31:     PIR1bits.TXIF = 0;
  1886  0223  120C               	bcf	12,4	;volatile
  1887  0224                     l1505:
  1888                           
  1889                           ;config_USART.c: 32:     PIR1bits.RCIF = 0;
  1890  0224  128C               	bcf	12,5	;volatile
  1891  0225                     l164:
  1892  0225  0008               	return
  1893  0226                     __end_of_config_USART:
  1894                           
  1895                           	psect	text9
  1896  0388                     __ptext9:	
  1897 ;; *************** function _mensaje2 *****************
  1898 ;; Defined at:
  1899 ;;		line 165 in file "master03.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          0       2       0       0       0
  1916 ;;      Totals:         0       2       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		_printf
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _mensaje2
  1929  0388                     _mensaje2:
  1930  0388                     l1669:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _mensaje2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1933                           
  1934  0388  3017               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1935  0389  120A  118A  21EF  120A  118A  	fcall	_printf
  1936  038E                     l1671:
  1937  038E  3041               	movlw	65
  1938  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0391  00E3               	movwf	??_mensaje2+1
  1941  0392  30ED               	movlw	237
  1942  0393  00E2               	movwf	??_mensaje2
  1943  0394                     u1357:
  1944  0394  0BE2               	decfsz	??_mensaje2,f
  1945  0395  2B94               	goto	u1357
  1946  0396  0BE3               	decfsz	??_mensaje2+1,f
  1947  0397  2B94               	goto	u1357
  1948  0398  2B99               	nop2
  1949  0399                     l1673:
  1950  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1951  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1952  039B  0826               	movf	_centenas,w
  1953  039C  0099               	movwf	25	;volatile
  1954  039D                     l1675:
  1955  039D  3041               	movlw	65
  1956  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1957  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1958  03A0  00E3               	movwf	??_mensaje2+1
  1959  03A1  30ED               	movlw	237
  1960  03A2  00E2               	movwf	??_mensaje2
  1961  03A3                     u1367:
  1962  03A3  0BE2               	decfsz	??_mensaje2,f
  1963  03A4  2BA3               	goto	u1367
  1964  03A5  0BE3               	decfsz	??_mensaje2+1,f
  1965  03A6  2BA3               	goto	u1367
  1966  03A7  2BA8               	nop2
  1967  03A8                     l1677:
  1968  03A8  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1969  03A9  120A  118A  21EF  120A  118A  	fcall	_printf
  1970  03AE  3041               	movlw	65
  1971  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1972  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1973  03B1  00E3               	movwf	??_mensaje2+1
  1974  03B2  30ED               	movlw	237
  1975  03B3  00E2               	movwf	??_mensaje2
  1976  03B4                     u1377:
  1977  03B4  0BE2               	decfsz	??_mensaje2,f
  1978  03B5  2BB4               	goto	u1377
  1979  03B6  0BE3               	decfsz	??_mensaje2+1,f
  1980  03B7  2BB4               	goto	u1377
  1981  03B8  2BB9               	nop2
  1982  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  1983  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  1984  03BB  0825               	movf	_decenas,w
  1985  03BC  0099               	movwf	25	;volatile
  1986  03BD  3041               	movlw	65
  1987  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1988  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1989  03C0  00E3               	movwf	??_mensaje2+1
  1990  03C1  30ED               	movlw	237
  1991  03C2  00E2               	movwf	??_mensaje2
  1992  03C3                     u1387:
  1993  03C3  0BE2               	decfsz	??_mensaje2,f
  1994  03C4  2BC3               	goto	u1387
  1995  03C5  0BE3               	decfsz	??_mensaje2+1,f
  1996  03C6  2BC3               	goto	u1387
  1997  03C7  2BC8               	nop2
  1998  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1999  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2000  03CA  0824               	movf	_unidades,w
  2001  03CB  0099               	movwf	25	;volatile
  2002  03CC  3041               	movlw	65
  2003  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2004  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2005  03CF  00E3               	movwf	??_mensaje2+1
  2006  03D0  30ED               	movlw	237
  2007  03D1  00E2               	movwf	??_mensaje2
  2008  03D2                     u1397:
  2009  03D2  0BE2               	decfsz	??_mensaje2,f
  2010  03D3  2BD2               	goto	u1397
  2011  03D4  0BE3               	decfsz	??_mensaje2+1,f
  2012  03D5  2BD2               	goto	u1397
  2013  03D6  2BD7               	nop2
  2014  03D7                     l1679:
  2015  03D7  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2016  03D8  120A  118A  21EF  120A  118A  	fcall	_printf
  2017  03DD                     l110:
  2018  03DD  0008               	return
  2019  03DE                     __end_of_mensaje2:
  2020                           
  2021                           	psect	text10
  2022  0332                     __ptext10:	
  2023 ;; *************** function _mensaje1 *****************
  2024 ;; Defined at:
  2025 ;;		line 149 in file "master03.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0
  2041 ;;      Temps:          0       2       0       0       0
  2042 ;;      Totals:         0       2       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    3
  2046 ;; This function calls:
  2047 ;;		_printf
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _mensaje1
  2055  0332                     _mensaje1:
  2056  0332                     l1655:	
  2057                           ;incstack = 0
  2058                           ; Regs used in _mensaje1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2059                           
  2060                           
  2061                           ;master03.c: 150: 
  2062  0332  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2063  0333  120A  118A  21EF  120A  118A  	fcall	_printf
  2064  0338                     l1657:
  2065                           
  2066                           ;master03.c: 151:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW,
  2067  0338  3041               	movlw	65
  2068  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2069  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2070  033B  00E3               	movwf	??_mensaje1+1
  2071  033C  30ED               	movlw	237
  2072  033D  00E2               	movwf	??_mensaje1
  2073  033E                     u1407:
  2074  033E  0BE2               	decfsz	??_mensaje1,f
  2075  033F  2B3E               	goto	u1407
  2076  0340  0BE3               	decfsz	??_mensaje1+1,f
  2077  0341  2B3E               	goto	u1407
  2078  0342  2B43               	nop2
  2079  0343                     l1659:
  2080                           
  2081                           ;master03.c: 152:             SPI_IDLE_2_ACTIVE);
  2082  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0345  0826               	movf	_centenas,w
  2085  0346  0099               	movwf	25	;volatile
  2086  0347                     l1661:
  2087                           
  2088                           ;master03.c: 153: 
  2089  0347  3041               	movlw	65
  2090  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2092  034A  00E3               	movwf	??_mensaje1+1
  2093  034B  30ED               	movlw	237
  2094  034C  00E2               	movwf	??_mensaje1
  2095  034D                     u1417:
  2096  034D  0BE2               	decfsz	??_mensaje1,f
  2097  034E  2B4D               	goto	u1417
  2098  034F  0BE3               	decfsz	??_mensaje1+1,f
  2099  0350  2B4D               	goto	u1417
  2100  0351  2B52               	nop2
  2101  0352                     l1663:
  2102                           
  2103                           ;master03.c: 154:     config_USART();
  2104  0352  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2105  0353  120A  118A  21EF  120A  118A  	fcall	_printf
  2106                           
  2107                           ;master03.c: 155: 
  2108  0358  3041               	movlw	65
  2109  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2110  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2111  035B  00E3               	movwf	??_mensaje1+1
  2112  035C  30ED               	movlw	237
  2113  035D  00E2               	movwf	??_mensaje1
  2114  035E                     u1427:
  2115  035E  0BE2               	decfsz	??_mensaje1,f
  2116  035F  2B5E               	goto	u1427
  2117  0360  0BE3               	decfsz	??_mensaje1+1,f
  2118  0361  2B5E               	goto	u1427
  2119  0362  2B63               	nop2
  2120                           
  2121                           ;master03.c: 156: 
  2122  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0365  0825               	movf	_decenas,w
  2125  0366  0099               	movwf	25	;volatile
  2126                           
  2127                           ;master03.c: 157:     PORTA = 0x00;
  2128  0367  3041               	movlw	65
  2129  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2131  036A  00E3               	movwf	??_mensaje1+1
  2132  036B  30ED               	movlw	237
  2133  036C  00E2               	movwf	??_mensaje1
  2134  036D                     u1437:
  2135  036D  0BE2               	decfsz	??_mensaje1,f
  2136  036E  2B6D               	goto	u1437
  2137  036F  0BE3               	decfsz	??_mensaje1+1,f
  2138  0370  2B6D               	goto	u1437
  2139  0371  2B72               	nop2
  2140                           
  2141                           ;master03.c: 158:     PORTB = 0x00;
  2142  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0374  0824               	movf	_unidades,w
  2145  0375  0099               	movwf	25	;volatile
  2146                           
  2147                           ;master03.c: 159:     PORTC = 0x00;
  2148  0376  3041               	movlw	65
  2149  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0379  00E3               	movwf	??_mensaje1+1
  2152  037A  30ED               	movlw	237
  2153  037B  00E2               	movwf	??_mensaje1
  2154  037C                     u1447:
  2155  037C  0BE2               	decfsz	??_mensaje1,f
  2156  037D  2B7C               	goto	u1447
  2157  037E  0BE3               	decfsz	??_mensaje1+1,f
  2158  037F  2B7C               	goto	u1447
  2159  0380  2B81               	nop2
  2160  0381                     l1665:
  2161                           
  2162                           ;master03.c: 160:     PORTD = 0x00;
  2163  0381  3023               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2164  0382  120A  118A  21EF  120A  118A  	fcall	_printf
  2165  0387                     l107:
  2166  0387  0008               	return
  2167  0388                     __end_of_mensaje1:
  2168                           
  2169                           	psect	text11
  2170  01EF                     __ptext11:	
  2171 ;; *************** function _printf *****************
  2172 ;; Defined at:
  2173 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  f               1    wreg     PTR const unsigned char 
  2176 ;;		 -> STR_9(3), STR_8(2), STR_7(12), STR_6(3), 
  2177 ;;		 -> STR_5(2), STR_4(12), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2180 ;;		 -> STR_9(3), STR_8(2), STR_7(12), STR_6(3), 
  2181 ;;		 -> STR_5(2), STR_4(12), 
  2182 ;;  pb              2   15[BANK0 ] struct __prbuf
  2183 ;;  ap              1   13[BANK0 ] PTR void [1]
  2184 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2   34[None  ] int 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       4       0       0       0
  2196 ;;      Temps:          0       2       0       0       0
  2197 ;;      Totals:         0       6       0       0       0
  2198 ;;Total ram usage:        6 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    2
  2201 ;; This function calls:
  2202 ;;		__doprnt
  2203 ;; This function is called by:
  2204 ;;		_mensaje1
  2205 ;;		_mensaje2
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _printf
  2211  01EF                     _printf:
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2215                           ;printf@f stored from wreg
  2216  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2217  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2218  01F1  00DF               	movwf	printf@f
  2219  01F2                     l1459:
  2220  01F2  01E0               	clrf	printf@pb
  2221  01F3                     l1461:
  2222  01F3  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2223  01F4  00DC               	movwf	??_printf
  2224  01F5  085C               	movf	??_printf,w
  2225  01F6  00E1               	movwf	low ((printf@pb| 0+1))
  2226  01F7                     l1463:
  2227  01F7  3070               	movlw	(low (?_printf| 0))& (0+255)
  2228  01F8  00DC               	movwf	??_printf
  2229  01F9  085C               	movf	??_printf,w
  2230  01FA  00DE               	movwf	printf@ap
  2231  01FB                     l1465:
  2232                           
  2233                           ;	Return value of _printf is never used
  2234  01FB  085F               	movf	printf@f,w
  2235  01FC  00DC               	movwf	??_printf
  2236  01FD  085C               	movf	??_printf,w
  2237  01FE  00D1               	movwf	__doprnt@f
  2238  01FF  305E               	movlw	(low (printf@ap| 0))& (0+255)
  2239  0200  00DD               	movwf	??_printf+1
  2240  0201  085D               	movf	??_printf+1,w
  2241  0202  00D2               	movwf	__doprnt@ap
  2242  0203  3060               	movlw	(low (printf@pb| 0))& (0+255)
  2243  0204  120A  118A  257F  120A  118A  	fcall	__doprnt
  2244  0209                     l727:
  2245  0209  0008               	return
  2246  020A                     __end_of_printf:
  2247                           
  2248                           	psect	text12
  2249  057F                     __ptext12:	
  2250 ;; *************** function __doprnt *****************
  2251 ;; Defined at:
  2252 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  pb              1    wreg     PTR struct __prbuf
  2255 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2256 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2257 ;;		 -> STR_9(3), STR_8(2), STR_7(12), STR_6(3), 
  2258 ;;		 -> STR_5(2), STR_4(12), STR_3(3), STR_2(3), 
  2259 ;;		 -> STR_1(3), 
  2260 ;;  ap              1    1[BANK0 ] PTR PTR void 
  2261 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  pb              1   10[BANK0 ] PTR struct __prbuf
  2264 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2265 ;;  tmpval          4    0        struct .
  2266 ;;  val             2    7[BANK0 ] unsigned int 
  2267 ;;  cp              2    0        PTR const unsigned char 
  2268 ;;  len             2    0        unsigned int 
  2269 ;;  c               1    9[BANK0 ] unsigned char 
  2270 ;;  prec            1    6[BANK0 ] char 
  2271 ;;  flag            1    5[BANK0 ] unsigned char 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    0[BANK0 ] int 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       2       0       0       0
  2282 ;;      Locals:         0       6       0       0       0
  2283 ;;      Temps:          0       3       0       0       0
  2284 ;;      Totals:         0      11       0       0       0
  2285 ;;Total ram usage:       11 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		Absolute function
  2290 ;;		___lwdiv
  2291 ;;		___lwmod
  2292 ;;		_putch
  2293 ;; This function is called by:
  2294 ;;		_printf
  2295 ;;		_sprintf
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           
  2300                           ;psect for function __doprnt
  2301  057F                     __doprnt:
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2305                           ;__doprnt@pb stored from wreg
  2306  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0581  00DB               	movwf	__doprnt@pb
  2309  0582                     l1387:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2312  0582  2E9C               	goto	l1449
  2313  0583                     l1389:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2316  0583  3025               	movlw	37
  2317  0584  065A               	xorwf	__doprnt@c,w
  2318  0585  1903               	btfsc	3,2
  2319  0586  2D88               	goto	u771
  2320  0587  2D89               	goto	u770
  2321  0588                     u771:
  2322  0588  2DAF               	goto	l1399
  2323  0589                     u770:
  2324  0589                     l1391:
  2325  0589  0A5B               	incf	__doprnt@pb,w
  2326  058A  0084               	movwf	4
  2327  058B  1383               	bcf	3,7	;select IRP bank0
  2328  058C  0800               	movf	0,w
  2329  058D  1903               	btfsc	3,2
  2330  058E  2D90               	goto	u781
  2331  058F  2D91               	goto	u780
  2332  0590                     u781:
  2333  0590  2DA0               	goto	l1395
  2334  0591                     u780:
  2335  0591                     l1393:
  2336  0591  085A               	movf	__doprnt@c,w
  2337  0592  00D3               	movwf	??__doprnt
  2338  0593  0853               	movf	??__doprnt,w
  2339  0594  00F0               	movwf	putch@dato
  2340  0595  0A5B               	incf	__doprnt@pb,w
  2341  0596  0084               	movwf	4
  2342  0597  0800               	movf	0,w
  2343  0598  120A  118A  2003  120A  118A  	fcall	fptable
  2344  059D  1283               	bcf	3,5	;RP0=0, select bank0
  2345  059E  1303               	bcf	3,6	;RP1=0, select bank0
  2346  059F  2D82               	goto	l1387
  2347  05A0                     l1395:
  2348  05A0  085A               	movf	__doprnt@c,w
  2349  05A1  00D3               	movwf	??__doprnt
  2350  05A2  085B               	movf	__doprnt@pb,w
  2351  05A3  0084               	movwf	4
  2352  05A4  0800               	movf	0,w
  2353  05A5  0084               	movwf	4
  2354  05A6  0853               	movf	??__doprnt,w
  2355  05A7  0080               	movwf	0
  2356  05A8                     l1397:
  2357  05A8  3001               	movlw	1
  2358  05A9  00D3               	movwf	??__doprnt
  2359  05AA  085B               	movf	__doprnt@pb,w
  2360  05AB  0084               	movwf	4
  2361  05AC  0853               	movf	??__doprnt,w
  2362  05AD  0780               	addwf	0,f
  2363  05AE  2D82               	goto	l1387
  2364  05AF                     l1399:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2367  05AF  01D6               	clrf	__doprnt@flag
  2368  05B0                     l1403:	
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2370                           
  2371  05B0  3001               	movlw	1
  2372  05B1  07D1               	addwf	__doprnt@f,f
  2373  05B2  30FF               	movlw	-1
  2374  05B3  0751               	addwf	__doprnt@f,w
  2375  05B4  0084               	movwf	4
  2376  05B5  120A  118A  200C  120A  118A  	fcall	stringdir
  2377  05BA  00DA               	movwf	__doprnt@c
  2378  05BB  00D3               	movwf	??__doprnt
  2379  05BC  01D4               	clrf	??__doprnt+1
  2380                           
  2381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2382                           ; Switch size 1, requested type "simple"
  2383                           ; Number of cases is 1, Range of values is 0 to 0
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ; direct_byte           11     8 (fixed)
  2388                           ; jumptable            260     6 (fixed)
  2389                           ;	Chosen strategy is simple_byte
  2390  05BD  0854               	movf	??__doprnt+1,w
  2391  05BE  3A00               	xorlw	0	; case 0
  2392  05BF  1903               	skipnz
  2393  05C0  2DC2               	goto	l1821
  2394  05C1  2E9C               	goto	l1449
  2395  05C2                     l1821:
  2396                           
  2397                           ; Switch size 1, requested type "simple"
  2398                           ; Number of cases is 3, Range of values is 0 to 105
  2399                           ; switch strategies available:
  2400                           ; Name         Instructions Cycles
  2401                           ; simple_byte           10     6 (average)
  2402                           ; jumptable            260     6 (fixed)
  2403                           ;	Chosen strategy is simple_byte
  2404  05C2  0853               	movf	??__doprnt,w
  2405  05C3  3A00               	xorlw	0	; case 0
  2406  05C4  1903               	skipnz
  2407  05C5  2EB0               	goto	l1451
  2408  05C6  3A64               	xorlw	100	; case 100
  2409  05C7  1903               	skipnz
  2410  05C8  2DCD               	goto	l1405
  2411  05C9  3A0D               	xorlw	13	; case 105
  2412  05CA  1903               	skipnz
  2413  05CB  2DCD               	goto	l1405
  2414  05CC  2E9C               	goto	l1449
  2415  05CD                     l1405:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2418  05CD  0852               	movf	__doprnt@ap,w
  2419  05CE  0084               	movwf	4
  2420  05CF  1383               	bcf	3,7	;select IRP bank0
  2421  05D0  0800               	movf	0,w
  2422  05D1  00D3               	movwf	??__doprnt
  2423  05D2  3002               	movlw	2
  2424  05D3  0780               	addwf	0,f
  2425  05D4  0853               	movf	??__doprnt,w
  2426  05D5  0084               	movwf	4
  2427  05D6  0800               	movf	0,w
  2428  05D7  00D8               	movwf	__doprnt@val
  2429  05D8  0A84               	incf	4,f
  2430  05D9  0800               	movf	0,w
  2431  05DA  00D9               	movwf	__doprnt@val+1
  2432  05DB                     l1407:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2435  05DB  1FD9               	btfss	__doprnt@val+1,7
  2436  05DC  2DDE               	goto	u791
  2437  05DD  2DDF               	goto	u790
  2438  05DE                     u791:
  2439  05DE  2DE8               	goto	l1413
  2440  05DF                     u790:
  2441  05DF                     l1409:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2444  05DF  3003               	movlw	3
  2445  05E0  00D3               	movwf	??__doprnt
  2446  05E1  0853               	movf	??__doprnt,w
  2447  05E2  04D6               	iorwf	__doprnt@flag,f
  2448  05E3                     l1411:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2451  05E3  09D8               	comf	__doprnt@val,f
  2452  05E4  09D9               	comf	__doprnt@val+1,f
  2453  05E5  0AD8               	incf	__doprnt@val,f
  2454  05E6  1903               	skipnz
  2455  05E7  0AD9               	incf	__doprnt@val+1,f
  2456  05E8                     l1413:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2459  05E8  01DA               	clrf	__doprnt@c
  2460  05E9  0ADA               	incf	__doprnt@c,f
  2461  05EA                     l1419:
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2464  05EA  085A               	movf	__doprnt@c,w
  2465  05EB  00D3               	movwf	??__doprnt
  2466  05EC  0753               	addwf	??__doprnt,w
  2467  05ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2468  05EE  0084               	movwf	4
  2469  05EF  120A  118A  200C  120A  118A  	fcall	stringdir
  2470  05F4  00D4               	movwf	??__doprnt+1
  2471  05F5  120A  118A  200C  120A  118A  	fcall	stringdir
  2472  05FA  00D5               	movwf	??__doprnt+2
  2473  05FB  0855               	movf	??__doprnt+2,w
  2474  05FC  0259               	subwf	__doprnt@val+1,w
  2475  05FD  1D03               	skipz
  2476  05FE  2E01               	goto	u805
  2477  05FF  0854               	movf	??__doprnt+1,w
  2478  0600  0258               	subwf	__doprnt@val,w
  2479  0601                     u805:
  2480  0601  1803               	skipnc
  2481  0602  2E04               	goto	u801
  2482  0603  2E05               	goto	u800
  2483  0604                     u801:
  2484  0604  2E06               	goto	l1423
  2485  0605                     u800:
  2486  0605  2E10               	goto	l1425
  2487  0606                     l1423:
  2488  0606  3001               	movlw	1
  2489  0607  00D3               	movwf	??__doprnt
  2490  0608  0853               	movf	??__doprnt,w
  2491  0609  07DA               	addwf	__doprnt@c,f
  2492  060A  3005               	movlw	5
  2493  060B  065A               	xorwf	__doprnt@c,w
  2494  060C  1D03               	btfss	3,2
  2495  060D  2E0F               	goto	u811
  2496  060E  2E10               	goto	u810
  2497  060F                     u811:
  2498  060F  2DEA               	goto	l1419
  2499  0610                     u810:
  2500  0610                     l1425:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2503  0610  0856               	movf	__doprnt@flag,w
  2504  0611  3903               	andlw	3
  2505  0612  1903               	btfsc	3,2
  2506  0613  2E15               	goto	u821
  2507  0614  2E16               	goto	u820
  2508  0615                     u821:
  2509  0615  2E39               	goto	l1435
  2510  0616                     u820:
  2511  0616                     l1427:
  2512  0616  0A5B               	incf	__doprnt@pb,w
  2513  0617  0084               	movwf	4
  2514  0618  1383               	bcf	3,7	;select IRP bank0
  2515  0619  0800               	movf	0,w
  2516  061A  1903               	btfsc	3,2
  2517  061B  2E1D               	goto	u831
  2518  061C  2E1E               	goto	u830
  2519  061D                     u831:
  2520  061D  2E2B               	goto	l1431
  2521  061E                     u830:
  2522  061E                     l1429:
  2523  061E  302D               	movlw	45
  2524  061F  00D3               	movwf	??__doprnt
  2525  0620  0853               	movf	??__doprnt,w
  2526  0621  00F0               	movwf	putch@dato
  2527  0622  0A5B               	incf	__doprnt@pb,w
  2528  0623  0084               	movwf	4
  2529  0624  0800               	movf	0,w
  2530  0625  120A  118A  2003  120A  118A  	fcall	fptable
  2531  062A  2E39               	goto	l1435
  2532  062B                     l1431:
  2533  062B  302D               	movlw	45
  2534  062C  00D3               	movwf	??__doprnt
  2535  062D  085B               	movf	__doprnt@pb,w
  2536  062E  0084               	movwf	4
  2537  062F  0800               	movf	0,w
  2538  0630  0084               	movwf	4
  2539  0631  0853               	movf	??__doprnt,w
  2540  0632  0080               	movwf	0
  2541  0633                     l1433:
  2542  0633  3001               	movlw	1
  2543  0634  00D3               	movwf	??__doprnt
  2544  0635  085B               	movf	__doprnt@pb,w
  2545  0636  0084               	movwf	4
  2546  0637  0853               	movf	??__doprnt,w
  2547  0638  0780               	addwf	0,f
  2548  0639                     l1435:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2551  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2552  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2553  063B  085A               	movf	__doprnt@c,w
  2554  063C  00D3               	movwf	??__doprnt
  2555  063D  0853               	movf	??__doprnt,w
  2556  063E  00D7               	movwf	__doprnt@prec
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2559  063F  2E91               	goto	l1447
  2560  0640                     l1437:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2563  0640  300A               	movlw	10
  2564  0641  00F8               	movwf	___lwmod@divisor
  2565  0642  3000               	movlw	0
  2566  0643  00F9               	movwf	___lwmod@divisor+1
  2567  0644  0857               	movf	__doprnt@prec,w
  2568  0645  00D3               	movwf	??__doprnt
  2569  0646  0753               	addwf	??__doprnt,w
  2570  0647  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2571  0648  0084               	movwf	4
  2572  0649  120A  118A  200C  120A  118A  	fcall	stringdir
  2573  064E  00F0               	movwf	___lwdiv@divisor
  2574  064F  120A  118A  200C  120A  118A  	fcall	stringdir
  2575  0654  00F1               	movwf	___lwdiv@divisor+1
  2576  0655  0859               	movf	__doprnt@val+1,w
  2577  0656  00F3               	movwf	___lwdiv@dividend+1
  2578  0657  0858               	movf	__doprnt@val,w
  2579  0658  00F2               	movwf	___lwdiv@dividend
  2580  0659  120A  118A  22EE  120A  118A  	fcall	___lwdiv
  2581  065E  0871               	movf	?___lwdiv+1,w
  2582  065F  00FB               	movwf	___lwmod@dividend+1
  2583  0660  0870               	movf	?___lwdiv,w
  2584  0661  00FA               	movwf	___lwmod@dividend
  2585  0662  120A  118A  22B4  120A  118A  	fcall	___lwmod
  2586  0667  0878               	movf	?___lwmod,w
  2587  0668  3E30               	addlw	48
  2588  0669  1283               	bcf	3,5	;RP0=0, select bank0
  2589  066A  1303               	bcf	3,6	;RP1=0, select bank0
  2590  066B  00D4               	movwf	??__doprnt+1
  2591  066C  0854               	movf	??__doprnt+1,w
  2592  066D  00DA               	movwf	__doprnt@c
  2593  066E                     l1439:
  2594  066E  0A5B               	incf	__doprnt@pb,w
  2595  066F  0084               	movwf	4
  2596  0670  1383               	bcf	3,7	;select IRP bank0
  2597  0671  0800               	movf	0,w
  2598  0672  1903               	btfsc	3,2
  2599  0673  2E75               	goto	u841
  2600  0674  2E76               	goto	u840
  2601  0675                     u841:
  2602  0675  2E83               	goto	l1443
  2603  0676                     u840:
  2604  0676                     l1441:
  2605  0676  085A               	movf	__doprnt@c,w
  2606  0677  00D3               	movwf	??__doprnt
  2607  0678  0853               	movf	??__doprnt,w
  2608  0679  00F0               	movwf	putch@dato
  2609  067A  0A5B               	incf	__doprnt@pb,w
  2610  067B  0084               	movwf	4
  2611  067C  0800               	movf	0,w
  2612  067D  120A  118A  2003  120A  118A  	fcall	fptable
  2613  0682  2E91               	goto	l1447
  2614  0683                     l1443:
  2615  0683  085A               	movf	__doprnt@c,w
  2616  0684  00D3               	movwf	??__doprnt
  2617  0685  085B               	movf	__doprnt@pb,w
  2618  0686  0084               	movwf	4
  2619  0687  0800               	movf	0,w
  2620  0688  0084               	movwf	4
  2621  0689  0853               	movf	??__doprnt,w
  2622  068A  0080               	movwf	0
  2623  068B                     l1445:
  2624  068B  3001               	movlw	1
  2625  068C  00D3               	movwf	??__doprnt
  2626  068D  085B               	movf	__doprnt@pb,w
  2627  068E  0084               	movwf	4
  2628  068F  0853               	movf	??__doprnt,w
  2629  0690  0780               	addwf	0,f
  2630  0691                     l1447:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2633  0691  30FF               	movlw	255
  2634  0692  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0693  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0694  00D3               	movwf	??__doprnt
  2637  0695  0853               	movf	??__doprnt,w
  2638  0696  07D7               	addwf	__doprnt@prec,f
  2639  0697  0A57               	incf	__doprnt@prec,w
  2640  0698  1D03               	btfss	3,2
  2641  0699  2E9B               	goto	u851
  2642  069A  2E9C               	goto	u850
  2643  069B                     u851:
  2644  069B  2E40               	goto	l1437
  2645  069C                     u850:
  2646  069C                     l1449:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2649  069C  3001               	movlw	1
  2650  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2651  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2652  069F  07D1               	addwf	__doprnt@f,f
  2653  06A0  30FF               	movlw	-1
  2654  06A1  0751               	addwf	__doprnt@f,w
  2655  06A2  0084               	movwf	4
  2656  06A3  120A  118A  200C  120A  118A  	fcall	stringdir
  2657  06A8  00D3               	movwf	??__doprnt
  2658  06A9  0853               	movf	??__doprnt,w
  2659  06AA  00DA               	movwf	__doprnt@c
  2660  06AB  085A               	movf	__doprnt@c,w
  2661  06AC  1D03               	btfss	3,2
  2662  06AD  2EAF               	goto	u861
  2663  06AE  2EB0               	goto	u860
  2664  06AF                     u861:
  2665  06AF  2D83               	goto	l1389
  2666  06B0                     u860:
  2667  06B0                     l1451:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2670  06B0  01D1               	clrf	?__doprnt
  2671  06B1  01D2               	clrf	?__doprnt+1
  2672  06B2                     l765:
  2673  06B2  0008               	return
  2674  06B3                     __end_of__doprnt:
  2675                           
  2676                           	psect	text13
  2677  01B5                     __ptext13:	
  2678 ;; *************** function _putch *****************
  2679 ;; Defined at:
  2680 ;;		line 130 in file "master03.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  dato            1    0[COMMON] unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         1       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         1       0       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_printf
  2704 ;;		__doprnt
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _putch
  2710  01B5                     _putch:
  2711  01B5                     l1333:	
  2712                           ;incstack = 0
  2713                           ; Regs used in _putch: [wreg]
  2714                           
  2715  01B5                     l98:	
  2716                           ;master03.c: 131: 
  2717                           
  2718  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2719  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2720  01B7  1E0C               	btfss	12,4	;volatile
  2721  01B8  29BA               	goto	u631
  2722  01B9  29BB               	goto	u630
  2723  01BA                     u631:
  2724  01BA  29B5               	goto	l98
  2725  01BB                     u630:
  2726  01BB                     l1335:
  2727                           
  2728                           ;master03.c: 132: 
  2729  01BB  0870               	movf	putch@dato,w
  2730  01BC  0099               	movwf	25	;volatile
  2731  01BD                     l101:
  2732  01BD  0008               	return
  2733  01BE                     __end_of_putch:
  2734                           
  2735                           	psect	text14
  2736  02B4                     __ptext14:	
  2737 ;; *************** function ___lwmod *****************
  2738 ;; Defined at:
  2739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  divisor         2    8[COMMON] unsigned int 
  2742 ;;  dividend        2   10[COMMON] unsigned int 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  counter         1   13[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  2    8[COMMON] unsigned int 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         4       0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0
  2756 ;;      Temps:          1       0       0       0       0
  2757 ;;      Totals:         6       0       0       0       0
  2758 ;;Total ram usage:        6 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		__doprnt
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___lwmod
  2769  02B4                     ___lwmod:
  2770  02B4                     l1365:	
  2771                           ;incstack = 0
  2772                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2773                           
  2774  02B4  0878               	movf	___lwmod@divisor,w
  2775  02B5  0479               	iorwf	___lwmod@divisor+1,w
  2776  02B6  1903               	btfsc	3,2
  2777  02B7  2AB9               	goto	u711
  2778  02B8  2ABA               	goto	u710
  2779  02B9                     u711:
  2780  02B9  2AE9               	goto	l1383
  2781  02BA                     u710:
  2782  02BA                     l1367:
  2783  02BA  01FD               	clrf	___lwmod@counter
  2784  02BB  0AFD               	incf	___lwmod@counter,f
  2785  02BC  2AC8               	goto	l1373
  2786  02BD                     l1369:
  2787  02BD  3001               	movlw	1
  2788  02BE                     u725:
  2789  02BE  1003               	clrc
  2790  02BF  0DF8               	rlf	___lwmod@divisor,f
  2791  02C0  0DF9               	rlf	___lwmod@divisor+1,f
  2792  02C1  3EFF               	addlw	-1
  2793  02C2  1D03               	skipz
  2794  02C3  2ABE               	goto	u725
  2795  02C4                     l1371:
  2796  02C4  3001               	movlw	1
  2797  02C5  00FC               	movwf	??___lwmod
  2798  02C6  087C               	movf	??___lwmod,w
  2799  02C7  07FD               	addwf	___lwmod@counter,f
  2800  02C8                     l1373:
  2801  02C8  1FF9               	btfss	___lwmod@divisor+1,7
  2802  02C9  2ACB               	goto	u731
  2803  02CA  2ACC               	goto	u730
  2804  02CB                     u731:
  2805  02CB  2ABD               	goto	l1369
  2806  02CC                     u730:
  2807  02CC                     l1375:
  2808  02CC  0879               	movf	___lwmod@divisor+1,w
  2809  02CD  027B               	subwf	___lwmod@dividend+1,w
  2810  02CE  1D03               	skipz
  2811  02CF  2AD2               	goto	u745
  2812  02D0  0878               	movf	___lwmod@divisor,w
  2813  02D1  027A               	subwf	___lwmod@dividend,w
  2814  02D2                     u745:
  2815  02D2  1C03               	skipc
  2816  02D3  2AD5               	goto	u741
  2817  02D4  2AD6               	goto	u740
  2818  02D5                     u741:
  2819  02D5  2ADC               	goto	l1379
  2820  02D6                     u740:
  2821  02D6                     l1377:
  2822  02D6  0878               	movf	___lwmod@divisor,w
  2823  02D7  02FA               	subwf	___lwmod@dividend,f
  2824  02D8  0879               	movf	___lwmod@divisor+1,w
  2825  02D9  1C03               	skipc
  2826  02DA  03FB               	decf	___lwmod@dividend+1,f
  2827  02DB  02FB               	subwf	___lwmod@dividend+1,f
  2828  02DC                     l1379:
  2829  02DC  3001               	movlw	1
  2830  02DD                     u755:
  2831  02DD  1003               	clrc
  2832  02DE  0CF9               	rrf	___lwmod@divisor+1,f
  2833  02DF  0CF8               	rrf	___lwmod@divisor,f
  2834  02E0  3EFF               	addlw	-1
  2835  02E1  1D03               	skipz
  2836  02E2  2ADD               	goto	u755
  2837  02E3                     l1381:
  2838  02E3  3001               	movlw	1
  2839  02E4  02FD               	subwf	___lwmod@counter,f
  2840  02E5  1D03               	btfss	3,2
  2841  02E6  2AE8               	goto	u761
  2842  02E7  2AE9               	goto	u760
  2843  02E8                     u761:
  2844  02E8  2ACC               	goto	l1375
  2845  02E9                     u760:
  2846  02E9                     l1383:
  2847  02E9  087B               	movf	___lwmod@dividend+1,w
  2848  02EA  00F9               	movwf	?___lwmod+1
  2849  02EB  087A               	movf	___lwmod@dividend,w
  2850  02EC  00F8               	movwf	?___lwmod
  2851  02ED                     l532:
  2852  02ED  0008               	return
  2853  02EE                     __end_of___lwmod:
  2854                           
  2855                           	psect	text15
  2856  02EE                     __ptext15:	
  2857 ;; *************** function ___lwdiv *****************
  2858 ;; Defined at:
  2859 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  divisor         2    0[COMMON] unsigned int 
  2862 ;;  dividend        2    2[COMMON] unsigned int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  quotient        2    5[COMMON] unsigned int 
  2865 ;;  counter         1    7[COMMON] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2    0[COMMON] unsigned int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         4       0       0       0       0
  2876 ;;      Locals:         3       0       0       0       0
  2877 ;;      Temps:          1       0       0       0       0
  2878 ;;      Totals:         8       0       0       0       0
  2879 ;;Total ram usage:        8 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		__doprnt
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           
  2889                           ;psect for function ___lwdiv
  2890  02EE                     ___lwdiv:
  2891  02EE                     l1339:	
  2892                           ;incstack = 0
  2893                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2894                           
  2895  02EE  01F5               	clrf	___lwdiv@quotient
  2896  02EF  01F6               	clrf	___lwdiv@quotient+1
  2897  02F0                     l1341:
  2898  02F0  0870               	movf	___lwdiv@divisor,w
  2899  02F1  0471               	iorwf	___lwdiv@divisor+1,w
  2900  02F2  1903               	btfsc	3,2
  2901  02F3  2AF5               	goto	u641
  2902  02F4  2AF6               	goto	u640
  2903  02F5                     u641:
  2904  02F5  2B2D               	goto	l1361
  2905  02F6                     u640:
  2906  02F6                     l1343:
  2907  02F6  01F7               	clrf	___lwdiv@counter
  2908  02F7  0AF7               	incf	___lwdiv@counter,f
  2909  02F8  2B04               	goto	l1349
  2910  02F9                     l1345:
  2911  02F9  3001               	movlw	1
  2912  02FA                     u655:
  2913  02FA  1003               	clrc
  2914  02FB  0DF0               	rlf	___lwdiv@divisor,f
  2915  02FC  0DF1               	rlf	___lwdiv@divisor+1,f
  2916  02FD  3EFF               	addlw	-1
  2917  02FE  1D03               	skipz
  2918  02FF  2AFA               	goto	u655
  2919  0300                     l1347:
  2920  0300  3001               	movlw	1
  2921  0301  00F4               	movwf	??___lwdiv
  2922  0302  0874               	movf	??___lwdiv,w
  2923  0303  07F7               	addwf	___lwdiv@counter,f
  2924  0304                     l1349:
  2925  0304  1FF1               	btfss	___lwdiv@divisor+1,7
  2926  0305  2B07               	goto	u661
  2927  0306  2B08               	goto	u660
  2928  0307                     u661:
  2929  0307  2AF9               	goto	l1345
  2930  0308                     u660:
  2931  0308                     l1351:
  2932  0308  3001               	movlw	1
  2933  0309                     u675:
  2934  0309  1003               	clrc
  2935  030A  0DF5               	rlf	___lwdiv@quotient,f
  2936  030B  0DF6               	rlf	___lwdiv@quotient+1,f
  2937  030C  3EFF               	addlw	-1
  2938  030D  1D03               	skipz
  2939  030E  2B09               	goto	u675
  2940  030F  0871               	movf	___lwdiv@divisor+1,w
  2941  0310  0273               	subwf	___lwdiv@dividend+1,w
  2942  0311  1D03               	skipz
  2943  0312  2B15               	goto	u685
  2944  0313  0870               	movf	___lwdiv@divisor,w
  2945  0314  0272               	subwf	___lwdiv@dividend,w
  2946  0315                     u685:
  2947  0315  1C03               	skipc
  2948  0316  2B18               	goto	u681
  2949  0317  2B19               	goto	u680
  2950  0318                     u681:
  2951  0318  2B20               	goto	l1357
  2952  0319                     u680:
  2953  0319                     l1353:
  2954  0319  0870               	movf	___lwdiv@divisor,w
  2955  031A  02F2               	subwf	___lwdiv@dividend,f
  2956  031B  0871               	movf	___lwdiv@divisor+1,w
  2957  031C  1C03               	skipc
  2958  031D  03F3               	decf	___lwdiv@dividend+1,f
  2959  031E  02F3               	subwf	___lwdiv@dividend+1,f
  2960  031F                     l1355:
  2961  031F  1475               	bsf	___lwdiv@quotient,0
  2962  0320                     l1357:
  2963  0320  3001               	movlw	1
  2964  0321                     u695:
  2965  0321  1003               	clrc
  2966  0322  0CF1               	rrf	___lwdiv@divisor+1,f
  2967  0323  0CF0               	rrf	___lwdiv@divisor,f
  2968  0324  3EFF               	addlw	-1
  2969  0325  1D03               	skipz
  2970  0326  2B21               	goto	u695
  2971  0327                     l1359:
  2972  0327  3001               	movlw	1
  2973  0328  02F7               	subwf	___lwdiv@counter,f
  2974  0329  1D03               	btfss	3,2
  2975  032A  2B2C               	goto	u701
  2976  032B  2B2D               	goto	u700
  2977  032C                     u701:
  2978  032C  2B08               	goto	l1351
  2979  032D                     u700:
  2980  032D                     l1361:
  2981  032D  0876               	movf	___lwdiv@quotient+1,w
  2982  032E  00F1               	movwf	?___lwdiv+1
  2983  032F  0875               	movf	___lwdiv@quotient,w
  2984  0330  00F0               	movwf	?___lwdiv
  2985  0331                     l522:
  2986  0331  0008               	return
  2987  0332                     __end_of___lwdiv:
  2988                           
  2989                           	psect	text16
  2990  0437                     __ptext16:	
  2991 ;; *************** function _division *****************
  2992 ;; Defined at:
  2993 ;;		line 136 in file "master03.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  dividendo       1    wreg     unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  dividendo       1   12[COMMON] unsigned char 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, pclath, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         0       0       0       0       0
  3008 ;;      Locals:         1       0       0       0       0
  3009 ;;      Temps:          3       0       0       0       0
  3010 ;;      Totals:         4       0       0       0       0
  3011 ;;Total ram usage:        4 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    1
  3014 ;; This function calls:
  3015 ;;		___awdiv
  3016 ;;		___awmod
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           
  3023                           ;psect for function _division
  3024  0437                     _division:
  3025                           
  3026                           ;incstack = 0
  3027                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  3028                           ;division@dividendo stored from wreg
  3029  0437  00FC               	movwf	division@dividendo
  3030  0438                     l1645:
  3031                           
  3032                           ;master03.c: 138:     TRISB = 0x00;
  3033  0438  3064               	movlw	100
  3034  0439  00F0               	movwf	___awdiv@divisor
  3035  043A  3000               	movlw	0
  3036  043B  00F1               	movwf	___awdiv@divisor+1
  3037  043C  087C               	movf	division@dividendo,w
  3038  043D  00F9               	movwf	??_division
  3039  043E  01FA               	clrf	??_division+1
  3040  043F  0879               	movf	??_division,w
  3041  0440  00F2               	movwf	___awdiv@dividend
  3042  0441  087A               	movf	??_division+1,w
  3043  0442  00F3               	movwf	___awdiv@dividend+1
  3044  0443  120A  118A  249D  120A  118A  	fcall	___awdiv
  3045  0448  0870               	movf	?___awdiv,w
  3046  0449  00FB               	movwf	??_division+2
  3047  044A  087B               	movf	??_division+2,w
  3048  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3049  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3050  044D  00A6               	movwf	_centenas
  3051                           
  3052                           ;master03.c: 139: 
  3053  044E  3064               	movlw	100
  3054  044F  00F0               	movwf	___awmod@divisor
  3055  0450  3000               	movlw	0
  3056  0451  00F1               	movwf	___awmod@divisor+1
  3057  0452  087C               	movf	division@dividendo,w
  3058  0453  00F9               	movwf	??_division
  3059  0454  01FA               	clrf	??_division+1
  3060  0455  0879               	movf	??_division,w
  3061  0456  00F2               	movwf	___awmod@dividend
  3062  0457  087A               	movf	??_division+1,w
  3063  0458  00F3               	movwf	___awmod@dividend+1
  3064  0459  120A  118A  23DE  120A  118A  	fcall	___awmod
  3065  045E  0870               	movf	?___awmod,w
  3066  045F  00FB               	movwf	??_division+2
  3067  0460  087B               	movf	??_division+2,w
  3068  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0463  00A3               	movwf	_residuo
  3071                           
  3072                           ;master03.c: 140:     OSCCONbits.IRCF0 = 0;
  3073  0464  300A               	movlw	10
  3074  0465  00F0               	movwf	___awdiv@divisor
  3075  0466  3000               	movlw	0
  3076  0467  00F1               	movwf	___awdiv@divisor+1
  3077  0468  0823               	movf	_residuo,w
  3078  0469  00F9               	movwf	??_division
  3079  046A  01FA               	clrf	??_division+1
  3080  046B  0879               	movf	??_division,w
  3081  046C  00F2               	movwf	___awdiv@dividend
  3082  046D  087A               	movf	??_division+1,w
  3083  046E  00F3               	movwf	___awdiv@dividend+1
  3084  046F  120A  118A  249D  120A  118A  	fcall	___awdiv
  3085  0474  0870               	movf	?___awdiv,w
  3086  0475  00FB               	movwf	??_division+2
  3087  0476  087B               	movf	??_division+2,w
  3088  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0479  00A5               	movwf	_decenas
  3091                           
  3092                           ;master03.c: 141:     OSCCONbits.IRCF1 = 1;
  3093  047A  300A               	movlw	10
  3094  047B  00F0               	movwf	___awmod@divisor
  3095  047C  3000               	movlw	0
  3096  047D  00F1               	movwf	___awmod@divisor+1
  3097  047E  0823               	movf	_residuo,w
  3098  047F  00F9               	movwf	??_division
  3099  0480  01FA               	clrf	??_division+1
  3100  0481  0879               	movf	??_division,w
  3101  0482  00F2               	movwf	___awmod@dividend
  3102  0483  087A               	movf	??_division+1,w
  3103  0484  00F3               	movwf	___awmod@dividend+1
  3104  0485  120A  118A  23DE  120A  118A  	fcall	___awmod
  3105  048A  0870               	movf	?___awmod,w
  3106  048B  00FB               	movwf	??_division+2
  3107  048C  087B               	movf	??_division+2,w
  3108  048D  1283               	bcf	3,5	;RP0=0, select bank0
  3109  048E  1303               	bcf	3,6	;RP1=0, select bank0
  3110  048F  00A4               	movwf	_unidades
  3111  0490                     l1647:
  3112                           
  3113                           ;master03.c: 143:     OSCCONbits.SCS = 1;
  3114  0490  3030               	movlw	48
  3115  0491  00F9               	movwf	??_division
  3116  0492  0879               	movf	??_division,w
  3117  0493  07A6               	addwf	_centenas,f
  3118  0494                     l1649:
  3119                           
  3120                           ;master03.c: 144: 
  3121  0494  3030               	movlw	48
  3122  0495  00F9               	movwf	??_division
  3123  0496  0879               	movf	??_division,w
  3124  0497  07A5               	addwf	_decenas,f
  3125  0498                     l1651:
  3126                           
  3127                           ;master03.c: 145: 
  3128  0498  3030               	movlw	48
  3129  0499  00F9               	movwf	??_division
  3130  049A  0879               	movf	??_division,w
  3131  049B  07A4               	addwf	_unidades,f
  3132  049C                     l104:
  3133  049C  0008               	return
  3134  049D                     __end_of_division:
  3135                           
  3136                           	psect	text17
  3137  03DE                     __ptext17:	
  3138 ;; *************** function ___awmod *****************
  3139 ;; Defined at:
  3140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  divisor         2    0[COMMON] int 
  3143 ;;  dividend        2    2[COMMON] int 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  sign            1    6[COMMON] unsigned char 
  3146 ;;  counter         1    5[COMMON] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  2    0[COMMON] int 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         4       0       0       0       0
  3157 ;;      Locals:         2       0       0       0       0
  3158 ;;      Temps:          1       0       0       0       0
  3159 ;;      Totals:         7       0       0       0       0
  3160 ;;Total ram usage:        7 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_division
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           
  3170                           ;psect for function ___awmod
  3171  03DE                     ___awmod:
  3172  03DE                     l1569:	
  3173                           ;incstack = 0
  3174                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3175                           
  3176  03DE  01F6               	clrf	___awmod@sign
  3177  03DF                     l1571:
  3178  03DF  1FF3               	btfss	___awmod@dividend+1,7
  3179  03E0  2BE2               	goto	u1031
  3180  03E1  2BE3               	goto	u1030
  3181  03E2                     u1031:
  3182  03E2  2BEA               	goto	l1577
  3183  03E3                     u1030:
  3184  03E3                     l1573:
  3185  03E3  09F2               	comf	___awmod@dividend,f
  3186  03E4  09F3               	comf	___awmod@dividend+1,f
  3187  03E5  0AF2               	incf	___awmod@dividend,f
  3188  03E6  1903               	skipnz
  3189  03E7  0AF3               	incf	___awmod@dividend+1,f
  3190  03E8                     l1575:
  3191  03E8  01F6               	clrf	___awmod@sign
  3192  03E9  0AF6               	incf	___awmod@sign,f
  3193  03EA                     l1577:
  3194  03EA  1FF1               	btfss	___awmod@divisor+1,7
  3195  03EB  2BED               	goto	u1041
  3196  03EC  2BEE               	goto	u1040
  3197  03ED                     u1041:
  3198  03ED  2BF3               	goto	l1581
  3199  03EE                     u1040:
  3200  03EE                     l1579:
  3201  03EE  09F0               	comf	___awmod@divisor,f
  3202  03EF  09F1               	comf	___awmod@divisor+1,f
  3203  03F0  0AF0               	incf	___awmod@divisor,f
  3204  03F1  1903               	skipnz
  3205  03F2  0AF1               	incf	___awmod@divisor+1,f
  3206  03F3                     l1581:
  3207  03F3  0870               	movf	___awmod@divisor,w
  3208  03F4  0471               	iorwf	___awmod@divisor+1,w
  3209  03F5  1903               	btfsc	3,2
  3210  03F6  2BF8               	goto	u1051
  3211  03F7  2BF9               	goto	u1050
  3212  03F8                     u1051:
  3213  03F8  2C28               	goto	l1599
  3214  03F9                     u1050:
  3215  03F9                     l1583:
  3216  03F9  01F5               	clrf	___awmod@counter
  3217  03FA  0AF5               	incf	___awmod@counter,f
  3218  03FB  2C07               	goto	l1589
  3219  03FC                     l1585:
  3220  03FC  3001               	movlw	1
  3221  03FD                     u1065:
  3222  03FD  1003               	clrc
  3223  03FE  0DF0               	rlf	___awmod@divisor,f
  3224  03FF  0DF1               	rlf	___awmod@divisor+1,f
  3225  0400  3EFF               	addlw	-1
  3226  0401  1D03               	skipz
  3227  0402  2BFD               	goto	u1065
  3228  0403                     l1587:
  3229  0403  3001               	movlw	1
  3230  0404  00F4               	movwf	??___awmod
  3231  0405  0874               	movf	??___awmod,w
  3232  0406  07F5               	addwf	___awmod@counter,f
  3233  0407                     l1589:
  3234  0407  1FF1               	btfss	___awmod@divisor+1,7
  3235  0408  2C0A               	goto	u1071
  3236  0409  2C0B               	goto	u1070
  3237  040A                     u1071:
  3238  040A  2BFC               	goto	l1585
  3239  040B                     u1070:
  3240  040B                     l1591:
  3241  040B  0871               	movf	___awmod@divisor+1,w
  3242  040C  0273               	subwf	___awmod@dividend+1,w
  3243  040D  1D03               	skipz
  3244  040E  2C11               	goto	u1085
  3245  040F  0870               	movf	___awmod@divisor,w
  3246  0410  0272               	subwf	___awmod@dividend,w
  3247  0411                     u1085:
  3248  0411  1C03               	skipc
  3249  0412  2C14               	goto	u1081
  3250  0413  2C15               	goto	u1080
  3251  0414                     u1081:
  3252  0414  2C1B               	goto	l1595
  3253  0415                     u1080:
  3254  0415                     l1593:
  3255  0415  0870               	movf	___awmod@divisor,w
  3256  0416  02F2               	subwf	___awmod@dividend,f
  3257  0417  0871               	movf	___awmod@divisor+1,w
  3258  0418  1C03               	skipc
  3259  0419  03F3               	decf	___awmod@dividend+1,f
  3260  041A  02F3               	subwf	___awmod@dividend+1,f
  3261  041B                     l1595:
  3262  041B  3001               	movlw	1
  3263  041C                     u1095:
  3264  041C  1003               	clrc
  3265  041D  0CF1               	rrf	___awmod@divisor+1,f
  3266  041E  0CF0               	rrf	___awmod@divisor,f
  3267  041F  3EFF               	addlw	-1
  3268  0420  1D03               	skipz
  3269  0421  2C1C               	goto	u1095
  3270  0422                     l1597:
  3271  0422  3001               	movlw	1
  3272  0423  02F5               	subwf	___awmod@counter,f
  3273  0424  1D03               	btfss	3,2
  3274  0425  2C27               	goto	u1101
  3275  0426  2C28               	goto	u1100
  3276  0427                     u1101:
  3277  0427  2C0B               	goto	l1591
  3278  0428                     u1100:
  3279  0428                     l1599:
  3280  0428  0876               	movf	___awmod@sign,w
  3281  0429  1903               	btfsc	3,2
  3282  042A  2C2C               	goto	u1111
  3283  042B  2C2D               	goto	u1110
  3284  042C                     u1111:
  3285  042C  2C32               	goto	l1603
  3286  042D                     u1110:
  3287  042D                     l1601:
  3288  042D  09F2               	comf	___awmod@dividend,f
  3289  042E  09F3               	comf	___awmod@dividend+1,f
  3290  042F  0AF2               	incf	___awmod@dividend,f
  3291  0430  1903               	skipnz
  3292  0431  0AF3               	incf	___awmod@dividend+1,f
  3293  0432                     l1603:
  3294  0432  0873               	movf	___awmod@dividend+1,w
  3295  0433  00F1               	movwf	?___awmod+1
  3296  0434  0872               	movf	___awmod@dividend,w
  3297  0435  00F0               	movwf	?___awmod
  3298  0436                     l416:
  3299  0436  0008               	return
  3300  0437                     __end_of___awmod:
  3301                           
  3302                           	psect	text18
  3303  049D                     __ptext18:	
  3304 ;; *************** function ___awdiv *****************
  3305 ;; Defined at:
  3306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  divisor         2    0[COMMON] int 
  3309 ;;  dividend        2    2[COMMON] int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  quotient        2    7[COMMON] int 
  3312 ;;  sign            1    6[COMMON] unsigned char 
  3313 ;;  counter         1    5[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  2    0[COMMON] int 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         4       0       0       0       0
  3324 ;;      Locals:         4       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0
  3326 ;;      Totals:         9       0       0       0       0
  3327 ;;Total ram usage:        9 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_division
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function ___awdiv
  3338  049D                     ___awdiv:
  3339  049D                     l1525:	
  3340                           ;incstack = 0
  3341                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3342                           
  3343  049D  01F6               	clrf	___awdiv@sign
  3344  049E                     l1527:
  3345  049E  1FF1               	btfss	___awdiv@divisor+1,7
  3346  049F  2CA1               	goto	u931
  3347  04A0  2CA2               	goto	u930
  3348  04A1                     u931:
  3349  04A1  2CA9               	goto	l1533
  3350  04A2                     u930:
  3351  04A2                     l1529:
  3352  04A2  09F0               	comf	___awdiv@divisor,f
  3353  04A3  09F1               	comf	___awdiv@divisor+1,f
  3354  04A4  0AF0               	incf	___awdiv@divisor,f
  3355  04A5  1903               	skipnz
  3356  04A6  0AF1               	incf	___awdiv@divisor+1,f
  3357  04A7                     l1531:
  3358  04A7  01F6               	clrf	___awdiv@sign
  3359  04A8  0AF6               	incf	___awdiv@sign,f
  3360  04A9                     l1533:
  3361  04A9  1FF3               	btfss	___awdiv@dividend+1,7
  3362  04AA  2CAC               	goto	u941
  3363  04AB  2CAD               	goto	u940
  3364  04AC                     u941:
  3365  04AC  2CB6               	goto	l1539
  3366  04AD                     u940:
  3367  04AD                     l1535:
  3368  04AD  09F2               	comf	___awdiv@dividend,f
  3369  04AE  09F3               	comf	___awdiv@dividend+1,f
  3370  04AF  0AF2               	incf	___awdiv@dividend,f
  3371  04B0  1903               	skipnz
  3372  04B1  0AF3               	incf	___awdiv@dividend+1,f
  3373  04B2                     l1537:
  3374  04B2  3001               	movlw	1
  3375  04B3  00F4               	movwf	??___awdiv
  3376  04B4  0874               	movf	??___awdiv,w
  3377  04B5  06F6               	xorwf	___awdiv@sign,f
  3378  04B6                     l1539:
  3379  04B6  01F7               	clrf	___awdiv@quotient
  3380  04B7  01F8               	clrf	___awdiv@quotient+1
  3381  04B8                     l1541:
  3382  04B8  0870               	movf	___awdiv@divisor,w
  3383  04B9  0471               	iorwf	___awdiv@divisor+1,w
  3384  04BA  1903               	btfsc	3,2
  3385  04BB  2CBD               	goto	u951
  3386  04BC  2CBE               	goto	u950
  3387  04BD                     u951:
  3388  04BD  2CF5               	goto	l1561
  3389  04BE                     u950:
  3390  04BE                     l1543:
  3391  04BE  01F5               	clrf	___awdiv@counter
  3392  04BF  0AF5               	incf	___awdiv@counter,f
  3393  04C0  2CCC               	goto	l1549
  3394  04C1                     l1545:
  3395  04C1  3001               	movlw	1
  3396  04C2                     u965:
  3397  04C2  1003               	clrc
  3398  04C3  0DF0               	rlf	___awdiv@divisor,f
  3399  04C4  0DF1               	rlf	___awdiv@divisor+1,f
  3400  04C5  3EFF               	addlw	-1
  3401  04C6  1D03               	skipz
  3402  04C7  2CC2               	goto	u965
  3403  04C8                     l1547:
  3404  04C8  3001               	movlw	1
  3405  04C9  00F4               	movwf	??___awdiv
  3406  04CA  0874               	movf	??___awdiv,w
  3407  04CB  07F5               	addwf	___awdiv@counter,f
  3408  04CC                     l1549:
  3409  04CC  1FF1               	btfss	___awdiv@divisor+1,7
  3410  04CD  2CCF               	goto	u971
  3411  04CE  2CD0               	goto	u970
  3412  04CF                     u971:
  3413  04CF  2CC1               	goto	l1545
  3414  04D0                     u970:
  3415  04D0                     l1551:
  3416  04D0  3001               	movlw	1
  3417  04D1                     u985:
  3418  04D1  1003               	clrc
  3419  04D2  0DF7               	rlf	___awdiv@quotient,f
  3420  04D3  0DF8               	rlf	___awdiv@quotient+1,f
  3421  04D4  3EFF               	addlw	-1
  3422  04D5  1D03               	skipz
  3423  04D6  2CD1               	goto	u985
  3424  04D7  0871               	movf	___awdiv@divisor+1,w
  3425  04D8  0273               	subwf	___awdiv@dividend+1,w
  3426  04D9  1D03               	skipz
  3427  04DA  2CDD               	goto	u995
  3428  04DB  0870               	movf	___awdiv@divisor,w
  3429  04DC  0272               	subwf	___awdiv@dividend,w
  3430  04DD                     u995:
  3431  04DD  1C03               	skipc
  3432  04DE  2CE0               	goto	u991
  3433  04DF  2CE1               	goto	u990
  3434  04E0                     u991:
  3435  04E0  2CE8               	goto	l1557
  3436  04E1                     u990:
  3437  04E1                     l1553:
  3438  04E1  0870               	movf	___awdiv@divisor,w
  3439  04E2  02F2               	subwf	___awdiv@dividend,f
  3440  04E3  0871               	movf	___awdiv@divisor+1,w
  3441  04E4  1C03               	skipc
  3442  04E5  03F3               	decf	___awdiv@dividend+1,f
  3443  04E6  02F3               	subwf	___awdiv@dividend+1,f
  3444  04E7                     l1555:
  3445  04E7  1477               	bsf	___awdiv@quotient,0
  3446  04E8                     l1557:
  3447  04E8  3001               	movlw	1
  3448  04E9                     u1005:
  3449  04E9  1003               	clrc
  3450  04EA  0CF1               	rrf	___awdiv@divisor+1,f
  3451  04EB  0CF0               	rrf	___awdiv@divisor,f
  3452  04EC  3EFF               	addlw	-1
  3453  04ED  1D03               	skipz
  3454  04EE  2CE9               	goto	u1005
  3455  04EF                     l1559:
  3456  04EF  3001               	movlw	1
  3457  04F0  02F5               	subwf	___awdiv@counter,f
  3458  04F1  1D03               	btfss	3,2
  3459  04F2  2CF4               	goto	u1011
  3460  04F3  2CF5               	goto	u1010
  3461  04F4                     u1011:
  3462  04F4  2CD0               	goto	l1551
  3463  04F5                     u1010:
  3464  04F5                     l1561:
  3465  04F5  0876               	movf	___awdiv@sign,w
  3466  04F6  1903               	btfsc	3,2
  3467  04F7  2CF9               	goto	u1021
  3468  04F8  2CFA               	goto	u1020
  3469  04F9                     u1021:
  3470  04F9  2CFF               	goto	l1565
  3471  04FA                     u1020:
  3472  04FA                     l1563:
  3473  04FA  09F7               	comf	___awdiv@quotient,f
  3474  04FB  09F8               	comf	___awdiv@quotient+1,f
  3475  04FC  0AF7               	incf	___awdiv@quotient,f
  3476  04FD  1903               	skipnz
  3477  04FE  0AF8               	incf	___awdiv@quotient+1,f
  3478  04FF                     l1565:
  3479  04FF  0878               	movf	___awdiv@quotient+1,w
  3480  0500  00F1               	movwf	?___awdiv+1
  3481  0501  0877               	movf	___awdiv@quotient,w
  3482  0502  00F0               	movwf	?___awdiv
  3483  0503                     l403:
  3484  0503  0008               	return
  3485  0504                     __end_of___awdiv:
  3486                           
  3487                           	psect	text19
  3488  0504                     __ptext19:	
  3489 ;; *************** function _atoi *****************
  3490 ;; Defined at:
  3491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  s               1    wreg     PTR const unsigned char 
  3494 ;;		 -> s1(20), 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  s               1   13[COMMON] PTR const unsigned char 
  3497 ;;		 -> s1(20), 
  3498 ;;  a               2   11[COMMON] int 
  3499 ;;  sign            1   10[COMMON] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2    6[COMMON] int 
  3502 ;; Registers used:
  3503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         2       0       0       0       0
  3510 ;;      Locals:         4       0       0       0       0
  3511 ;;      Temps:          2       0       0       0       0
  3512 ;;      Totals:         8       0       0       0       0
  3513 ;;Total ram usage:        8 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		___wmul
  3518 ;;		_isdigit
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _atoi
  3526  0504                     _atoi:
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3530                           ;atoi@s stored from wreg
  3531  0504  00FD               	movwf	atoi@s
  3532  0505                     l1705:
  3533  0505  2D0A               	goto	l1709
  3534  0506                     l1707:
  3535  0506  3001               	movlw	1
  3536  0507  00F8               	movwf	??_atoi
  3537  0508  0878               	movf	??_atoi,w
  3538  0509  07FD               	addwf	atoi@s,f
  3539  050A                     l1709:
  3540  050A  087D               	movf	atoi@s,w
  3541  050B  0084               	movwf	4
  3542  050C  3020               	movlw	32
  3543  050D  1383               	bcf	3,7	;select IRP bank0
  3544  050E  0600               	xorwf	0,w
  3545  050F  1903               	btfsc	3,2
  3546  0510  2D12               	goto	u1161
  3547  0511  2D13               	goto	u1160
  3548  0512                     u1161:
  3549  0512  2D06               	goto	l1707
  3550  0513                     u1160:
  3551  0513                     l1711:
  3552  0513  087D               	movf	atoi@s,w
  3553  0514  0084               	movwf	4
  3554  0515  3009               	movlw	9
  3555  0516  0600               	xorwf	0,w
  3556  0517  1903               	btfsc	3,2
  3557  0518  2D1A               	goto	u1171
  3558  0519  2D1B               	goto	u1170
  3559  051A                     u1171:
  3560  051A  2D06               	goto	l1707
  3561  051B                     u1170:
  3562  051B                     l1713:
  3563  051B  01FB               	clrf	atoi@a
  3564  051C  01FC               	clrf	atoi@a+1
  3565  051D  01FA               	clrf	atoi@sign
  3566  051E                     l1715:
  3567  051E  087D               	movf	atoi@s,w
  3568  051F  0084               	movwf	4
  3569  0520  302D               	movlw	45
  3570  0521  0600               	xorwf	0,w
  3571  0522  1D03               	btfss	3,2
  3572  0523  2D25               	goto	u1181
  3573  0524  2D26               	goto	u1180
  3574  0525                     u1181:
  3575  0525  2D2F               	goto	l1719
  3576  0526                     u1180:
  3577  0526                     l1717:
  3578  0526  3001               	movlw	1
  3579  0527  00F8               	movwf	??_atoi
  3580  0528  0878               	movf	??_atoi,w
  3581  0529  07FA               	addwf	atoi@sign,f
  3582  052A  3001               	movlw	1
  3583  052B  00F8               	movwf	??_atoi
  3584  052C  0878               	movf	??_atoi,w
  3585  052D  07FD               	addwf	atoi@s,f
  3586  052E  2D5D               	goto	l1727
  3587  052F                     l1719:
  3588  052F  087D               	movf	atoi@s,w
  3589  0530  0084               	movwf	4
  3590  0531  302B               	movlw	43
  3591  0532  0600               	xorwf	0,w
  3592  0533  1D03               	btfss	3,2
  3593  0534  2D36               	goto	u1191
  3594  0535  2D37               	goto	u1190
  3595  0536                     u1191:
  3596  0536  2D5D               	goto	l1727
  3597  0537                     u1190:
  3598  0537                     l1721:
  3599  0537  3001               	movlw	1
  3600  0538  00F8               	movwf	??_atoi
  3601  0539  0878               	movf	??_atoi,w
  3602  053A  07FD               	addwf	atoi@s,f
  3603  053B  2D5D               	goto	l1727
  3604  053C                     l1723:
  3605  053C  087D               	movf	atoi@s,w
  3606  053D  0084               	movwf	4
  3607  053E  087C               	movf	atoi@a+1,w
  3608  053F  00F1               	movwf	___wmul@multiplier+1
  3609  0540  087B               	movf	atoi@a,w
  3610  0541  00F0               	movwf	___wmul@multiplier
  3611  0542  300A               	movlw	10
  3612  0543  00F2               	movwf	___wmul@multiplicand
  3613  0544  3000               	movlw	0
  3614  0545  00F3               	movwf	___wmul@multiplicand+1
  3615  0546  120A  118A  2266  120A  118A  	fcall	___wmul
  3616  054B  1383               	bcf	3,7	;select IRP bank0
  3617  054C  0800               	movf	0,w
  3618  054D  0770               	addwf	?___wmul,w
  3619  054E  00F8               	movwf	??_atoi
  3620  054F  3000               	movlw	0
  3621  0550  1803               	skipnc
  3622  0551  3001               	movlw	1
  3623  0552  0771               	addwf	?___wmul+1,w
  3624  0553  00F9               	movwf	??_atoi+1
  3625  0554  0878               	movf	??_atoi,w
  3626  0555  3ED0               	addlw	208
  3627  0556  00FB               	movwf	atoi@a
  3628  0557  0879               	movf	??_atoi+1,w
  3629  0558  1803               	skipnc
  3630  0559  3E01               	addlw	1
  3631  055A  3EFF               	addlw	255
  3632  055B  00FC               	movwf	atoi@a+1
  3633  055C  2D37               	goto	l1721
  3634  055D                     l1727:
  3635  055D  087D               	movf	atoi@s,w
  3636  055E  0084               	movwf	4
  3637  055F  0800               	movf	0,w
  3638  0560  120A  118A  21C7  120A  118A  	fcall	_isdigit
  3639  0565  1803               	btfsc	3,0
  3640  0566  2D68               	goto	u1201
  3641  0567  2D69               	goto	u1200
  3642  0568                     u1201:
  3643  0568  2D3C               	goto	l1723
  3644  0569                     u1200:
  3645  0569                     l1729:
  3646  0569  087A               	movf	atoi@sign,w
  3647  056A  1903               	btfsc	3,2
  3648  056B  2D6D               	goto	u1211
  3649  056C  2D6E               	goto	u1210
  3650  056D                     u1211:
  3651  056D  2D7A               	goto	l1735
  3652  056E                     u1210:
  3653  056E                     l1731:
  3654  056E  097B               	comf	atoi@a,w
  3655  056F  00F8               	movwf	??_atoi
  3656  0570  097C               	comf	atoi@a+1,w
  3657  0571  00F9               	movwf	??_atoi+1
  3658  0572  0AF8               	incf	??_atoi,f
  3659  0573  1903               	skipnz
  3660  0574  0AF9               	incf	??_atoi+1,f
  3661  0575  0878               	movf	??_atoi,w
  3662  0576  00F6               	movwf	?_atoi
  3663  0577  0879               	movf	??_atoi+1,w
  3664  0578  00F7               	movwf	?_atoi+1
  3665  0579  2D7E               	goto	l713
  3666  057A                     l1735:
  3667  057A  087C               	movf	atoi@a+1,w
  3668  057B  00F7               	movwf	?_atoi+1
  3669  057C  087B               	movf	atoi@a,w
  3670  057D  00F6               	movwf	?_atoi
  3671  057E                     l713:
  3672  057E  0008               	return
  3673  057F                     __end_of_atoi:
  3674                           
  3675                           	psect	text20
  3676  01C7                     __ptext20:	
  3677 ;; *************** function _isdigit *****************
  3678 ;; Defined at:
  3679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  c               1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  c               1    1[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;		None               void
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         2       0       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_atoi
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _isdigit
  3708  01C7                     _isdigit:
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3712                           ;isdigit@c stored from wreg
  3713  01C7  00F1               	movwf	isdigit@c
  3714  01C8                     l1607:
  3715  01C8  01F0               	clrf	_isdigit$996
  3716  01C9                     l1609:
  3717  01C9  303A               	movlw	58
  3718  01CA  0271               	subwf	isdigit@c,w
  3719  01CB  1803               	skipnc
  3720  01CC  29CE               	goto	u1121
  3721  01CD  29CF               	goto	u1120
  3722  01CE                     u1121:
  3723  01CE  29D7               	goto	l1615
  3724  01CF                     u1120:
  3725  01CF                     l1611:
  3726  01CF  3030               	movlw	48
  3727  01D0  0271               	subwf	isdigit@c,w
  3728  01D1  1C03               	skipc
  3729  01D2  29D4               	goto	u1131
  3730  01D3  29D5               	goto	u1130
  3731  01D4                     u1131:
  3732  01D4  29D7               	goto	l1615
  3733  01D5                     u1130:
  3734  01D5                     l1613:
  3735  01D5  01F0               	clrf	_isdigit$996
  3736  01D6  0AF0               	incf	_isdigit$996,f
  3737  01D7                     l1615:
  3738  01D7  0C70               	rrf	_isdigit$996,w
  3739  01D8                     l718:
  3740  01D8  0008               	return
  3741  01D9                     __end_of_isdigit:
  3742                           
  3743                           	psect	text21
  3744  0266                     __ptext21:	
  3745 ;; *************** function ___wmul *****************
  3746 ;; Defined at:
  3747 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  multiplier      2    0[COMMON] unsigned int 
  3750 ;;  multiplicand    2    2[COMMON] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  product         2    4[COMMON] unsigned int 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2    0[COMMON] unsigned int 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         4       0       0       0       0
  3763 ;;      Locals:         2       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0
  3765 ;;      Totals:         6       0       0       0       0
  3766 ;;Total ram usage:        6 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_atoi
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function ___wmul
  3777  0266                     ___wmul:
  3778  0266                     l1511:	
  3779                           ;incstack = 0
  3780                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3781                           
  3782  0266  01F4               	clrf	___wmul@product
  3783  0267  01F5               	clrf	___wmul@product+1
  3784  0268                     l1513:
  3785  0268  1C70               	btfss	___wmul@multiplier,0
  3786  0269  2A6B               	goto	u891
  3787  026A  2A6C               	goto	u890
  3788  026B                     u891:
  3789  026B  2A72               	goto	l250
  3790  026C                     u890:
  3791  026C                     l1515:
  3792  026C  0872               	movf	___wmul@multiplicand,w
  3793  026D  07F4               	addwf	___wmul@product,f
  3794  026E  1803               	skipnc
  3795  026F  0AF5               	incf	___wmul@product+1,f
  3796  0270  0873               	movf	___wmul@multiplicand+1,w
  3797  0271  07F5               	addwf	___wmul@product+1,f
  3798  0272                     l250:
  3799  0272  3001               	movlw	1
  3800  0273                     u905:
  3801  0273  1003               	clrc
  3802  0274  0DF2               	rlf	___wmul@multiplicand,f
  3803  0275  0DF3               	rlf	___wmul@multiplicand+1,f
  3804  0276  3EFF               	addlw	-1
  3805  0277  1D03               	skipz
  3806  0278  2A73               	goto	u905
  3807  0279                     l1517:
  3808  0279  3001               	movlw	1
  3809  027A                     u915:
  3810  027A  1003               	clrc
  3811  027B  0CF1               	rrf	___wmul@multiplier+1,f
  3812  027C  0CF0               	rrf	___wmul@multiplier,f
  3813  027D  3EFF               	addlw	-1
  3814  027E  1D03               	skipz
  3815  027F  2A7A               	goto	u915
  3816  0280                     l1519:
  3817  0280  0870               	movf	___wmul@multiplier,w
  3818  0281  0471               	iorwf	___wmul@multiplier+1,w
  3819  0282  1D03               	btfss	3,2
  3820  0283  2A85               	goto	u921
  3821  0284  2A86               	goto	u920
  3822  0285                     u921:
  3823  0285  2A68               	goto	l1513
  3824  0286                     u920:
  3825  0286                     l1521:
  3826  0286  0875               	movf	___wmul@product+1,w
  3827  0287  00F1               	movwf	?___wmul+1
  3828  0288  0874               	movf	___wmul@product,w
  3829  0289  00F0               	movwf	?___wmul
  3830  028A                     l252:
  3831  028A  0008               	return
  3832  028B                     __end_of___wmul:
  3833  0002                     
  3834                           	psect	functab
  3835  0003                     __pfunctab:
  3836  0003                     __fptable:
  3837  0003                     fptable:
  3838  0003  00FF               	movwf	(btemp+1)& (0+127)
  3839  0004  3000               	movlw	high fptable
  3840  0005  008A               	movwf	10
  3841  0006  087F               	movf	(btemp+1)& (0+127),w
  3842  0007  0782               	addwf	2,f
  3843  0008                     fpbase:
  3844  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3845  0009                     fp__putch:
  3846  0009  120A  118A  29B5   	ljmp	_putch
  3847  000C                     __end_of__fptable:
  3848  007E                     btemp	set	126	;btemp
  3849  007E                     wtemp0	set	126
  3850                           
  3851                           	psect	config
  3852                           
  3853                           ;Config register CONFIG1 @ 0x2007
  3854                           ;	Oscillator Selection bits
  3855                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3856                           ;	Watchdog Timer Enable bit
  3857                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3858                           ;	Power-up Timer Enable bit
  3859                           ;	PWRTE = OFF, PWRT disabled
  3860                           ;	RE3/MCLR pin function select bit
  3861                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3862                           ;	Code Protection bit
  3863                           ;	CP = OFF, Program memory code protection is disabled
  3864                           ;	Data Code Protection bit
  3865                           ;	CPD = OFF, Data memory code protection is disabled
  3866                           ;	Brown Out Reset Selection bits
  3867                           ;	BOREN = OFF, BOR disabled
  3868                           ;	Internal External Switchover bit
  3869                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3870                           ;	Fail-Safe Clock Monitor Enabled bit
  3871                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3872                           ;	Low Voltage Programming Enable bit
  3873                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3874                           ;	In-Circuit Debugger Mode bit
  3875                           ;	DEBUG = 0x1, unprogrammed default
  3876  2007                     	org	8199
  3877  2007  20D4               	dw	8404
  3878                           
  3879                           ;Config register CONFIG2 @ 0x2008
  3880                           ;	Brown-out Reset Selection bit
  3881                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3882                           ;	Flash Program Memory Self Write Enable bits
  3883                           ;	WRT = OFF, Write protection off
  3884  2008                     	org	8200
  3885  2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    10
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      74
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> s3(BANK1[20]), s2(BANK0[20]), s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), s3(BANK1[20]), s2(BANK0[20]), s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_9(CODE[3]), STR_8(CODE[2]), STR_7(CODE[12]), STR_6(CODE[3]), 
		 -> STR_5(CODE[2]), STR_4(CODE[12]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), s3(BANK1[20]), s2(BANK0[20]), s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_9(CODE[3]), STR_8(CODE[2]), STR_7(CODE[12]), STR_6(CODE[3]), 
		 -> STR_5(CODE[2]), STR_4(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S998__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S998__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), s3(BANK1[20]), s2(BANK0[20]), s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), s3(BANK1[20]), s2(BANK0[20]), s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _setup->_spiInit
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->__doprnt
    _mensaje2->_printf
    _mensaje1->_printf
    _printf->__doprnt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    9274
                                             20 BANK0      5     5      0
                               _atoi
                           _division
                           _mensaje1
                           _mensaje2
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     316
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2360
                                             11 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                       _config_USART
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_USART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mensaje2                                             2     2      0    2175
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _mensaje1                                             2     2      0    2175
                                             17 BANK0      2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     6      0    2175
                                             11 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    1868
                                              0 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1248
                                              9 COMMON     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     573
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _division
     ___awdiv
     ___awmod
   _mensaje1
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _mensaje2
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _config_USART
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      14       7       25.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 01 00:58:13 2021

                      pc 0002              _SSPSTATbits 0094                       l90 0745  
                     l84 0731                       l87 073C                       l98 01B5  
                     _c1 0022                       _d1 0021             ___awdiv@sign 0076  
                     _s1 003D                       _s2 0029                       _s3 00A0  
                     _u1 0020                       fsr 0004      ___wmul@multiplicand 0072  
                    l101 01BD                      l110 03DD                      l104 049C  
                    l113 0244                      l130 01EE                      l107 0387  
                    l133 01A6                      l136 01AC                      l129 01E9  
                    l250 0272                      l403 0503                      l147 01C6  
                    l139 01A5                      l252 028A                      l164 0225  
                    l416 0436                      l522 0331                      l532 02ED  
                    l713 057E                      l718 01D8                      l727 0209  
                    l772 0265                      l765 06B2                      l781 02B3  
                    u700 032D                      u701 032C                      u710 02BA  
                    u630 01BB                      u711 02B9                      u631 01BA  
                    u640 02F6                      u800 0605                      u641 02F5  
                    u801 0604                      u730 02CC                      u810 0610  
                    u731 02CB                      u811 060F                      u660 0308  
                    u740 02D6                      u820 0616                      u661 0307  
                    u741 02D5                      u725 02BE                      u821 0615  
                    u805 0601                      u830 061E                      u655 02FA  
                    u831 061D                      u920 0286                      u680 0319  
                    u760 02E9                      u840 0676                      u921 0285  
                    u905 0273                      u681 0318                      u761 02E8  
                    u745 02D2                      u841 0675                      u930 04A2  
                    u850 069C                      u770 0589                      u915 027A  
                    u931 04A1                      u675 0309                      u755 02DD  
                    u851 069B                      u771 0588                      u940 04AD  
                    u860 06B0                      u780 0591                      u941 04AC  
                    u685 0315                      u861 06AF                      u781 0590  
                    u950 04BE                      u790 05DF                      u870 01E1  
                    u951 04BD                      u695 0321                      u791 05DE  
                    u871 01E0                      u880 01AC                      u881 01AB  
                    u890 026C                      u970 04D0                      u891 026B  
                    u971 04CF                      u965 04C2                      u990 04E1  
                    u991 04E0                      u985 04D1                      u995 04DD  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1411 05E3                     l1403 05B0                     l1341 02F0  
                   l1333 01B5                     l1413 05E8                     l1405 05CD  
                   l1501 0222                     l1511 0266                     l1351 0308  
                   l1343 02F6                     l1335 01BB                     l1431 062B  
                   l1423 0606                     l1407 05DB                     l1503 0223  
                   l1521 0286                     l1513 0268                     l1601 042D  
                   l1353 0319                     l1345 02F9                     l1361 032D  
                   l1441 0676                     l1433 0633                     l1425 0610  
                   l1409 05DF                     l1505 0224                     l1515 026C  
                   l1611 01CF                     l1531 04A7                     l1603 0432  
                   l1355 031F                     l1347 0300                     l1339 02EE  
                   l1371 02C4                     l1443 0683                     l1427 0616  
                   l1435 0639                     l1419 05EA                     l1451 06B0  
                   l1517 0279                     l1613 01D5                     l1541 04B8  
                   l1533 04A9                     l1525 049D                     l1357 0320  
                   l1349 0304                     l1381 02E3                     l1373 02C8  
                   l1365 02B4                     l1445 068B                     l1437 0640  
                   l1429 061E                     l1461 01F3                     l1621 022A  
                   l1509 01A6                     l1701 029E                     l1519 0280  
                   l1615 01D7                     l1607 01C8                     l1711 0513  
                   l1551 04D0                     l1543 04BE                     l1535 04AD  
                   l1527 049E                     l1359 0327                     l1375 02CC  
                   l1367 02BA                     l1383 02E9                     l1439 066E  
                   l1447 0691                     l1391 0589                     l1463 01F7  
                   l1471 01E1                     l1631 022F                     l1623 022B  
                   l1703 02A6                     l1609 01C9                     l1721 0537  
                   l1713 051B                     l1705 0505                     l1553 04E1  
                   l1545 04C1                     l1561 04F5                     l1537 04B2  
                   l1529 04A2                     l1377 02D6                     l1369 02BD  
                   l1393 0591                     l1449 069C                     l1465 01FB  
                   l1481 020E                     l1473 01E3                     l1633 0238  
                   l1625 022C                     l1641 01C3                     l1731 056E  
                   l1723 053C                     l1715 051E                     l1707 0506  
                   l1563 04FA                     l1555 04E7                     l1547 04C8  
                   l1539 04B6                     l1571 03DF                     l1651 0498  
                   l1379 02DC                     l1395 05A0                     l1387 0582  
                   l1459 01F2                     l1491 0219                     l1483 020F  
                   l1475 01E5                     l1627 022D                     l1619 0226  
                   l1717 0526                     l1709 050A                     l1565 04FF  
                   l1557 04E8                     l1549 04CC                     l1581 03F3  
                   l1573 03E3                     l1645 0438                     l1821 05C2  
                   l1397 05A8                     l1389 0583                     l1661 0347  
                   l1493 021A                     l1485 0212                     l1477 01E8  
                   l1469 01DA                     l1629 022E                     l1637 01A1  
                   l1741 06B8                     l1735 057A                     l1727 055D  
                   l1719 052F                     l1559 04EF                     l1591 040B  
                   l1583 03F9                     l1575 03E8                     l1647 0490  
                   l1399 05AF                     l1663 0352                     l1655 0332  
                   l1671 038E                     l1495 021D                     l1487 0215  
                   l1479 020A                     l1639 01BE                     l1751 06EB  
                   l1743 06BB                     l1729 0569                     l1593 0415  
                   l1585 03FC                     l1577 03EA                     l1569 03DE  
                   l1649 0494                     l1665 0381                     l1657 0338  
                   l1673 0399                     l1497 021E                     l1489 0216  
                   l1761 0719                     l1753 06F3                     l1745 06C3  
                   l1595 041B                     l1587 0403                     l1579 03EE  
                   l1659 0343                     l1675 039D                     l1499 0221  
                   l1691 025F                     l1683 0248                     l1771 074E  
                   l1763 0721                     l1755 06F6                     l1747 06C9  
                   l1739 06B3                     l1597 0422                     l1589 0407  
                   l1677 03A8                     l1669 0388                     l1685 024C  
                   l1781 079D                     l1773 075F                     l1765 0737  
                   l1757 0709                     l1749 06D3                     l1599 0428  
                   l1679 03D7                     l1687 024D                     l1695 028C  
                   l1791 07C7                     l1783 07A9                     l1775 0772  
                   l1767 0740                     l1759 070E                     l1689 0251  
                   l1697 0291                     l1793 07CB                     l1785 07AF  
                   l1777 0785                     l1769 0749                     l1699 0295  
                   l1795 07D5                     l1787 07B9                     l1779 0791  
                   l1797 07D9                     l1789 07BD                     l1799 07E3  
                   STR_1 0037                     STR_2 0037                     STR_3 0037  
                   STR_4 001C                     STR_5 003A                     STR_6 0034  
                   STR_7 0028                     STR_8 003A                     STR_9 0034  
                   u1010 04F5                     u1011 04F4                     u1020 04FA  
                   u1100 0428                     u1021 04F9                     u1005 04E9  
                   u1101 0427                     u1110 042D                     u1030 03E3  
                   u1111 042C                     u1031 03E2                     u1120 01CF  
                   u1200 0569                     u1040 03EE                     u1121 01CE  
                   u1201 0568                     u1041 03ED                     u1130 01D5  
                   u1210 056E                     u1050 03F9                     u1131 01D4  
                   u1211 056D                     u1051 03F8                     u1140 029D  
                   u1220 0737                     u1141 029C                     u1221 0736  
                   u1070 040B                     u1150 02B3                     u1230 0740  
                   u1071 040A                     u1151 02B2                     u1231 073F  
                   u1160 0513                     u1080 0415                     u1240 0749  
                   u1161 0512                     u1081 0414                     u1065 03FD  
                   u1241 0748                     u1170 051B                     u1171 051A  
                   u1307 072C                     u1180 0526                     u1181 0525  
                   u1085 0411                     u1317 07B5                     u1190 0537  
                   u1191 0536                     u1095 041C                     u1407 033E  
                   u1327 07C3                     u1417 034D                     u1337 07D1  
                   u1257 06BF                     u1427 035E                     u1347 07DF  
                   u1267 06D7                     u1437 036D                     u1357 0394  
                   u1277 06EF                     u1447 037C                     u1367 03A3  
                   u1287 06FC                     u1377 03B4                     u1297 0714  
         ??_config_USART 0070                     u1387 03C3                     u1397 03D2  
                   _RCIF 0065                     _TXIF 0064                     _atoi 0504  
                   _main 06B3                     btemp 007E                     start 0000  
                  ?_atoi 0076             main@completo 0068                    ?_main 0070  
        __end_of___awdiv 0504          __end_of___awmod 0437          ___awdiv@divisor 0070  
        __end_of___lwdiv 0332          __end_of___lwmod 02EE          ___awdiv@counter 0075  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009          __end_of__doprnt 06B3                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 001C  
        __end_of_isdigit 01D9                    atoi@a 007B                    _setup 0226  
                  atoi@s 007D                    _putch 01B5                    fpbase 0008  
                  pclath 000A          __end_of_spiInit 01EF          __end_of_spiRead 01C7  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0266  
        __initialization 07EB             __end_of_atoi 057F             __end_of_main 07EB  
                 ??_atoi 0078                   ??_main 0065         ___awdiv@dividend 0072  
                 ?_setup 0070                   ?_putch 0070                   _SPBRGH 009A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of__fptable 000C         __end_of_division 049D  
                 ___wmul 0266                ??___awdiv 0074                ??___awmod 0074  
              ??___lwdiv 0074                ??___lwmod 007C                ??__doprnt 0053  
       __end_of_mensaje1 0388         __end_of_mensaje2 03DE         ___awdiv@quotient 0077  
   __end_of_config_USART 0226          ___awmod@divisor 0070             __doprnt@flag 0056  
        ___awmod@counter 0075                   _printf 01EF             __doprnt@prec 0057  
                 _strcat 028B                   fptable 0003                   fptotal 0002  
              ??_isdigit 0070         __end_of_spiWrite 01A6                ??_spiInit 0073  
              ??_spiRead 0070                ??_sprintf 005F  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 0245            __end_of_putch 01BE  
             __doprnt@ap 0052               __doprnt@pb 005B                  ??_setup 0074  
                ??_putch 0071               __pbssBANK0 0020               __pbssBANK1 00A0  
             __pmaintext 06B3                  ?___wmul 0070  __size_of_spiReceiveWait 0007  
                ?_printf 0070                  ?_strcat 0070                  _SSPSTAT 0094  
             __stringtab 000C                ?_division 0070                ?_mensaje1 0070  
              ?_mensaje2 0070    __size_of_config_USART 001C                ?_spiWrite 0070  
                ___awdiv 049D                  ___awmod 03DE          __size_of___wmul 0025  
                ___lwdiv 02EE                  ___lwmod 02B4                  __doprnt 057F  
                _decenas 0025                  __ptext1 028B                  __ptext2 0245  
                __ptext3 01A0                  __ptext4 01BE                  __ptext5 01A6  
                __ptext6 0226                  __ptext7 01D9                  __ptext8 020A  
                __ptext9 0388          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0012                  _isdigit 01C7         ___awmod@dividend 0072  
                _residuo 0023                  _spiInit 01D9                  _spiRead 01BE  
                _sprintf 0245                  clrloop0 01AE     end_of_initialization 07FC  
             ??_division 0079             _config_USART 020A               ??_mensaje1 0062  
             ??_mensaje2 0062                _RCSTAbits 0018                  printf@f 005F  
             ??_spiWrite 0070                _PORTCbits 0007                _TRISCbits 0087  
      division@dividendo 007C              spiWrite@dat 0070                _TXSTAbits 0098  
         _spiReceiveWait 01A6           __end_of___wmul 028B              _BAUDCTLbits 0187  
         __end_of_printf 020A           __end_of_strcat 02B4      start_initialization 07EB  
 __end_of_spiReceiveWait 01AD                 ??___wmul 0074              __doprnt@val 0058  
               ??_printf 005C                 ??_strcat 0071                ___latbits 0002  
          __pcstackBANK0 0051        __size_of__fptable 0009                __doprnt@c 005A  
              __doprnt@f 0051        __size_of_division 0066        __size_of_mensaje1 0056  
      __size_of_mensaje2 0056         ___lwdiv@dividend 0072          ?_spiReceiveWait 0070  
              __pfunctab 0003                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lwdiv 0070                 ?___lwmod 0078                 ?__doprnt 0051  
      __size_of_spiWrite 0006                __pstrings 000C                 ?_isdigit 0070  
               ?_spiInit 0070                 ?_spiRead 0070         ___lwdiv@quotient 0075  
               ?_sprintf 005C           __size_of_setup 001F           __size_of_putch 0009  
   spiInit@sTransmitEdge 0072           ___wmul@product 0074                clear_ram0 01AD  
     spiInit@sDataSample 0070                 _PIR1bits 000C              __stringbase 0011  
      ___wmul@multiplier 0070                _voltaje_a 0028                _voltaje_b 0027  
       __size_of___awdiv 0067         __size_of___awmod 0059         __size_of___lwdiv 0044  
       __size_of___lwmod 003A         __size_of__doprnt 0134       __end_of__stringtab 0012  
            _isdigit$996 0070                 __fptable 0003               strcat@from 0070  
       __size_of_isdigit 0012          ___lwdiv@divisor 0070                 _centenas 0026  
        ___lwdiv@counter 0077                 __ptext10 0332                 __ptext11 01EF  
               __ptext20 01C7                 __ptext12 057F                 __ptext21 0266  
               __ptext13 01B5                 __ptext14 02B4                 __ptext15 02EE  
               __ptext16 0437                 __ptext17 03DE                 __ptext18 049D  
               __ptext19 0504         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _division 0437         __size_of_sprintf 0021            __size_of_atoi 007B  
          __size_of_main 0138                 _mensaje1 0332                 _mensaje2 0388  
               _spiWrite 01A0                 _unidades 0024             spiInit@sType 0073  
               atoi@sign 007A                 fp__putch 0009        spiInit@sClockIdle 0071  
              putch@dato 0070               _INTCONbits 000B                 isdigit@c 0071  
              sprintf@ap 0061                sprintf@pb 0063                sprintf@wh 0062  
       ___lwmod@dividend 007A         ??_spiReceiveWait 0070                stringcode 000C  
             _OSCCONbits 008F                 printf@ap 005E                 printf@pb 0060  
               sprintf@f 005C                 strcat@cp 0073                 strcat@to 0072  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 000C  
               stringtab 000C            ?_config_USART 0070  
